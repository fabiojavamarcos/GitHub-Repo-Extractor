[["2", "\"Gold bars adventure\" Eureka logo", "Joe Sondow", "joesondow", "12/25/12, 09:55:06 PM", "For use in documentation, perhaps in Eureka GUI", "NaN"], ["4", "eureka.port appears to be pulling double duty:", "Eric Dowd", "ericdowd", "12/25/12, 09:48:33 PM", "both telling what port to register as and what port the eureka server is listening on. Changed the properties that deal with DNS discovery of eureka servers to be eureka.eurekaServer.<property>", "NaN"], ["5", "Use IAM role as fallback when AWS credentials are not provided", "Eric Dowd", "ericdowd", "03/11/13, 09:15:15 PM", "NaN", "NaN"], ["7", "Upgrading to the latest gradle-template", "Justin Ryan", "quidryan", "12/29/12, 09:00:33 PM", "This includes the javadoc and sources changes, and brings eureka up to gradle-template style-wise. I fixed some tabs in build.gradle. \n\nI'm a little concerned with the delete and copy directly in eureka-server section. These are running outside of an actually task and not part a tasks lifecycle. Meaning it'll run when the script is being parsed, no work should done at this stage. It probably only works after a build, e.g. right after a clean, it wouldn't do anything. Likewise the directory structure of eureka-server is pretty out of line with gradle convention, we should sit down sometime to clean it up.", "NaN"], ["8", "Docfix: remove extra spaces, fix bullets", "Blake Gentry", "bgentry", "12/31/12, 09:58:10 PM", "NaN", "NaN"], ["14", "eureka-client should declare dependency on Jettison", "Craig Forster", "craigforster", "01/28/13, 08:26:49 PM", "The eureka-client package requires Jettison to be on the classpath, but doesn't declare the dependency.  Without Jettison on the classpath, `com.netflix.discovery.converters.JsonXStream` can't load resulting in this error from the heartbeat thread:\n\n```\n| Error 2013-01-28 13:21:32,659 [DiscoveryClient_Heartbeat] ERROR discovery.DiscoveryClient  - DiscoveryClient_AIQ/172.16.16.137 - registration failedjava.io.IOException: Cannot write the object for :class com.netflix.appinfo.InstanceInfo\nMessage: java.io.IOException: Cannot write the object for :class com.netflix.appinfo.InstanceInfo\n    Line | Method\n->>  184 | handle         in com.sun.jersey.client.apache4.ApacheHttpClient4Handler\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n|    120 | handle         in com.sun.jersey.api.client.filter.GZIPContentEncodingFilter\n|    648 | handle . . . . in com.sun.jersey.api.client.Client\n|    670 | handle         in com.sun.jersey.api.client.WebResource\n|     74 | access$200 . . in     ''\n|    563 | post           in com.sun.jersey.api.client.WebResource$Builder\n|    810 | makeRemoteCall in com.netflix.discovery.DiscoveryClient\n|    753 | makeRemoteCall in     ''\n|    427 | register . . . in     ''\n|   1224 | run            in com.netflix.discovery.DiscoveryClient$HeartbeatThread\n|    512 | mainLoop . . . in java.util.TimerThread\n^    462 | run            in     ''\n\nCaused by IOException: Cannot write the object for :class com.netflix.appinfo.InstanceInfo\n->>  144 | writeTo        in com.netflix.discovery.provider.DiscoveryJerseyProvider\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n|    231 | writeRequestEntity in com.sun.jersey.api.client.RequestWriter$RequestEntityWriterImpl\n|    262 | writeTo . . .  in com.sun.jersey.client.apache4.ApacheHttpClient4Handler$2\n|    115 | writeTo        in org.apache.http.entity.BufferedHttpEntity\n|     98 | writeTo . . .  in org.apache.http.entity.HttpEntityWrapper\n|    108 | writeTo        in org.apache.http.impl.client.EntityEnclosingRequestWrapper$EntityWrapper\n|    122 | serialize . .  in org.apache.http.impl.entity.EntitySerializer\n|    271 | sendRequestEntity in org.apache.http.impl.AbstractHttpClientConnection\n|    227 | sendRequestEntity in org.apache.http.impl.conn.AbstractClientConnAdapter\n|    257 | doSendRequest  in org.apache.http.protocol.HttpRequestExecutor\n|    125 | execute . . .  in     ''\n|    712 | tryExecute     in org.apache.http.impl.client.DefaultRequestDirector\n|    517 | execute . . .  in     ''\n|    906 | execute        in org.apache.http.impl.client.AbstractHttpClient\n|    827 | execute . . .  in     ''\n|    170 | handle         in com.sun.jersey.client.apache4.ApacheHttpClient4Handler\n|    120 | handle . . . . in com.sun.jersey.api.client.filter.GZIPContentEncodingFilter\n|    648 | handle         in com.sun.jersey.api.client.Client\n|    670 | handle . . . . in com.sun.jersey.api.client.WebResource\n|     74 | access$200     in     ''\n|    563 | post . . . . . in com.sun.jersey.api.client.WebResource$Builder\n|    810 | makeRemoteCall in com.netflix.discovery.DiscoveryClient\n|    753 | makeRemoteCall in     ''\n|    427 | register       in     ''\n|   1224 | run . . . . .  in com.netflix.discovery.DiscoveryClient$HeartbeatThread\n|    512 | mainLoop       in java.util.TimerThread\n^    462 | run . . . . .  in     ''\n\nCaused by NoClassDefFoundError: Could not initialize class com.netflix.discovery.converters.JsonXStream\n->>   78 | write          in com.netflix.discovery.converters.EntityBodyConverter\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n|    142 | writeTo        in com.netflix.discovery.provider.DiscoveryJerseyProvider\n|    231 | writeRequestEntity in com.sun.jersey.api.client.RequestWriter$RequestEntityWriterImpl\n|    262 | writeTo        in com.sun.jersey.client.apache4.ApacheHttpClient4Handler$2\n|    115 | writeTo . . .  in org.apache.http.entity.BufferedHttpEntity\n|     98 | writeTo        in org.apache.http.entity.HttpEntityWrapper\n|    108 | writeTo . . .  in org.apache.http.impl.client.EntityEnclosingRequestWrapper$EntityWrapper\n|    122 | serialize      in org.apache.http.impl.entity.EntitySerializer\n|    271 | sendRequestEntity in org.apache.http.impl.AbstractHttpClientConnection\n|    227 | sendRequestEntity in org.apache.http.impl.conn.AbstractClientConnAdapter\n|    257 | doSendRequest  in org.apache.http.protocol.HttpRequestExecutor\n|    125 | execute        in     ''\n|    712 | tryExecute . . in org.apache.http.impl.client.DefaultRequestDirector\n|    517 | execute        in     ''\n|    906 | execute . . .  in org.apache.http.impl.client.AbstractHttpClient\n|    827 | execute        in     ''\n|    170 | handle . . . . in com.sun.jersey.client.apache4.ApacheHttpClient4Handler\n|    120 | handle         in com.sun.jersey.api.client.filter.GZIPContentEncodingFilter\n|    648 | handle . . . . in com.sun.jersey.api.client.Client\n|    670 | handle         in com.sun.jersey.api.client.WebResource\n|     74 | access$200 . . in     ''\n|    563 | post           in com.sun.jersey.api.client.WebResource$Builder\n|    810 | makeRemoteCall in com.netflix.discovery.DiscoveryClient\n|    753 | makeRemoteCall in     ''\n|    427 | register . . . in     ''\n|   1224 | run            in com.netflix.discovery.DiscoveryClient$HeartbeatThread\n|    512 | mainLoop . . . in java.util.TimerThread\n^    462 | run            in     ''\n```", "NaN"], ["21", "Merge gradle template as of May 2013", "Justin Ryan", "quidryan", "06/06/13, 06:53:11 PM", "Eureka's fallen behind in the gradle-template, this get it up to date. This adds a more stable release process, support for automatically publishing javadocs into gh-pages, upgrades to Gradle 1.5, and less strict header checking. Please merge at your convenience.\n\nThere's one problem with the current publishing which is putting signatures into the ivy files, but it's not uploading them. I also don't see any tags for 1.1.98. How is it being released? It's causing problems for other consumers of this library as of today.", "NaN"], ["30", "Ability to retrieve instances from any remote region", "Nitesh Kant", "NiteshKant", "07/29/13, 09:28:30 PM", "Fix for issue # 29\nAlso adds two new Jersey endpoints to retrieve instances by (S)VIPAddress", "NaN"], ["31", "Add service UP time tracking", "Scott E", "scotte", "08/06/13, 08:38:19 PM", "Track timestamp when a service is first marked UP in Eureka, and report this through REST payloads.", "NaN"], ["33", "Fixes issue #32", "Nitesh Kant", "NiteshKant", "07/30/13, 07:57:10 PM", "NaN", "NaN"], ["34", "Adding some debug statements in the tests", "Nitesh Kant", "NiteshKant", "07/31/13, 08:27:17 PM", "This helps in better asserting the reason of the test failures", "NaN"], ["35", "Fixing test flakiness", "Nitesh Kant", "NiteshKant", "07/31/13, 09:26:20 PM", "The global application whitelist was getting set in a test but not cleaned up.\nThis was the reason tests were failing in some environments depending in which order the tests were run.", "NaN"], ["36", "Bug fix & default az->region mapping", "Nitesh Kant", "NiteshKant", "08/01/13, 07:13:00 AM", "1) Provided a default availability zone -> region mapping for ec2 so that every client does not have to provide the same. This can be overridden by a property per region.\n2) Fixed a bug in DiscoveryClient.getInstancesByVipAddress() for a region. For invalid VIPs, the null check was wrong.", "NaN"], ["39", "Fix for issue #37 & #38", "Nitesh Kant", "NiteshKant", "08/02/13, 07:17:35 AM", "NaN", "NaN"], ["41", "Fixes for issue #40", "Nitesh Kant", "NiteshKant", "08/09/13, 06:19:20 PM", "Also added some debug logs to provide more info about the remote calls and the instance registry contents (app hashcodes) after refresh from server.", "NaN"], ["46", "Fixes issue #45", "Nitesh Kant", "NiteshKant", "08/22/13, 04:48:17 PM", "NaN", "NaN"], ["48", "Fixes issue #47", "Nitesh Kant", "NiteshKant", "08/27/13, 12:02:42 AM", "NaN", "NaN"], ["49", "Allow EIP binding if the current IP of the instance is null.", "Melvin Cardozo", "mampcs", "08/29/13, 05:38:00 PM", "It's possible for myPublicIP to be null when eureka is restarted\nbecause unbinding an EIP on Amazon results in a null IP for the\ninstance for a few minutes. In that case, it's ok to rebind the\nnew EIP.", "NaN"], ["51", "Fixes issue #50", "Nitesh Kant", "NiteshKant", "08/30/13, 11:59:33 PM", "Also, provided some handy methods in DiscoveryClient to get all known regions and apps for a region.", "NaN"], ["52", "Handling empty AZ in AZtoRegionMapper", "Nitesh Kant", "NiteshKant", "08/31/13, 08:13:13 AM", "NaN", "NaN"], ["56", "Fix for issue #55", "Nitesh Kant", "NiteshKant", "09/17/13, 08:42:48 PM", "NaN", "NaN"], ["58", "Fix for issue #57", "Nitesh Kant", "NiteshKant", "09/19/13, 07:20:05 AM", "NaN", "NaN"], ["61", "Fix for https://github.com/Netflix/eureka/issues/59", null, "karthik-vn", "10/16/13, 07:50:15 PM", "NaN", "NaN"], ["63", "https://github.com/Netflix/eureka/issues/62", null, "karthik-vn", "10/18/13, 09:14:51 PM", "When eureka server startups, it tries to find the unused EIPS based on the list from it neighboring nodes.\n\nIf that communication fails for some reason, multiple eureka servers will bind to the same EIP there by snatching it from one another.\n\nAWS does not prevent reassociation in EC2-classic. A better way to handle this edge-case scenario is to find if the an instance id is associated with an elastic IP and if so skip that binding.", "NaN"], ["64", "Break after we have associated the EIP without going through the entire ...", null, "karthik-vn", "10/18/13, 10:18:05 PM", "...list.", "NaN"], ["65", "https://github.com/Netflix/eureka/issues/62: Simplify EIP assignment logic.", null, "karthik-vn", "10/21/13, 06:35:53 PM", "NaN", "NaN"], ["66", "Change jersey bundle dependency to \"provided\" so that the upstream depen...", null, "karthik-vn", "10/30/13, 05:49:16 PM", "...dencies can specify their own.", "NaN"], ["67", "Add missing dependency.", null, "karthik-vn", "11/04/13, 07:11:08 PM", "NaN", "NaN"], ["68", "Replication optimization where the network traffic between eureka nodes ...", null, "karthik-vn", "12/23/13, 11:07:06 PM", "...are considerably reduced by executing the replication events as one batch instead of individual requests.\n\nThis has both the effect of reducing the number of threads on the eureka server side and also makes the replication lightning fast (where 100s of replication request are executed at the same time as 1 request). This optimization has a great positive effect of scaling eureka servers much much more horizontally making replication and state maintenance a non-issue when the cluster expands to have more nodes.", "NaN"], ["73", "Fix for issue #53 #70 #72", "Nitesh Kant", "NiteshKant", "01/04/14, 12:27:22 AM", "Issue #70 Using ribbon's MonitoredConnectionManager instead of apache's ThreadSafeClientConnManager\nIssue #72 Improved exception handling in DiscoveryJerseyProvider & closing inputstream on Error during read.", "NaN"], ["74", "Bumping snapshot version", "Nitesh Kant", "NiteshKant", "01/07/14, 12:43:25 AM", "For some odd reason the snapshot versions are messed up in Netflix artifactory. So bumping the revision manually.", "NaN"], ["75", "Using a more qualified name for HTTP client stats.", "Nitesh Kant", "NiteshKant", "01/07/14, 09:01:04 PM", "NaN", "NaN"], ["77", "Fix dependencies in gradle build.", "Veniamin Viflyantsev", "knok16", "01/13/14, 07:11:04 AM", "com.sun.jersey:jersey-servlet:1.11 dependency was missed in one of previously commits (5d9fbd77f681b3a13d7689ce87ccab83be874ea8 Fix for issue #53 #70 #72)", "NaN"], ["78", "Fix for issue #76", "Nitesh Kant", "NiteshKant", "01/14/14, 06:10:32 PM", "Added a property eureka.shouldFetchRegistry which when set to false will disable registry fetch.", "NaN"], ["80", "Disabling batch replication by default", "Nitesh Kant", "NiteshKant", "02/06/14, 08:39:44 PM", "NaN", "NaN"], ["82", "Fix service UP timestamp from getting reset", "Scott E", "scotte", "02/07/14, 09:09:53 PM", "There was an issue with service UP timestamp tracking where the\ntimestamp would get reset in cases where a lease was re-registered.\n\nAlso modified the sample service to start in STARTING mode and only\ntransition to UP status after simulating application initialization\ntime by sleeping for 60 seconds.", "NaN"], ["83", "Upgrade apache httpclient and add copy constructor for InstanceInfo", "Jay Zarfoss", "zarfide", "02/13/14, 06:16:05 AM", "copy constructor needed for InstanceInfo to manipulate InstanceInfo information in LoadBalancers", "NaN"], ["85", "Added the UniqueIdentifier interface", "Ryan Thomas", "rthomas", "02/19/14, 08:53:04 PM", "Added the UniqueIdentifier interface and modified InstanceInfo to call this getId method if this interface is implemented, rather than checking if name is Name.AMAZON. Updated AmazonInfo to use this.\n\nThis change is to allow non-amazon instances to be identified by a mechanism other than their hostname - e.g. multiple docker containers on the same host, registering with Eureka with the docker-host address.", "NaN"], ["86", "Fix the bug that unable to read metadata from the property file.", "Kent Dong", "CH3CHO", "02/20/14, 08:56:43 AM", "Remove the trailing \".\" when calling config.subset.", "NaN"], ["88", "Fix for issue #87", "Nitesh Kant", "NiteshKant", "02/24/14, 06:19:00 PM", "Changing StatsTimer usage to BasicTimer.", "NaN"], ["94", "Current instance status notification", null, "elandau", "04/16/14, 08:03:29 PM", "- Add RefreshCallback so that custom instance status check logic can be implemented after getting an update from discovery.\n- Add Cancel/Register support to MockRemoteEureakServer\n- Add eureka-lifecycle project with a guide module for eureka bindings.\n- Includes binding for an Rx Observable<Boolean> with running instance up status notification\n\nHere is a usage example.  Note that the Observable is backed by a BehaviorSubject and as such emits the last known up status immediately after subscribe is called.  \n\n```\n    public static class Service {\n        @Inject\n        public Service(@UpStatus   Observable<Boolean> upStatusObservable) {\n            upStatusObservable.subscribe(new Action1<Boolean>() {\n                @Override\n                public void call(Boolean status) {\n                    System.out.println(\"***** Status changed to : \" + status);\n                }\n            });\n        }\n    }\n```", "NaN"], ["95", "Fix typo in Eureka client", "Benjamin Pollack", "bpollack", "04/01/14, 05:45:03 PM", "Just fixes a minor typo I came across while testing", "NaN"], ["100", "Fixes issue #93 #97 #98 #99", "Nitesh Kant", "NiteshKant", "04/15/14, 07:11:32 PM", "1) Implementing clean shutdown of client. Moved away from Timer to ScheduledExecutorService as it gives better control of shutdown by interrupting the running thread, which is what we want.\n2) Implemented addition of \"application group\" to instance info.", "NaN"], ["101", "Fixing the scheduling delay for InstanceInfoReplicator.", "Nitesh Kant", "NiteshKant", "04/16/14, 01:00:44 AM", "The timeunit got changed to Seconds but the value was still MS", "NaN"], ["102", "remove import of com.netflix.logging.* from status.jsp, as it does not a...", "Joe Hohertz", "jhohertz", "04/16/14, 04:41:36 PM", "Remove import of com.netflix.logging.\\* from status.jsp, as it does not appear to be actually used. (Should be hidden to app layer really)\n\nAnd it makes jetty9 angry due to there being no classes at that node of the package namespace, only below it. \n\nAlternate possibility, if classes _are_ needed, is to import deeper into the package space where needed. But if its not referenced, removal is probably better.", "NaN"], ["103", "Full DiscoveryClient Governation", null, "elandau", "04/16/14, 08:03:29 PM", "Alternative implementation to #93 with full DI support for DiscoveryClient without the need for a Guice module.  This implementation is also fully backwards compatible with DiscoveryManager.getInstance()", "NaN"], ["104", "Fixing the indefinite wait in testcase.", "Nitesh Kant", "NiteshKant", "04/21/14, 08:02:35 PM", "NaN", "NaN"], ["105", "Fix some bad JavaDoc (bad params, incorrect @link)", "Benjamin Pollack", "bpollack", "04/21/14, 08:03:17 PM", "NaN", "NaN"], ["106", "Remove a lot of dead code and unused imports", "Benjamin Pollack", "bpollack", "04/23/14, 06:46:52 PM", "NaN", "NaN"], ["107", "Fix DefaultEurekaClientConfig units", "Peter Kelley", "pgkelley4", "04/25/14, 09:52:16 PM", "EurekaServiceUrlPollInterval is named\ngetEurekaServiceUrlPollIntervalSeconds in EurekaClientConfig interface\nbut serviceUrlPollIntervalMs in config files. Its default looks\nsuspiciously like it shouldn't be multiplied by 1000. This config is\nactually used as seconds. Changed to be seconds\nserviceUrlPollIntervalSeconds and fixed the default.\n\nEurekaServerReadTimeoutSeconds and EurekaServerConnectTimeoutSeconds\nwere both being contributed as millseconds and used as milliseconds.\nChanged to seconds in config files and use of the config changed to use\nseconds.", "NaN"], ["108", "Do not get into a 500 state when a bad app registers", "Benjamin Pollack", "bpollack", "04/23/14, 09:51:05 PM", "Previously, the DataCenterInfo was not effectively \"validated\" until read\ntime, which meant that a malicious (or simply badly coded) app could take the\nEureka cluster offline by specifying a dataCenterName that wasn't one of\nAmazon, MyOwn, or Netflix.  Move the validation code to write time by doing\nthe conversion to DataCenterInfo.Name as part of the deserialization process.", "NaN"], ["110", "Fixes for various CheckStyles issues", "Benjamin Pollack", "bpollack", "04/28/14, 01:15:32 AM", "This series of patches each fix one very simple CheckStyle issue.  These are all focused on cosmetic issues, and each cosmetic issue is dealt with in its own patch; I haven't yet attempted to address bigger issues, like missing JavaDoc comments or imports that are only imported to make `@link`s shorter.  Nevertheless, this gets us from 1600 to 580 CheckStyles violations, which dramatically improves the signal-to-noise ratio.", "NaN"], ["112", "Remove dead code in ApplicationResource", "Benjamin Pollack", "bpollack", "04/25/14, 10:02:05 PM", "NaN", "NaN"], ["113", "Fix wrong interface being provided", null, "elandau", "04/25/14, 10:02:35 PM", "NaN", "NaN"], ["114", "Add additional JavaDoc", "Benjamin Pollack", "bpollack", "04/28/14, 11:53:55 PM", "I did my best job to get all these correct, but I'd appreciate a second set of eyes to make sure that my comments are all correct.", "NaN"], ["116", "Changing external dependencies to follow a range version scheme.", "Nitesh Kant", "NiteshKant", "04/29/14, 12:01:00 AM", "The fixed version numbers for dependencies requires too many changes for every upgrade of any library.\nThis new scheme will pin to the same major version instead.", "NaN"], ["117", "CheckStyles/code cleanup and JavaDoc", "Benjamin Pollack", "bpollack", "04/30/14, 08:49:51 PM", "Last of the nearly-purely-cleanup PRs for a bit, I promise.  I hit all of this while wrapping my head around how to approach the test suite issue.  This does get us down to 479 CheckStyles violations, though, basically all of which are just CheckStyles whinging about the lack of JavaDoc on protected members, and eliminates a lot of stuff that was picked up by IntelliJ and findbugs on general code cleanliness.", "NaN"], ["121", "Fix log level for serviceUrls", "Peter Kelley", "pgkelley4", "05/06/14, 08:26:36 PM", "Currently Eureka will log.info serviceUrls everytime it reads them.\nIt should only log.info serviceUrls if they have changed. Logging\neverytime it reads should be at the debug level.", "NaN"], ["122", "Fixes issues #118 #120", "Nitesh Kant", "NiteshKant", "05/07/14, 11:44:28 PM", "Issue #118 Removed the read-only cache in ResponseCache, it was not useful. Created a mapping for which keys without any regions map to keys with regions. This is looked up whenever there is an invalidation to also get keys which has remote regions.\n\nIssue #120 Making connection cleaner thread a daemon.", "NaN"], ["123", "Fixing dependency versions suitable for netflix artifactory.", "Nitesh Kant", "NiteshKant", "05/08/14, 05:34:47 AM", "NaN", "NaN"], ["125", "Fix Providers to cache and return the same instance", null, "elandau", "05/08/14, 07:07:44 PM", "NaN", "NaN"], ["126", "Fix injecting of EventBus into DiscoveryClient", null, "elandau", "05/08/14, 09:01:31 PM", "Discovery client currently does a bunch of stuff in the constructor.\nThese operations previous saw a null eventBus because it is optional.\nThe fix ensures that the optional EventBus is properly resolved before\nthe constructor is called\nDisable the DiscoveryStatusCheckTest until we can write a more robust\nmock server.", "NaN"], ["127", "Fixing build failures", "Nitesh Kant", "NiteshKant", "05/08/14, 09:27:05 PM", "Also removing dependency version ranges as they do not play well with internal netflix infrastructure.", "NaN"], ["128", "Scheduled executor should be a daemon", null, "elandau", "05/19/14, 04:27:54 PM", "NaN", "NaN"], ["129", "Update CloudInstanceConfig.java", "Tom Mack", "tommack", "05/19/14, 04:28:22 PM", "Adding missing whitespace to log line.", "NaN"], ["130", "Fix Eureka instance count and status logging", "Peter Kelley", "pgkelley4", "05/30/14, 10:09:40 PM", "Eureka client would only log the number of UP instances but with the\ndeceiving message:\n\nlogger.debug(\"The total number of instances in the client now is {}\",\n                totInstances);", "NaN"], ["133", "Adding config override in eureka-client to force registry refresh to only pick up data for a single app", "David Liu", "qiangdavidliu", "06/03/14, 07:52:13 PM", "#132", "NaN"], ["136", "Removing range dependencies.", "Nitesh Kant", "NiteshKant", "06/03/14, 11:28:21 PM", "NaN", "NaN"], ["140", "add eureka.appinfo.initial.replicate.time property to allow faster initi...", "Andrew Spyker", "aspyker", "06/18/14, 07:57:10 AM", "...al registration", "NaN"], ["141", "Adding timeout and backup on DiscoveryClient's heartbeat and cacheRefresh", "David Liu", "qiangdavidliu", "06/23/14, 05:40:40 AM", "NaN", "NaN"], ["142", "Adding auth headers", "David Liu", "qiangdavidliu", "07/07/14, 11:26:47 PM", "Adding auth headers to eureka client and server outbound requests.\nAdding filter to optionally log auth headers in eureka server.", "NaN"], ["143", "Improved locking for periodic registry refreshes", "David Liu", "qiangdavidliu", "07/04/14, 11:18:34 PM", "In the very unlikely case where applying registry updates take > than the update periodicity, a subsequent update thread can trample the previous (still updating) thread.", "NaN"], ["144", "Make HealthCheckCallback injectable", null, "elandau", "07/04/14, 11:47:35 PM", "Making HealthCheckCallback injectable instead of calling registerHealthCheckCallback removes the need to create custom providers that want to ensure registerHealthCheckCallback is called as part of DiscoveryClient instantiation. \n\nAlso change a few @Singleton's to @FineGrainedLazySingleton", "NaN"], ["146", "Fixes issue #145", "Nitesh Kant", "NiteshKant", "07/06/14, 03:42:17 AM", "Provided a new interface `HealthcheckHandler` and deprecated `HealthcheckCallback`\n\nThis change is backward compatible i.e. the use of `HealthcheckCallback` stays as today.", "NaN"], ["148", "Fixes issue #147", "Nitesh Kant", "NiteshKant", "07/06/14, 06:18:17 AM", "Re-introducing read only response cache.", "NaN"], ["150", "Enabling registration for non-amazon datacenters on server startup.", "Nitesh Kant", "NiteshKant", "07/22/14, 11:19:50 PM", "`PeerAwareInstanceRegistry` disregards any non-amazon instances got from a peer on initial startup. This change enabled the registration.\n\nChanges were discussed as part of pull request: https://github.com/Netflix/eureka/pull/134", "NaN"], ["151", "Minor fixes", "David Liu", "qiangdavidliu", "07/23/14, 12:09:11 AM", "- change periodic info logs to debug logs in DiscoveryClient\n- remove clientId logging in discovery server", "NaN"], ["153", "Fix for Issue #152", "Eric Dowd", "ericdowd", "07/28/14, 06:57:31 PM", "Check if the elastic ip is for VPC and behave appropriately", "NaN"], ["154", "Skeletal changes for 2.x", "Nitesh Kant", "NiteshKant", "07/26/14, 12:50:31 AM", "All the source code is removed. This only contains the modules required for eureka 2.X\nWe will add the files required from 1.X as we need them.", "NaN"], ["155", "Eureka 2.0 transport prototype.", null, "tbak", "07/29/14, 06:59:38 AM", "Contains the code we walked through today.", "NaN"], ["156", "Initial example interface/implementation of model and registry", "David Liu", "qiangdavidliu", "07/29/14, 05:10:06 PM", "NaN", "NaN"], ["158", "Fixes #157", "Nitesh Kant", "NiteshKant", "08/01/14, 05:09:03 PM", "Making remote region registry fetch a soft dependency.\n\nThis means that clients that are making calls to fetch registry and delta for local region only, will continue to get registry data even if the configured remote region registry is unavailable.\nThis removes a circular dependency between cross-region eureka instances and hence it is possible to bootstrap both regions from scratch.", "NaN"], ["159", "Eureka transport update.", null, "tbak", "08/04/14, 08:57:35 PM", "NaN", "NaN"], ["160", "Initial attempt to interests implementation", "Nitesh Kant", "NiteshKant", "08/05/14, 02:23:10 AM", "-- Provided a new EurekaRegistry API as I did not want a lot of conflicts for David. This can merge into existing registry implementation later.\n-- Provided an Index and interest abstraction.\n-- Had to comment a test case for EurekaTransport because avro was not able to handle an abstract class (why?)\n-- Created a new module eureka-test-utils that will be used to provide test utilities for eureka for internal (eureka project) and external (people using eureka) use.", "NaN"], ["161", "Adding initial implementations to partially implemented model classes", "David Liu", "qiangdavidliu", "08/05/14, 04:17:59 PM", "Changes to common classes:\n- added an unique UUID to instanceInfo id in SampleInstanceInfo\n- added a parallel SampleChangeNotification in the same style as SampleInstanceInfo that can also take a seed instanceInfo to creating notifications (so that the id can stay constant)", "NaN"], ["162", "Implementing init state & real time state consistency.", "Nitesh Kant", "NiteshKant", "08/05/14, 02:28:35 PM", "Created a special \"pausable\" Subject that can be used for any data set that needs a consistency between iterator creation and change notification stream.", "NaN"], ["163", "Merge EurekaRegistryImpl with InstanceRegistry", "David Liu", "qiangdavidliu", "08/06/14, 04:47:50 PM", "Caveats apply, see TODO comments in LeasedInstanceRegistry", "NaN"], ["164", "transport update", null, "tbak", "08/06/14, 07:49:27 PM", "NaN", "NaN"], ["165", "Transport update.", null, "tbak", "08/07/14, 06:34:40 PM", "NaN", "NaN"], ["166", "Removing the unused Index enum.", "Nitesh Kant", "NiteshKant", "08/12/14, 07:24:31 AM", "-- Also modified the InitStateHolder to take an iterator which works well with filtering by interest.\n-- Provided a shutdown() on registry so that we can simulate end of an index.", "NaN"], ["167", "Initial naive implementation of InstanceLocation", "David Liu", "qiangdavidliu", "08/12/14, 04:40:06 PM", "- eventual consistent view of snapshotForInterest from the registry", "NaN"], ["168", "(WIP) Introducing the concept of EurekaService and ServiceChannel.", "Nitesh Kant", "NiteshKant", "08/13/14, 06:33:36 AM", "-- A service is the access point for registry access (both read/write)\n-- A channel abstracts a protocol/command so that it provides a higher level abstraction of what is to be done for a command.\n\nWe can bikeshed on names but lets discuss the abstraction.", "NaN"], ["169", "Initial proposal for DeltaInstanceInfo", "David Liu", "qiangdavidliu", "08/25/14, 03:06:30 PM", "NaN", "NaN"], ["170", "Eureka 2.x multiple commits", null, "tbak", "08/15/14, 05:08:13 PM", "NaN", "NaN"], ["171", "Integration of registration protocol with EurekaServerService API ", null, "tbak", "08/25/14, 03:17:36 PM", "NaN", "NaN"], ["172", "Fix logging string", "Jeff Williams", "jeffw-wherethebitsroam", "08/21/14, 07:51:04 AM", "Just getting it to log the availability zones correctly. Previously:\n\n2014-08-20 06:28:02,249 DEBUG com.netflix.discovery.DiscoveryClient:522 [DiscoveryClient_ServiceURLUpdater] [getEurekaServiceUrlsFromConfig] The availability zone for the given region us-east-1 are %s", "NaN"], ["173", "Adding a new gradle task (testJar) to allow test dependencies on eureka-client", null, "christorpelund", "08/26/14, 01:52:23 AM", "NaN", "NaN"], ["175", "Update eureka-client to use new domain model with Delta class.", null, "tbak", "08/26/14, 12:58:01 AM", "Update avro/json codecs to deal with modified data model.", "NaN"], ["176", "Fixes #174", "Nitesh Kant", "NiteshKant", "08/26/14, 07:12:24 PM", "-- Making BackupRegistry injectable.\n-- Fixed an annoying issue in EIPManager:  When no EIPs are free, it was throwing an NPE.", "NaN"], ["177", "Diff to generate deltas from instanceInfo", "David Liu", "qiangdavidliu", "08/26/14, 04:57:48 PM", "NaN", "NaN"], ["178", "Integrate discovery server transport layer with InterestChannel.", null, "tbak", "08/27/14, 04:10:11 PM", "NaN", "NaN"], ["179", "Adding back the modified public constructor to DiscoveryClient", "Nitesh Kant", "NiteshKant", "08/27/14, 05:28:24 AM", "Fix for issue #174 added another argument to the constructor used by guice.\nThis was considering the fact that code should not be using the @Inject constructor directly. However, some code inside Netflix was dependent on it.\n\n Adding the old constructor back and making the @Inject constructor package private.", "NaN"], ["180", "Reworked InstanceInfoField so reflection is not used to set InstanceInfo", "David Liu", "qiangdavidliu", "08/27/14, 06:11:54 PM", "Also removed unused classes", "NaN"], ["182", "Upgrade to Java7 and remove redundancy from gradle scripts.", null, "tbak", "08/27/14, 11:27:24 PM", "NaN", "NaN"], ["183", "Add missing pieces to run Eureka client/server for the current code base", null, "tbak", "08/28/14, 09:58:23 PM", "Add missing pieces to run Eureka client/server for the current code base\n\nTo run server execute:\ncd eureka-server\n../gradlew runWriteServer\n\nTo run client:\ncd eureka-test-utils\n../gradlew build\n./build/cli.sh\n\nRun help, to get a list of available commands.", "NaN"], ["186", "Add DataCenterInfo and a few other abstraction", null, "tbak", "09/02/14, 07:39:48 PM", "NaN", "NaN"], ["188", "2.x reworked channels", null, "tbak", "09/04/14, 04:59:40 PM", "NaN", "NaN"], ["189", "Add rate limiter, to cut-off custom clients if traffic goes above configured level.", null, "tbak", "09/08/14, 04:54:48 PM", "NaN", "NaN"], ["191", "Channel/transport update - WIP.", null, "tbak", "09/06/14, 12:13:29 AM", "NaN", "NaN"], ["192", "Standardize InstanceInfoField names", "David Liu", "qiangdavidliu", "09/07/14, 10:18:43 PM", "NaN", "NaN"], ["193", "Test framework updates", "David Liu", "qiangdavidliu", "09/08/14, 03:06:35 AM", "- added interest command to CLI tool\n- added testEurekaServer with pre-registered apps\n- minor package refactoring", "NaN"], ["194", "2.x Interest channel upgrade", null, "tbak", "09/08/14, 06:50:25 PM", "- a few EurekaCLI improvements.", "NaN"], ["195", "2.x Implement AwsDataCenterInfo provider.", null, "tbak", "09/09/14, 08:41:56 PM", "NaN", "NaN"], ["196", "Initial client-side interest impl", "David Liu", "qiangdavidliu", "09/10/14, 05:12:43 PM", "NaN", "NaN"], ["197", "2.x composite interest index + ribbon in eureka-client", null, "tbak", "09/11/14, 10:42:26 PM", "I still keep InterestNotificationMultiplexer, as it allows us to dynamically adjust notification stream. During interest upgrade, we do not want to resend data of atomic interests that are still part of the upgraded interest set. Swapping composite interest subscriptions would sent everything again.", "NaN"], ["199", "Remove MessageBrokerServer and MessageBrokerBuilder abstractions", null, "tbak", "09/12/14, 04:49:34 AM", "Remove MessageBrokerServer and MessageBrokerBuilder abstractions, which are no longer needed.", "NaN"], ["200", "moving EurekaRegistry instantiation outside of EurekaService on the client", "David Liu", "qiangdavidliu", "09/12/14, 08:27:38 PM", "NaN", "NaN"], ["201", "Reworked client impl of interest", "David Liu", "qiangdavidliu", "09/14/14, 07:27:02 PM", "NaN", "NaN"], ["202", "2.x Eureka Read server + embedded cluster", null, "tbak", "09/15/14, 04:51:14 AM", "NaN", "NaN"], ["204", "Fix bug in client side interestChannelImpl not propagating delta", "David Liu", "qiangdavidliu", "09/17/14, 01:20:10 AM", "NaN", "NaN"], ["205", "Add runCluster task to gradle.", null, "tbak", "09/17/14, 03:35:12 PM", "NaN", "NaN"], ["206", "Client side refactoring", "Nitesh Kant", "NiteshKant", "09/18/14, 07:06:33 PM", "-- Introducing a EurekaClientRegistry which feeds to all users of the client.\n-- Separated eureka-server, eureka-read-server and eureka-write-server", "NaN"], ["207", "2.x audit service + further work on eureka-client API + example app", null, "tbak", "09/22/14, 04:27:29 AM", "NaN", "NaN"], ["208", "The modifications in this commit should be part of the previous one", null, "tbak", "09/22/14, 04:16:42 PM", "(42ea54c2d03b81a4c2631bf8bb142aeb428f01dd), but due to my mistake were not\nadded to the change set.", "NaN"], ["209", "Upgrade to latest ribbon/rxnetty/karyon version", null, "tbak", "09/22/14, 05:08:29 PM", "(2.0-RC9, 0.3.14, 2.1.00-RC5 respectively).", "NaN"], ["210", "Replication related API update - WIP", null, "tbak", "09/22/14, 10:23:28 PM", "NaN", "NaN"], ["211", "Refactor of InterestChannel to consolidate apis", "David Liu", "qiangdavidliu", "09/22/14, 10:15:12 PM", "NaN", "NaN"], ["212", "Duplicate interest handling", "David Liu", "qiangdavidliu", "09/25/14, 10:15:20 PM", "Added server-side versioning and clientInterestChannel checks to deal with duplicates.\nRemoved lease times from data model as it will be handled by the channel.", "NaN"], ["213", "Eureka read/write server self registration + eureka client update.", null, "tbak", "09/25/14, 10:32:37 PM", "Eureka client can now resolve eureka read cluster using discovery endpoint\non the write cluster.\nThis commit adds also a startup configuration mechanism for\nread/write server runners.", "NaN"], ["214", "Remove statics requiring bootstrapping from JAX-RS resources", "David Currie", "davidcurrie", "10/03/14, 06:43:36 PM", "As per issue #190, Eureka JAX-RS resources currently assume that bootstrapping via the servlet context listener will have occured before their static initialization is driven.", "NaN"], ["215", "Implement replication mechanism.", null, "tbak", "10/01/14, 04:53:24 PM", "NaN", "NaN"], ["216", "2.x Make configuration archaius friendly.", null, "tbak", "10/03/14, 05:51:47 AM", "NaN", "NaN"], ["217", "Add configuration properties for proxy user name / password.", null, "tbak", "10/09/14, 08:35:40 PM", "NaN", "NaN"], ["219", "Add search to Eureka website table with DataTables", "Peter Kelley", "pgkelley4", "10/13/14, 07:18:29 PM", "Are you guys open to accepting website modifications/enhancements? We are using these changes internally and wanted to at least give you the option of pulling it. DataTables is MIT license.\n\nChange website table to use jQuery DataTables. Add a search feature.\n\nUpgrades jQuery to 1.11.1.", "NaN"], ["221", "Move classes from com.netflix.eureka to com.netflix.rx.eureka package.", null, "tbak", "10/11/14, 03:37:53 AM", "Move classes from com.netflix.eureka to com.netflix.rx.eureka package.\nAdd \"rx-\" prefix to gradle module names.", "NaN"], ["222", "2.x Move eureka ports to a different range to avoid overlapping with other services.", null, "tbak", "10/14/14, 05:04:22 PM", "NaN", "NaN"], ["223", "Adding eureka-compatibility module with BridgeServer that bridges data from v1 to rx/v2.", "David Liu", "qiangdavidliu", "10/14/14, 02:04:19 AM", "NaN", "NaN"], ["224", "Adding bridge server to embedded eureka cluster in test-utils", "David Liu", "qiangdavidliu", "10/14/14, 10:09:45 PM", "NaN", "NaN"], ["225", "Changing default port numbers yet again", "David Liu", "qiangdavidliu", "10/15/14, 10:54:57 PM", "Also giving Bridge Server its own SelfRegistrationService", "NaN"], ["226", "2.x Add server side servo metrics.", null, "tbak", "10/17/14, 04:11:22 PM", "Add server side servo metrics.", "NaN"], ["227", "2.x Adjust metric names to be more readable in the monitoring system.", null, "tbak", "10/17/14, 11:43:18 PM", "NaN", "NaN"], ["228", "Binding metrics to BridgeServerModule", "David Liu", "qiangdavidliu", "10/18/14, 01:22:00 AM", "NaN", "NaN"], ["229", "2.x Eureka metrics update.", null, "tbak", "10/22/14, 05:51:15 AM", "NaN", "NaN"], ["230", "TimedSupervisorTask should be registered with servo.", null, "tbak", "10/31/14, 07:33:10 PM", "NaN", "NaN"], ["231", "2.x Add client metrics.", null, "tbak", "10/23/14, 10:05:33 PM", "NaN", "NaN"], ["232", "2.x audit service and interest model updates", null, "tbak", "10/24/14, 08:33:02 PM", "NaN", "NaN"], ["233", "2.x Configure metrics for Eureka bridge.", null, "tbak", "10/28/14, 04:46:00 AM", "NaN", "NaN"], ["234", "Provide support for SystemSocketFactory for https client connections", "Keith Branton", "keithbranton", "10/31/14, 07:32:52 PM", "Use SystemSocketFactory for https client connections if system property com.netflix.eureka.shouldSSLConnectionsUseSystemSocketFactory is set to\ntrue", "NaN"], ["235", "SystemSocket support - alternative approach", "Keith Branton", "keithbranton", "10/31/14, 07:32:52 PM", "Alternative pull request including refactor to DiscoveryClient so that it uses a factory method.", "NaN"], ["236", "2.x EurekaClients should return EurekaClient instance, not an observable of it", null, "tbak", "10/30/14, 08:43:10 PM", "NaN", "NaN"], ["237", "2.x InstanceInfo model update.", null, "tbak", "10/31/14, 03:39:22 PM", "NaN", "NaN"], ["238", "2.x ServerResolver lazy startup", null, "tbak", "10/31/14, 06:04:38 PM", "NaN", "NaN"], ["239", "2.x Update jackson serialization configuration rules.", null, "tbak", "10/31/14, 07:03:31 PM", "NaN", "NaN"], ["240", "Fix bug where shuffleVirtualHostNameMap isn't updated", "Peter Kelley", "pgkelley4", "11/06/14, 12:16:08 AM", "shuffleVirtualHostNameMap and shuffledSecureVirtualHostNameMap were\nnot being updated when the last instance was removed from an application.\n\nAdded unit test to illustrate the issue and fixed it by clearing the map\non every update, just as virtualHostNameAppMap gets cleared.", "NaN"], ["241", "Improve rate limiter to throttle only full and delta registry fetches.", null, "tbak", "11/07/14, 12:23:32 AM", "NaN", "NaN"], ["242", "Add exponential backoff to heartbeat/cache refresh tasks.", null, "tbak", "11/07/14, 01:12:28 AM", "NaN", "NaN"], ["243", "Update gradle configuration.", null, "tbak", "11/07/14, 06:50:05 AM", "NaN", "NaN"], ["244", "Fix rate limiter bug.", null, "tbak", "11/07/14, 10:45:30 PM", "NaN", "NaN"], ["245", "New data type for Eureka registry", "David Liu", "qiangdavidliu", "11/10/14, 09:28:24 PM", "Adding new data type for Eureka registry that stores multiple copies of instanceInfo data w.r.t. to different input sources", "NaN"], ["246", "2.x Remove duplication in transport", null, "tbak", "11/10/14, 09:59:33 PM", "NaN", "NaN"], ["247", "Simplified resolver.", "Nitesh Kant", "NiteshKant", "11/12/14, 06:48:12 PM", "The current resolver interface has multiple concepts of protocol and ports and provides a stream of changes.\nThis change, cleans it up by providing a simplistic interface which only provides\nhost and port and instead of providing a stream of servers, provides a finites list of servers available at that time.\n\nAlso cleaned up EurekaClients factory and renamed it to Eureka", "NaN"], ["248", "2.x Eviction queue + EurekaRegistry refactoring", null, "tbak", "11/12/14, 10:12:45 PM", "WIP (unit tests and eviction/self preservation related metrics still missing).", "NaN"], ["249", "Renaming artifact and package names", "Nitesh Kant", "NiteshKant", "11/13/14, 12:11:52 AM", "removed rx from package and artifact names.", "NaN"], ["250", "2.x Fix issue with update notifications in the interest channel.", null, "tbak", "11/13/14, 01:24:01 AM", "Diff.size == 0 causes NullPointerException.", "NaN"], ["251", "ReplicationService should use port from the resolver", "David Liu", "qiangdavidliu", "11/13/14, 08:52:57 AM", "NaN", "NaN"], ["252", "Upgrade to latest rxnetty version", "Nitesh Kant", "NiteshKant", "11/13/14, 10:46:53 PM", "Also removed dependency on ribbon from the client.", "NaN"], ["253", "Add blocking in unit tests for more determinism", "David Liu", "qiangdavidliu", "11/13/14, 10:55:42 PM", "NaN", "NaN"], ["254", "Rename eureka-compatibility to eureka-bridge", "David Liu", "qiangdavidliu", "11/13/14, 11:41:29 PM", "NaN", "NaN"], ["255", "Reading heartbeat and eviction thresholds from system props", "David Liu", "qiangdavidliu", "11/14/14, 12:28:44 AM", "NaN", "NaN"], ["256", "new version commit: '2.0.0-DP2-SNAPSHOT'", "David Liu", "qiangdavidliu", "11/14/14, 04:26:01 AM", "NaN", "NaN"], ["257", "Simple system property settings for both registration and discovery heartbeats, for client and server.", "David Liu", "qiangdavidliu", "11/14/14, 05:59:21 AM", "settings:\neureka2.eviction.timeoutMillis=\"xxxx\"\neureka2.eviction.allowedPercentage=\"<0-100>\" \neureka2.registration.heartbeat.intervalMillis=\"xxxx\"\neureka2.discovery.heartbeat.intervalMillis=\"xxxx\"", "NaN"], ["258", "2.x multiple changes", null, "tbak", "11/15/14, 07:25:15 PM", "NaN", "NaN"], ["259", "Adding metrics for bridge server", "David Liu", "qiangdavidliu", "11/18/14, 12:47:25 AM", "NaN", "NaN"], ["260", "Removing race condition in shuffleInstances due to premature .clear() of", "David Liu", "qiangdavidliu", "11/18/14, 06:31:52 PM", "virtualHostnameMap (needed by getter APIs).", "NaN"], ["261", "2.x Upgrade to the latest governator/karyon version.", null, "tbak", "11/20/14, 08:39:42 PM", "NaN", "NaN"], ["263", "Skipping doclint if building with Java 8. It breaks the build due to err...", "Tomasz Kowalczewski", "tkowalcz", "11/21/14, 11:47:08 PM", "...ors in eureka javadoc (this strict doclint checking affects whole world really).\n\nI'm a casual gradle user so the solution might not be the best one for this particular project. I just copied (and tested) solution posted on Stephen Colebourne's blog: http://blog.joda.org/2014/02/turning-off-doclint-in-jdk-8-javadoc.html", "NaN"], ["264", "2.x client updates", null, "tbak", "11/25/14, 07:15:45 PM", "NaN", "NaN"], ["266", "Upgrading to rxjava 1.0.0", "David Liu", "qiangdavidliu", "11/25/14, 07:15:58 PM", "NaN", "NaN"], ["267", "2.x", null, "amit-git", "11/25/14, 08:30:36 PM", "Eureka 2.0 Dashboard first cut - registry visualization w/ quick instance search", "NaN"], ["268", "2.x multiple updates", null, "tbak", "11/25/14, 10:49:25 PM", "NaN", "NaN"], ["269", "Bootstrap config refactor", "David Liu", "qiangdavidliu", "11/26/14, 06:38:47 AM", "NaN", "NaN"], ["270", "2.x Patch static content handler", null, "tbak", "11/26/14, 03:24:47 PM", "NaN", "NaN"], ["272", "ISSUE-218 Makes converter replacement char configurable thru config.", "Sergey Krutsko", "krutsko", "12/02/14, 06:31:18 PM", "This PR is for issue https://github.com/Netflix/eureka/issues/218\nThe main idea to make char replacement configarable thru EurekaClientConfig. The default stay as is.", "NaN"], ["274", "live stream updates pane", null, "amit-git", "11/26/14, 09:09:25 PM", "1. live stream update pane to show change notification summary list\n2. websocket port endpoint is created to build ws-url from client that removes any hardcoding", "NaN"], ["275", "layout bug fix", null, "amit-git", "11/27/14, 12:13:34 AM", "NaN", "NaN"], ["276", "re-subscribe logic", null, "amit-git", "11/28/14, 07:34:52 PM", "1. Re-subscribe logic in registry handler that loops subscription logic for 3 times\n2. Addresses gson serialization issue by providing a simple typeadapter for handling fields of type 'class' as seen in 'Modify' -type change notification.", "NaN"], ["277", "2.x Support for configuration file includes in Eureka CLI + configuration reload.", null, "tbak", "11/30/14, 08:22:27 PM", "NaN", "NaN"], ["278", "eureka client stream error sent back. Retry in websocket client.", null, "amit-git", "12/01/14, 05:51:01 PM", "1. Eureka client error propagated to websocket client\n2. websocket client handles \n   a. eureka stream errors\n   b. connection drops are handled with new connection retries (max - 3 times) ", "NaN"], ["279", "Refactored server-side config loading + code cleanup", "David Liu", "qiangdavidliu", "11/30/14, 08:29:01 PM", "NaN", "NaN"], ["280", "Config refactor fixes", "David Liu", "qiangdavidliu", "12/01/14, 09:50:33 PM", "NaN", "NaN"], ["281", "Bridge channel fix to reduce statefullness of currentSnapshot", "David Liu", "qiangdavidliu", "12/02/14, 03:41:47 AM", "NaN", "NaN"], ["282", "One implementation of removing the multisource data holder on removal of last copy", "David Liu", "qiangdavidliu", "12/03/14, 07:15:54 PM", "NaN", "NaN"], ["283", "2.x Move archaius initialization to overridable method", null, "tbak", "12/03/14, 04:58:48 PM", "NaN", "NaN"], ["284", "fix: Binding base class to config instance in DashboardModule", "David Liu", "qiangdavidliu", "12/03/14, 10:30:48 PM", "NaN", "NaN"], ["285", "registry cache for dashboard stream", null, "amit-git", "12/04/14, 05:15:01 PM", "1. Registry cache that streams a light version of instanceInfo to dashboard client\n2. Uses retry() on eureka client stream to handle disconnection / onError callbacks\n\nThe result is after initial cache warm up, behaviorSubject streams cached objects as the cache gets refreshed every minute improving initial load time for the bubble chart drastically.", "NaN"], ["286", "2.x Use governator include, not install to make bindings visible across modules", null, "tbak", "12/05/14, 12:51:31 AM", "NaN", "NaN"], ["287", "Adding metrics to TaskInvoker in serverRegistry", "David Liu", "qiangdavidliu", "12/05/14, 02:17:16 AM", "NaN", "NaN"], ["288", "1.x Change ribbon version to 2.0-RC9.", null, "tbak", "12/05/14, 07:01:16 PM", "NaN", "NaN"], ["289", "2.x Fix resource leak in client registration path.", null, "tbak", "12/05/14, 11:50:06 PM", "NaN", "NaN"], ["290", "Recording accountId and vpcId from Amazon metadata (if available) for registration", "David Liu", "qiangdavidliu", "12/08/14, 08:22:33 PM", "NaN", "NaN"], ["291", "2.x Reorganize classes in packages/projects.", null, "tbak", "12/08/14, 06:04:44 AM", "NaN", "NaN"], ["292", "eureka clusters view", null, "amit-git", "12/08/14, 07:53:31 PM", "read and write cluster visualization in the form of a donut chart with an interactive details view", "NaN"], ["293", "2.x Allow for null values in delta updates.", null, "tbak", "12/08/14, 06:15:26 PM", "NaN", "NaN"], ["294", "2.x Upgrade to governator 1.3.3.", null, "tbak", "12/09/14, 05:22:36 AM", "NaN", "NaN"], ["295", "Server side registry changeNotifications require a Source identification", "David Liu", "qiangdavidliu", "12/10/14, 11:05:29 PM", "NaN", "NaN"], ["296", "Fix up server configs", "David Liu", "qiangdavidliu", "12/11/14, 12:00:18 AM", "NaN", "NaN"], ["298", "dashboard update, remove state bug fixes", null, "amit-git", "12/11/14, 06:27:45 AM", "Bug fixes\n1. Remove instanceInfo log line fixed\n2. Auto complete entry removed if no instances found for an app\n3. Status update picked up for Modify log line", "NaN"], ["299", "2.x replication refactoring", null, "tbak", "12/11/14, 06:27:54 AM", "NaN", "NaN"], ["300", "Adding integration (test) module", "David Liu", "qiangdavidliu", "12/11/14, 07:33:20 AM", "- Adding integration (test) module.\n- Re-enabling tests in RegistryIndexTest\n- fix NPE in ReplicationPeerAddressesProvider", "NaN"], ["301", "2.x Move eureka-integration sources to src/main folder.", null, "tbak", "12/11/14, 05:24:04 PM", "NaN", "NaN"], ["302", "2.x update", null, "tbak", "12/13/14, 12:16:52 AM", "NaN", "NaN"], ["303", "2.x Extract eureka-testkit module out of eureka-test-utils.", null, "tbak", "12/13/14, 01:33:28 AM", "NaN", "NaN"], ["304", "Simpifying EurekaClient creation", "David Liu", "qiangdavidliu", "12/14/14, 01:43:57 AM", "- client automatically detects read server configuration from the read server vip.\n- upgrade to ocelli-0.0.6", "NaN"], ["305", "ReplicationSender retry fix", "David Liu", "qiangdavidliu", "12/14/14, 10:25:48 AM", "- replication reconnect delay to config\n- @Singleton for SelfRegistrationServices\n- Adding auditServer id to audit logs.", "NaN"], ["306", "Adding connection self termination for all BaseMessageConnections", "David Liu", "qiangdavidliu", "12/16/14, 12:28:08 AM", "NaN", "NaN"], ["307", "2.x Refactor embedded cluster.", null, "tbak", "12/16/14, 07:46:20 AM", "NaN", "NaN"], ["308", "Channel refactor", "David Liu", "qiangdavidliu", "12/18/14, 06:46:26 PM", "NaN", "NaN"], ["309", "2.x Embedded cluster/integration tests update.", null, "tbak", "12/17/14, 01:02:53 AM", "NaN", "NaN"], ["310", "2.x Remove eureka-ocelli module (will stay in ocelli project).", null, "tbak", "12/17/14, 06:25:37 PM", "NaN", "NaN"], ["311", "eureka2 tab in admin console", null, "amit-git", "12/19/14, 06:02:45 PM", "1. eureka-karyon-admin module added under eureka-contrib which provides eureka2 admin console page\n2. DataTable backed by server side pagination, sort and filtering for better page load performance (compared to fully client-side implementation)\n3. It builds Eureka client provider implementation based on dynamic configuration for use with any karyon apps (which include karyon-admin module)", "NaN"], ["312", "2.x Integrate eureka 2 UI tab into embedded cluster.", null, "tbak", "12/19/14, 10:51:23 PM", "NaN", "NaN"], ["313", "Registry refactor", "David Liu", "qiangdavidliu", "12/31/14, 05:29:10 PM", "```\n- Moving InstanceInfo related classes to a new package (to help with moving registries into core)\n- Moving Sourced Registry and Preservable Registry to eureka-core\n- Using a persistent preservable registry in eureka-client. During interest channel\n  failover, the registry content is sent to the eviction queue.\n- Fixed a bug with the EvictionSubscriber that drops one item when going into self preservation\n- Cleaned up close() and shutdown() behaviours for a bunch of classes\n- Test updates and fixes\n- Fix integTest shutdown\n```", "NaN"], ["314", "2.x refactoring", "David Liu", "qiangdavidliu", "12/30/14, 07:52:47 PM", "NaN", "NaN"], ["315", "2.x multiple updates", null, "tbak", "12/31/14, 05:55:44 PM", "NaN", "NaN"], ["316", "2.x Add Eureka 2 images for Wiki documentation.", null, "tbak", "12/31/14, 06:14:00 PM", "NaN", "NaN"], ["317", "Code clean up", "David Liu", "qiangdavidliu", "12/31/14, 06:59:32 PM", "NaN", "NaN"], ["318", "2.x Put back shutdown module.", null, "tbak", "12/31/14, 10:11:34 PM", "NaN", "NaN"], ["319", "2.x Fix Eureka shutdown process.", null, "tbak", "01/02/15, 07:19:37 PM", "NaN", "NaN"], ["320", "2.x Replacing SelfRegistrationService impls with new HealthService", "David Liu", "qiangdavidliu", "01/06/15, 08:44:17 PM", "NaN", "NaN"], ["322", "2.x Add support for DataCenterInfo delta serialization.", null, "tbak", "01/04/15, 06:21:16 AM", "NaN", "NaN"], ["323", "2.x Extend interest subscription protocol to support snapshot subscriptions.", null, "tbak", "01/07/15, 07:59:44 PM", "NaN", "NaN"], ["324", "Merging Register and Update operations into one", "David Liu", "qiangdavidliu", "01/07/15, 09:05:48 PM", "Merging Register and Update operations into one for registry, registrationChannel and replicationChannel. Calling this new operation Register for now.\n\nAlso removed 3 unused test-utils classes.", "NaN"], ["325", "Build changes to new nebula.netflixoss", "Rob Spieldenner", "rspieldenner", "01/09/15, 12:31:12 AM", "Changes for the master branch. 2.x coming shortly.", "NaN"], ["326", "Build changes to gradle 2.2.1 and new netflixoss plugin", "Rob Spieldenner", "rspieldenner", "01/08/15, 09:20:22 PM", "NaN", "NaN"], ["327", "Needs a CHANGELOG.md for ease of bintray project creation", "Rob Spieldenner", "rspieldenner", "01/08/15, 11:35:24 PM", "NaN", "NaN"], ["328", "2.x multiple updates", null, "tbak", "01/09/15, 04:54:42 PM", "NaN", "NaN"], ["329", "1.x Enforce patch scope by default.", null, "tbak", "01/09/15, 04:54:21 PM", "NaN", "NaN"], ["330", "2.x merge register update", "David Liu", "qiangdavidliu", "01/12/15, 06:18:56 PM", "Mainly fixes in AbstractClientHandler and BaseMessageConnection to ensure proper ordering of events.\nRefactered server side registrationChannel with more clear state handling.\nBasic new version of versioning for registration that can handle async inbound requests and registry updates. This should go away once we implement the proper multi-local-source version.", "NaN"], ["331", "2.x index compaction, and fix concurrency issues", null, "tbak", "01/12/15, 07:45:12 PM", "NaN", "NaN"], ["332", "nested cluster ring ", null, "amit-git", "01/13/15, 05:49:25 PM", "1. write and read clusters nested rings visualization\n2. interactively display eureka server instance info (vip, hostname, ip, status, ports)", "NaN"], ["333", "2.x No more versioning", "David Liu", "qiangdavidliu", "01/13/15, 05:48:44 PM", "NaN", "NaN"], ["334", "2.x test tools update + add junit category support in gradle build", null, "tbak", "01/13/15, 06:47:37 PM", "NaN", "NaN"], ["335", "2.x Remove eureka-ocelli module reference from settings.gradle ", null, "tbak", "01/14/15, 06:43:59 AM", "the module itself was removed some time ago", "NaN"], ["336", "Removing EurekaRegistry interface", "David Liu", "qiangdavidliu", "01/14/15, 08:45:23 AM", "Also refactored Source and SourceMatcher to be more explicit in usage.", "NaN"], ["337", "Move to nebula.netflixoss 2.2.4 for bintray snapshot fix", "Rob Spieldenner", "rspieldenner", "01/14/15, 12:08:13 AM", "NaN", "NaN"], ["338", "Move to nebula.netflixoss 2.2.4 for bintray snapshot fix", "Rob Spieldenner", "rspieldenner", "01/14/15, 12:08:21 AM", "NaN", "NaN"], ["339", "2.x One more fix in flaky WriteClusterIntegrationTest.", null, "tbak", "01/14/15, 05:03:27 PM", "NaN", "NaN"], ["340", "2.x Refactor DnsServerResolver", null, "tbak", "01/15/15, 04:30:21 PM", "- Add ExternalConnectionTest junit category to isolate tests making external calls (now only DNS).", "NaN"], ["341", "Adding more bridge tests", "David Liu", "qiangdavidliu", "01/15/15, 08:08:33 AM", "NaN", "NaN"], ["342", "2.x Align package name between Eureka 1.x and 2.x", null, "tbak", "01/15/15, 06:12:51 PM", "Align package name between Eureka 1.x and 2.x for sake of the release process.\nRename module names from eureka-xxx to eureka2-xxx.", "NaN"], ["343", "2.x One more update for module renaming.", null, "tbak", "01/15/15, 06:39:34 PM", "NaN", "NaN"], ["344", "Refactoring channel factory and client builder", "David Liu", "qiangdavidliu", "01/16/15, 06:41:45 AM", "- bringing together client and server side channel factory interface into a common base\n- individual channels now have individual factories for modularity\n- redid EurekaClientBuilder", "NaN"], ["345", "Adding random lifecycle test suite", "David Liu", "qiangdavidliu", "01/16/15, 08:49:43 AM", "NaN", "NaN"], ["346", "Fixes for clean connection close in AmazonInfo when reading from the AWS", "David Liu", "qiangdavidliu", "01/16/15, 05:57:22 PM", "metadata url.", "NaN"], ["347", "2.x various fixes", "David Liu", "qiangdavidliu", "01/16/15, 07:21:37 PM", "NaN", "NaN"], ["348", "2.x Fix bug in DnsResolverBuilder, where the default scheduler is not created.", null, "tbak", "01/16/15, 08:22:20 PM", "NaN", "NaN"], ["350", "2.x Self-unregister of Eureka server during shutdown process.", null, "tbak", "01/21/15, 04:22:20 PM", "Self-unregister of Eureka server during shutdown process.\nAdditional unit/integration tests.", "NaN"], ["351", "2.x Extract API for metrics. Move from servo to spectator. WIP", null, "tbak", "01/22/15, 11:53:21 PM", "API is extracted and a project reorganized accordingly. A new no-op implementation is provided as a default.\nSpectator binding is not complete yet and not verified.", "NaN"], ["352", "BreakerSwitchOperator now properly onComplete and unsubscribe + tests", "David Liu", "qiangdavidliu", "01/22/15, 11:12:30 PM", "NaN", "NaN"], ["353", "2.x integ test cleanup", "David Liu", "qiangdavidliu", "01/23/15, 01:30:03 AM", "NaN", "NaN"], ["354", "2.x startup/shutdown integ test fix", "David Liu", "qiangdavidliu", "01/25/15, 06:42:16 PM", "NaN", "NaN"], ["355", "2.x Metrics update + metrics unit tests", null, "tbak", "01/26/15, 07:04:51 AM", "NaN", "NaN"], ["356", "2.x Eureka API update (Eureka class cleanup).", null, "tbak", "01/26/15, 06:24:15 AM", "NaN", "NaN"], ["373", "2.x Depend on karyon snapshot releases.", null, "tbak", "01/28/15, 12:17:12 AM", "NaN", "NaN"], ["374", "2.x Use interface base names as metrics class tag value.", null, "tbak", "01/28/15, 06:12:31 PM", "- use bintray snapshot repo by default, till we do first eureka2 RC release.", "NaN"], ["375", "2.x Fix connection metrics + update dependencies", null, "tbak", "01/28/15, 11:39:47 PM", "NaN", "NaN"], ["377", "2.x Bug fixes", null, "tbak", "01/30/15, 06:25:10 AM", "NaN", "NaN"], ["378", "2.x Further metrics cleanup.", null, "tbak", "01/30/15, 07:03:33 PM", "NaN", "NaN"], ["379", "2.x Use TestScheduler in InterestChannelImplTest for better control over the testing process.", null, "tbak", "01/30/15, 08:45:50 PM", "NaN", "NaN"], ["382", "2.x Client channel major refactor", "David Liu", "qiangdavidliu", "02/02/15, 09:35:36 PM", "- more consistent channel lifecycles and onComplete/onError\n- old Retryable channels are not RetryableConnections that can be .retry()-ed on the lifecycle.\n  for each retry, new channels are created and the old channel shutdown\n- registrationHandler now takes a stream of InstanceInfos\n- registrationTracker that bridges between the old register/unregister API and the new\n  stream based API. EurekaClient API change to the new form is not done as part of this pull\n  to minimize the change list. It will change in a subsequent pull.", "NaN"], ["383", "Reusing TestChannel and TestChannelFactory in RetryableConnectionFactoryTest", "David Liu", "qiangdavidliu", "02/02/15, 11:29:11 PM", "NaN", "NaN"], ["386", "2.x Fix dashboard server, and startup integration tests.", null, "tbak", "02/04/15, 12:57:41 AM", "NaN", "NaN"], ["387", "2.x Minor cleanup.", null, "tbak", "02/04/15, 05:57:57 PM", "NaN", "NaN"], ["388", "2.x RetryableConnection for SenderReplication", "David Liu", "qiangdavidliu", "02/05/15, 11:19:33 PM", "Using RetryableConnection for sender replication.\nConnecting connection lifecycle to channel lifecycle in AbstractClientChannel.", "NaN"], ["390", "2.x test cleanup", "David Liu", "qiangdavidliu", "02/06/15, 12:36:07 AM", "Removing EurekaClientTest (as the client now just delegates to the Handlers) and adding the interest tests to the InterestHandlerTest class", "NaN"], ["403", "2.x Implementation of interest channel state propagation (enhancement #384)", null, "tbak", "02/13/15, 09:47:32 PM", "NaN", "NaN"], ["404", "2.x Adding ability to configure some transport properties", "David Liu", "qiangdavidliu", "02/09/15, 09:41:35 PM", "NaN", "NaN"], ["405", "Fix InstanceInfo.Builder.setLeaseInstance", "Shai Erera", "shaie", "02/09/15, 12:24:35 AM", "InstanceInfo.Builder.setLeaseInstance broke the builder pattern by declaring to return void. This simple commit fixes it to return Builder.", "NaN"], ["406", "Don't use String.toUpperCase()", "Shai Erera", "shaie", "02/09/15, 12:40:42 AM", "InstanceInfo uses String.toUpperCase() without passing a Locale. This\nis very dangerous as it relies on the default locale which might not\nmatch the server's Locale. It is one of the APIs that are discouraged\nfor use, and it is better if it always passes a Locale.ROOT.", "NaN"], ["407", "Check for right logging level", "Shai Erera", "shaie", "02/09/15, 12:44:16 AM", "The code checked if isInfoEnabled() but then called logger.debug().", "NaN"], ["408", "More toUpperCase() fixes", "Shai Erera", "shaie", "02/09/15, 12:44:53 AM", "More String.toUpperCase() fixes.", "NaN"], ["411", "2.x Use Eureka 1.x mock server in bridge integration tests.", null, "tbak", "02/09/15, 04:29:50 PM", "NaN", "NaN"], ["412", "Fixes for #389, #402", null, "tbak", "02/10/15, 06:42:00 PM", "NaN", "NaN"], ["413", "2.x client fixes", "David Liu", "qiangdavidliu", "02/10/15, 06:17:22 PM", "- client interestChannel now evict older entries once new channel is available\n- AbstractClientChannel properly handle connection lifecycle", "NaN"], ["415", "2.x multiple updates", null, "tbak", "02/10/15, 04:24:53 PM", "NaN", "NaN"], ["416", "1.x Exclude servlet-api jar from eureka.war", null, "tbak", "02/10/15, 06:17:29 PM", "Because of the transitive dependencies we had two servlet-api jar\nversions in the dependency tree. Eureka depended directly on\nversion 2.4 that was properly marked as provided. This version was\nhowever shadowed by the one from the transitive dependency (2.5),\nand as it was not marked as provided nor excluded, it was added to\nwar file. That caused compatibility issue when running on tomcat 8.0.", "NaN"], ["417", "2.x SelfInfoResolver changes", "David Liu", "qiangdavidliu", "02/11/15, 09:03:13 AM", "- Updated selfInfoResolver implementation\n- Added resolver that periodically refresh datacenter info\n- Added caching resolver that caches in a BehaviorSubject for multiple subscribers", "NaN"], ["418", "Objects of different types compared with equals method.", null, "C0rWin", "02/15/15, 07:28:56 PM", "Compare data center name object with its name rather than instance of data center object itself.", "NaN"], ["419", "Simple handling of dns as txt records (assuming it's a list of hostnames)", "David Liu", "qiangdavidliu", "02/11/15, 09:13:15 PM", "NaN", "NaN"], ["420", "2.x BaseMessageConnection fix", "David Liu", "qiangdavidliu", "02/12/15, 02:21:41 AM", "NaN", "NaN"], ["421", "2.x various fixes to eviction and dns", "David Liu", "qiangdavidliu", "02/12/15, 11:32:39 PM", "NaN", "NaN"], ["423", "2.x multiple updates related to new interest stream implementation with buffer hints", null, "tbak", "02/16/15, 06:58:04 AM", "NaN", "NaN"], ["424", "2.x server address fixes", "David Liu", "qiangdavidliu", "02/16/15, 07:40:13 AM", "- Moving Server to core/utils for more generic use.\n- Removing usage of InetSocketAddress.\n- Replication peer resolve to dns name only (except for A records)", "NaN"], ["426", "Eureka Client Refactor", "David Liu", "qiangdavidliu", "02/19/15, 01:12:24 AM", "- changes to the client API per github issue #409\n- changes to server side selfRegistrationServices due to client API changes\n- fix for RetryableChannelFactory channels to be able to handle Observable.just() ops.\n- changes to tests due to client API changes", "NaN"], ["427", "2.x Get rid of blocking subscription in AuditServiceController.", null, "tbak", "02/19/15, 06:56:35 AM", "NaN", "NaN"], ["428", "2.x Fix Eureka2 UI tab.", null, "tbak", "02/19/15, 11:52:03 PM", "NaN", "NaN"], ["429", "2.x Rename Eureka2 UI resources, so they do not overlap with 1.x classes.", null, "tbak", "02/20/15, 06:48:51 AM", "NaN", "NaN"], ["430", "Require re-registration when instance status is UNKNOWN, after override removal.", null, "tbak", "02/20/15, 09:16:45 PM", "This is bug fix for PR #412.\nRequire re-registration when instance status is UNKNOWN, after override removal.\nThis does not change the current behavior when new status is set as part of the DELETE request.", "NaN"], ["432", "1.x Fix Jenkins build status link in README.md.", null, "tbak", "02/22/15, 03:41:11 AM", "NaN", "NaN"], ["433", "1.x Fix error reporting for status update/delete REST resource (#422).", null, "tbak", "02/23/15, 07:58:51 PM", "NaN", "NaN"], ["434", "1.x Cache string values to reduce memory footprint.", null, "tbak", "02/25/15, 07:45:31 PM", "NaN", "NaN"], ["435", "2.x Implement custom EurekaInterestClient for Eureka Read server.", null, "tbak", "02/25/15, 05:30:18 PM", "The custom client uses single subscription (fullRegistryFetch), and propagates properly channel level buffer markers to interest subscribers.", "NaN"], ["436", "2.x Changes to MultiSourcedDataHolder implementation", "David Liu", "qiangdavidliu", "02/25/15, 06:54:49 PM", "- updates for the same origin:name Sources replace each other regardless of source.id\n- deletes only execute when origin:name:id equals for the sources", "NaN"], ["437", "2.x upgrading rxnetty and spectator versions", "David Liu", "qiangdavidliu", "02/25/15, 07:28:23 PM", "NaN", "NaN"], ["438", "2.x PeriodicDataCenterInfoResolver ignores errors per resolve.", "David Liu", "qiangdavidliu", "02/26/15, 12:09:22 AM", "NaN", "NaN"], ["442", "2.x Eureka health status monitoring", null, "tbak", "02/27/15, 08:26:36 PM", "See issue #439", "NaN"], ["443", "2.x Configuration update to work properly in local environment.", null, "tbak", "02/27/15, 10:03:52 PM", "NaN", "NaN"], ["444", "2.x Client API refactor part 2 (creation of clients) for issue #409", "David Liu", "qiangdavidliu", "03/09/15, 08:50:56 PM", "Removed the combo EurekaClient and the two independent clients for registration and interest now each have their own builders.", "NaN"], ["445", "2.x Eureka WEB server with HTTP and WebSocket endpoints.", null, "tbak", "03/02/15, 07:05:00 PM", "NaN", "NaN"], ["446", "2.x Replication fix", "David Liu", "qiangdavidliu", "03/02/15, 09:51:06 PM", "- handler should subscribe to lifecycle and operation with same subscriber for retries\n- retryableChannelFactory merge internal channel op with lifecycle instead of independent subscribe", "NaN"], ["447", "1.x Upgrade to nebula 2.2.7", null, "tbak", "03/02/15, 10:40:17 PM", "NaN", "NaN"], ["451", "2.x Bug fix for issue #449 (missing/invalid batching delineation)", null, "tbak", "03/03/15, 10:06:44 PM", "NaN", "NaN"], ["452", "Fix bug #448", null, "tbak", "03/03/15, 11:37:24 PM", "Handle properly recoverable and non-recoverable errors.", "NaN"], ["454", "2.x Eureka 1.x backwards compatible API (query operations)", null, "tbak", "03/06/15, 10:43:19 PM", "NaN", "NaN"], ["456", "update dependency versions", null, "brharrington", "03/11/15, 05:18:16 AM", "The primary one that matters to me is ribbon. The older\nversion is still pulling in 'com.netflix.rxjava:rxjava-core'\nwhich conflicts with classes in 'io.reactivex:rxjava'.\n\nThis change also changes the aws dependency to only pull\nin the parts that are actually used by eureka client.", "NaN"], ["457", "2.x Adding basic randomisation to SelfClosingConnection", "David Liu", "qiangdavidliu", "03/12/15, 11:16:17 PM", "NaN", "NaN"], ["459", "1.x Wrapping RemoteRegionFetch in TimedSupervisorTask", "David Liu", "qiangdavidliu", "03/12/15, 10:13:04 PM", "Wrap around the TimedSupervisorTask for better reliability.\n\nThe remoteRegionFetchExecutor can have a max of 2 concurrent threads executing a remote region fetch.", "NaN"], ["460", "2.x Adding SecureVipInterest to Avro Schema + additional Schema tests", "David Liu", "qiangdavidliu", "03/13/15, 12:59:05 AM", "NaN", "NaN"], ["461", "2.x More Avro schema fixes", "David Liu", "qiangdavidliu", "03/13/15, 03:19:52 AM", "NaN", "NaN"], ["463", "2.x Minor renaming + adding some randomisation in the Ocelli LB Resolver", "David Liu", "qiangdavidliu", "03/13/15, 11:45:22 PM", "NaN", "NaN"], ["464", "2.x Use concatMap instead of flatMap for sending interest and replication messages", "David Liu", "qiangdavidliu", "03/16/15, 05:22:53 PM", "- use concatMap instead of flatMap for sending interest and replication messages\n- update channel retries to default at 1s instead of 500ms", "NaN"], ["465", "2.x bug fix: notification source was getting lost in InitStateHolder", "David Liu", "qiangdavidliu", "03/16/15, 08:26:02 PM", "NaN", "NaN"], ["466", "2.x Rx-fy Index onSubscribe to be tolerant to backpressure", "David Liu", "qiangdavidliu", "03/17/15, 01:34:12 AM", "NaN", "NaN"], ["468", "2.x minor fixes", "David Liu", "qiangdavidliu", "03/18/15, 06:18:02 AM", "Also reverting interestChannel and SenderReplicationChannel send to flatmap instead of concatMap. Added TODOs to re-address these once we rework the interest pipeline to properly address backpressure (github issue #467)", "NaN"], ["469", "2.x NotifyingInstanceInfoHolder eagerly promote updates from local source to snapshot if current snapshot is not from local source", "David Liu", "qiangdavidliu", "03/18/15, 06:38:31 AM", "This is done to fix the following race condition:\n1. Write Servers A and B replicate to each other\n2. Instance X registers with server A (A -> X local, B -> X replicated)\n3. Instance X registration channel close and reconnect to server B\n3a. A put X local into eviction queue\n3b. B put X replicated into eviction queue\n4. X register an unchanged instanceInfo to server B\n4a. B's holder add X as a second copy as the original replicated copy is yet to be evicted\n4b. Because the B holder's copies diff to empty delta, a CN with source local is never published\n5. B's senderReplicationChannel disconnects and reconnects to A\n5a. B's initState never sees the new X local as the CN is never published, resulting in X\nnot replicating to server A.", "NaN"], ["470", "1.x Use Jackson JSON serializer instead of XStream to improve serialization performance/memory usage.", null, "tbak", "05/12/15, 08:43:21 PM", "XML serialization is still done by XStream.", "NaN"], ["471", "Updating to new version of nebula.netflixoss", "Rob Spieldenner", "rspieldenner", "03/19/15, 08:52:14 PM", "NaN", "NaN"], ["472", "2.x InstanceInfo encoding efficiency measurement tool.", null, "tbak", "03/19/15, 11:30:40 PM", "NaN", "NaN"], ["473", "2.x Eureka 1.x backwards compatible API with delta fetch support.", null, "tbak", "03/25/15, 03:02:47 AM", "NaN", "NaN"], ["474", "2.x Updating runCluster config in testkit build.gradle", "David Liu", "qiangdavidliu", "03/20/15, 06:46:13 PM", "NaN", "NaN"], ["478", "2.x code cleanup", "David Liu", "qiangdavidliu", "03/20/15, 09:38:39 PM", "PauseableSubject was created sometime ago as a replacement for NotificationsSubject (code equivalent), but some classes have not been migrated to use the new version. Removing NotificationsSubject and migrating all necessary classes.", "NaN"], ["479", "2.x DnsResolver query dns on-demand per resolve()", "David Liu", "qiangdavidliu", "03/24/15, 12:23:36 AM", "DnsResolver query dns on-demand per resolve() call instead of maintaining a background task to constantly poll dns.", "NaN"], ["481", "2.x Complementary change to pull #469 for the removal case.", "David Liu", "qiangdavidliu", "03/24/15, 01:54:02 AM", "NaN", "NaN"], ["483", "1.x Make TimedSupervisorTask thread pool configurable for remote region replication", null, "tbak", "03/24/15, 10:34:18 PM", "Add thread pool level gauge for observing current thread usage level.", "NaN"], ["486", "1.x Pin client to the redirected address.", null, "tbak", "04/08/15, 06:19:21 PM", "Initial implementation for discussion. Unit tests missing.", "NaN"], ["487", "2.x lighter eureka client for server resolver", "David Liu", "qiangdavidliu", "03/27/15, 06:32:35 PM", "#475", "NaN"], ["488", "Consolidating client APIs with class Eureka as an entry point.", "David Liu", "qiangdavidliu", "03/30/15, 09:37:59 PM", "NaN", "NaN"], ["489", "2.x Update Karyon admin integration  in the embedded server.", null, "tbak", "03/30/15, 05:12:37 PM", "NaN", "NaN"], ["490", "2.x bridging fixes", "David Liu", "qiangdavidliu", "03/31/15, 06:12:46 AM", "NaN", "NaN"], ["491", "2.x Adding additional fields to AWSDataCenterInfo", "David Liu", "qiangdavidliu", "04/03/15, 09:01:45 PM", "NaN", "NaN"], ["492", "2.x Upgrade rxjava and karyon versions", "David Liu", "qiangdavidliu", "04/06/15, 09:15:46 PM", "NaN", "NaN"], ["494", "Add eureka2-eureka1-support module", null, "tbak", "04/09/15, 07:17:32 PM", "Add eureka2-eureka1-support module to help bridge existing\nEureka1 clients to Eureka2 without adopting Eureka2 client API yet.", "NaN"], ["495", "2.x Shade/relocate avro to avoid conflicts when clients use a different version of it.", null, "tbak", "04/09/15, 07:50:18 PM", "NaN", "NaN"], ["496", "2.x update karyon version", "David Liu", "qiangdavidliu", "04/09/15, 08:50:03 PM", "NaN", "NaN"], ["497", "Adding transport protocol versioning", "David Liu", "qiangdavidliu", "04/10/15, 08:53:55 PM", "- protocol version encoded as an additional byte\n- server handlers encode replies dynamically based on protocol version\n  of inbound request", "NaN"], ["499", "2.x minor updates", null, "tbak", "04/21/15, 09:34:05 PM", "NaN", "NaN"], ["500", "2.x Implement feature #447 (Write Server Initial Sync).", null, "tbak", "04/30/15, 09:20:25 PM", "NaN", "NaN"], ["503", "2.x Use a provider to lazily init ConnectionHandler for the TcpServers", "David Liu", "qiangdavidliu", "04/30/15, 11:58:45 PM", "NaN", "NaN"], ["504", "2x shade ocelli", "David Liu", "qiangdavidliu", "05/01/15, 09:38:46 PM", "Branch name is mis-leading, as rxnetty was not actually easily shadeable. Users of eureka2-client will need to to do the shade.", "NaN"], ["506", "2.x Removing dependency on Ocelli from the client (for now)", "David Liu", "qiangdavidliu", "05/04/15, 07:12:32 PM", "Removing dependency on Ocelli (for now, until we are ready to integrate with it and use it's more advanced features). The renamed RoundRobinServerResolver functionally does the same thing as before with an internal round robin impl.", "NaN"], ["507", "2.x Safer implementation of ack handling + pending ack queue size monitor.", null, "tbak", "05/04/15, 10:23:33 PM", "Bug fix in EurekaHealthStatusModule module.", "NaN"], ["508", "2.x Provide a shaded eureka2-client(-shaded) that shades avro and rxnetty dependencies", "David Liu", "qiangdavidliu", "05/07/15, 05:09:15 PM", "NaN", "NaN"], ["509", "2.x Improvements in transport + performance/verification tool.", null, "tbak", "05/08/15, 07:38:58 PM", "NaN", "NaN"], ["510", "2.x Adding eureka2-eureka1-support to eureka2-client-shaded jar", "David Liu", "qiangdavidliu", "05/07/15, 10:32:47 PM", "NaN", "NaN"], ["511", "Fix typos in per-host config keys.", "Toby", "qu1j0t3", "05/12/15, 04:07:55 PM", "NaN", "NaN"], ["513", "2.x Simplify SerializedTaskInvoker implementation.", null, "tbak", "05/14/15, 03:18:46 PM", "NaN", "NaN"], ["514", "1.x Remove dependency to ribbon.", null, "tbak", "05/14/15, 10:31:51 PM", "Dependency to ribbon existed due to two utility classes providing servo\nmetrics for apache httpclient connection.", "NaN"], ["515", "Adding EurekaModule for DI support + Example cleanup", "David Liu", "qiangdavidliu", "05/14/15, 06:47:39 PM", "- EurekaModule for DI support\n- Added EurekaClient interface for DiscoveryClient\n- cleaned up examples and moved examples to eureka-examples", "NaN"], ["516", "2.x Initial interface commits of override service classes", "David Liu", "qiangdavidliu", "05/15/15, 09:41:00 PM", "NaN", "NaN"], ["517", "2.x refactoring the overrides interface", "David Liu", "qiangdavidliu", "05/15/15, 09:56:00 PM", "NaN", "NaN"], ["518", "2.x Fix memory leak in BatchAwareIndexRegistry and better SerializedTaskInvoker metrics.", null, "tbak", "05/15/15, 10:16:04 PM", "NaN", "NaN"], ["519", "2.x Memory leak fix in Index.", null, "tbak", "05/18/15, 05:52:33 PM", "NaN", "NaN"], ["520", "singleton scoping EurekaConfigBasedInstanceInfoProvider", "David Liu", "qiangdavidliu", "05/19/15, 01:13:44 AM", "bug fix: Re-adding @LazySingleton to EurekaInstanceInfoProvider to ensure InstanceInfo singleton for injection into DiscoveryClient and ApplicationInfoManager.", "NaN"], ["521", "Destroying jersey cleaner thread on DiscoveryClient shutdown", "Jeremy D. Young", "jeremydyoung", "05/19/15, 06:29:37 PM", "When reloading or shutting down the context in Tomcat 8 we get a warning that there was a thread created but not cleaned up:\n\n```\nWARNING: The web application [example] appears to have started a thread named [Eureka-JerseyClient-Conn-Cleaner2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\n sun.misc.Unsafe.park(Native Method)\n java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)\n java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)\n java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)\n java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)\n java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1067)\n java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1127)\n java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n java.lang.Thread.run(Thread.java:745)\n```\n\nEvidence for this being a problem can be found in the Spring Cloud project:\n[EurekaDiscoveryClientConfiguration.java](https://github.com/spring-cloud/spring-cloud-netflix/blob/master/spring-cloud-netflix-core/src/main/java/org/springframework/cloud/netflix/eureka/EurekaDiscoveryClientConfiguration.java)\n\nMy suggested solution is to check for a discoveryJerseyClient object, and clean it up during the DiscoveryClient shutdown method.\n\nI have provided a test that demonstrates the thread living beyond the shutdown command in it's current state.", "NaN"], ["522", "Example update", "David Liu", "qiangdavidliu", "05/19/15, 07:07:07 PM", "NaN", "NaN"], ["523", "make constructor public so other DI systems can create instances", "Spencer Gibb", "spencergibb", "06/05/15, 08:42:16 PM", "NaN", "NaN"], ["525", "2.x Fix dashboard/bridge health check. Add integration test to verify that.", null, "tbak", "05/25/15, 02:58:28 AM", " Dashboard/bridge do not provide yet any health check provider, so observable\n stream of server status never emitted any value. In this change, if there are no\n providers bound, a default one is registered returning always Status.UP.", "NaN"], ["526", "1.x Reformat code.", null, "tbak", "05/26/15, 11:35:22 PM", "NaN", "NaN"], ["527", "Cross account describe ASGs", "Albert Many\u00e0", "amanya", "06/05/15, 09:26:55 PM", "The motivation of this patch is to make Eureka capable of knowing the state of auto scaling groups even if they are from microservices running in accounts other than the one where Eureka is running.\n\nIn that case, it will do a a cross-account assume role to get permission to describe the ASGs.\n\n[Here](http://docs.aws.amazon.com/IAM/latest/UserGuide/roles-walkthrough-crossacct.html) is a walkthrough from Amazon that explains how to setup the cross-account IAM role delegation: \n\nThe role must be called `ListAutoScalingGroups` and the policy must be like this:\n\n```\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Action\": [\n                \"autoscaling:DescribeAutoScalingGroups\"\n            ],\n            \"Effect\": \"Allow\",\n            \"Resource\": \"*\"\n        }\n    ]\n} \n```", "NaN"], ["528", "Adding additional fields to deser for Jackson codec", "David Liu", "qiangdavidliu", "05/29/15, 06:13:59 PM", "The serializer serializes all @ Auto annotated fields, but the Jackson deser ignores a couple on the deser.", "NaN"], ["530", "Adding the ability to execute on-demand updates to the eureka server", "David Liu", "qiangdavidliu", "06/02/15, 11:32:41 PM", "Adding the ability to execute on-demand updates to the eureka server. Current set up is triggered by changes to ApplicationInfoManager.setInstanceStatus(). This capability can be turned on/off via eureka.shouldOnDemandUpdateStatusChange.", "NaN"], ["532", "2.x Refactorings/reactive registry", null, "tbak", "06/05/15, 05:33:13 PM", "NaN", "NaN"], ["534", "2.x Registry related unit tests/bug fixes.", null, "tbak", "06/05/15, 09:51:54 PM", "NaN", "NaN"], ["535", "2.x Refactorings/reactive registry", "David Liu", "qiangdavidliu", "06/08/15, 05:43:07 PM", "NaN", "NaN"], ["537", "Various fixes (specifics in commit log)", "David Liu", "qiangdavidliu", "06/08/15, 06:03:13 PM", "Also fixes for issues #531 and #533", "NaN"], ["538", "2.x Refactorings/reactive registry", null, "tbak", "06/08/15, 07:03:21 PM", "NaN", "NaN"], ["540", "2.x Integrate server RegistrationChannel with new registry API.", null, "tbak", "06/15/15, 09:42:38 PM", "NaN", "NaN"], ["542", "1.x batched replication refactoring", null, "tbak", "06/30/15, 06:12:36 PM", "NaN", "NaN"], ["543", "AwsAsgUtil fixes", "David Liu", "qiangdavidliu", "06/10/15, 06:00:47 PM", "- async load data from the asgCache for isASGEnabled queries.\n- avoid using expensive getASGAccount(asgName) if possible.", "NaN"], ["544", "Adding config for use (or not to use) the readonly cache in ResponseCache", "David Liu", "qiangdavidliu", "06/11/15, 05:32:01 PM", "NaN", "NaN"], ["546", "2.x Reorganize integration tests structure.", null, "tbak", "06/12/15, 05:01:09 PM", "NaN", "NaN"], ["547", "2.x Refactorings/reactive registry", "David Liu", "qiangdavidliu", "06/13/15, 11:28:55 PM", "- Clean up extra use of a subject in the initStateHolder\n- Adding temporary fix for client side batching issue (too eagerly emit BufferMarker when local cache is empty but data is transmitted from server side).", "NaN"], ["548", "2.x Adding interest channel eviction mechanism + tests.", "David Liu", "qiangdavidliu", "06/15/15, 07:22:01 PM", "NaN", "NaN"], ["549", "Capture \"CacheRefreshed\" event", "Bertrand Renuart", "brenuart", "06/15/15, 09:49:10 PM", "The objective is to capture \"cache refreshed\" events. A few comments (following discussion in https://github.com/Netflix/eureka/issues/545):\n\n1/ Added protected methods invoked when remote status is changed and cache is refreshed. They  are currently responsible to fire the appropriate event to the EventBus if one is available.\nThey are intentionally made protected so subclasses of the `DiscoveryClient` can override them if they need more advanced behaviour like:\n- implement the Observer pattern and invoke registered listeners/observers\n- compute actual changes when cache is refreshed\n- etc\n\n2/ I could create a `CacheRefreshedEvent` similar to the existing `StatusChangedEvent` and fire it every time the cache is refreshed. However, I'm not sure about the implications this additional event may have on components currently listening to the only StatusChangedEvent... What is your opinion?\n\n3/ The `FETCH_REGISTRY_TIMER` includes the time taken by the following bloc of code:\n\n```\n private boolean fetchRegistry(boolean forceFullRegistryFetch) {\n     try {\n        ....\n        // Notify about cache refreshed before updating the instance remote status\n        onCacheRefreshed();\n\n        // Update remote status based on refreshed data held in the cache\n        updateInstanceRemoteStatus();\n   } catch(Throwable t) {\n   ....\n   }\u00a0finally {\n       tracer.stop();\n```\n\nThe tracer includes the time it takes to notify listening parties. Should't we stop the timer before?\n\n4/ I could have introduced the `Observer` pattern directly. But then I think it should have been done for both the `StatusChangedEvent` AND the newly introduced `CacheRefreshedEvent`...\nThey new protected methods are good starting point to build the Observer pattern if needed.", "NaN"], ["550", "2.x Minor update to batching integration test.", null, "tbak", "06/15/15, 06:39:16 PM", "NaN", "NaN"], ["551", "Clean up of static usage of ApplicationInfoManager in DiscoveryClient", "David Liu", "qiangdavidliu", "06/16/15, 06:06:05 PM", "Also added tests for eventBus events", "NaN"], ["552", "2.x Adding buffer hint based eviction for replication", "David Liu", "qiangdavidliu", "06/18/15, 12:26:40 AM", "Also done:\n- renaming occurrences of \"discovery\" to \"interest\" in schema\n- removed RegisterCopy and UnregisterCopy from replication protocol. Using equiv from interest protocol instead\n- replication protocol also include StreamStateUpdate now\n- Clean up ReplicationChannel interface\n- Clean up misleading usages of \"discovery\" to be replaced with \"interest\"\n- Clean up naming confusion with ReplicationHandler (now ReplicationSender) and TcpReplicationHandler", "NaN"], ["553", "2.x integration tests", null, "tbak", "06/18/15, 02:43:11 PM", "NaN", "NaN"], ["555", "Refactor so other DI Systems can extend eureka.", "Spencer Gibb", "spencergibb", "07/16/15, 11:57:38 PM", "Make EurekaJacksonCodec more inline with Converters with public static classes to extend.\nMake EurekaJacksonCodec.INSTANCE mutable.\nAdd get/set to DiscoveryClientOptionalArgs.\n\nI'd rather not have a static instance in EurekaJacksonCodec, suggestions welcome.", "NaN"], ["556", "Fixing a flaky unit test", "David Liu", "qiangdavidliu", "06/24/15, 08:00:07 PM", "NaN", "NaN"], ["557", "fixed package name of serializer", null, "kukgini", "06/25/15, 12:24:10 AM", "StatusInfo's serializer should be 'com.netflix.discovery...' instead of\n'com.netflix.eureka...'", "NaN"], ["558", "2.x Merging multiple updates into reactive_registry refactoring branch", null, "tbak", "06/18/15, 07:57:53 PM", "NaN", "NaN"], ["559", "2.x reactive registry and service overrides", null, "tbak", "06/18/15, 08:50:28 PM", "NaN", "NaN"], ["560", "2.x Updating to Governator 1.7 and archaius2.", "David Liu", "qiangdavidliu", "06/23/15, 09:50:10 PM", "- dependency updates\n- server refactoring to be inline with governator 1.7", "NaN"], ["562", "2.x netrouter update to better deal with asynchronous events.", null, "tbak", "06/23/15, 09:26:34 PM", "NaN", "NaN"], ["563", "Adding configurable awsAsg cache expiry time", "David Liu", "qiangdavidliu", "06/25/15, 06:50:44 PM", "NaN", "NaN"], ["564", "2.x ASG status overrides + DI refactorings", null, "tbak", "06/29/15, 09:44:39 PM", "NaN", "NaN"], ["565", "2.x (WIP) s3 override registry for OOS status", "David Liu", "qiangdavidliu", "07/01/15, 08:32:48 PM", "Still WIP, need to integrate with #564 before merging.", "NaN"], ["566", "2.x Migrate to archaius2 configuration proxies.", null, "tbak", "06/30/15, 08:45:16 PM", "NaN", "NaN"], ["567", "1.x New Jackson JSON/XML serializer.", null, "tbak", "09/02/15, 04:23:19 PM", "NaN", "NaN"], ["568", "2.x Moving selfInfoResolvers to their own package.", "David Liu", "qiangdavidliu", "07/02/15, 02:00:20 AM", "Fix duplicate write server self registration.\nFix ServerIdentity in ChangeNotifications.", "NaN"], ["569", "2.x More deterministic integ tests", "David Liu", "qiangdavidliu", "07/02/15, 06:45:12 AM", "NaN", "NaN"], ["570", "2.x unit/integration test updates", null, "tbak", "07/02/15, 04:38:03 PM", "NaN", "NaN"], ["571", "2.x merge admin UI tabs + connect health SelfInfoResolver in write cluster", null, "tbak", "07/02/15, 06:31:21 PM", "NaN", "NaN"], ["572", "2.x Minor fixes", "David Liu", "qiangdavidliu", "07/02/15, 10:05:27 PM", "NaN", "NaN"], ["573", "2.x Removing extraneous eureka1 config file in bridge server", "David Liu", "qiangdavidliu", "07/03/15, 07:29:17 AM", "NaN", "NaN"], ["574", "2.x Fix connection leak in RxHttpReverseProxy", null, "tbak", "07/05/15, 05:11:29 AM", "NaN", "NaN"], ["576", "2.x In AbstractPatternInterest the compiled pattern should not be part of equals", "David Liu", "qiangdavidliu", "07/08/15, 12:42:20 AM", "NaN", "NaN"], ["577", "2.x Adding additional debugging", "David Liu", "qiangdavidliu", "07/08/15, 07:16:58 AM", "NaN", "NaN"], ["578", "2.x Eureka CLI refactoring", null, "tbak", "07/08/15, 07:59:55 PM", "NaN", "NaN"], ["579", "2.x Replace Eureka2 ext loader with governator profile loader mechanism.", null, "tbak", "07/09/15, 10:38:23 PM", "Additionally:\n- further configuration cleanup\n- more flexibility in building EurekaDeployment with extension modules\n- supporting configuration override in EurekaDeployment builder", "NaN"], ["580", "2.x Test/TODOs cleanup", null, "tbak", "07/09/15, 11:52:50 PM", "NaN", "NaN"], ["581", "2.x Remove legacy eviction code.", null, "tbak", "07/10/15, 12:02:09 AM", "NaN", "NaN"], ["582", "2.x Server module cleanup", "David Liu", "qiangdavidliu", "07/10/15, 11:43:12 PM", "NaN", "NaN"], ["583", "2.x Making the module list in the runners more modifiable", "David Liu", "qiangdavidliu", "07/12/15, 09:20:52 PM", "NaN", "NaN"], ["584", "2.x Adding health status to bridge server self info resolver\t", "David Liu", "qiangdavidliu", "07/12/15, 09:50:42 PM", "NaN", "NaN"], ["585", "2.x fix typo that used write module in bridge server runner", "David Liu", "qiangdavidliu", "07/13/15, 12:05:05 AM", "NaN", "NaN"], ["586", "2.x Apply refactor work to dashboard server + binding some components as eagerSingletons", "David Liu", "qiangdavidliu", "07/13/15, 06:37:58 AM", "NaN", "NaN"], ["587", "2.x various fixes", "David Liu", "qiangdavidliu", "07/16/15, 01:40:16 AM", "- use karyon3 for consolidated config loading across modules and extModules\n- switch kafka dep to kafka-clients and other dependency clean ups\n- update eureka2-kafka to use latest archaius for config loading\n- update gradle runners\n- change admin eureka2 view to read directly from registry", "NaN"], ["588", "Add the ability to use additional Jersey ClientFilters in the DiscoveryClient", "Will Tran", "william-tran", "07/20/15, 08:38:39 PM", "So we can do things like add Authorization headers and authenticate those on the Eureka Server", "NaN"], ["589", "2.x AbstractServer should not expose method to access sourced registry", "David Liu", "qiangdavidliu", "07/16/15, 11:44:55 PM", "NaN", "NaN"], ["591", "Features/jackson codec ng integration with the client", "David Liu", "qiangdavidliu", "07/23/15, 02:04:40 AM", "NaN", "NaN"], ["592", "Binding exception due EurekaInstanceConfig was already configured in \u2026", "Milan Baran", "xbaran", "07/23/15, 10:27:10 PM", "ExampleEurekaGovernatedService does not work because a wrong guice binding. \n\nThe EurekaInstanceConfig is already configured in EurekaModule and also in anonymous AbstractModule. So, it causes guice to throw already configured exception. I just override EurekaModule with AbstractModule via Modules.override() method. ", "NaN"], ["593", "Better error handling", "David Liu", "qiangdavidliu", "07/23/15, 05:43:54 PM", "NaN", "NaN"], ["594", "Updating dependencies to jersey 1.19 and governator 1.7.5.", "David Liu", "qiangdavidliu", "07/23/15, 11:31:32 PM", "Also changing eureka-client dependencies to just guice 4 and governator-annotations.", "NaN"], ["595", "1.x fix an expensive method call on the critical path", "David Liu", "qiangdavidliu", "07/27/15, 04:12:28 PM", "NaN", "NaN"], ["596", "Standardizing DiscoveryClient's optional configs", "David Liu", "qiangdavidliu", "07/27/15, 06:15:13 PM", "NaN", "NaN"], ["599", "2.x various minor fixes and improvements", "David Liu", "qiangdavidliu", "07/29/15, 11:00:25 PM", "NaN", "NaN"], ["601", "Remove unused reference to DynamicPropertyFactory", null, "elandau", "08/04/15, 05:45:18 PM", "This triggers Archaius static initialization, which is not necessary here.", "NaN"], ["603", "2.x Minor fixes.", null, "tbak", "08/03/15, 08:13:35 PM", "NaN", "NaN"], ["604", "2.x Eureka1 bridge refactoring", null, "tbak", "08/04/15, 06:13:48 PM", "NaN", "NaN"], ["605", "2.x Fix bug in kafka audit service.", null, "tbak", "08/04/15, 10:03:31 PM", "NaN", "NaN"], ["606", "Adding mini jackson deserialization to the codec sets", "David Liu", "qiangdavidliu", "08/05/15, 12:49:27 AM", "- Adding mini jackson deserialization to the codec sets\n- sync with master", "NaN"], ["607", "2.x Fix kafka value serializer.", null, "tbak", "08/05/15, 03:38:39 PM", "NaN", "NaN"], ["608", "2.x Fix resource leak in kafka service.", null, "tbak", "08/05/15, 04:12:31 PM", "NaN", "NaN"], ["610", "2.x bug fix + storing extended ServicePort information in Eureka1 metadata", null, "tbak", "08/05/15, 11:24:30 PM", "NaN", "NaN"], ["611", "2.x BootstrapClusterAddresses property should be optional.", null, "tbak", "08/05/15, 11:38:23 PM", "NaN", "NaN"], ["612", "Adding server side capability to return compact json data", "David Liu", "qiangdavidliu", "08/06/15, 08:24:20 PM", "NaN", "NaN"], ["613", "2.x Add more features to EurekaCLI + fix log level in InterestChannelImpl", null, "tbak", "08/06/15, 08:51:53 PM", "NaN", "NaN"], ["614", "New sub-project to configure eureka using archaius2", null, "elandau", "08/10/15, 06:17:02 PM", "NaN", "NaN"], ["615", "Adding eureka accept to the vip resources", "David Liu", "qiangdavidliu", "08/07/15, 09:15:30 PM", "NaN", "NaN"], ["616", "2.x Diagnostic REST API - initial version", null, "tbak", "08/14/15, 11:27:06 PM", "NaN", "NaN"], ["619", "2.x REST API extension", null, "tbak", "08/19/15, 06:08:35 PM", "NaN", "NaN"], ["621", "2.x Integrate eureka-ui WEB UI with write server", null, "tbak", "08/20/15, 07:40:31 PM", "eureka-ui is SNAPSHOT dependency until first RC is available.", "NaN"], ["622", "2.x Registry update that protects merge subject from being terminated", null, "tbak", "08/20/15, 10:11:36 PM", "by onError emitted by a registration observable.", "NaN"], ["623", "1.x multiple updates", null, "tbak", "08/25/15, 03:30:34 PM", "NaN", "NaN"], ["626", "[WIP] Major refactor of the registry", "David Liu", "qiangdavidliu", "09/02/15, 06:35:35 PM", "NaN", "NaN"], ["627", "1.x Additional metrics for client side heartbeat/registry staleness monitoring", null, "tbak", "09/01/15, 05:50:34 PM", "NaN", "NaN"], ["629", "1.x Create new category for registration related metrics.", null, "tbak", "09/01/15, 09:53:19 PM", "NaN", "NaN"], ["630", "EurekaNameSpace not used in eureka.region", "Jaume Pinyol Vilardell", "jaume-pinyol", "09/15/15, 10:39:51 PM", "Hello,\n\nI've seen that the eureka.region property in DefaultEurekaClientConfig.class it's not tied to the namespace, and when using a different namespace there is the need to hardcode this property.\n\nRegards,\nJaume", "NaN"], ["631", "1.x Update lease duration dynamically if changed", null, "tbak", "09/02/15, 09:27:39 PM", "NaN", "NaN"], ["632", "2.x readModule should bind fullFetchInterestClient", "David Liu", "qiangdavidliu", "09/03/15, 01:15:29 AM", "NaN", "NaN"], ["633", "2.x Moving classes around to more appropriate packages.", "David Liu", "qiangdavidliu", "09/03/15, 11:08:26 PM", "no code changes other than import changes and changes in .avdl schemas", "NaN"], ["634", "Make XML dependencies optional in the client", null, "tbak", "09/08/15, 11:00:05 PM", "NaN", "NaN"], ["635", "Adding some extensibility to codecs for client and server", "David Liu", "qiangdavidliu", "09/11/15, 11:47:38 PM", "Also adding content-type for gziped responses", "NaN"], ["636", "Making serverCodecs public and using a builder instead", "David Liu", "qiangdavidliu", "09/12/15, 01:06:22 AM", "NaN", "NaN"], ["637", "fix a flaky test", "David Liu", "qiangdavidliu", "09/14/15, 10:19:49 PM", "NaN", "NaN"], ["639", "Properly unregister Servo monitors on shutdown", "Bertrand Renuart", "brenuart", "09/14/15, 11:11:25 PM", "Fix for https://github.com/Netflix/eureka/issues/638", "NaN"], ["640", "1.x Bug fixes and minor cleanups", null, "tbak", "09/15/15, 11:04:58 PM", "NaN", "NaN"], ["642", "1.x JSON encoding fix: do not unwrap single element arrays", null, "tbak", "09/16/15, 10:59:54 PM", "NaN", "NaN"], ["643", "1.x Better separation of new JSON and XML serializers", null, "tbak", "09/16/15, 11:30:51 PM", "so jackson XML specific annotations are never loaded when using JSON codecs.\nThis is required, as all jackson XML dependencies are marked as provided in\ngradle build, and are not included by default.", "NaN"], ["649", "Decoupling the id of InstanceInfo from the id of the DataCenterInfo.", "David Liu", "qiangdavidliu", "09/23/15, 07:08:37 PM", "For compatibility ease, reusing the deprecated \"sid\" (serviceId) field.\nAlso some minor reformatting.", "NaN"], ["650", "1.x Encode @class entry in InstanceInfo.metadata for backward compatibility", null, "tbak", "09/23/15, 09:12:21 PM", "NaN", "NaN"], ["651", "1.x Better error handling for invalid content in request", null, "tbak", "09/24/15, 03:14:36 PM", "issue: https://github.com/Netflix/eureka/issues/647", "NaN"], ["652", "Feature/di friendly server", "David Liu", "qiangdavidliu", "09/24/15, 05:45:55 PM", "NaN", "NaN"], ["653", "Reverting use of sid in #649 and introduce a new \"instanceId\" field instead", "David Liu", "qiangdavidliu", "09/24/15, 08:24:44 PM", "NaN", "NaN"], ["654", "Feature/di friendly server", "David Liu", "qiangdavidliu", "09/25/15, 04:08:10 AM", "sync with master", "NaN"], ["657", "1.x Refactorings/replication batcher", null, "tbak", "10/01/15, 08:45:32 PM", "A replacement for blitz4j batcher. A noticeable improvement over the latter one is request collapsing (removing old pending task, when a new one is submitted).", "NaN"], ["658", "2.x fix metadata map copy in InstanceInfo.Builder", "David Liu", "qiangdavidliu", "09/29/15, 08:16:18 AM", "NaN", "NaN"], ["660", "1.x Eviction mechanism update", null, "tbak", "09/29/15, 09:28:27 PM", "Experimental feature with no cancellation replication for evicted items.\nImposing additional eviction constraints, based on registry size not\nreceived heartbeats.", "NaN"], ["661", "Adding time based compensation to eviction processing if the eviction task  was delayed", "David Liu", "qiangdavidliu", "09/30/15, 05:20:18 PM", "NaN", "NaN"], ["662", "add route53 binding alternative to eip", "Arnaud Roger", "aroger-r7", "10/01/15, 01:12:11 AM", "rebase route53 change https://github.com/Netflix/eureka/pull/659\nto di-friendly-server", "NaN"], ["664", "Minor edit to remove some references to statics.", "David Liu", "qiangdavidliu", "10/01/15, 01:38:04 AM", "NaN", "NaN"], ["665", "1.x Refactorings/transport", null, "tbak", "10/05/15, 05:17:53 AM", "NaN", "NaN"], ["666", "Sync di-friendly-server branch with master", "David Liu", "qiangdavidliu", "10/02/15, 07:19:28 AM", "NaN", "NaN"], ["667", "Feature/di friendly server", "David Liu", "qiangdavidliu", "10/02/15, 09:34:29 PM", "Server side refactoring to be more DI friendly:\n- Adding some (rudimentary) interfaces as needed\n- Adding DI annotations as needed\n- Code refactoring and clean up\n\nInitial eureka-server-karyon3 sub project for karyon3 integration\n\n[from @aroger-r7] add route53 binding alternative to eip", "NaN"], ["668", "1.x Fix bug in PeerEurekaNode, that did not check for missing LeaseInfo", null, "tbak", "10/02/15, 05:08:41 PM", "NaN", "NaN"], ["669", "Fix NPE in StatusResource.isReplicaAvailable", "Spencer Gibb", "spencergibb", "10/02/15, 06:11:10 PM", "We see this when we're running single nodes, more of a support issue than a problem. We keep getting people asking about it.\n\n```\n2015-10-02 11:35:16.760 ERROR 3755 --- [nio-8761-exec-4] c.n.eureka.resources.StatusResource      : Could not determine if the replica is available\njava.lang.NullPointerException: null\n    at com.netflix.eureka.resources.StatusResource.isReplicaAvailable(StatusResource.java:87) [5da40e7f691eb25c4b46f56115ec929776e850fc-eureka-core-1.2.5.jar:1.2.5]\n    at com.netflix.eureka.resources.StatusResource.getStatusInfo(StatusResource.java:67) [5da40e7f691eb25c4b46f56115ec929776e850fc-eureka-core-1.2.5.jar:1.2.5]\n    at org.springframework.cloud.netflix.eureka.server.EurekaController.status(EurekaController.java:68) [spring-cloud-netflix-eureka-server-1.1.0.BUILD-SNAPSHOT.jar!/:1.1.0.BUILD-SNAPSHOT]\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_05]\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_05]\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_05]\n    at java.lang.reflect.Method.invoke(Method.java:483) ~[na:1.8.0_05]\n    at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:221) [spring-web-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]\n    at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137) [spring-web-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]\n    at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:111) [spring-webmvc-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]\n    at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:806) [spring-webmvc-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]\n    at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:729) [spring-webmvc-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]\n    at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) [spring-webmvc-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]\n    at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959) [spring-webmvc-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]\n    at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893) [spring-webmvc-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]\n    at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) [spring-webmvc-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]\n    at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861) [spring-webmvc-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:622) [tomcat-embed-core-8.0.26.jar!/:8.0.26]\n    at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) [spring-webmvc-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:729) [tomcat-embed-core-8.0.26.jar!/:8.0.26]\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291) [tomcat-embed-core-8.0.26.jar!/:8.0.26]\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) [tomcat-embed-core-8.0.26.jar!/:8.0.26]\n    at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-embed-websocket-8.0.26.jar!/:8.0.26]\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239) [tomcat-embed-core-8.0.26.jar!/:8.0.26]\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) [tomcat-embed-core-8.0.26.jar!/:8.0.26]\n    at org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration$ApplicationContextHeaderFilter.doFilterInternal(EndpointWebMvcAutoConfiguration.java:249) [spring-boot-actuator-1.3.0.BUILD-SNAPSHOT.jar!/:1.3.0.BUILD-SNAPSHOT]\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239) [tomcat-embed-core-8.0.26.jar!/:8.0.26]\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) [tomcat-embed-core-8.0.26.jar!/:8.0.26]\n    at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:102) [spring-boot-actuator-1.3.0.BUILD-SNAPSHOT.jar!/:1.3.0.BUILD-SNAPSHOT]\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239) [tomcat-embed-core-8.0.26.jar!/:8.0.26]\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) [tomcat-embed-core-8.0.26.jar!/:8.0.26]\n    at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87) [spring-web-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239) [tomcat-embed-core-8.0.26.jar!/:8.0.26]\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) [tomcat-embed-core-8.0.26.jar!/:8.0.26]\n    at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77) [spring-web-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239) [tomcat-embed-core-8.0.26.jar!/:8.0.26]\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) [tomcat-embed-core-8.0.26.jar!/:8.0.26]\n    at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:85) [spring-web-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239) [tomcat-embed-core-8.0.26.jar!/:8.0.26]\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) [tomcat-embed-core-8.0.26.jar!/:8.0.26]\n    at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:93) [spring-boot-actuator-1.3.0.BUILD-SNAPSHOT.jar!/:1.3.0.BUILD-SNAPSHOT]\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.1.RELEASE.jar!/:4.2.1.RELEASE]\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239) [tomcat-embed-core-8.0.26.jar!/:8.0.26]\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206) [tomcat-embed-core-8.0.26.jar!/:8.0.26]\n    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:219) [tomcat-embed-core-8.0.26.jar!/:8.0.26]\n    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106) [tomcat-embed-core-8.0.26.jar!/:8.0.26]\n    at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502) [tomcat-embed-core-8.0.26.jar!/:8.0.26]\n    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142) [tomcat-embed-core-8.0.26.jar!/:8.0.26]\n    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.0.26.jar!/:8.0.26]\n    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88) [tomcat-embed-core-8.0.26.jar!/:8.0.26]\n    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:518) [tomcat-embed-core-8.0.26.jar!/:8.0.26]\n    at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1091) [tomcat-embed-core-8.0.26.jar!/:8.0.26]\n    at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:673) [tomcat-embed-core-8.0.26.jar!/:8.0.26]\n    at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1526) [tomcat-embed-core-8.0.26.jar!/:8.0.26]\n    at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1482) [tomcat-embed-core-8.0.26.jar!/:8.0.26]\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_05]\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_05]\n    at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.0.26.jar!/:8.0.26]\n    at java.lang.Thread.run(Thread.java:745) [na:1.8.0_05]\n```", "NaN"], ["670", "Back-porting fix #669 to new class in feature branch", "David Liu", "qiangdavidliu", "10/02/15, 06:25:50 PM", "NaN", "NaN"], ["671", "Feature/di friendly server", "David Liu", "qiangdavidliu", "10/02/15, 09:09:47 PM", "Sync with master.\nUpdating to governator 1.10.4", "NaN"], ["673", "1.x Set jdk=1.8 in .netflixoss to get proper JDK in cloudbees jenkins job.", null, "tbak", "10/05/15, 06:07:01 PM", "NaN", "NaN"], ["674", "1.x Fix batch request/response encoding for the new Jackson codec.", null, "tbak", "10/06/15, 10:29:21 PM", "NaN", "NaN"], ["675", "Refactorings/transport sync with master", "David Liu", "qiangdavidliu", "10/07/15, 12:41:52 AM", "sync with master", "NaN"], ["677", "1.x Add few more utility methods.", null, "tbak", "10/08/15, 03:34:09 PM", "NaN", "NaN"], ["678", "Intelligent resolvers for read operations", "David Liu", "qiangdavidliu", "10/11/15, 11:10:59 PM", "(WIP) initial commit of intelligent resolvers for read operations\nSome interface refactoring", "NaN"], ["680", "1.x More test refactoring", null, "tbak", "10/09/15, 11:40:17 PM", "NaN", "NaN"], ["681", "1.x Tests refectoring", null, "tbak", "10/11/15, 10:46:27 PM", "NaN", "NaN"], ["682", "Splitting query and registration clients for experimental transport", "David Liu", "qiangdavidliu", "10/14/15, 01:02:35 AM", "NaN", "NaN"], ["683", "Various updates for refactorings/transport", "David Liu", "qiangdavidliu", "10/16/15, 09:20:08 PM", "- update staleness monitor levels if registry fetch never worked\n- Provide a mechanism to use new transport with bootstrap servers for query\n- Tune down some logging", "NaN"], ["684", "Refactorings/transport", "David Liu", "qiangdavidliu", "10/16/15, 10:13:14 PM", "This pull provides an abstraction over the transport layer of eureka-client. It also provides ways of resolving query targets that can handle intelligent pre-discovery query targets. For example this can be used for cases were readonly replicas of discovery servers can be deployed and queries are handled by the readonly replica, via an initial bootstrap resolve from the master replicas.\n\nAs of this current implementation, both the old and new code paths are preserved and the old code path is enabled by default. To use the new transport code, set the properties:\n\n```\neureka.experimental.transport.registration.enabled=true\neureka.experimental.transport.query.enabled=true\n```\n\nTo use the intelligent query resolver, set the properties\n\n```\neureka.transport.readClusterVip=[insert the vip address of the query targets here]\neureka.transport.useBootstrapResolverForQuery=false\n```", "NaN"], ["685", "Adding logging for retryClient succeed on retry", "David Liu", "qiangdavidliu", "10/20/15, 12:49:13 AM", "NaN", "NaN"], ["686", "1.x Support remote region fetch in the new transport", null, "tbak", "10/20/15, 10:20:44 PM", "NaN", "NaN"], ["687", "1.x new transport enhancements", "David Liu", "qiangdavidliu", "10/22/15, 07:40:26 PM", "- add config to define quarantine clear condition\n- better metrics and logging\n- adding jitter to sessionedClient's session duration", "NaN"], ["688", "Adding validation for required fields for instance registration", "David Liu", "qiangdavidliu", "10/22/15, 11:47:41 PM", "NaN", "NaN"], ["689", "update to EIPManager to check for eip binding at a different (faster) rate when none is bound.", "David Liu", "qiangdavidliu", "10/23/15, 07:12:41 PM", "NaN", "NaN"], ["691", "fix sessionClient's randomized sessions to be dynamic", "David Liu", "qiangdavidliu", "10/26/15, 05:11:03 AM", "NaN", "NaN"], ["692", "log StatusChangeEvent at warn level if DOWN was involved", "David Liu", "qiangdavidliu", "10/26/15, 05:41:44 PM", "NaN", "NaN"], ["693", "1.x Fix CLOSE_WAIT issue in new transport (use existing connection cleaner).", null, "tbak", "10/27/15, 11:10:01 PM", "NaN", "NaN"], ["695", "1.x Remote data not fetched on the reconciliation path", null, "tbak", "11/02/15, 07:26:35 PM", "NaN", "NaN"], ["696", "1.x NullPointException thrown if application name is not defined (set to \u2026", null, "tbak", "11/04/15, 06:18:10 PM", "\u2026UNKNOWN)", "NaN"], ["698", "1.x Backup registry configured via property is overridden with void implementation", null, "tbak", "11/06/15, 12:53:29 AM", "NaN", "NaN"], ["701", "1.x Thread pools in eureka-client create non-daemon threads", null, "tbak", "11/06/15, 04:16:24 PM", "NaN", "NaN"], ["706", "set source compatibility in build.gradle as java8 apis have bleed into code", "David Liu", "qiangdavidliu", "11/11/15, 10:20:50 PM", "NaN", "NaN"], ["708", "2.x Extract eureka-api module", null, "tbak", "11/13/15, 01:22:25 AM", "Remove avro, and reimplement JSON encoding with the latest Jackson.", "NaN"], ["710", "update to latest karyon3 and better integration for eureka-server-karyon3", "David Liu", "qiangdavidliu", "11/20/15, 06:16:17 PM", "NaN", "NaN"], ["713", "1.x Fix for issue https://github.com/Netflix/eureka/issues/711", null, "tbak", "11/19/15, 07:59:58 PM", "NaN", "NaN"], ["714", "1.x Remove dependency on blitz4j", null, "tbak", "12/03/15, 06:15:29 PM", "NaN", "NaN"], ["716", "1.x Client InstanceInfo default address resolution", "David Liu", "qiangdavidliu", "12/08/15, 09:38:14 PM", "Adding ability to define resolution order of the local InstanceInfo's \"default\" network address based on data available in AmazonInfo.", "NaN"], ["720", "Upgrade netflix-eventbus to purge the transitive dependency on findbugs", "Jonathan Schneider", "jkschneider", "12/22/15, 08:07:58 PM", "This effectively removes eureka-client's only transitive dependency on LGPL code.", "NaN"], ["721", "1.x Improve backwards compatibility with legacy eureka-client,", null, "tbak", "12/22/15, 07:41:09 PM", "that ignore the new InstanceInfo.instanceId field.", "NaN"], ["723", "1.x Fix AWS meta data refresh", null, "tbak", "12/29/15, 03:53:14 PM", "AWS meta data updates were ignored, which for Discovery servers themselves resulted in an infinite loop of EIP binding, and registry clear/upload sequences. This in turn caused massive expiries, and large network traffic.", "NaN"], ["724", "1.x In DiscoveryJerseyProvider change default codec to the latest one.", null, "tbak", "12/29/15, 09:35:58 PM", "NaN", "NaN"], ["726", "2.x major refactoring with new transport and channel abstractions", null, "tbak", "01/04/16, 05:02:27 PM", "NaN", "NaN"], ["727", "Handle registration with bad data in DataCenterInfo", "David Liu", "qiangdavidliu", "01/04/16, 10:03:18 PM", "- Moving data backfill of AmazonInfo from InstanceInfo ctor to Resource that handles registration\n- Adding an option to return 400 to such registration requests instead of backfill data", "NaN"], ["728", "add additional sanity check in shouldRefresh AmazonInfo", "David Liu", "qiangdavidliu", "01/05/16, 04:49:36 AM", "NaN", "NaN"], ["729", "Revert https://github.com/Netflix/eureka/pull/724 due to compatibility issues with Jackson 2.6.x", null, "tbak", "01/06/16, 08:45:21 PM", "NaN", "NaN"], ["730", "1.x Refactor Jackson serializer, so it does not depend on internal Jackson code.", null, "tbak", "01/14/16, 11:40:55 PM", "This was source of incompatibility with Jackson versions higher than 2.5.", "NaN"], ["731", "2.x Clean protocol model, and add support for protobuf with RxNetty", null, "tbak", "01/11/16, 11:26:16 PM", "NaN", "NaN"], ["733", "Fix build error", "Justin Lin", "jylin", "01/15/16, 02:35:47 AM", "The putIfAbsent method is used on this variable which is not part of the Map interface.", "NaN"], ["734", "blitz4j is no longer included in eureka server as part of 1.3.5...", "Daniel Caballero", "dcaba", "01/19/16, 05:11:11 PM", " ... #714 . Default log4j properties still points to a class that is part of blitz4j, generating an exception at boot time.", "NaN"], ["736", "Update to archaius2 2.0.0-rc.36", null, "elandau", "01/20/16, 12:56:01 AM", "NaN", "NaN"], ["739", "Fix for issue #702 (handle charset provided in Content-Type header)", null, "tbak", "02/05/16, 11:51:43 PM", "NaN", "NaN"], ["741", "1.x Removing old client transport in favour of the (no longer) experimental transport", "David Liu", "qiangdavidliu", "02/06/16, 03:19:49 AM", "NaN", "NaN"], ["742", "1.x Fix async resolver to use daemon threads", "David Liu", "qiangdavidliu", "02/07/16, 12:03:10 AM", "NaN", "NaN"], ["743", "Revert fix for issue #702 due to external dependencies on DiscoveryJerseyProvider", null, "tbak", "02/08/16, 06:27:49 PM", "Some clients used this provider for non-eureka data structures, and this change\nis breaking them. We need to better understand those use cases.", "NaN"], ["744", "Fix for issue #702 (handle charset provided in Content-Type header)", null, "tbak", "02/17/16, 10:36:58 PM", "This PR (compared to the previouse, undone one #739) checks for entity\ntypes and is applied only to eureka specific data structures.", "NaN"], ["745", "1.x Add composite strategy bootstrap resolver ", "David Liu", "qiangdavidliu", "02/15/16, 08:48:14 PM", "Two features for multi-account, multi vpc type support:\n- an option for (all) resolvers to use hostnames or ipAddresses for resolution\n- an option to bootstrap with a composite strategy, where the bootstrap resolver prefers to load data from local registry, else attempts to make a remote get vips call for write servers. The remote call will make a dns/config look up for target hosts.", "NaN"], ["746", "Move back to java7 compatibility.", "Spencer Gibb", "spencergibb", "02/15/16, 07:00:58 PM", "Spring Cloud Netflix is still java7 compatible.\n\nWhen using java7 to build, the following error occurs because servo is java8 only.\n\njava.lang.UnsupportedClassVersionError: com/netflix/servo/monitor/Monitors\n    at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:126)\n    at com.netflix.discovery.BackUpRegistryTest.setUp(BackUpRegistryTest.java:71)\n\nSpring Cloud Netflix still uses the java7 servo.\n\nBuilding with java8 and targeting java7 still works and maintains the required compatibility.\n\n@twicksell ", "NaN"], ["747", "1.x updating AmazonInfo's refresh policy to be more lenient", "David Liu", "qiangdavidliu", "02/16/16, 12:12:20 AM", "NaN", "NaN"], ["749", "New EurekaEventListener API", null, "elandau", "02/17/16, 02:16:08 AM", "Introduce a new EurekaEventListener API for getting EurekaClient state change notification.  \n\nThis API is cleaner than forcing the Netflix EventBus on users of EurekaClient.", "NaN"], ["751", "Use getScheme() to compare against https.", "Spencer Gibb", "spencergibb", "02/22/16, 08:47:01 PM", "fixes gh-750", "NaN"], ["752", "Only append port to serviceUrl if port >= 0", "Spencer Gibb", "spencergibb", "02/23/16, 11:27:45 PM", "Fixes a problem communicating with an eureka server that is running on port 80 or 443 (such as the case in cloud foundry). serviceUrl looked like this http://eurekahost:-1\n\nI can confirm this works on a local build.\n\nSee https://github.com/spring-cloud/spring-cloud-netflix/issues/840 for the original issue.", "NaN"], ["754", "Sleep during syncUp only if necessary", "Will Tran", "william-tran", "02/24/16, 11:42:01 PM", "Fixes #753", "NaN"], ["757", "set instance status using applicationInfoManager instead of directly", "David Liu", "qiangdavidliu", "02/27/16, 12:13:17 AM", "NaN", "NaN"], ["759", "Adding an ondemand instanceInfo update trigger when new HealthCheckHa\u2026", "David Liu", "qiangdavidliu", "03/01/16, 01:14:27 AM", "\u2026ndlers\n\nare registered with EurekaClient", "NaN"], ["760", "Adding equals and hashcode to EurekaModule", "David Liu", "qiangdavidliu", "03/02/16, 07:28:26 PM", "NaN", "NaN"], ["761", "Add additional logging for client transport resolution of eureka server info", "David Liu", "qiangdavidliu", "03/03/16, 12:42:17 AM", "NaN", "NaN"], ["763", "change deprecated governator-annotations to replacement (governator-api)", "David Liu", "qiangdavidliu", "03/11/16, 08:26:13 PM", "NaN", "NaN"], ["765", "Fix issue #756 (restore HTTP authentication support)", null, "tbak", "03/17/16, 06:59:51 PM", "NaN", "NaN"], ["769", "back rev servo to 0.10.1 to be java7 compatible", "David Liu", "qiangdavidliu", "03/28/16, 09:48:11 PM", "NaN", "NaN"], ["771", "Fix up DI server to use governator", "David Liu", "qiangdavidliu", "03/29/16, 06:09:32 PM", "Since Karyon3 is no longer under deployment.", "NaN"], ["773", "1.x EIPManager: if instance is not associated with one EIP, do not try to unbind", "LUONG Trong-Hieu", "hieurl", "04/11/16, 10:17:34 PM", "Instead, throw exception\nReason: DescribeAddressRequest with null public ip returns list of all public address\nIf instance is not associated with one eip, Eureka will dissociate first ip on list which does not belong to the instance", "NaN"], ["774", "Check if transport is null in DiscoveryClient#unregister", null, "tbak", "04/07/16, 09:50:57 PM", "NaN", "NaN"], ["776", "Adding util class", "David Liu", "qiangdavidliu", "04/13/16, 05:27:10 PM", "NaN", "NaN"], ["779", "update server build default props.", "David Liu", "qiangdavidliu", "04/18/16, 06:03:52 AM", "NaN", "NaN"], ["784", "Support healthy status on server StatusInfo", "Matt Nelson", "mattnelson", "09/23/16, 05:09:07 PM", "When one of the replicas is down the eureka server status should reflect that in the healthy flag on `StatusInfo` and `/eureka/v2/status` endpoint.", "NaN"], ["786", "Adding some utilities", "David Liu", "qiangdavidliu", "05/10/16, 08:04:45 PM", "NaN", "NaN"], ["787", "Added ENI aws binder", null, "jc89", "05/18/16, 06:39:06 PM", "Added binder for aws elastic network interfaces.\nThis is done creating an AWSBinder and modifying the delegate to properly choose using the new binder strategy", "NaN"], ["789", "Travis conversion", "Rob Spieldenner", "rspieldenner", "05/09/16, 09:54:56 PM", "NaN", "NaN"], ["790", "Fixing an edge case if dataCenterInfo is null or DataCenterInfo.Name is null", "David Liu", "qiangdavidliu", "05/11/16, 12:50:53 AM", "NaN", "NaN"], ["791", "Supplement to #790 to check for null for DataCenterInfo.getName()", "David Liu", "qiangdavidliu", "05/11/16, 01:21:56 AM", "NaN", "NaN"], ["792", "update gradle version and netflixoss version to be compatible with travisCI", "David Liu", "qiangdavidliu", "05/11/16, 05:23:21 AM", "NaN", "NaN"], ["793", "ignore javadoc errors (for now)", "David Liu", "qiangdavidliu", "05/11/16, 05:37:03 AM", "NaN", "NaN"], ["794", "minor test fix", "David Liu", "qiangdavidliu", "05/11/16, 05:58:29 AM", "NaN", "NaN"], ["795", "Using beta Travis trusty vm for builds (more cpu -> better for tests)", "David Liu", "qiangdavidliu", "05/18/16, 07:45:02 PM", "NaN", "NaN"], ["797", "Add fail fast option to AmazonInfo init", "David Liu", "qiangdavidliu", "05/19/16, 07:00:44 PM", "Add fail fast option to AmazonInfo init (esp at bootstrap time) so that running with VPN will not unncecessarily cause long hang times waiting on each key's ReadTimeout.", "NaN"], ["800", "Handle on demand update within InstanceInfoReplicator initial delay", "Matt Nelson", "mattnelson", "05/27/16, 08:24:53 PM", "When performing an on demand status update within the InstanceInfoReplicator start's initial delay the originally scheduled task is not cancelled which results in two scheduled tasks being executed for the life of the process.", "NaN"], ["801", "remove deprecated code form examples", "David Liu", "qiangdavidliu", "05/27/16, 10:25:53 PM", "NaN", "NaN"], ["805", "! Fix erroneous connectionIdleTimeout value", "Vincent Seguin", "vseguin", "06/14/16, 10:03:45 PM", "This commit is related to issue [https://github.com/spring-cloud/spring-cloud-netflix/issues/729](https://github.com/spring-cloud/spring-cloud-netflix/issues/729).\n\nWhen overriding the connectionIdleTimeout value, it was erroneously using a seconds value, although default value is in milliseconds.", "NaN"], ["806", "Fix (harmless) NPE at server startup due to init order on a metrics counter", "David Liu", "qiangdavidliu", "06/16/16, 08:22:14 PM", "#803", "NaN"], ["808", "Prefer javax.inject Provider over guice Provider for #807", "Matt Nelson", "mattnelson", "06/16/16, 09:51:41 PM", "Made the changes to prefer the javax.inject Provider over the guice Provider where possible. The remaining usages of the guice provider are blocked by https://github.com/google/guice/pull/926.", "NaN"], ["811", "Fixing a potential registration race condition as described in issue #802", "David Liu", "qiangdavidliu", "06/28/16, 09:36:15 PM", "issue #802\n\nEnable new behaviour via:\neureka.experimental.registry.registration.ignoreIfDirtyTimestampIsOlder=true", "NaN"], ["813", "Propagate systemSSL config for client all the way through", "David Liu", "qiangdavidliu", "07/06/16, 09:48:42 PM", "Fix for #812", "NaN"], ["817", "Rewrite status override logic in registry using a rule framework", "Nikos Michalakis", "drtechniko", "07/22/16, 06:14:15 PM", "NaN", "NaN"], ["819", "Check the sub-string index value before trying to sub-string on it.", null, "robertnosburn", "07/21/16, 01:31:29 AM", "See issue #818 -\n\nIn a private application with no elastic IPs exceptions will be thrown when there are no URLs containing \"ec2-\".  With this modification, the exception will not be thrown and the rest of the process will simply not bind to any EIPs.", "NaN"], ["821", "Support jersey2 for client/server", "Matt Nelson", "mattnelson", "08/23/16, 11:32:06 PM", "Initial support for jersey2 for #600 \n\nDeployed these changes to our local snapshot repository. I've been running our builds with the snapshot for the last week. I believe the only non-passive change for existing jersey1 consumers is the relocation of `DiscoveryClientOptionalArgs` from an inner class of `DiscoveryClient` this was because the optional args has a method to supply additional filters which the interface was changed with jaxrs2.\n### client\n\nChanged `DiscoveryClient` to accept a `TransportClientFactories` on the optional args class to support supplying the jersey2 transport client factory.\n\n``` java\nJersey2DiscoveryClientOptionalArgs args = new Jersey2DiscoveryClientOptionalArgs();\nargs.setTransportClientFactories(Jersey2TransportClientFactories.getInstance());\nDiscoveryManager.getInstance().initComponent(new MyDataCenterInstanceConfig(), new DefaultEurekaClientConfig(), args);\n```\n### server\n\nAdded `EurekaServerContextBinder` to use the hk2 injectors for `EurekaServerContext`. The `GuiceFilter` is no longer required to be on the filter chain. I did not create a `eureka-server-jersey2` module since I am not deploying eureka-server as a war. Added `Jersey2EurekaBootStrap` which uses the client/server jersey2 classes for peer replication.\n\n``` java\n// Expects that you have already initialized the discovery client\nnew Jersey2EurekaBootStrap(DiscoveryManager.getInstance().getDiscoveryClient()\n```", "NaN"], ["822", "Moving experimental replication fix to default", "David Liu", "qiangdavidliu", "07/21/16, 09:25:16 PM", "Ref PR #811 \nFix for issue #802 \nMaking the fix default now that is has been tested in production.", "NaN"], ["824", "Fix typo in EurekaInstanceConfig", "Richard Benkovsky", "Benky", "08/11/16, 07:43:43 PM", "NaN", "NaN"], ["831", "Support eureka servers configured with IP addresses", "Matt Nelson", "mattnelson", "08/23/16, 11:28:52 PM", "When configuring the `eureka.serviceUrl.default` with IP addresses the comparisons performed in `PeerEurekaNodes` and `StatusUtil` prevent the instances from recognizing themselves and therefore never report themselves as available.\n\nAs discussed on #821 (https://github.com/Netflix/eureka/pull/821#issuecomment-237416131) follow PR.", "NaN"], ["832", "jersey2 compatibility updates", "David Liu", "qiangdavidliu", "08/26/16, 10:49:16 PM", "- add missing client side filters\n- changed some jersey2 interfaces to standardise on javax.wx.rs\n- changed some eureka-jersey2 interfaces to be more inline with interfaces in eureka-jersey1\n- added back DiscoveryClient.DiscoveryClientOptionalArgs which was part of the public API\n- added README", "NaN"], ["833", "Archaius2 client compatibility", "David Liu", "qiangdavidliu", "09/06/16, 10:35:15 PM", "NaN", "NaN"], ["835", "Remove use of deprecated static accessor.", "Spencer Gibb", "spencergibb", "08/31/16, 06:48:13 PM", "Add a builder method and check that instanceInfo is not null in build().\n\nFound this in a test where the static singleton was null :-(", "NaN"], ["838", "Don't schedule TimeSupervisorTask if scheduler is shutting down.", "Davor Sauer", "d-sauer", "09/02/16, 05:25:42 PM", "Don't schedule TimeSupervisorTask if scheduler is shutting down\nAdditional logging in case that executor and scheduler are shutting down.\n\nI notice this when shutting down Tomcat server:\n\n```\nERROR c.n.discovery.TimedSupervisorTask - task supervisor rejected the task\njava.util.concurrent.RejectedExecutionException: Task java.util.concurrent.FutureTask@29004f06 rejected from java.util.concurrent.ThreadPoolExecutor@2d3fcefe[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 17]\n              at java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(ThreadPoolExecutor.java:2047)\n              at java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:823)\n              at java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1369)\n              at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:112)\n              at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:62)\n              at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n              at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n              at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n              at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n              at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n              at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n              at java.lang.Thread.run(Thread.java:745)\n```\n\nthis fix should show those error more gracefully", "NaN"], ["841", "remove governator dep for eureka-client", "David Liu", "qiangdavidliu", "09/06/16, 11:44:25 PM", "NaN", "NaN"], ["842", "update archaius2 version", "David Liu", "qiangdavidliu", "09/07/16, 12:36:47 AM", "NaN", "NaN"], ["843", "Refactoring AmazonInfo refresh into common class", "David Liu", "qiangdavidliu", "09/08/16, 06:26:31 AM", "- other minor clean ups", "NaN"], ["844", "Instance config should only add metadata if value is valid", "David Liu", "qiangdavidliu", "09/08/16, 08:58:43 PM", "NaN", "NaN"], ["845", "sync jersey2 branch with master", "David Liu", "qiangdavidliu", "09/15/16, 01:54:46 AM", "NaN", "NaN"], ["846", "Remove uses of archaius2 config.getPrefixedView()", "David Liu", "qiangdavidliu", "09/15/16, 01:22:32 AM", "It currently has issues when combined with config interpolation", "NaN"], ["847", "update to archaius2 2.1.6", "David Liu", "qiangdavidliu", "09/15/16, 07:25:01 PM", "NaN", "NaN"], ["848", "update archaius2 to 2.1.7", "David Liu", "qiangdavidliu", "09/15/16, 08:56:00 PM", "NaN", "NaN"], ["849", "Add optional args to ApplicationInfoManager", "David Liu", "qiangdavidliu", "09/20/16, 05:53:38 AM", "NaN", "NaN"], ["852", "synchronize a few use cases of CloudInstanceConfig to be available to eureka-client-archaius2", "David Liu", "qiangdavidliu", "09/23/16, 04:07:21 AM", "NaN", "NaN"], ["853", "update XStream to 1.4.9 to patch XXE vulnerability", "Taylor Wicksell", "twicksell", "09/26/16, 01:14:14 AM", "NaN", "NaN"], ["855", "Contrib/jersey2 compatibility", "David Liu", "qiangdavidliu", "09/30/16, 09:56:41 PM", "NaN", "NaN"], ["861", "- fix minor typo in PropertyBasedClientConfigConstants.java", "LUONG Trong-Hieu", "hieurl", "10/20/16, 07:17:03 PM", "Nothing much, just a typo fix\n\nINITIAL_REGISTRATION_REPLCIATION_DELAY_KEY -> INITIAL_REGISTRATION_REPLICATION_DELAY_KEY", "NaN"], ["862", "Convert all remaining guice provider references to javax", "Matt Nelson", "mattnelson", "10/20/16, 07:19:49 PM", "Follow up to #808 now that guice has been released and pulled in.", "NaN"], ["869", "Remove assignment of instanceInfo from static instance.", "Spencer Gibb", "spencergibb", "11/08/16, 01:38:50 AM", "f40f54a03d135379845aeb8c060b4f768fe7e7b5 made instanceInfo a required field to be set, but an assignment was still happening from `ApplicationInfoManager.getInstance().getInfo()` overwriting assigned field.", "NaN"], ["870", "Update README.md", "David Liu", "qiangdavidliu", "11/08/16, 01:46:17 AM", "NaN", "NaN"], ["874", "Support HTTPS requests to servers that use multiple certificates", "Will Tran", "william-tran", "11/21/16, 08:23:21 PM", "Use Apache HttpClient 4.3+ SSL handling which supports SNI, and\nadapt it to the deprecated pre 4.3 API.\n\nFixes #873", "NaN"], ["876", "use shutdownNow() instead of shutdown()", "Benjamin Klaus", "klues", "02/03/17, 06:01:09 AM", "shutdown() does not prevent execution of previously submitted tasks, which can cause that AsyncResolver.shutdown() does not really shutdown all tasks -> memory leak", "NaN"], ["895", "Fixed missing url in log output", "Richard M\u00fcller", "RichiMueller", "02/03/17, 06:01:42 AM", "We get a lot of these log messages in our logfiles. We can't see which URL is causing the log message, as the placeholder {} is missing in the text. This pull request fixes this.", "NaN"], ["897", "Scope governator dependencies to reflect actual usage", "Matt Nelson", "mattnelson", "02/03/17, 06:01:56 AM", "Governator was scoped as a compile dependency of eureka-core incorrectly. A few other modules needed it for testing. This fixes consumers from pulling in this dependency transitively when it is not used.", "NaN"], ["898", "Create OSSMETADATA", "David Liu", "qiangdavidliu", "02/03/17, 06:03:31 AM", "NaN", "NaN"], ["899", "fix concurrency bug found in getInstancesAsIsFromEureka()", "Tom Cellucci", "tcellucci", "02/03/17, 11:04:40 PM", "NaN", "NaN"], ["920", "made NonEc2EurekaClientModuleTest pass at an ec2 instance too", "Erhan Kesken", "ekesken", "04/03/17, 07:09:56 PM", "NaN", "NaN"], ["922", "Improving conditional statement for map", "taekyung", "bistros", "05/31/17, 06:33:17 AM", "remoteRegionUrlsWithName can never null, so change null check condition\n\nAccording to EurekaServerConfig.java's remoteRegionUrlsWithName comment\n  Empty map if no remote region url is defined.\n\nNow, Always running\nhttps://github.com/Netflix/eureka/blob/4f24d9dcf90713b421f6c092fa63e707cbf74df3/eureka-core/src/main/java/com/netflix/eureka/registry/AbstractInstanceRegistry.java#L138-L151", "NaN"], ["931", "Fix link rendering in README.md", "Max Johansen", "macsj200", "04/27/17, 11:50:22 PM", "There's a space in between the brackets and parentheses in the readme, which causes the links to not render properly. I've removed the space so the links look like links now.", "NaN"], ["934", "Add the InstanceInfo to the response in case of 409 status code", "Jacques-Etienne Beaudet", "jebeaudet", "05/31/17, 11:27:12 PM", "Fixes #933.\n\nThanks!", "NaN"], ["943", "Allow for independent SSL context for EurekaJerseyClient", "Wes", "weswalker125", "05/31/17, 07:11:37 AM", "The builder only allows SSL configuration through system settings, though it can be useful to operate the discovery client on a separate SSL context from the server/system level.  This exposes a method to supply an SSLContext object and use it in the \"createCustomSslCM\" method.", "NaN"], ["946", "Update dependencies", "David Liu", "qiangdavidliu", "05/31/17, 11:27:50 PM", "Also contain some test fixes", "NaN"], ["947", "Add a guard to PR #934", "David Liu", "qiangdavidliu", "06/01/17, 08:13:49 PM", "#934\n@jebeaudet ", "NaN"], ["949", "add pre registration handler", "David Liu", "qiangdavidliu", "06/01/17, 11:34:47 PM", "NaN", "NaN"], ["950", "update a flaky test", "David Liu", "qiangdavidliu", "06/02/17, 04:52:43 AM", "NaN", "NaN"], ["960", "Upgrade XStream to 1.4.10, added tests around CVE-2017-7957", null, "borlafu", "07/17/17, 09:34:28 PM", "Applied http://x-stream.github.io/CVE-2017-7957.html#workarounds and added some tests around it.\n\nAfter upgrading to 'com.thoughtworks.xstream:xstream:1.4.9' the workaround can be removed.", "NaN"], ["969", "Misc. fixes", "Deleted user", "ghost", "11/14/17, 09:48:38 PM", "In testing my [SLF4J Helper](http://plugins.netbeans.org/plugin/72557/) plugin for NetBeans IDE, I found a few minor improvements that can be made.", "NaN"], ["970", " memory tuning", "Tom Cellucci", "tcellucci", "07/25/17, 05:38:08 PM", "moved to Java 8\nextensive changes to jackson deserialization to reduce heap usage", "NaN"], ["974", "Avoid scheduling when DiscoveryClient.shutdown called", "Bill Zhang", "jingege", "12/13/17, 12:41:27 AM", "#973 ", "NaN"], ["976", "975-Remove-checked-exceptions-from-@PostConstruct-methods", "Mert Caliskan", "mulderbaba", "04/25/18, 12:29:05 AM", "fixes #975 ", "NaN"], ["977", "add travis config option to publish candidate releases to netflix can\u2026", "Taylor Wicksell", "twicksell", "09/12/17, 10:20:40 PM", "\u2026didate repo", "NaN"], ["984", "Fix Override Status Regression", "David Liu", "qiangdavidliu", "09/13/17, 06:17:37 PM", "Setting and deleting the override status on an eureka server has a regression due to the `lastDirtyTimestamp` being updated by the server in response to the set and delete, which can in turn lead to client update/registers potentially being ignored due to the timestamp being ahead on the server compared to client local.", "NaN"], ["985", "check call success/failure before unsetting isDirty", "David Liu", "qiangdavidliu", "09/18/17, 05:43:07 PM", "NaN", "NaN"], ["989", "Add a config to control whether explicit unregister should happen on client shutdown", "David Liu", "qiangdavidliu", "09/21/17, 08:51:01 PM", "NaN", "NaN"], ["994", "Fix a race condition in the server remoteRegionRegistry", "David Liu", "qiangdavidliu", "10/03/17, 07:32:25 PM", "Also updated some default server configs to do with connect and read timeouts to be more reasonable.", "NaN"], ["997", " Add ability to fail fast in DiscoveryClient construction if an initial registration attempt fails", "David Liu", "qiangdavidliu", "10/09/17, 09:12:04 PM", "NaN", "NaN"], ["1001", "Support configuration of custom SSLContext/HostnameVerifier", "Matt Nelson", "mattnelson", "10/27/17, 08:59:19 PM", "Implementation of #816 \n\nSupports configuration of custom SSLContext/HostnameVerifier for jersey1/jersey2 implementations.", "NaN"], ["1003", "Prevent \"null\" url server url prefix", "Geunwoo Shin", "encyphered", "04/25/18, 12:30:38 AM", "When set `shouldUseDns` as true with null `eurekaServer.context`, `EndpointUtils#getServiceUrlsFromDNS` appends \"null\" string to service url postfix.\n\ne.g. http://ec2-10-0-0-1.ap-northeast-2.compute.amazonaws.com/null/\n\nFixed this.", "NaN"], ["1009", "Add default impl to two interface methods introduced recently", "David Liu", "qiangdavidliu", "11/01/17, 06:27:02 PM", "NaN", "NaN"], ["1010", "catch potential exceptions around EurekaEventListener notify", "David Liu", "qiangdavidliu", "11/08/17, 01:00:39 AM", "NaN", "NaN"], ["1013", "The getHostCandidates method improves", "saga", "holy12345", "11/28/17, 10:09:49 PM", "Prevent retryableClientQuarantineRefreshPercentage from being greater than 1, causing Eureka Client to not register with Eureka Server\u3002\n\nCorresponding issues for https://github.com/Netflix/eureka/issues/1012", "NaN"], ["1017", "Increase the catch exception code", "saga", "holy12345", "11/28/17, 10:12:52 PM", "Increase the catch exception code to ensure that when the exception occurs can be friendly to return to the client side", "NaN"], ["1021", "Use a more elegant way to judge", "saga", "holy12345", "12/18/17, 06:32:46 PM", "Use `list.isEmpty ()` instead of `list.size>0` to make it more elegant.", "NaN"], ["1022", "Set up xstream security framework", "David Liu", "qiangdavidliu", "12/12/17, 09:52:55 PM", "NaN", "NaN"], ["1023", "Avoid scheduling when DiscoveryClient.shutdown called (fix for #973)", "Chase Diem", "abracadv8", "12/13/17, 12:41:25 AM", "Based off code cleanup comments for pull #974, this should fix #973.\n\n`awaitTermination` should block until the  DOWN replication thread is completed before finishing shutdown/registration.  This should prevent race conditions between registration:DOWN and de-register.", "NaN"], ["1026", "Get dataCenterInfo when need it && fix typo", "Panmax", "Panmax", "01/30/18, 06:51:43 PM", "NaN", "NaN"], ["1029", "Verify if scheduler is active before submit new task", "Tomasz Juchniewicz", "tjuchniewicz", "01/30/18, 06:50:20 PM", "Fixes gh-1025.", "NaN"], ["1031", "prevent replication flood caused by socket read time out leads to some node CPU 100%", null, "skyesx", "02/12/18, 08:53:18 PM", "when the instance become more then 3k,the batch replicated operation become easier to timeout.\nbecause the replication request sender will retry the replication soon,it leads to a flood.\nWhen it's happend,it appears to some eureka node ocupied 100% CPU and stucked.\nThis commit will help reduce the sympton,and write a clear log message to help debug.\n\nBy the way , i suggest to allow user to config the Congestion and TransientError retry delay time", "NaN"], ["1033", "fix potential NPE for issue #1014", "David Liu", "qiangdavidliu", "02/15/18, 11:34:33 PM", "fix for #1014 ", "NaN"], ["1044", "Verify is scheduler is active before submit", "David Liu", "qiangdavidliu", "03/21/18, 06:20:49 PM", "Fixes gh-1025.\n\n(cherry-picked from master branch as the fork branch has been deleted)", "NaN"], ["1052", "fix for issue #1051", "David Liu", "qiangdavidliu", "04/09/18, 09:45:23 PM", "NaN", "NaN"], ["1054", "update: compatible txt value format: \"host1 host2 host3\"", "Jacey New", "moxnet", "04/23/18, 09:49:55 PM", "fix #1053 \n\nRemove the opening and closing quotes when the TXT dns record as format:\n> \"host1 host2 host3\"\n\nto compatible with aws route53 format:\n>\"host1\" \"host2\" \"host3\"\n\n(this format will remove quotes before the return of call dirContext.getAttributes(...))", "NaN"], ["1057", "bugfixing: Eureka Proxy Setting is not working", "Luan Louis", "LuanLouis", "04/23/18, 09:42:27 PM", "   Eureka proxy settings is not working because of EurekaJerseyClientBuilder instance have no chance to set proxy settings during it's lifecycle.\n\nrelated issue: #1056 ", "NaN"], ["1058", "Fix issue #1041", "David Liu", "qiangdavidliu", "04/24/18, 11:57:00 PM", "NaN", "NaN"], ["1059", "update dependencies", "David Liu", "qiangdavidliu", "04/25/18, 12:27:59 AM", "NaN", "NaN"], ["1060", "address dangling PR comments for PRs #976 and #1003", "David Liu", "qiangdavidliu", "04/25/18, 05:14:50 PM", "address dangling PR comments for PRs #976 and #1003", "NaN"], ["1071", "Fix the inconsistency logic in method updateRenewalThreshold(). ", "neoReMinD", "neoremind", "06/25/18, 11:29:34 PM", "Fix the inconsistency logic in method `updateRenewalThreshold()`. Because it does not reflect the expected intention based on the comment. \n`updateRenewalThreshold` will be qualified to run if renewal count * 2 is bigger than \n```\nserverConfig.getRenewalPercentThreshold() * expectedNumberOfRenewsPerMin\n```\nNOT\n```\nserverConfig.getRenewalPercentThreshold() * numberOfRenewsPerMinThreshold\n```\n", "NaN"], ["1079", "change overriddenstatus field name in pojo to allow for better serialization compatibility", "David Liu", "qiangdavidliu", "05/31/18, 10:06:44 PM", "further relax deser behaviour on overriddenstatus field to allow for both lower and camel case", "NaN"], ["1080", "one more change to relax parsing compatibility due to overiddenstatus casing change", "David Liu", "qiangdavidliu", "06/01/18, 06:25:47 PM", "NaN", "NaN"], ["1088", "Concurrent register of custom healthcheck handler in DiscoveryClient", "Taras Danylchuk", "tdanylchuk", "06/25/18, 11:40:14 PM", "Some clients try to register their health checks and fail since there is possibility to rewrite healthcheck handler by default one.\n\nRoot cause:\nafter not thread safe null check DiscoveryClient will register default healthcheck handler even if during creation of that, custom one will be provided.\nResolution summary:\nwrap healthcheck handler in AtomicReference and set default implementation only if reference still contain null.\n\nExample is spring-cloud-netflix project and https://github.com/spring-cloud/spring-cloud-netflix/issues/2490 issue.", "NaN"], ["1093", "Add possibility to configure expected interval between clients' renew\u2026", "Mikhail Gromov", "mgtriffid", "07/17/18, 04:19:36 AM", "\u2026s and not break self-preservation\n\nCurrently, if one sets renewal interval different from 30 seconds on clients, self-preservation doesn't work correctly. For example, see https://github.com/spring-cloud/spring-cloud-netflix/issues/373 . This PR adds possibility to configure expected renewal interval on Eureka server, so that if clients send renews every, say, 20 seconds, then SP threshold is `0.85 * 3 * count`, not `0.85 * 2 * count`.", "NaN"], ["1096", "Cache capacity configurable", "saga", "holy12345", "07/10/18, 08:50:45 PM", "Hi @qiangdavidliu \n\nWhen `ResponseCacheImpl#readWriteCacheMap` init, it use hardcode to make initial capacity, so I add a parameter which can let customer decide the initial capacity.\n\nPlease check it.\n\nThanks : )", "NaN"], ["1097", "Tiny improve", "saga", "holy12345", "07/10/18, 08:49:17 PM", "Remove magic number and replaced by `Status`", "NaN"], ["1100", "Fix 1098", "saga", "holy12345", "08/02/18, 09:54:17 PM", "Hi @qiangdavidliu \n\nThis PR fix #1098 please check it.\n\nThanks : )", "NaN"], ["1107", "EUREKA-1087 Add config parameter eureka.myUrl", "Mikhail Gromov", "mgtriffid", "08/02/18, 10:18:52 PM", "...to specify URL Eureka should treat as its own (for cases when each Eureka node is behind LB and does not simply check replica URLs against own IP/host)", "NaN"], ["1108", "Add an interface for AwsAsgUtil", null, "troshko111", "08/06/18, 08:24:06 PM", "- Provide a replaceable abstraction over AWS ASG polling logic\n- Add a setting to disable AWS ASG polling", "NaN"], ["1119", "defaultZone separator support container space", "Kerwin Bryant", "kerwin612", "09/02/18, 07:22:32 PM", "NaN", "NaN"], ["1122", "Add User-Agent when requesting information from AWS Metadata service", "Will Bengtson", "willbengtson", "09/17/18, 10:50:15 PM", "Add User-Agent when requesting information from AWS Metadata service", "NaN"], ["1125", "ISSUE-1124 register additionalFilters into clientConfig", "Sergey Krutsko", "krutsko", "09/24/18, 03:18:28 PM", "NaN", "NaN"], ["1126", "EUREKA-1120 Move write.lock higher in stack...", "Mikhail Gromov", "mgtriffid", "10/14/18, 09:45:20 PM", " so that payload serialization is performed while locked", "NaN"], ["1132", "eureka-1131: handle spot instance termination", "Sergey Krutsko", "krutsko", "10/20/18, 10:09:07 PM", "NaN", "NaN"], ["1135", "eureka-1134: fix for StringIndexOutOfBoundsException", "Joseph Witthuhn", "JosephWitthuhnTR", "12/18/18, 05:14:17 AM", "It looks like a -1 was used when it should be comparing against 3. Based on line 353, beginIndex will always be larger than -1, but it will be 3 if there is no \"ec2-\" in the URL.\n\nThis is for issue #1134 which I reported earlier this morning.", "NaN"], ["1138", "EUREKA-1137 Add counter for congestion issues", "Mikhail Gromov", "mgtriffid", "10/20/18, 10:24:42 PM", "Fixes #1137 ", "NaN"], ["1140", "update default server's eureka-client property", "David Liu", "qiangdavidliu", "10/26/18, 12:53:13 AM", "The eureka server internal eureka-client need to be configured to get instances for all statuses, not just UP. This is necessary to properly calculate the correct self preservation threshold. See issue https://github.com/Netflix/eureka/issues/1127 for a discussion.", "NaN"], ["1152", "Improved logging", null, "elandau", "11/12/18, 05:52:41 PM", "- Improve logging by linking cause to WebApplicationException\n- Add attempt counter to TimeSupervisorTask to help identify situations where the supervisor has stalled", "NaN"], ["1153", "Tweak Staleness metrics", null, "elandau", "11/14/18, 08:46:59 PM", "Tweak the staleness guages to return 0 for when the client is shut down or when refreshes are not enabled.  Otherwise the metric can be misleading by incorrectly making it appear that refreshes are not working.", "NaN"], ["1155", "EUREKA-1154 Return 404 if instance is not found when updating metadata", "Mikhail Gromov", "mgtriffid", "11/14/18, 09:54:58 PM", "NaN", "NaN"], ["1157", "Eureka Client doesn't respect DNS server change at runtime", "Sergey Krutsko", "krutsko", "12/18/18, 03:31:24 PM", "Eureka Client doesn't respect DNS server change at runtime.\n\nE.g. try to adjust DNS server at `/etc/resolv.conf` file , but Eureka Client keep communicate with _old_ address.\n\nThe reason is that Eureka Client initializes [InitialDirContext](https://github.com/Netflix/eureka/blob/master/eureka-client/src/main/java/com/netflix/discovery/endpoint/DnsResolver.java#L50) once and keep it in static variable , so it never re-read resolv.conf.\n\nI didn't spent much time to write a proper unit test for this (let me know if it needed), but here the code which could help to check this with DnsResolver.\n\n```\nScheduledExecutorService executorService = Executors.newScheduledThreadPool(1);\n\n        executorService.scheduleAtFixedRate(\n                () -> {\n                    logger.info(\"running dns checker\");\n\n                    Hashtable env = new Hashtable();\n                    env.put(Context.INITIAL_CONTEXT_FACTORY, \"com.sun.jndi.dns.DnsContextFactory\");\n                    DirContext ictx = null;\n                    try {\n                        ictx = new InitialDirContext(env);\n                        String dnsServers = (String) ictx.getEnvironment().get(\"java.naming.provider.url\");\n\n                        logger.info(\"DNS Servers: \" + dnsServers );\n                    } catch (NamingException e) {\n\n                    }\n\n                    try {\n                        String dnsServers = (String) dirContext.getEnvironment().get(\"java.naming.provider.url\");\n\n                        logger.info(\"DNS Servers static : \" + dnsServers );\n                    } catch (NamingException e) {\n\n                    }\n                },\n                10,\n                10,\n                TimeUnit.SECONDS\n        );\n```\n", "NaN"], ["1163", "  Add @Override toString() in InstanceInfo", "SangMin", "phantasmicmeans", "12/18/18, 04:30:19 AM", "Application(class) can get simple information by @Override the toString().\n\n-> toString() in Application.java\n\n    @Override\n    public String toString() {\n        return \"Application [name=\" + name + \", isDirty=\" + isDirty\n                + \", instances=\" + instances + \", shuffledInstances=\"\n                + shuffledInstances + \", instancesMap=\" + instancesMap + \"]\";\n    }\n\nIt is simple to use some information immediately.\n\nBut What is more necessary is the information in InstanceInfo(class)?\nInstanceInfo provides a detailed information about the eureka client.\nInstanceInfo provides a getter, but it has about 30 member variables.\n\nSo it seems necessary to provide the overriden toString() of InstanceInfo", "NaN"], ["1170", "sanitize metadata map for empty values", "David Liu", "qiangdavidliu", "01/11/19, 12:26:25 AM", "NaN", "NaN"], ["1172", "update the comment", "iZDT", "izdt", "05/30/19, 10:36:47 PM", "update the comment of  getRegisteredApplications(String appName)", "NaN"], ["1177", "Remove unused javax.mail dependency", "Matt Nelson", "mattnelson", "05/30/19, 10:29:38 PM", "Remove unused javax.mail dependency", "NaN"], ["1194", "EUREKA-1149 Add injectable customizable EndpointRandomizer", "Mikhail Gromov", "mgtriffid", "05/31/19, 08:27:10 PM", "This is another attempt to fix #1149. This time tried to take comments from #1151 into account.\n\nDifficult thing here is that there are actually two randomizers across Eureka codebase. And the one that is used by DiscoveryClient ends up being just a call to static method. So I decided to not touch existing randomizer that is a field of DiscoveryClient (because I have no idea where can it be used) and introduced new field. This EndpointRandomizer is passed to ZoneAffinityClusterResolver through some chain of calls. I have left behavior unchanged, just made it customizeable.", "NaN"], ["1212", "add ClientFilter to HttpReplicationClient", "Yuxin Bai", "LittleBaiBai", "06/07/19, 04:11:14 PM", "Connects to #1211", "NaN"], ["1214", "Add unit tests for com.netflix.discovery.util.EurekaEntityFunctions", "Braavos", "EricHetti", "07/08/19, 09:53:32 PM", "I've analysed your codebase and noticed that `com.netflix.discovery.util.EurekaEntityFunctions` is not fully tested.\nI've written some tests for the methods in this class with the help of [Diffblue Cover](https://www.diffblue.com/opensource).\n\nHopefully, these tests will help you detect any regressions caused by future code changes. If you would find it useful to have additional tests written for this repository, I would be more than happy to look at other classes that you consider important.", "NaN"], ["1216", "Update woodstox to 5.x", null, "troshko111", "06/12/19, 12:14:53 AM", "Addresses #1203.", "NaN"], ["1218", "Put back deprecated constructor", null, "elandau", "06/13/19, 06:29:30 PM", "NaN", "NaN"], ["1223", "Upgrades xstream to 1.4.11.1", "Spencer Gibb", "spencergibb", "07/01/19, 10:10:38 PM", "fixes #1222", "NaN"], ["1224", "make AmazonInfo deserializer more robust", null, "brharrington", "07/16/19, 08:12:55 PM", "Prior to this change, it was easy to trigger an endless loop in\n`StringInterningAmazonInfoBuilder` if the `dataCenterInfo` payload\nwasn't exactly right. For example, it could be done with:\n\n```\n\"dataCenterInfo\": {\n  \"@class\": \"com.netflix.appinfo.AmazonInfo\",\n  \"metadata\": {\n    \"instance-id\": \"i-12345\"\n  }\n}\n```\n\nIf there wasn't a field before `metadata` it would skip over the\n`metadata` field and then end up in an endless loop because it\ndidn't check for the end of input.", "NaN"], ["1229", "move gain of lastDirtyTimestamp before gain of status to avoid race condition", "Addo.Zhang", "addozhang", "09/10/19, 12:01:58 AM", "solution for #1174 ", "NaN"], ["1235", "Uses HashMap if CompactHashMap is not available on classpath.", "Spencer Gibb", "spencergibb", "09/04/19, 04:56:03 PM", "This allows eureka users to exclude compactmap library if they so choose.", "NaN"], ["1237", "Optimized CircularQueue by using ArrayBlockingQueue with constant time size implementation", "Arthur Gavlyukovskiy", "gavlyukovskiy", "09/30/19, 04:51:17 PM", "Since `AbstractInstanceRegistry` already have synchronization on `recentRegisteredQueue` and `recentCanceledQueue` it's safe to change `CircularQueue` implementation to extend `LinkedList` with constant time `size()`.\n\nBenchmark:\n```\nimport org.openjdk.jmh.annotations.Benchmark;\nimport org.openjdk.jmh.annotations.BenchmarkMode;\nimport org.openjdk.jmh.annotations.Fork;\nimport org.openjdk.jmh.annotations.Level;\nimport org.openjdk.jmh.annotations.Measurement;\nimport org.openjdk.jmh.annotations.Mode;\nimport org.openjdk.jmh.annotations.OutputTimeUnit;\nimport org.openjdk.jmh.annotations.Scope;\nimport org.openjdk.jmh.annotations.Setup;\nimport org.openjdk.jmh.annotations.State;\nimport org.openjdk.jmh.annotations.Warmup;\nimport org.openjdk.jmh.runner.Runner;\nimport org.openjdk.jmh.runner.RunnerException;\nimport org.openjdk.jmh.runner.options.Options;\nimport org.openjdk.jmh.runner.options.OptionsBuilder;\n\nimport java.util.concurrent.TimeUnit;\n\n@BenchmarkMode(Mode.Throughput)\n@OutputTimeUnit(TimeUnit.SECONDS)\n@State(Scope.Benchmark)\n@Fork(value = 2)\n@Warmup(iterations = 3, batchSize = 10000)\n@Measurement(iterations = 3, batchSize = 10000)\npublic class CircularQueueBenchmark {\n\n    private final EurekaCircularQueue<String> eureka = new EurekaCircularQueue<>(10000);\n    private final EurekaCircularQueueLinkedList<String> eurekaLinkedList = new EurekaCircularQueueLinkedList<>(10000);\n\n    @Setup(Level.Iteration)\n    public void setup(){\n        eureka.clear();\n        eurekaLinkedList.clear();\n    }\n\n    @Benchmark\n    public EurekaCircularQueue<String> eureka() {\n        synchronized (eureka) {\n            eureka.add(\"something\");\n        }\n        return eureka;\n    }\n\n    @Benchmark\n    public EurekaCircularQueueLinkedList<String> eurekaLinkedList() {\n        synchronized (eurekaLinkedList) {\n            eurekaLinkedList.add(\"something\");\n        }\n        return eurekaLinkedList;\n    }\n\n    public static void main(String[] args) throws RunnerException {\n        Options opt = new OptionsBuilder()\n                .include(CircularQueueBenchmark.class.getSimpleName())\n                .build();\n\n        new Runner(opt).run();\n    }\n}\n```\nResults:\n```\nBenchmark                                 Mode  Cnt     Score     Error  Units\nCircularQueueBenchmark.eureka            thrpt    6     3.297 \u00b1   0.005  ops/s\nCircularQueueBenchmark.eurekaLinkedList  thrpt    6  3893.782 \u00b1 110.320  ops/s\n```\n\nfixes #1236", "NaN"], ["1245", "address cache bug with value supplier", "Tom Cellucci", "tcellucci", "09/30/19, 04:57:04 PM", "this PR is a different fix to issue #1242, \"Fix DeserializerStringCache if value transformer is used\". See issue 1242 for details on the situation, but the summary is that the DeserializerStringCache may not properly handle caching for strings when a 'value transformer' is present.\n\nThe fix in this PR updates the CharacterBuffer classes to include a new 'variant' field that disambiguates identical cache entries with the same key but different values.  The value of 'variant' is unique to the type of the valueTransformer, which is appropriate for implementations that provide consistent output for a given cached 'string' (as seen in Eureka's InstanceInfoDeserializer).\n\nThanks to GFriedrich, who identified this issue and submitted alternate PR https://github.com/Netflix/eureka/pull/1243 as well as a unit test to isolate the issue.  His test is also incorporated with this PR.", "NaN"], ["1251", "Cleanup resources on web-app shutdown (#1207)", "Stephan Windm\u00fcller", "windmueller", "11/11/19, 05:55:19 PM", "In order to allow a clean shutdown, I canceled various timers and unregistered a number of Servo monitors. The `CurrentRequestVersion` got a `remove` method so that the `ThreadLocal` can be cleared after use.\n\nThe (in my opinion) only ugly solution is `ServoControl` which stops the executor of Servo since the library seems to be no longer maintained.", "NaN"], ["1262", "Disable jersey2 jsonp/moxy auto discovery", "Matt Nelson", "mattnelson", "12/20/19, 05:41:42 PM", "Disable moxy/jsonp autodiscovery as the eureka client usage leverages an explicitly registered message body reader/writer.\n\nWhen moxy or another json processor(jsonp) are on the classpath, they will be autodiscovered and registered into the transport/application clients which causes errors as those other providers take precedence over the DiscoveryJerseyProvider.\n\nExample stack trace of moxy attempting to handle the request\n```\n\tat org.eclipse.persistence.jaxb.rs.MOXyJsonProvider.readFrom(MOXyJsonProvider.java:695)\n\tat org.glassfish.jersey.message.internal.ReaderInterceptorExecutor$TerminalReaderInterceptor.invokeReadFrom(ReaderInterceptorExecutor.java:256)\n\tat org.glassfish.jersey.message.internal.ReaderInterceptorExecutor$TerminalReaderInterceptor.aroundReadFrom(ReaderInterceptorExecutor.java:235)\n\tat org.glassfish.jersey.message.internal.ReaderInterceptorExecutor.proceed(ReaderInterceptorExecutor.java:155)\n\tat org.glassfish.jersey.spi.ContentEncoder.aroundReadFrom(ContentEncoder.java:127)\n\tat org.glassfish.jersey.message.internal.ReaderInterceptorExecutor.proceed(ReaderInterceptorExecutor.java:155)\n\tat org.glassfish.jersey.message.internal.MessageBodyFactory.readFrom(MessageBodyFactory.java:1085)\n\tat org.glassfish.jersey.message.internal.InboundMessageContext.readEntity(InboundMessageContext.java:874)\n\tat org.glassfish.jersey.message.internal.InboundMessageContext.readEntity(InboundMessageContext.java:808)\n\tat org.glassfish.jersey.client.ClientResponse.readEntity(ClientResponse.java:326)\n\tat org.glassfish.jersey.client.InboundJaxrsResponse$1.call(InboundJaxrsResponse.java:115)\n\tat org.glassfish.jersey.internal.Errors.process(Errors.java:315)\n\tat org.glassfish.jersey.internal.Errors.process(Errors.java:297)\n\tat org.glassfish.jersey.internal.Errors.process(Errors.java:228)\n\tat org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:419)\n\tat org.glassfish.jersey.client.InboundJaxrsResponse.runInScopeIfPossible(InboundJaxrsResponse.java:267)\n\tat org.glassfish.jersey.client.InboundJaxrsResponse.readEntity(InboundJaxrsResponse.java:112)\n\tat com.netflix.discovery.shared.transport.jersey2.AbstractJersey2EurekaHttpClient.getApplicationsInternal(AbstractJersey2EurekaHttpClient.java:266)\n```", "NaN"], ["1265", "Gracefully handle HTML errors from Eureka server", null, "Helmsdown", "12/19/19, 09:46:54 PM", "It possible to get HTML responses from the server (e.g. Apache fails to\ntalk to backend API). These would result in a failure to deserialize\nand a random exception logged.", "NaN"], ["1271", "decrement expectedNumberOfClientsSendingRenews for expired leases", "Snow Pettersen", "snowp", "01/27/20, 06:28:33 PM", "Moves the logic that decrements the expected number of clients into\n`internalCancel` - this should ensure that we're calling it both for\nexplicit cancels as well as well as when the instance lease expires.\n\nFixes #1266", "NaN"], ["1275", "Broadcast public ipv4 addresses on override", "Argha C", "argha-c", "02/03/20, 09:50:54 PM", "This is a quick and dirty PR to get Eureka to return public ipv4 addresses when overriden by a new config flag `broadcastPublicIpv4`.\n\nHowever, it doesn't fundamentally alter the behavior of `resolveDefaultAddress` as part of this change. \n\n/cc @drobertduke ", "NaN"], ["1282", "Add stats for DiscoveryClient", "Bennett", "yobennett", "04/07/20, 05:27:28 PM", "We introduce a nested class for `DiscoveryClient` to make it easier for users to read helpful attributes that can assist in log analysis and debugging. Most of these attributes are captured by existing metrics:\n\n* `initTimestampMs`: timestamp when the client was initialized\n* `localRegistrySize`: number of instances for all applications\n* `lastSuccessfulRegistryFetchTimestampMs`: timestamp for last successful fetch\n* `lastSuccessfulHeartbeatTimestampMs`: timestamp for last successful heartbeat\n\nWe add a new attribute called `initLocalRegistrySize`, which is the number of instances for all applications read when the client was initialized. We include a helper method that uses this attribute so that users can determine whether the client's initial fetch of registry information succeeded or failed. Note that other accessors are suffixed with `Ms` (for milliseconds) to denote the time unit.\n\nAdditionally, we update the existing `registrySize` with the value from `initLocalRegistrySize` during initialization instead of waiting until the first local registry refresh.", "NaN"], ["1283", "Update unit tests", "Kaze", "melochin", "04/06/20, 06:22:19 PM", "update ``InstanceInfoReplicatorTest`` and ``RateLimiterTest``\n1. remove staled mock code in ``InstanceInfoReplicatorTest.setup()``\n2. change the loop condition in ``RateLimiterTest.testEvenLoad()``. Otherwise, the loop body will not be executed.\n", "NaN"], ["1284", "upgrade jackson to - 2.9.10", null, "RakefetEP", "04/07/20, 10:45:15 PM", "(for some security fixes)", "NaN"], ["1287", "resolve endpoint zone from metadata", "\u866b\u4e8c", "MI-cool", "05/27/20, 04:43:08 PM", "endpoint zone can be get from metadata", "NaN"], ["1288", "Checks for existence of ConfigurationManager.", "Spencer Gibb", "spencergibb", "04/30/20, 10:19:06 PM", "This is useful if a project has excluded Archaius 1 such as spring-cloud-netflix. This is a simple workaround.", "NaN"], ["1289", "update to latest gradle wrapper", "Snow Pettersen", "snowp", "04/30/20, 10:17:32 PM", "Updates the gradle wrapper to 6.3, the neubla plugin to latest version\nand replaces the jetty module with org.gretty as the jetty module has\nbeen removed.\n\nMove to org.gretty is motivated by https://stackoverflow.com/questions/50119925/error-while-replacing-jetty-plugin-to-gretty-plugin-gradle\n\nFixes #1276", "NaN"], ["1293", "Remove uses of 'provided' in the eureka client", "David Robert Duke", "drobertduke", "05/11/20, 10:09:55 PM", "After updating gradle, we can stop using the deprecated 'provided' configuration.\nThis fixes an issue where the jackson-dataformat-xml and woodstox-core dependencies are affecting projects consuming eureka-client.", "NaN"], ["1295", "Remove sudo configuration", null, "dengliming", "05/11/20, 10:10:19 PM", "A PR for [https://github.com/Netflix/eureka/issues/1195](https://github.com/Netflix/eureka/issues/1195)", "NaN"], ["1296", "Update Compactmap library to 2.0", "Jaromir Hamala", "jerrinot", "05/26/20, 08:35:20 PM", "Compactmap 2.0 has been relicensed under the Apache 2.0 license.\nSee: https://github.com/vlsi/compactmap/issues/6\n\nPrevious versions use LGPL.\nThis caught multiple projects by surprise. See for example\nhttps://github.com/spring-cloud/spring-cloud-netflix/issues/3636\nor https://github.com/hazelcast/hazelcast-eureka/issues/52", "NaN"], ["1299", "Modify iteration Map Mode", "zhangzhiqiang", "qq1036916439", "06/02/20, 04:30:56 PM", "Modify iteration Map Mode\u3002I think the performance through entrySet Iterate Map is better.", "NaN"], ["1300", "Revert \"Improve map iteration in JerseyApplicationClient\"", null, "troshko111", "06/02/20, 05:59:01 PM", "Reverts Netflix/eureka#1299", "NaN"], ["1301", "Modify iteration Map function", "zhangzhiqiang", "qq1036916439", "06/02/20, 08:01:54 PM", "Modify iteration Map Mode.I think the performance through entrySet Iterate Map is better.\nThank you!", "NaN"], ["1303", "Resolve spinlock issue in AcceptorExecutor thread", "Kevin Larose", "larosek", "06/10/20, 06:55:30 PM", "I ran into an issue where an AcceptorExecutor thread would not shutdown and was using 100% cpu. This thread shutdown will happen when a PeerEurekaNode is removed from the list of nodes.\n\nHere is a snippet of the thread dump: \n```\n\"TaskAcceptor-target_ec2-xx-xx-xx-xxx.compute-1.amazonaws.com\" - Thread t@47\n   java.lang.Thread.State: RUNNABLE\n\tat com.netflix.eureka.util.batcher.AcceptorExecutor$AcceptorRunner.drainInputQueues(AcceptorExecutor.java:234)\n\tat com.netflix.eureka.util.batcher.AcceptorExecutor$AcceptorRunner.run(AcceptorExecutor.java:189)\n\tat java.base@11.0.7/java.lang.Thread.run(Thread.java:834)\n   Locked ownable synchronizers:\n\t- None\n```\n\nYou can see in the heap dump screenshot below that shutdown was properly called and received by the thread. Also, you will notice that all 3 queues (reprocessQueue, acceptorQueue and  pendingTasks) are empty, causing the drainInputQueues while loop to get stuck.\n\n![heapdump](https://user-images.githubusercontent.com/2784286/84155158-04943880-aa36-11ea-8287-c928caee3664.jpg)\n\nIf you were to be unlucky, when shutdown was called, you could fall into a condition where nothing was added to the pendingTasks queue and both reprocess and acceptor queue would stay empty since the executor was shutdown.\n\nI did a quick and dirty unit test locally to reproduce the issue, but since this is a timing issue, the test would sometime pass without the fix in position. Of course, when the fix was there I was not able to make the test fail. Because of that, I decided not to add the unit test since it was not very robust. Let me know if you have an idea on how to elegantly test this! Thanks!", "NaN"], ["1304", "Travis CI: Trusty is EOL", "Christian Clauss", "cclauss", "07/07/20, 07:05:01 PM", "NaN", "NaN"], ["1307", "Add shouldEnforceFetchRegistryAtInit config", "Bennett", "yobennett", "06/18/20, 05:27:30 PM", "We add a `shouldEnforceFetchRegistryAtInit` configuration to support users that want the Eureka client to fail fast during initialization. If `shouldEnforceFetchRegistryAtInit` is set to `true` then the client will throw an `IllegalStateException` during instance construction if its initial attempt to fetch of information from the remote Eureka servers is unsuccessful. This setting does not have an effect if `shouldFetchRegistry` is set to `false`.", "NaN"], ["1308", "fix typo", "hujie", "hujiecs", "06/22/20, 08:09:52 PM", "NaN", "NaN"], ["1311", "Update Jackson to 2.9.10.4", null, "troshko111", "06/26/20, 08:07:10 PM", "NaN", "NaN"], ["1313", "Replace valueOf to parseLong", "HeemangHan", "Hanope", "06/30/20, 05:13:06 PM", "Because the declared variable is primitive type, it is better to use `parseLong`.\nI think creating a Long instance using `valueOf` and unwrapping again it is an unnecessary process.", "NaN"], ["1314", "fix typos", "HeemangHan", "Hanope", "06/30/20, 04:20:35 PM", "NaN", "NaN"], ["1317", "Unbreak EurekaClientConfig interface compat", null, "troshko111", "06/29/20, 11:28:28 PM", "EurekaClientConfig is treated as stable backward-compat API as of couple of years ago, update it to preserve backward-compat.", "NaN"], ["1321", "Cleanup Issues Found by Muse", "Nes Cohen", "nescohen", "08/17/20, 05:54:21 PM", "This PR cleans up some issues found by a new static analysis platform we just released called Muse. We\u2019ve been using Eureka as a test case after being pointed to it by someone at Netflix and wanted to contribute fixes for some of the issues it found.\n\nThis PR addresses these bug types among others:\n\n-  https://errorprone.info/bugpattern/LockNotBeforeTry\n\n-  https://errorprone.info/bugpattern/ModifyCollectionInEnhancedForLoop\n\n-  https://fbinfer.com/docs/next/all-issue-types/#null_dereference", "NaN"], ["1327", "Downgrade log level of noisy log messages", "James Mulcahy", "jamesmulcahy", "08/25/20, 05:25:28 PM", "NaN", "NaN"], ["1328", "Log status transitions to DOWN at error level, instead of warn", "James Mulcahy", "jamesmulcahy", "08/28/20, 05:24:39 PM", "I also dropped the transitions out of down to info, rather than warn, since\nthere isn't really anything to be concerned about on such a transition", "NaN"], ["1333", "bump jackson-databind do 2.9.10.6", "Ivan Porto Carrero", "casualjim", "09/14/20, 05:26:24 PM", "Fixes #1326", "NaN"], ["1334", "rename runtime scopes to runtimeOnly", "Ivan Porto Carrero", "casualjim", "09/11/20, 05:19:19 PM", "fixes 1329", "NaN"], ["1335", "Fix some incorrect logging in AbstractInstanceRegistry", "Mike Smith", "kerumai", "09/11/20, 05:21:14 PM", "The status being logged in `AbstractInstanceRegistry.renew()`  is not the correct one. This is resulting in confusing log statements saying that the overridden status was `UNKNOWN`.", "NaN"], ["1337", "Upgrade xstream to fix illegal reflection access reported by tomcat", "James Mulcahy", "jamesmulcahy", "09/23/20, 11:21:01 PM", "NaN", "NaN"], ["1338", "Fix log line which was generating a compiler warning", "James Mulcahy", "jamesmulcahy", "09/23/20, 11:20:49 PM", "NaN", "NaN"], ["1342", "Add jaxb-runtime, which is required for Java >=11", "James Mulcahy", "jamesmulcahy", "09/23/20, 11:20:32 PM", "NaN", "NaN"], ["1343", "Remote fetch metrics", "James Mulcahy", "jamesmulcahy", "09/28/20, 10:38:59 PM", "NaN", "NaN"], ["1344", "Record fetch mismatches and success counts", "James Mulcahy", "jamesmulcahy", "09/29/20, 12:19:30 AM", "NaN", "NaN"], ["1345", "Register RemoteRegionRegistry with the servo monitors", "James Mulcahy", "jamesmulcahy", "09/29/20, 05:53:41 PM", "Without this, it won't collect the metrics.  The annotation alone isn't enough", "NaN"], ["1350", "fix #1336 resource needs to be closed", "Chase Diem", "abracadv8", "10/09/20, 10:42:01 PM", "Fix #1336 FileInputStream requires a call to close() to release resources.\n\nContribution on behalf of Comcast.", "NaN"], ["1352", "Add IPv6 address to the datacenter metadata keys", "Phil Rud", "philrud", "10/15/20, 06:34:39 PM", "* introduce a new datacenter metadata key for the primary IPv6 address\n* update existing tests to make sure the new key can be used while specifying default address resolution order", "NaN"], ["1353", "Add a metric to report selfPreservationMode", "James Mulcahy", "jamesmulcahy", "10/14/20, 09:52:05 PM", "NaN", "NaN"], ["1356", "Bump default connection idle timeout", "Ling Yuan", "fiibbb", "10/16/20, 07:52:05 PM", "Bump default connection idle timeout to 45 seconds.", "NaN"], ["1358", "Update vulnerable deps #1357 #1351", null, "troshko111", "10/29/20, 01:58:15 AM", "NaN", "NaN"], ["1359", "Update Build Status Location", "Steve Hill", "sghill", "10/29/20, 08:29:45 PM", "This build has been migrated to travis-ci.com as per their [recommendation](https://mailchi.mp/3d439eeb1098/travis-ciorg-is-moving-to-travis-cicom).", "NaN"], ["1361", "Make instance config factory support custom amazon info provider", "Ling Yuan", "fiibbb", "11/06/20, 06:01:36 PM", "This diff adds `CustomAmazonInfoProviderInstanceConfigFactory`. This allow us to inject custom implementation of `<Provider>AmazonInfo`. The intention is to bind this new factory implementation to the `EurekaInstanceConfigFactory` interface, as documented [here](https://github.com/Netflix/eureka/blob/master/eureka-client-archaius2/src/main/java/com/netflix/discovery/guice/EurekaClientModule.java#L22), so that users can control how `AmazonInfo` is provided.", "NaN"], ["1363", "Fix GzipEncodingEnforcingFilter getHeaders always with a const value", "Kebe", "kebe7jun", "12/01/20, 07:07:53 PM", "HttpHeaders.ACCEPT_ENCODING only need add to header names, not values.", "NaN"], ["1365", "Fix DiscoveryManager", "Ling Yuan", "fiibbb", "11/11/20, 09:38:37 PM", "The legacy `DiscoveryManager` relies on explicitly setting its inner `EurekaInstanceConfig` to function properly. ", "NaN"], ["1366", "Revert log level of 'Saw local status' error", "James Mulcahy", "jamesmulcahy", "11/12/20, 06:42:17 PM", "NaN", "NaN"], ["1370", "Fix #1367 (update xstream)", null, "troshko111", "12/01/20, 07:26:01 PM", "NaN", "NaN"], ["1376", "Make eureka instance config namespace configurable", "Ling Yuan", "fiibbb", "01/14/21, 12:34:29 AM", "Make eureka instance config namespace configurable. This allow us to use `CustomAmazonInfoProviderInstanceConfigFactory` the same way as `CompositeInstanceConfigFactory`.\n\nSpecifically, when we use `CompositeInstanceConfigFactory`, we can override the config namespace for which `InstaceConfig` reads its data from, using DI. Within Netflix this is overridden from `eureka` to `netflix.appinfo`. In `CustomAmazonInfoProviderInstanceConfigFactory`, however, this config namespace was previously hardcoded, causing test failures.", "NaN"], ["1377", "Updates xstream to 1.4.15", "Spencer Gibb", "spencergibb", "01/20/21, 05:27:39 PM", "NaN", "NaN"], ["1380", "Upgrade nebula.netflixoss to replace bintray publication and update TravisCI Secrets", "Roberto Perez Alcolea", "rpalcolea", "03/03/21, 11:51:11 PM", "Hi folks,\n\nAs you might be aware, JFrog is sunsetting Bintray and JCenter: https://jfrog.com/blog/into-the-sunset-bintray-jcenter-gocenter-and-chartcenter/\n\nThis upgrades to Nebula NetflixOSS which will publish to Nebula's OSS repos and Maven Central.\n\nRepositories based on status:\n\n* https://netflixoss.jfrog.io/artifactory/maven-oss-snapshots\n* https://netflixoss.jfrog.io/artifactory/maven-oss-candidates\n* https://netflixoss.jfrog.io/artifactory/maven-oss-releases\n", "NaN"], ["1381", "Replace jcenter with maven central", "Roberto Perez Alcolea", "rpalcolea", "03/18/21, 10:04:58 PM", "This replaces jcenter with maven central to avoid broken builds in the future\n", "NaN"], ["1383", "Update ResolverUtils::randomize", "Jacques-Etienne Beaudet", "jebeaudet", "04/13/21, 05:53:49 PM", "The method will now properly randomize a list with a different result on each invocation. Using a constant seed made the same list of `[\"a\",\"b\",\"c\"]` always \"randomized\" to the same result on each invocation.\n\nSince `SessionedEurekaHttpClient` is supposed to round robin through the different eureka endpoints at a configurable interval, having a randomize method that always returns the same value render this class useless.\n\nThanks", "NaN"], ["1386", "Upgrade xstream-1.4.15 to 1.4.16 for CVE-2021-213{41-51}.", "\u5f20\u9038\u626c", "gdut-yy", "03/31/21, 05:52:07 PM", "Upgrade xstream-1.4.15 to 1.4.16 for CVE-2021-213{41-51}.\n\nissue https://github.com/Netflix/eureka/issues/1385", "NaN"], ["1393", "Update Jackson to 2.10 branch", null, "troshko111", "05/18/21, 09:24:40 PM", "NaN", "NaN"], ["1397", "Upgrade xstream-1.4.16 to 1.4.17 for CVE-2021-29505.", "\u5f20\u9038\u626c", "gdut-yy", "05/21/21, 11:39:47 PM", "Upgrade xstream-1.4.16 to 1.4.17 for CVE-2021-29505.\n\nhttps://github.com/Netflix/eureka/issues/1396", "NaN"], ["1401", "Update AbstractJerseyEurekaHttpClient log info", "iZDT", "izdt", "06/09/21, 05:45:32 PM", "serviceUrl has been add \"/\" at the end by org.springframework.cloud.netflix.eureka.EurekaClientConfigBean#getEurekaServerServiceUrls.\n\n```\nif (!endsWithSlash(eurekaServiceUrl)) {\n\teurekaServiceUrl += \"/\";\n}\n```\n\nfix the log of  \"eureka//apps\"...", "NaN"], ["1402", "allow null values for healthcheck", "Sergey Krutsko", "krutsko", "06/11/21, 04:46:58 PM", "This change is needed to allow override `getHealthCheckUrl()` in InstanceConfig class, so `healthCheckUrl` won't be added to instance info of eureka registry.\n\ni.e. \n```\n    @Override\n    public String getHealthCheckUrl() {\n        return null;\n    }\n```", "NaN"], ["1405", "refactor: use diamond operator", "Gregor Riegler", "gregorriegler", "06/16/21, 11:07:13 PM", "Co-authored-by: Moderne <team@moderne.io>", "NaN"], ["1412", "Refactor: use diamond operator", "Aravindh Rajagopalan", "schrosolver", "06/30/21, 06:17:58 AM", "NaN", "NaN"], ["1417", "Enable setting a EurekaClient instance in DiscoveryManager", "Asi Bross", "asibross", "08/05/21, 09:17:27 PM", "NaN", "NaN"], ["1418", "Remove TravisCI and use Github Actions", "Roberto Perez Alcolea", "rpalcolea", "08/17/21, 06:47:55 PM", "NaN", "NaN"], ["1420", "Fix xstream security issue CVE-2021-39139", "chi-chi weng", "wcc526", "08/23/21, 04:51:19 PM", "Fix xstream security issue CVE-2021-39139\n\nhttps://x-stream.github.io/security.html", "NaN"]]