[["1", "Wx3 warning", "James Crook", "JamesCrook", "03/28/15, 04:13:55 PM", "NaN", "NaN"], ["2", "Bug 897", "James Crook", "JamesCrook", "04/02/15, 10:14:26 AM", "NaN", "NaN"], ["3", "Fix bug 881 - Status messages were swapped.", "James Crook", "JamesCrook", "04/02/15, 10:17:05 AM", "NaN", "NaN"], ["4", "Adding .gitignore", "James Crook", "JamesCrook", "04/02/15, 10:33:06 AM", "NaN", "NaN"], ["5", "Wx3 warning", "James Crook", "JamesCrook", "04/02/15, 03:03:03 PM", "NaN", "NaN"], ["6", "add configuration for Travis CI", null, "ThomasFeher", "04/03/15, 01:28:11 PM", "This opens the possibility to automatically (it takes about 10 minutes) see if the latest master builds correctly and also if pull requests build correctly.\n\nIt requires to register the audacity github account at Travis CI, which is straight forward using the green \"sign in with Github\" button at the top right at https://travis-ci.org\n\nUnfortunately it seems that only Linux builds are possible at the moment. But it is free for open source projects, so why not take advantage of it.", "Thanks Thomas.\nIs Travis OK with us having sudo apt-get\nIIRC there were issues around using sudo?\n =||= There was no problem using sudo when testing this PR.\nThe manual mentions it here:\nhttp://docs.travis-ci.com/user/build-configuration/#Installing-Packages-Using-apt\nso it seems OK.\n =||= Great.  OK.  I've merged and enabled Travis.\n\nMost of our communication is on https://lists.sourceforge.net/lists/listinfo/audacity-devel .If you'd like to talk with the team about this, I encourage you to sign up.  Peter Sampson who is on that list is very keen for us to develop automated testing.  Gale Andrews who has been building alphas for testing by hand will be delighted to see this. I'm (of course) also interested in hearing more.  You can also contact me off list instead, james.k.crook@gmail.com.  You can probably see, we have only just started using Git and GitHub.\n =||= "], ["7", "Chains: ChangeSpeed now reads/writes percentage change parameter.", "James Crook", "JamesCrook", "04/04/15, 09:38:53 AM", "NaN", "NaN"], ["8", "Bug765 - Delays using Edit commands and Draw Tool in long projects", "James Crook", "JamesCrook", "04/05/15, 02:43:17 PM", "A 4hr track used to take about 20s to cut a few samples.  This is now significantly improved, to around 3s.  Leland did this by \n\n(a) moving the size calculation to when we examine the undo history, so it isn't slowing down the edits.\n(b) in size calculation, using sizes that are cached rather than going to disk to find the sizes.\n(c) writing the autosave file which is to an FFIle to a string first, i.e. using XMLStringWriter as a buffer for XMLFileWriter.\n\nStep (c) may also make autosave marginally safer, as the risk of a partially updated autosave file is reduced.", "NaN"], ["9", "Change autosave file to binary format", "Leland Lucius", "lllucius", "04/08/15, 02:04:45 AM", "This will change the autosave file to a binary representation of the XML file.  By doing this, all of the processing required to convert values to a textual format (float, doubles, int, strings) is now moved to recovery instead.  This gets it out of the autosave path and improves responsiveness quite a bit.\n\nEdits in large projects are considerably faster after this change.", "NaN"], ["10", "Nyquist v3.09", "Leland Lucius", "lllucius", "04/07/15, 06:15:08 AM", "NaN", "Updates Nyquist to version 3.09.  We're currently running 3.03 from 2009.\n =||= "], ["11", "Nyquist v3.09", "Leland Lucius", "lllucius", "04/08/15, 02:00:45 AM", "Updates Nyquist to 3.09 from 3.03 (circa 2009).  (Previous pull missed one file)", "Leland, can this be rebased on the new, cleaned-up master branch, so we don't put the tangle of extraneous commits back into history?  I am hoping this will be easy because it's all in subtrees nobody else is touching.\n =||= "], ["12", "Fix for bug 683", "Steve Daulton", "SteveDaulton", "04/08/15, 12:08:41 PM", "Also adds \"m\" prefix to some member variables for consistency.", "Steve, James has cleaned up the recent tangle in repository history, but it is still in the ancestry of your commit, which is why I see 36 commits above, many of them extraneous.  Can you rebase your changes on the new cleaned up master branch?\n =||= Are there instructions for how to do that?\n =||= I am not exactly sure how to advise Steve to do rebase in detail, because I\nhave not succeeded with it yet.  We are all learning this...\n\nI think what you want to do is make sure you have done\n\ngit remote add audacity git@github.com:audacity/audacity.git\ngit fetch audacity/master\n\nThat mirrors the cleaned up branch for you locally.  And then, to take just\nyour last three commits that I see in your master,\n\ngit checkout master\ngit rebase --onto remotes/audacity/master HEAD~3\n\n(I am not sure whether you really need the \"remotes/\" part)\n\nIf that fails, you may need git rebase --abort to get back to a good state,\nbut if it works, you may need -f to push to your master and lose the old\ntangled up master:\n\ngit push -f origin master\n\nReference:\nhttp://git-scm.com/docs/git-rebase\n\nOn Tue, Apr 7, 2015 at 6:44 PM, Steve Daulton notifications@github.com\nwrote:\n\n> Are there instructions for how to do that?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/audacity/audacity/pull/12#issuecomment-90751764.\n =||= Be careful though.  Somewhere along the line I wound up rebasing my entire repo and lost the 3 branches I had there.  Wasn't a biggie...I just recreated them (well, all but 1 so far).\n =||= I understand git reflog may help you rediscover \"lost\" branches, or\n\"dangling commits,\" which are not reachable from any branch head.\n\nOn Tue, Apr 7, 2015 at 11:20 PM, Leland Lucius notifications@github.com\nwrote:\n\n> Be careful though. Somewhere along the line I wound up rebasing my entire\n> repo and lost the 3 branches I had there. Wasn't a biggie...I just\n> recreated them (well, all but 1 so far).\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/audacity/audacity/pull/12#issuecomment-90792414.\n =||= An alternative to rebase is the \"cherry-pick\" command which lets you\nre-apply one diff at a time elsewhere in the graph.\n\nOn Wed, Apr 8, 2015 at 12:18 AM, Paul Licameli paul.licameli@gmail.com\nwrote:\n\n> I understand git reflog may help you rediscover \"lost\" branches, or\n> \"dangling commits,\" which are not reachable from any branch head.\n> \n> On Tue, Apr 7, 2015 at 11:20 PM, Leland Lucius notifications@github.com\n> wrote:\n> \n> > Be careful though. Somewhere along the line I wound up rebasing my entire\n> > repo and lost the 3 branches I had there. Wasn't a biggie...I just\n> > recreated them (well, all but 1 so far).\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/audacity/audacity/pull/12#issuecomment-90792414.\n =||= Well, both of those options would have been handy.  :-)  But, I just went with recreating the branches as it was pretty easy to do.\n\nThanks,\n\nLeland\n =||= On 8 April 2015 at 04:20, Leland Lucius notifications@github.com wrote:\n\n> Be careful though. Somewhere along the line I wound up rebasing my entire\n> repo and lost the 3 branches I had there. Wasn't a biggie...I just\n> recreated them (well, all but 1 so far).\n> \n> Thanks for the warning but it's hard to \"be careful\" when I don't know what\n> I'm doing :-)\n\nWhat happened here?\nWas it  that:\nThe audacity/audacity repository became messed up, causing all other forks\nto be messed up, and now the audacity/audacity master has been \"cleaned\",\ncommits from forks will mess it up again?\n\nWould it be better if I deleted my fork and used SVN for now?\n\nSteve\n\n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/audacity/audacity/pull/12#issuecomment-90792414.\n =||= If it's easy to redo your changes, then do what I did.  It was an accident for me, but it worked.  :-)  You could delete your fork:\n\nhttps://help.github.com/articles/deleting-a-repository/\n\nThen just fork again and reapply your change.\n =||= I've deleted my repository and will start again.\n =||= Sorry for the grief.\n\nThe problem was that audacity/master got messy, and the mess was reverted\nand replaced with equivalent code changes but a neater history.  We need to\nbase further changes on the new history to avoid merging the messy parts\nback in again.\n\ngit rebase is supposed to make that sort of thing easy -- picking up a\nbranch you have not yet pushed, and moving it elsewhere in the graph.  I\nmade my first successful use of that command today.\n\nOn Wed, Apr 8, 2015 at 8:08 AM, Steve Daulton notifications@github.com\nwrote:\n\n> I've deleted my repository and will start again.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/audacity/audacity/pull/12#issuecomment-90893711.\n =||= Oh no...not a big deal.  The more we play/learn at the beginning, the better off we'll be later.\n =||= Here's another discovery:  if I rebase a banch that I already pushed to my\nremote, public sandbox (not to audacity), then I need the -f (force) option\nto push it again.  Else it complains that the branch on the remote is not\nupstream of the branch I am pushing.\n\nOn Wed, Apr 8, 2015 at 10:41 AM, Leland Lucius notifications@github.com\nwrote:\n\n> Oh no...not a big deal. The more we play/learn at the beginning, the\n> better off we'll be later.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/audacity/audacity/pull/12#issuecomment-90936390.\n =||= Paul, yes.  After a rebase you have 'rewritten history' and a push of the local branch that is tracking a remote branch will need a -f. \n\nWe should avoid doing push -f to audacity/audacity as that could/will overwrite changes already made by someone else.  In your own repo it is just fine.\n\nAlso if you have done a push -f, and then make further changes on your branch and push again, you don't need a -f the second time (unless you've also rebased again).  The history matches, so there is no rewriting of history to do.\n =||= "], ["13", "This will change the autosave file to a binary representation of the XML", "Leland Lucius", "lllucius", "04/17/15, 08:49:12 PM", "file. By doing this, all of the processing required to convert values to\na textual format (float, doubles, int, strings) is now moved to recovery\ninstead. This gets it out of the autosave path and improves responsiveness\nquite a bit.\n\nEdits in large projects are considerably faster after this change.", "NaN"], ["14", "Nyquist 3.09", "Leland Lucius", "lllucius", "04/08/15, 11:36:14 AM", "NaN", "NaN"], ["15", "Update lv2 libs", "Leland Lucius", "lllucius", "04/08/15, 11:36:39 AM", "Prepping for update LV2 effect handling", "NaN"], ["16", "Removing unused/obsolete libraries from lib-src", "Leland Lucius", "lllucius", "04/08/15, 12:46:34 PM", "Libs removed:\n\nid3lib\nlibresample\nlibsamplerate\nportburn\ntaglib (can always put it back in if needed)\n\nThis effectively makes libsoxr THE resampling lib for Audacity and\nchanges were made to include it in the minsrc tarball.", "NaN"], ["17", "Meter refresh rate not updated when leaving preferences.", "Leland Lucius", "lllucius", "04/08/15, 11:35:08 AM", "NaN", "NaN"], ["18", "Removing unused/obsolete libraries from lib-src", "Leland Lucius", "lllucius", "04/13/15, 06:48:05 PM", "Libs removed:\n\nid3lib\nlibresample\nlibsamplerate\nportburn\ntaglib\n\nThis effectively makes libsoxr THE resampling lib for Audacity.\n\nIn addition, changes were made to include it in the minsrc tarball.", "This will not automatically merge.\n\nmight portburn be useful in the future?\n\nClosing this pull request, and suggesting that instead you just remove things you are fairly sure we won't need.  We can always add back (more up to date versions) later if we want them.\n =||= Actually, I find it unlikely that portburn would be useful in the future.  Dominic started it on OSX.  I updated and added the Windows stuff.  But, it's been years and I doubt that it will ever see the light of day (or if it even still works).\n\nEven so, I'll removed the other libs and leave portburn.  The only one without an upstream version is libresample and we can always pull it from history if needed.\n =||= "], ["19", "Adding changes that I missed when redoing my branches.", "Leland Lucius", "lllucius", "04/08/15, 03:23:00 PM", "NaN", "NaN"], ["20", "VS2013 includes the log2() function, so prevent Nyquist from defining it...", "Leland Lucius", "lllucius", "04/08/15, 04:32:02 PM", "....", "The .patch file should not be part of the commit?\n\nOn Wed, Apr 8, 2015 at 12:31 PM, Leland Lucius notifications@github.com\nwrote:\n\n> ## ....\n> \n> You can view, comment on, or merge this pull request online at:\n> \n>   https://github.com/audacity/audacity/pull/20\n> Commit Summary\n> - VS2013 includes the log2() function, so prevent Nyquist from\n>   defining it.\n> \n> File Changes\n> - _M_ lib-src/audacity-patches.txt\n>   https://github.com/audacity/audacity/pull/20/files#diff-0 (1)\n> - _M_ lib-src/libnyquist/nyquist/nyqsrc/sound.c\n>   https://github.com/audacity/audacity/pull/20/files#diff-1 (2)\n> - _A_ lib-src/libnyquist/sound.patch\n>   https://github.com/audacity/audacity/pull/20/files#diff-2 (20)\n> \n> Patch Links:\n> - https://github.com/audacity/audacity/pull/20.patch\n> - https://github.com/audacity/audacity/pull/20.diff\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/audacity/audacity/pull/20.\n =||= Leland, what were the Windows build errors that James says you were fixing?\n\nOn Wed, Apr 8, 2015 at 12:33 PM, Paul Licameli paul.licameli@gmail.com\nwrote:\n\n> The .patch file should not be part of the commit?\n> \n> On Wed, Apr 8, 2015 at 12:31 PM, Leland Lucius notifications@github.com\n> wrote:\n> \n> > ## ....\n> > \n> > You can view, comment on, or merge this pull request online at:\n> > \n> >   https://github.com/audacity/audacity/pull/20\n> > Commit Summary\n> > - VS2013 includes the log2() function, so prevent Nyquist from\n> >   defining it.\n> > \n> > File Changes\n> > - _M_ lib-src/audacity-patches.txt\n> >   https://github.com/audacity/audacity/pull/20/files#diff-0 (1)\n> > - _M_ lib-src/libnyquist/nyquist/nyqsrc/sound.c\n> >   https://github.com/audacity/audacity/pull/20/files#diff-1 (2)\n> > - _A_ lib-src/libnyquist/sound.patch\n> >   https://github.com/audacity/audacity/pull/20/files#diff-2 (20)\n> > \n> > Patch Links:\n> > - https://github.com/audacity/audacity/pull/20.patch\n> > - https://github.com/audacity/audacity/pull/20.diff\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/audacity/audacity/pull/20.\n =||= We can delete it (the patch files) in the next push.  No need to rewrite history.  It is small.  And add .patch to .gitignore.\n =||= The patch file is supposed to be there...it's how we track changes to the libs.  Well, that's how we've historically done it anyway.\n =||= "], ["21", "Add new Nyquist runtime files to Windows project", "Leland Lucius", "lllucius", "04/08/15, 06:17:36 PM", "NaN", "NaN"], ["22", "Don't capture the mouse if it's already captured.", "James Crook", "JamesCrook", "04/09/15, 09:59:42 AM", "Otherwise the following assertion gets triggered:\n../src/common/wincmn.cpp(3271): assert \"!wxMouseCapture::IsInCaptureStack(this)\" failed in CaptureMouse(): Recapturing the mouse in the same window?\n\nBased on the fix provided for an identical assertion triggered elsewhere,\ndescribed here: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=765779", "Thanks Chris!  Merged now.\n =||= "], ["23", "ESC key can abort some dragging actions", "Paul Licameli", "Paul-Licameli", "04/09/15, 09:17:54 PM", "Track panel does nothing special when ESC goes down.\n\nIt would be consistent with other applications to let it abort mouse dragging actions.\n\nI have found it a minor nuisance that I can't abort zooming (horizontally, but especially vertically) when I start it by mistake.  It used to be that I had to complete a zoom in, then zoom out again to find my place.\n\nWith this, I can ESC from it.\n\nIt would make sense to abort other kinds of drags too, but they might need more work.  For instance, to abort time shift, I would expect not just to stop shifting a clip, but also to return it to its original position.  With zooming there is no extra trouble restoring state, because state does not change until button-up.", "Would it be easy to also remove the zooming lines by doing a refresh() on the ESC?  Not essential, but makes it clearer.\n =||= Does that not happen for you already?  I see the zoom lines disappear when\nI try it, horizontal or vertical.\n\nOn Thu, Apr 9, 2015 at 6:12 PM, James Crook notifications@github.com\nwrote:\n\n> Would it be easy to also remove the zooming lines by doing a refresh() on\n> the ESC? Not essential, but makes it clearer.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/audacity/audacity/pull/23#issuecomment-91369104.\n =||= "], ["24", "Bug812 - Vertical scrollbar position should be persistent too, as is hor...", "Paul Licameli", "Paul-Licameli", "04/10/15, 05:10:31 PM", "...izontal\n\nEffective but perhaps inelegant fix.", "The fix works but is a little inelegant.  I'd like at least a token review before it goes in.\n =||= "], ["25", "Add new files to Mac and Linux builds", "Leland Lucius", "lllucius", "04/11/15, 04:23:38 AM", "NaN", "So what's the best procedure to avoid build breaks like this, when I want\nto add a .cpp file, but I am not equipped to build it myself on Mac and\nLinux?\n\nPull requests?\n\nOn Sat, Apr 11, 2015 at 12:23 AM, Leland Lucius notifications@github.com\nwrote:\n\n> Merged #25 https://github.com/audacity/audacity/pull/25.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/audacity/audacity/pull/25#event-278651994.\n =||= I suppose you could hold off on the merge until someone else can prep build changes for the other plats.  Or maybe implement an \"devel/master\" strategy as described by that link you posted the other day:\n\nhttp://nvie.com/posts/a-successful-git-branching-model/\n\nIf a person is pulling from devel, then they know the risks.  \n\nBut, as mentioned on -devel, build breakages happen.  They always have.  I personally don't see them as an overly big deal.  They get fixed up fairly quickly.\n\n> -----Original Message-----\n> From: Paul Licameli [mailto:notifications@github.com]\n> Sent: Friday, April 10, 2015 11:58 PM\n> To: audacity/audacity\n> Cc: Leland Lucius\n> Subject: Re: [audacity] Add new files to Mac and Linux builds (#25)\n> \n> So what's the best procedure to avoid build breaks like this, when I want\n> to add a .cpp file, but I am not equipped to build it myself on Mac and\n> Linux?\n> \n> Pull requests?\n> \n> On Sat, Apr 11, 2015 at 12:23 AM, Leland Lucius notifications@github.com\n> wrote:\n> \n> > Merged #25 https://github.com/audacity/audacity/pull/25.\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/audacity/audacity/pull/25#event-278651994.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/audacity/audacity/pull/25#issuecomment-91761247 .\n> <https://github.com/notifications/beacon/AHAeiJLPtpA15zCE19TG1dUM5W\n> h8_4aaks5n-KFWgaJpZM4D-d7f.gif>\n =||= "], ["26", "Fix build on Fedora 21", "Leland Lucius", "lllucius", "04/13/15, 06:50:52 PM", "NaN", "Please just add the \nLibs: -L\\${libdir} ${lib} -ldl -lm\n\nvia web interface instead.  This patch has a lot of old merge history with it.\n =||= Until you had me change the travis file, I didn't know you could even make small changes like this via the web interface.  That is WAY WAY easier for things like this.\n\n> -----Original Message-----\n> From: James Crook [mailto:notifications@github.com]\n> Sent: Monday, April 13, 2015 1:51 PM\n> To: audacity/audacity\n> Cc: Leland Lucius\n> Subject: Re: [audacity] Fix build on Fedora 21 (#26)\n> \n> Please just add the\n> Libs: -L\\${libdir} ${lib} -ldl -lm\n> \n> via web interface instead. This patch has a lot of old merge history with it.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/audacity/audacity/pull/26#issuecomment-92458366 .\n> <https://github.com/notifications/beacon/AHAeiM7q8NblUGCeGkdTlREAH7\n> pXnaMVks5n_AeNgaJpZM4D-fTv.gif>\n =||= "], ["27", "Add Ukrainian translation to desktop file", "Yuri Chornoivan", "yurchor", "04/11/15, 09:59:44 PM", "Thanks for merging this pull request.", "Thanks!\n =||= "], ["28", "update src/effects/NoiseReduction.cpp to build on wxWidgets 3", "david avery", "daavery", "04/11/15, 09:03:56 PM", "build fails on wx3 with unable to convert const char\\* to wxChar *\n\ncast all wxTranslate to wxString", "NaN"], ["29", "fix linux build", "david avery", "daavery", "04/11/15, 09:56:27 PM", "add #include <math.h>", "Thanks, already spotted and applied.\n =||= "], ["30", "changes to allow building with wxWidgets 2.8, 3.0, and 3.1", "david avery", "daavery", "04/12/15, 10:24:17 AM", "source and windows project / solution files to allow building audacity with wxWidgets 2.8, 3.0, 3.1(git master)\n\nadds wx31-debug and wx31-release build targets to visual studio solution\n\nchanges that are wxwidgets 2.8 incompatable are all protected by wxCHECK_VERSION(3,0,0) version tests\n\nonly issue is src/widgets/ErrorDialog.h\n    MakeModal() is no longer available in wxwidgets so the calls are removed if building on wx3.0 or 3.1", "Why the need for additional build configs?  What changed so drastically between wx3.0 and wx3.1 to require entirely new configs?\n =||= On 4/12/2015 1:09 AM, Leland Lucius wrote:\n\n> Why the need for additional build configs? What changed so drastically \n> between wx3.0 and wx3.1 to require entirely new configs?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub \n> https://github.com/audacity/audacity/pull/30#issuecomment-92002412.\n> \n> the wx dll names all changed \n> wxbase31u.lib;wxbase31u_net.lib;wxmsw31u_adv.lib;wxmsw31u_core.lib;wxmsw31u_html.lib\n\nso either you build for wx30 or wx31 with changed project files or \nsupply both\n\nthe dlls encode major/minor version of wxWidgets on the file name\n\nthe existing debug/release targets are 2.8\nthe existing wx3-debug/wx3-release targets are 3.0\nthe new wx31-debug/wx31-release targets are 3.1\n\nthe only differences are the dll names in the <AdditionalDependencies> \nand  the WXWIN/WXWIN3/WXWIN31 environment variables is the various path \nsettings\n\ndave\n\n## \n\nDavid A. Avery\nAvery Design\n  Technical Theatre\n    Lighting Design\n    Scenery Construction\n    Sound Design\n    Live Recording\n   (303) 725-7515 (cell)\n =||= Thanks.  See message on audacity devel.  Not merging.  We'll look properly at wx3 again for 2.1.2.  Meanwhile this should stay on Dave's repo/branch.\n =||= "], ["31", "AppData file update to v0.7+Ukrainian translation of AppData", "Yuri Chornoivan", "yurchor", "05/02/15, 09:55:43 AM", "This patch updates Audacity AppData file to the new version of standard [1] and adds Ukrainian translation.\n\nThanks for reviewing and committing the changes.\n\n[1] http://www.freedesktop.org/software/appstream/docs/chap-Quickstart.html#sect-Quickstart-DesktopApps", "Looks like a good thing to me, but I agree James, it would be something that we'd want to have all of the translators do if we wanted to start maintaining the translations in here as well.\n =||= As RM I've decided not to do this for 2.1.1.  \nYuri If you can persuade French and German translators on the translators list to do this for 2.1.2 too, then there is a good chance we will do translated versions for 2.1.2.\n =||= Yuri, can you tell me what would need to be done ? (french translator here)\n =||= Hi,\n\nLook at the diff:\n\nhttps://github.com/yurchor/audacity/commit/5184faa1c2b94ed5401720b66e0f1cc732ac4b8d\n\nIt is enough to add your translation after each tag in the following format:\n\n`<some_tag>`\nBlah-blah-blah\n`</some_tag>`\n`<some_tag xml:lang=\"fr\">`\nTranslation\n`</some_tag>`\n\nThorough explanation:\n\nhttp://www.freedesktop.org/software/appstream/docs/sect-Quickstart-Translation.html\n\nThanks in advance for your help.\n =||= https://github.com/bdrung is a coder rather than a translator, but is active in Audacity, and as it is a small amount to translate and specifically for Linux, he may be willing to do so.  Worth asking.\n =||= I should also have said he is German.\n =||= Hi James, if you'd be happy to merge Yuri's patch, I'd be able to commit the FR one afterward.\nI'm pretty new with GIT's stuff. That said, my guestimate is that if I'm modifying the original file without Yuri's patch in, Yuri or me would have to redo a patch. Am I right here ?\nI did read your comment about deciding not to do this before 2.1.2 so please, tell me what to do from here.\nCheers.\n =||= Hi Trebmuh,\n\nYou can easily create a new branch in your repo that is a copy of yurchor/master and then make changes in your new branch.  When I later pick that up for 2.1.2 I will get his changes and your changes.  You are using the command line, not doing everything through GitHub web interface?  If so, then on your machine navigate to your audacity repo and do:\n\n```\ngit remote add yuri https://github.com/yurchor/audacity\ngit fetch --all\n```\n\nto add yuri's repo and get up to date with it.  Now do \n\n```\ngit checkout yuri/master\ngit checkout -b appdata_branch\n```\n\nand your appdata_branch will be up to date with yuri's branch.  You can then add your changes.  Later you will push it to your github repo.\n\nIf you'd rather not try that, then just make your changes and later on I will merge the two branches.  I don't know if git tools will merge this file nicely, but if they don't I can hand edit to get the right end result.\n =||= OK done. I hope I did it the right way with GIT.\nI'm only using the web interface for this i18n work James.\nThanks for your comments, really appreciated.\n =||= I've cherry picked your changes into my new appdata branch. The idea is that when we do add them for 2.1.2 they will all be in one place in the commit logs. \n\nThanks.  LGTM.\n\n--James\n =||= Awesome James. Thanks for this. Would you reckon that we should send an email to the audacity translations list in order to get some more other language commits and then, when merging this branch it'll be pretty consistent across languages support ?\n =||= We're very much a 'doer decides' community.  \n\nFor it to get into 2.1.2 it must have the German translation too.  Also I will be taking feedback from the linux people on the developer list about AppData.  I want to check and get them to sign off on it going in with more translations.  Totally expecting them to be +1. The usual problem with translations, e.g. of website, is half completed translations and translations that haven't kept up with the changes.  This file is (a) small and (b) not changing often/fast, so there is low risk of that.\n\nIt doesn't need to have more than English, French, German, but if you would like to organise more on the translators list, you are welcome to.  \n\nWe will soon be making a change to the URLs in the file, but most unlikely to change the other text any time soon.\n =||= Great. I'll be waiting you to have a discussion with the audacity linux people about AppData first since I do not want to rush people if that's finally a no-go.\nThen, I'll take your point and get that proposition of translation on the translation list. (By the way, I'm reading at audacity devel and translation lists)\nThe ball is yours :)\n =||= You can now cherry-pick the German translation from https://github.com/DanWin/audacity/commit/b538f367df994a803d1a87067a1536d2b11e49b9\n =||= Awesome Dan !\n =||= Got that now Dan, and thanks for the '<' correction too.\n =||= +1 thanks for the '<' correction\n =||= "], ["32", "merging wx3 changes", "david avery", "daavery", "04/13/15, 09:14:16 AM", "update to allow building wx3 ", "Thanks.  \n =||= "], ["33", "Clean libsrc", "Leland Lucius", "lllucius", "04/16/15, 08:40:53 PM", "Removing:\n\nid3lib\nlibresample\nlibsamplerate\ntaglib", "NaN"], ["34", "Migrating the remaining effects", "Leland Lucius", "lllucius", "04/17/15, 04:51:22 AM", "This brings the builtin, LV2, and VAMP effects inline with the\nAudio Units, LADSPA, and VST effects.  All effects now share\na common UI.\n\nThis gives all effects (though not implemented for all):\n\nUser and factory preset capability\nPreset import/export capability\nShared or private configuration options\n\nBuiltin effects can now be migrated to RTP, depending on algorithm.\nLV2 effects now support graphical interfaces if the plugin supplies one.\nNyquist prompt enhanced to provide some features of the Nyquist Workbench.\n\nIt may not look like it, but this was a LOT of work, so trust me, there\nWILL be problems and everything effect related should be suspect.  Keep\na sharp eye (or two) open.", "Oh it does look like it was a lot of work.  And important to our progress.\n\nIt also should make it easier for the AU14 TrackPanel to have Audacity effects in it, in due course, now that everything is on the same footing.  And that potentially saves a ton of work for me.\n =||= "], ["35", "Fix errors", "Daniel Winzen", "DanWin", "04/22/15, 02:46:32 PM", "I found a few errors in the code using cppcheck and fixed them.", "NaN"], ["36", "Performance improvements", "Daniel Winzen", "DanWin", "04/24/15, 12:52:38 PM", "This optimizes various performance related issues pointed out by cppcheck.", "Looks great to me.  Anyone else want to review?  If not, I'll go ahead and merge it.\n\nThanks Dan!!!  Oh and thanks for yesterdays too (i was ashamed at what I'd one. :-))\n =||= You're welcome!\nI just added some more variable cleanups.\n =||= These replacements might return more accurate results, when small values are computed, see http://www.cplusplus.com/reference/cmath/log1p/ \nOtherwise they do exactly the same as before.\n =||= LGTM.  \n =||= "], ["37", "Add MTC/MMC synchronisation", "Martin Delille", "MartinDelille", "04/27/15, 09:14:02 AM", "It'll be nice to have a midi timecode or midi machine control synchronisation feature to record in sync with project like mine: https://github.com/phonations/joker", "Hi Martin.  Come over to audacity-devel@sourcefroge.net and suggest it there, and explain how it would work.\n =||= "], ["38", "Fix 3 uninitialized variable accesses and some optimizations", "Daniel Winzen", "DanWin", "04/29/15, 03:50:24 PM", "NaN", "In ToolDock and TimeTrack, what was the real intent?  Are you sure those fixes are the correct ones?\n =||= The affected code in ToolDock and TimeTrack wasn't touched in years, we can only guess what originally was intended.\nAnd concerning the other fixes, I double checked the code and did a test run with valgrind. Everything works fine for me. I'm pretty sure, those are correct.\n =||= My mistake, it is a pull request, not just a commit.  Rejected in its current form.  Dan, come on over to audacity-devel e-mail list and we can talk about style in audacity and what an acceptable pull request would need. \n =||= "], ["39", "Fix uninitialized variables", "Daniel Winzen", "DanWin", "05/02/15, 09:59:09 AM", "This is basically a recreation of #38 without any stylistic changes, only fixing the uninitialized variables.", "NaN"], ["40", "Freq window", "Leland Lucius", "lllucius", "05/04/15, 11:58:52 AM", "NaN", "NaN"], ["41", "minor improvements to accessibility of register effects dialog. Added\u2026", "James Crook", "JamesCrook", "05/11/15, 12:22:40 PM", "\u2026 show to the accessibility names of the radio buttons. Added access keys for the radio buttons, plus adjusted others.", "NaN"], ["42", "LADSPA: correctly compute the default value for logarithmic control ports", null, "spider-mario", "05/16/15, 04:13:46 PM", "There was a typo (repeated three times).", "Great catch...thanks much.\n =||= "], ["43", "Prevent stereo->mono effects from causing a crash.", null, "spider-mario", "05/16/15, 06:36:30 PM", "If an effect has two input channels but only one output channel, we cannot read from the second output buffer, as there isn\u2019t one.\n\nThis hopefully fixes [#946](http://bugzilla.audacityteam.org/show_bug.cgi?id=946).", "Good sleuthing on this one as well and it has pointed out a bigger problem.  The current code doesn't properly handle, fewer inputs than outputs and fewer outputs than inputs.\n\nI'm gonna see if there's a quick solution to the bigger problem and if not, I'll merge your request since it does fix the immediate problem.\n =||= The bigger fix is much too disruptive this late in the 2.1.1 cycle.  So, I'd like to merge your change.  But, instead of duplicating the left channel to the right, can you make it clear the right channel instead?  That way the right channel won't play a role in future processing, like playback or mixing.\n\nThanks much for finding this issue and the fix.\n =||= Doesn\u2019t it play a bigger role if it\u2019s cleared? For example, when mixing, wouldn\u2019t the result be half what it should be?\n =||= As long as the track is left as a stereo track after the effect is done, then yes.  And until I can get to actually removing the right channel, your patch is perfect as-is.\n =||= You have a name I could throw into the bug report and contribution list?\n =||= "], ["44", "update for wx3", "david avery", "daavery", "05/16/15, 09:22:33 PM", "NaN", "//warning is fatal in vs 2013\n =||= I did not know that.  Fair enough.  It's still there as an eye catcher for when we do the real conversion.\n =||= "], ["45", "Do not multiply the latency of LADSPA effects by two", null, "spider-mario", "08/01/15, 05:01:51 PM", "With the multiplication, Audacity appears to overcompensate.\n\nI am not sure why it is done, as LV2Effect and VSTEffect return the latency as reported by the plugin.", "Honestly spidey, I can't remember why I did that.  Could be I happened to hit an effect that provided half of what it should have.  Can you give me an example effect that you found where it shows the overcompensation?\n =||= I have written [a minimal effect](http://spidermario.free.fr/audacity_latency.tar.gz) to reproduce the problem. It copies its input to its output, while introducing latency for the sake of it, using a FIFO buffer.\n\nIf GetLatency returns twice the latency reported by the plugin, the samples end up shifted to the left. It doesn\u2019t happen if the latency is returned as is.\n =||= Thanks.  I'll give it a try and see if I can force my aging brain to remember why I did that.\n =||= "], ["46", "Fix remnant effects on batch command for multiple files", "Cory Cook", "corycook", "05/21/15, 06:49:59 PM", "When running a chain on multiple files effects generated by the chain were not properly removed after the execution of the chain. This causes the effects to overlap from one file to the next.\n\nThis fix forces the project to clear all tracks between files; however, it may be better to fix ClearStates() to remove added effects.", "NaN"], ["47", "Fix remnant effects on batch command for multiple files", "Cory Cook", "corycook", "05/25/15, 03:59:24 PM", "Recreating pull request. Forgot to switch branches before making further changes.\n\nThis is for a simple change to clear the current project before moving on to the next file. UndoManager ClearStates() was not removing tracks generated by some effects (like SilenceFinder). State was not completely cleared between files resulting in unexpected behavior.", "Hi lovecooks...merging, but make sure not to use tabs for your next one.  How about if you submit another pull to add yourself to the contributors list in AboutDialog.cpp or give me your name and I'll do it.\n\nWhile we're fiddling with this bit of code, do you see any point to the \"project->OnRemoveTracks()\" on line 329?  The one before the Import().  Seems to me since we force a clean project before apply to files and with your change, that fella isn't needed.  For that matter, doesn't seem like the one after the loop is either.\n\nThanks much.\n =||= Nevermind about the contributor list.  I've gone ahead and added you.\n =||= btw...if you think those lines are redundant, go ahead and submit another pull and I'll get it merged.\n =||= "], ["48", "Removed redundant operation.", "Cory Cook", "corycook", "05/26/15, 08:54:40 PM", "Removed a redundant line and replaced tabs with spaces.\n\nThe OnRemoveTracks() on line 343 is still necessary to clean up early termination.", "NaN"], ["49", "Add option to run chain from the command line", "Cory Cook", "corycook", "09/12/16, 03:57:59 PM", "Added --chain (-c) option to the list of command line options.\n\naudacity.exe -c \"MP3 Conversion\" file1.wav file2.wav ...\naudacity.exe --chain=\"MP3 Conversion\" file1.wav file2.wav ...\n\nwill Normalize/Convert all files passed as arguments\n\nEnsures all files passed are valid paths\n\nIt shows the list of files and process dialog for each effect/command same as Apply To Files from BatchProcessDialog.\n\nOpted not to show the primary window since they could just open Audacity and run the chain from there. This would be for more passive application.", "Sorry we have been 'off the air' for so long.  \nCould you come and talk with us on audacity-devel about this, https://lists.sourceforge.net/lists/listinfo/audacity-devel  and we can look at whether this is good for 2.1.3 ?\n =||= Has conflicts with current code.\n\nNo response to my email on audacity-devel about using mod-script-pipe for automation: \"I am feeling the special new command line switch is adding complexity to Audacity and Audacity documentation for not enough real advantage.\"\n\nClosing; not accepted.\n =||= To Cory: Although this pull request has been closed, the invitation to talk about this proposed new feature, on the developer's mailing list, remains open.\n\nRe. 'do we want this': From user feedback, there is certainly interest in more flexible command line options, and personally I this proposal is an interesting approach. There's a lot of scope for future development of scripting / automation, and I'd welcome a discussion with Cory about his proposal within that context. (Mailing list is here: https://lists.sourceforge.net/lists/listinfo/audacity-devel)\n =||= Thanks for this Cory.  Only needed 1 minor change to compile 2.1.2 (file src/AudacityApp.cpp line 1422 in the shown patch, return needed a boolean value) and of course line numbers have changed slightly but not too hard to figure that out.  Don't know if I'm the only one that was looking for this but thanks all the same :)\n =||= "], ["50", "Compiling Fails with switch '--enable-gtk3'", null, "teep0", "06/04/15, 10:51:31 AM", "If you try to compile with gtk3 compiling fails almost immediately after issuing command 'make'", "NaN"], ["51", "fix some of Korean translation issues", null, "lbjcom", "01/22/16, 06:13:06 PM", "- fix some of Korean translation issue:\n  - The 'white noise' is normally called '\ubc31\uc0c9 \uc7a1\uc74c', not '\ud770\uc0c9 \uc7a1\uc74c' in Korean.\n  - 'Amplitude' is called '\uc9c4\ud3ed' not '\uc99d\ud3ed'.\n  - '\ub450 \uc2a4\ud14c\ub808\uc624 \ucc44\ub110' may confuse users. So I changed it to better expression.\n- add missing whitespace in the translate of 'Feedback (%)'.", "This doesn't merge with our current code, and I don't speak Korean so don't know what to fix, so I have reluctantly had to close it.  An updated fix would be welcome.\n =||= "], ["52", "This changes allow you to choose between different color scales.", null, "LBoggino", "01/22/16, 06:30:04 PM", "NaN", "Hello Luciano,\n\nUnfortunately you have shared this code with us too late for inclusion in version 2.1.1, but I hope this can be considered for version 2.1.2.\n\nHowever you did not resolve conflicts correctly between your work and mine.  You removed some changes necessary to my recent zero-padding project in files SpectrumPrefs.cpp and SpectrumPrefs.h.  This is evident in the diff view.\n\nPlease fix this and then share the updated project.\n =||= HI Paul,\n\nOk I'll get the last changes you made and send the pull request again.\n\nBest Regards.\n =||= I tried it and I like the interface so far.  I am also reviewing the code.  GitHub allows me to attach my remarks to your code, and I will leave some.\n =||= This pull request has conflicts and does not have Paul's suggestions/improvements.\nClosing the pull request, waiting for the new one.\n =||= "], ["53", "Update Ukrainian translation", "Yuri Chornoivan", "yurchor", "06/17/15, 06:16:11 PM", "Tested with msgfmt -vc. Not tested in vivo because of the borken configure scripts.\n\nMany thanks for merging this pull request.", "NaN"], ["54", "Update Ukrainian translation", "Yuri Chornoivan", "yurchor", "01/22/16, 06:21:17 PM", "This update fixes the issue with the parameter names.\n\nThanks for merging this PR.", "Later commit taken instead.\n =||= "], ["55", "Bugs 1043, 1044 -- Be careful with new display modes in preferences", "Paul Licameli", "Paul-Licameli", "06/23/15, 07:25:47 PM", "Write a new key so version 2.1.0 isn't confused by the reordered values\n\nAdd some future proofing against similar to 2.1.1 code", "NaN"], ["56", "Fix for bug #1046", "Leland Lucius", "lllucius", "06/25/15, 06:48:09 AM", "NaN", "NaN"], ["57", "Updated Color Scales pull", null, "LBoggino", "01/22/16, 06:25:37 PM", "Here is the color scales patch with the zero padding changes that Paul had summited", "NaN"], ["59", "Fix crash in new binary AutoSave", "Leland Lucius", "lllucius", "07/10/15, 08:31:20 AM", "Would happen when writing tags with a value whose length was greater\nthan 65535 due to the use of shorts.  Now uses int instead.", "NaN"], ["60", "Updating FFmpeg API calls.", null, "heckendorfc", "09/09/16, 06:02:18 PM", "These functions cause the build to fail when using the FFmpeg 2.7 branch.", "Hi Heckendorf.\nYour changes however cause the Travis build to fail.  https://travis-ci.org/audacity/audacity/builds/71094555 Can you fix that so we can consider the pull request?\n =||= Hi,\nIt will build with external FFmpeg 2.7, like when built through FreeBSD ports. If you'll allow the bundled version of FFmpeg to be upgraded to 2.7,  I can update this patch to include that also.\n =||= Almost a year later, is there any movement on this patch? Does anyone even care that ffmpeg 2.2.2 has so many documented security problems that expose users? At least this should work fine with 2.7.7, although now 3.0.x is current.\n =||= There is a later patch here https://github.com/audacity/audacity/pull/130/commits/41de5b385b2ca721a71871fcdb00ec3fa4441b5b\n\nthat I have tested on Windows so far. That patch allows Audacity on that platform to still work with the current maximum FFmpeg 2.3.x but does not allow it to work with later FFmpeg than that. \n\nA lot has to be done for Audacity to support later FFmpeg than 2.3.x and we also have to consider some compatibility with older FFmpeg between 2.3.x and current. Also we have limited resources. Rather than repeatedly modifying our FFmpeg code for their changes, we may move to GStreamer instead which is also a large change but a once-only change.   \n\nPlease post links to the known security problems with FFmpeg 1.2 to 2.3.x. Are you able to offer a future patch that updates Audacity to support later FFmpeg on all platforms? \n =||= I'd definitely be all for a change to GStreamer! FFMpeg is nice as a standalone program but at least in my opinion and experience it's hard to build programs against it's code and maintain compatibility with the changes in newer versions. That would definitely simplify things quite a bit after the inital changeover.\n\nNow I'm not too experiences with C++ so I don't know what that would all involve so I wouldn't be able to help. I'm more interested Mono.NET and Python. But I will say I know the problems you're having to some extent as I wrote a simple video clip effect and merging program in C# and used the FFMpeg API. It basically converted to raw, processed effects and reencoded all at once using three threads. I haven't worked on or maintained that thing in years and was recently trying to bring it up to date and just gave up.\n =||= 41de5b3 has been merged so this PR can be closed. Verified import is still compatible with AVFormat/AVCodec 57.x.x which is part of the 3.1.3 (latest) release.\n =||=  \" 41de5b3 has been merged so this PR can be closed. \"\n\nClosed now.\n =||= "], ["61", "Linking fails on debian jessie, wxWidgets 2.8.12", "Roman Hargrave", "RomanHargrave", "09/03/15, 08:30:47 PM", "I have a suspicion that this has to do with linker flag order.\n\nWhen building `HEAD`, all goes well until the linker is invoked.\n\nOOPS!!!  I had no idea I could edit the comments from someone else.  I thought I was replying.  Sorry about that Roman.", "Windows developer guessing the problem might possibly be a 3.x include file being mistakenly used by source in the lib-src/FileDialog subdirectory (a makefile in that directory not updated).  Anyway this is a WONTFIX as the current development version of Audacity for release as 2.1.2 has shifted to wx3.0.2,  If you try compiling the current HEAD version with Jessie that would help us.\n =||= Here's where I SHOULD have added my comment...\n\nThis is interesting.  You shouldn't have been able to even get past configure if you were trying to use wxWidgets 2.8.x.  I've updated configure to specifically look for wxWidgets 3.0.x.\n\nWould you mind sharing your config.log?\n =||= On Fri, 28 Aug 2015 15:28:55 -0700\nLeland Lucius notifications@github.com wrote:\n\n> Here's where I SHOULD have added my comment...\n> \n> This is interesting.  You shouldn't have been able to even get past configure if you were trying to use wxWidgets 2.8.x.  I've updated configure to specifically look for wxWidgets 3.0.x.\n> \n> Would you mind sharing your config.log?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/audacity/audacity/issues/61#issuecomment-135902109\n\nIf I still have it, though this was pre-3.0-transition. I will try rebuilding tonight.\n\n## \n\nRoman Hargrave roman@hargrave.info \n http://hargrave.info \n\n---\n\n< New crypt. See /usr/news/crypt. >\n\n---\n\n```\n    \\   ^__^\n     \\  (oo)\\_______\n        (__)\\       )\\/\\\n            ||----w |\n            ||     ||\n```\n =||= On Fri, 28 Aug 2015 14:29:58 -0700\nJames Crook notifications@github.com wrote:\n\n> Windows developer guessing the problem might possibly be a 3.x include file being mistakenly used by source in the lib-src/FileDialog subdirectory (a makefile in that directory not updated).  Anyway this is a WONTFIX as the current development version of Audacity for release as 2.1.2 has shifted to wx3.0.2,  If you try compiling the current HEAD version with Jessie that would help us.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/audacity/audacity/issues/61#issuecomment-135892958\n\nI tried compiling the current HEAD today (f5f436a), and ran in to the following error during compilation:\n\n```\ng++ -DHAVE_CONFIG_H -I.  -Wno-deprecated-declarations -D__STDC_CONSTANT_MACROS -DLIBDIR=\\\"/usr/local//lib\\\"   -I../lib-src/portaudio-v19/include    -I../lib-src/lib-widget-extra -I/usr/lib/x86_64-linux-gnu/wx/include/gtk2-unicode-3.0 -I/usr/include/wx-3.0 -D_FILE_OFFSET_BITS=64 -DWXUSINGDLL -D__WXGTK__ -pthread          -I../lib-src/libnyquist -I/usr/include/soundtouch    -I../lib-src/lv2/include -I../lib-src/lv2/include -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wall -I/usr/include/portSMF      -I/usr/lib/x86_64-linux-gnu/wx/include/gtk2-unicode-3.0 -I/usr/include/wx-3.0 -D_FILE_OFFSET_BITS=64 -DWXUSINGDLL -D__WXGTK__ -pthread -pthread -I/usr/include/gtk-2.0 -I/usr/lib/x86_64-linux-gnu/gtk-2.0/include -I/usr/include/gio-unix-2.0/ -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/libpng12 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/libpng12 -I/usr/include/pango-1.0 -I/usr/include/harfbuzz -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/freetype2  -Wno-unused-local-typedefs -I../lib-src/portmixer/include -mmmx -msse -msse2 -msse3 -march=native -mtune=native -O3 -fexpensive-optimizations -DwxDEBUG_LEVEL=0  -Wall -I../include -I../lib-src/FileDialog                   -MT audacity-AudacityApp.o -MD -MP -MF .deps/audacity-AudacityApp.Tpo -c -o audacity-AudacityApp.o `test -f 'AudacityApp.cpp' || echo './'`AudacityApp.cpp\nIn file included from AudacityApp.cpp:73:0:\nFFmpeg.h: In function \u2018AVOutputFormat* av_oformat_next(AVOutputFormat*)\u2019:\nFFmpeg.h:692:25: error: conflicting declaration of C function \u2018AVOutputFormat* av_oformat_next(AVOutputFormat*)\u2019\n       (AVOutputFormat *f),\n                         ^\nFFmpeg.h:486:18: note: in definition of macro \u2018FFMPEG_FUNCTION_WITH_RETURN\u2019\n       inline r n a                                                      \\\n                  ^\nIn file included from FFmpeg.h:44:0,\n                 from AudacityApp.cpp:73:\n/usr/include/libavformat/avformat.h:1827:17: note: previous declaration \u2018AVOutputFormat* av_oformat_next(const AVOutputFormat*)\u2019\n AVOutputFormat *av_oformat_next(const AVOutputFormat *f);\n                 ^\nIn file included from AudacityApp.cpp:73:0:\nFFmpeg.h: In function \u2018int av_fifo_size(AVFifoBuffer*)\u2019:\nFFmpeg.h:759:23: error: conflicting declaration of C function \u2018int av_fifo_size(AVFifoBuffer*)\u2019\n       (AVFifoBuffer *f),\n                       ^\nFFmpeg.h:486:18: note: in definition of macro \u2018FFMPEG_FUNCTION_WITH_RETURN\u2019\n       inline r n a                                                      \\\n                  ^\nIn file included from FFmpeg.h:45:0,\n                 from AudacityApp.cpp:73:\n/usr/include/libavutil/fifo.h:76:5: note: previous declaration \u2018int av_fifo_size(const AVFifoBuffer*)\u2019\n int av_fifo_size(const AVFifoBuffer *f);\n     ^\nIn file included from AudacityApp.cpp:73:0:\nFFmpeg.h: In function \u2018AVDictionaryEntry* av_dict_get(AVDictionary*, const char*, const AVDictionaryEntry*, int)\u2019:\nFFmpeg.h:805:82: error: conflicting declaration of C function \u2018AVDictionaryEntry* av_dict_get(AVDictionary*, const char*, const AVDictionaryEntry*, int)\u2019\n       (AVDictionary *m, const char *key, const AVDictionaryEntry *prev, int flags),\n                                                                                  ^\nFFmpeg.h:486:18: note: in definition of macro \u2018FFMPEG_FUNCTION_WITH_RETURN\u2019\n       inline r n a                                                      \\\n                  ^\nIn file included from /usr/include/libavcodec/avcodec.h:37:0,\n                 from FFmpeg.h:43,\n                 from AudacityApp.cpp:73:\n/usr/include/libavutil/dict.h:104:20: note: previous declaration \u2018AVDictionaryEntry* av_dict_get(const AVDictionary*, const char*, const AVDictionaryEntry*, int)\u2019\n AVDictionaryEntry *av_dict_get(const AVDictionary *m, const char *key,\n                    ^\n```\n\n## \n\nRoman Hargrave roman@hargrave.info \n http://hargrave.info \n\n---\n\n< Crazee Edeee, his prices are INSANE!!! >\n\n---\n\n```\n    \\   ^__^\n     \\  (oo)\\_______\n        (__)\\       )\\/\\\n            ||----w |\n            ||     ||\n```\n =||= The same snapshot builds on ubuntu 4.6.3.\nhttps://travis-ci.org/audacity/audacity/builds/77838416\n\nYou could try \n./configure --with-ffmpeg=local\nTo build with the FFmpeg src that comes with Audacity.\n(Version 2.2.2-1 according to headers)\n\nFFmpeg 2.5 (and probably later too) requires this patch.  We've not tested with this version of FFmpeg:\n\n--- a/src/FFmpeg.h  2015-02-21 00:33:33.853857529 +0100\n+++ b/src/FFmpeg.h  2015-02-21 00:35:09.626497205 +0100\n@@ -688,7 +688,7 @@\n    FFMPEG_FUNCTION_WITH_RETURN(\n       AVOutputFormat*,\n       av_oformat_next,\n-      (AVOutputFormat *f),\n-      (const AVOutputFormat *f),\n     (f)\n  );\n  FFMPEG_FUNCTION_WITH_RETURN(\n  @@ -755,7 +755,7 @@\n  FFMPEG_FUNCTION_WITH_RETURN(\n     int,\n     av_fifo_size,\n-      (AVFifoBuffer *f),\n-      (const AVFifoBuffer *f),\n     (f)\n  );\n  FFMPEG_FUNCTION_WITH_RETURN(\n  @@ -801,7 +801,7 @@\n  FFMPEG_FUNCTION_WITH_RETURN(\n     AVDictionaryEntry *,\n     av_dict_get,\n-      (AVDictionary *m, const char *key, const AVDictionaryEntry *prev, int flags),\n-      (const AVDictionary *m, const char *key, const AVDictionaryEntry *prev, int flags),\n     (m, key, prev, flags)\n  );\n  FFMPEG_FUNCTION_WITH_RETURN(\n =||= Looks like it compiled after that.\n =||= Thanks.  I'm assuming 'that' refers to the configure switch, not the patch.\n\nClosing the issue.\n =||= Correct.\n =||= "], ["62", "Sunflower & Audacity causes crash on Mac OS X (10.10.4)", "John Behm", "jxsl13", "11/11/19, 02:39:59 PM", "http://pastebin.com/qbLx1vf7\n\nhopefully it'll help", "I'm assuming this is about SoundFlower, which is now a \"retired app\".  We no longer support Mojave, and there are not enough steps to reproduce anyway, so closing this issue. =||= "], ["63", "Add binary release files to github", "Martin Lindhe", "martinlindhe", "08/04/15, 09:46:17 AM", "Greetings all!\n\nWould it be possible to attach the binaries you released at http://www.fosshub.com/Audacity.html/audacity-macosx-ub-<version>.dmg to the \"2.1.1\" release on github? See bottom of link [1] for details.\n\nThe reason I'm asking is that the new host fosshub.com don't seem to allow any stable download links to be used in scripts, in my case particular homebrew-cask [2].\n\n1: https://github.com/blog/1547-release-your-software\n2: https://github.com/caskroom/homebrew-cask", "Hi Martin,\n\nWe don't want to put binary files in the Git repo itself for obvious reasons.  Attaching as a release object isn't something I was aware of before, so thanks for the info.  We're generally trying to keep our use of GitHub to 'pure git' use, and not use extras such as even this issue tracking system.  I therefore think it's unlikely we will use GitHub releases for binary releases.    If you'd like to argue the case for doing so with more people, explain more about why and lobby for it, the audacity-devel mailing list is a better place.  Nothing stops you hosting your own binary releases on your own GitHub fork of Audacity, provided you comply with Audacity GPL licensing terms, and you could then ensure that the binaries/downloads work correctly with your homebrew-cask.\n\n--James.\n =||= Meant to close the issue with previous comment.\n =||= Thanks. I don't care enough for this issue to host my own binaries for your project, it was merely a suggestion to help your users, since your current host fosshub.com don't allow direct downloads (their page is riddled with javascript to prevent hot-linking)\n\nYou are of course free to keep your dev-discussion on a mailing list, but i don't see how that can help your project or your users.\n =||= Thanks for the feedback Martin.\n =||= @JamesCrook since some time has passed, any thoughts on this in 2019/2020? Thank you for all the hard work on an amazing project. =||= Thanks @karbassi . We're still happy with hosting our binaries at FossHub.   =||= "], ["64", "2.1.1 tests are not run?", "Frederik Rietdijk", "FRidh", "11/10/19, 03:46:04 PM", "Running the tests after building Audacity 2.1.1 on NixOS seems to fail:\n\n```\nMaking all in tests\nmake[1]: Entering directory '/tmp/nix-build-audacity-2.1.1.drv-0/audacity-Audacity-2.1.1/tests'\nmake[1]: Nothing to be done for 'all'.\nmake[1]: Leaving directory '/tmp/nix-build-audacity-2.1.1.drv-0/audacity-Audacity-2.1.1/tests'\nmake[1]: Entering directory '/tmp/nix-build-audacity-2.1.1.drv-0/audacity-Audacity-2.1.1'\nrm -f audacity\ncp src/audacity audacity\n[ -e plug-ins ] || ln -s ./plug-ins\n[ -e nyquist ] || ln -s ./nyquist\n[ -e locale ] || ln -s po locale\nmake[1]: Leaving directory '/tmp/nix-build-audacity-2.1.1.drv-0/audacity-Audacity-2.1.1'\nrunning tests\ncheck flags: SHELL=/nix/store/zmd4jk4db5lgxb8l93mhkvr3x92g2sx2-bash-4.3-p39/bin/bash    \nMaking check in help\nmake[1]: Entering directory '/tmp/nix-build-audacity-2.1.1.drv-0/audacity-Audacity-2.1.1/help'\nmake[1]: Nothing to be done for 'check'.\nmake[1]: Leaving directory '/tmp/nix-build-audacity-2.1.1.drv-0/audacity-Audacity-2.1.1/help'\nMaking check in images\nmake[1]: Entering directory '/tmp/nix-build-audacity-2.1.1.drv-0/audacity-Audacity-2.1.1/images'\nmake[1]: Nothing to be done for 'check'.\nmake[1]: Leaving directory '/tmp/nix-build-audacity-2.1.1.drv-0/audacity-Audacity-2.1.1/images'\nMaking check in lib-src\nmake[1]: Entering directory '/tmp/nix-build-audacity-2.1.1.drv-0/audacity-Audacity-2.1.1/lib-src'\nMaking check in FileDialog\nmake[2]: Entering directory '/tmp/nix-build-audacity-2.1.1.drv-0/audacity-Audacity-2.1.1/lib-src/FileDialog'\nmake[2]: Nothing to be done for 'check'.\nmake[2]: Leaving directory '/tmp/nix-build-audacity-2.1.1.drv-0/audacity-Audacity-2.1.1/lib-src/FileDialog'\nMaking check in libnyquist\nmake[2]: Entering directory '/tmp/nix-build-audacity-2.1.1.drv-0/audacity-Audacity-2.1.1/lib-src/libnyquist'\nmake[2]: Nothing to be done for 'check'.\nmake[2]: Leaving directory '/tmp/nix-build-audacity-2.1.1.drv-0/audacity-Audacity-2.1.1/lib-src/libnyquist'\nMaking check in portaudio-v19\nmake[2]: Entering directory '/tmp/nix-build-audacity-2.1.1.drv-0/audacity-Audacity-2.1.1/lib-src/portaudio-v19'\nmake[2]: *** No rule to make target 'check'.  Stop.\nmake[2]: Leaving directory '/tmp/nix-build-audacity-2.1.1.drv-0/audacity-Audacity-2.1.1/lib-src/portaudio-v19'\nMakefile:999: recipe for target 'check-recursive' failed\nmake[1]: *** [check-recursive] Error 1\nmake[1]: Leaving directory '/tmp/nix-build-audacity-2.1.1.drv-0/audacity-Audacity-2.1.1/lib-src'\nMakefile:716: recipe for target 'check-recursive' failed\nmake: *** [check-recursive] Error 1\n```\n\nTravis also doesn't seem to be doing any tests:\n\n```\nmake[2]: Leaving directory `/home/travis/build/audacity/audacity/src'\nmake[1]: Leaving directory `/home/travis/build/audacity/audacity/src'\nMaking all in tests\nmake[1]: Entering directory `/home/travis/build/audacity/audacity/tests'\nmake[1]: Nothing to be done for `all'.\nmake[1]: Leaving directory `/home/travis/build/audacity/audacity/tests'\nmake[1]: Entering directory `/home/travis/build/audacity/audacity'\nrm -f audacity\ncp src/audacity audacity\n[ -e plug-ins ] || ln -s ./plug-ins\n[ -e nyquist ] || ln -s ./nyquist\n[ -e locale ] || ln -s po locale\nmake[1]: Leaving directory `/home/travis/build/audacity/audacity'\ntravis_time:end:07d2e204:start=1439660826751284924,finish=1439661673312463236,duration=846561178312\n\ufffd[0K\n\ufffd[32;1mThe command \"aclocal --install -I m4 && automake && ./configure && make\" exited with 0.\ufffd[0m\n\nDone. Your build exited with 0.\n```", "Ping? Does anyone care about test suite failures? Or should we just disable the test suite run in our distribution?\n =||= I forwarded your question to the developer's mailing list. The reply was to disable it for now: http://audacity.238276.n2.nabble.com/Fwd-audacity-2-1-1-tests-are-not-run-64-tp7571762p7571763.html\n =||= @SteveDaulton, ok, thank you very much for the clarification.\n =||= Thanks Steve and Peti.  I should have closed/resolved this back in Nov 2015.  At least I'm only 4 years late....  We do actually now have a script that exercises Audacity and generates screenshots, but it is not part of automated CI and we don't currently plan to make it so. =||= "], ["65", "Bug1169: end the separate treatment of lin vs. log display bounds for\u2026", "Paul Licameli", "Paul-Licameli", "09/07/15, 09:05:31 AM", "\u2026 spectrum...\n\n... also make WaveTrack responsible for storing and validating the bounds\n... also let the bounds vary per-track even though other settings are default\n... also change some code names to mention \"period\" not \"undertone\"", "NaN"], ["66", "Updated POTFILES.in", "Leland Lucius", "lllucius", "09/07/15, 09:09:02 AM", "I believe this includes all possible files that should be scanned for translatable strings.", "NaN"], ["67", "Update Ukrainian translation", "Yuri Chornoivan", "yurchor", "09/07/15, 08:04:24 PM", "Tested with msgfmt -vc for validity.\n\nThanks for merging this pull request.", "NaN"], ["68", "Bug1187: validate before Applying changes of spectrogram preferences", "Paul Licameli", "Paul-Licameli", "09/16/15, 07:20:27 PM", "NaN", "It's a P4.  We're in FREEZE.  If we open up to fixes like these we need to go back to semifreddo.  So won't get applied until 2.1.3, and you can just apply it then, Paul.\n =||= That's what I thought.  I feared there might be a crash bug here if I use other unvalidated settings.  But I have not made that happen yet.  Zero range did not cause a division by zero anywhere.\n =||= "], ["69", "Fix for bug #1182", "Leland Lucius", "lllucius", "09/16/15, 06:41:35 PM", "NaN", "Bug #1203 is a P1, so has to go through.  I've announced a delay to RC1.  I've now decided that delay is 14 days, and so am accepting this pull request.  It's as if we have just gone into FROZEN.\n =||= "], ["70", "Bug1169 again: correct shuttling of spectrogram scale values with dia\u2026", "Paul Licameli", "Paul-Licameli", "01/22/16, 06:20:52 PM", "Steve was not satisfied with the completeness of my recent P2 bug fix.  I will leave this here.", "This still does not work right for me.\nI've made a quick video to demonstrate the problem. In short, the track spectrogram settings are now causing the Spectrogram Preferences to change:\nhttps://drive.google.com/file/d/0Bwz8k7IbIHRyR3NaRHhNc0hhcUU/view?usp=sharing\n =||= It was 50:50 whether to merge this or close the pull request.  In the end I closed it because it was done to meet Steve's reservations, and Steve was not OK with it.\n =||= "], ["71", "Upstream", "Leland Lucius", "lllucius", "09/09/15, 06:33:49 AM", "Contains fixes for bug #1192, the required Xcode changes for bug #1073 and fixes to the broken dist build identified by Gale.", "NaN"], ["72", "Add ability to reverse tracks in crossfadetracks", null, "campg2j003", "09/08/16, 08:11:24 AM", "This enhancement to the crossfadetracks.ny plugin adds the ability to choose whether to fade out the top or bottom track.  I was doing some processing where I crossfaded from one track to another with different processing and then back.  This allowed me to not have to either do it manually with crossfadeout/in or move the tracks.  It was originally created from the version shipped in 2.1.0 but I just updated it to match that in 2.1.1.  I am new to Git, and had to redo the commit (line terminators!), so maybe that's why there's two commits shown.  Sorry, I probably should have put it on a feature branch.", "Thanks for the contribution, but what I had in mind, now that Nyquist plug-ins are a bit more flexible, was to make the fade direction automatic based on the selection. Something like this:\n\n```\n;nyquist plug-in\n;version 4\n;type process\n;name \"Crossfade Tracks...\"\n;action \"Crossfading...\"\n;preview selection\n;author \"Steve Daulton\"\n;copyright \"Released under terms of the GNU General Public License version 2\"\n\n;; crossfadetracks.ny by Steve Daulton Nov 2014.\n;; Updated Sept 2015.\n;; Released under terms of the GNU General Public License version 2:\n;; http://www.gnu.org/licenses/old-licenses/gpl-2.0.html .\n\n;control type \"Fade type\" choice \"Constant Gain,Constant Power 1,Constant Power 2,Custom Curve\" 0\n;control curve \"Custom curve\" real \"\" 0 0 1\n\n(defun crossfade (type)\n  (mult *track*\n    (cond\n      ((equal (guessdirection) 'OUT)  ; fade out.\n        (case type\n          (0 (pwlv 1 1 0))\n          (1 (osc (hz-to-step (/ (get-duration 4))) 1 *sine-table* 90))\n          (2 (s-sqrt (pwlv 1 1 0)))\n          (T (custom curve 0))))\n      (T  ; else fade in.\n        (setf *control-srate* *sound-srate*)\n        (case type\n          (0 (pwlv 0 1 1))\n          (1 (osc (hz-to-step (/ (get-duration 4))) 1))\n          (2 (s-sqrt (pwlv 0 1 1)))\n          (T (custom curve 1)))))))\n\n(defun custom (curve inout)\n  ;; 'epsilon' defines the curvature of a logarithmc curve.\n  ;; To avoid log 0 or /0 it must be > 0 and < 1.\n  (let* ((curve (+ 0.99 (* -0.98 (min 1 (max 0 curve)))))\n         ; magic number 2.7 gives approx 'constant power' curve at 50% setting.\n         (epsilon (power curve 2.7)))\n    (if (= inout 0)\n        (setf logcurve (pwev epsilon 1 1))\n        (setf logcurve (pwev 1 1 epsilon)))\n    (sum 1\n         (mult (/ -1 (- 1 epsilon))\n               (diff logcurve epsilon)))))\n\n (defun guessdirection ()\n  (let* ((start (get '*selection* 'start))\n         (end (get '*selection* 'end))\n         (clips (get '*track* 'clips))\n         (in end)\n         (out in))\n    (dotimes (i (length clips))\n      (setf in (min in (abs (- start (first (nth i clips))))))\n      (setf out (min out (abs (- end (second (nth i clips)))))))\n    (if (< in out) 'in 'out)))\n\n(crossfade type)\n```\n =||= Hi Steve,\n\nMy Nyquist is a bit rusty-- it's been a couple of years since I actually \nwrote a plug-in, particularly before breakfast, so I don't understand \nright off how you are deciding the direction.  (After breakfast.) Are \nyou figuring out whether the selection is closer to the beginning or end \nof the track?  I'm a little leary of \"automatic\" things, but I think \nthat should work.\n\nThanks.\n\nGary\n\nOn 9/15/2015 4:17 PM, Steve Daulton wrote:\n\n> Thanks for the contribution, but what I had in mind, now that Nyquist \n> plug-ins are a bit more flexible, was to make the fade direction \n> automatic based on the selection. Something like this:\n> \n> |;nyquist plug-in ;version 4 ;type process ;name \"Crossfade Tracks...\" \n> ;action \"Crossfading...\" ;preview selection ;author \"Steve Daulton\" \n> ;copyright \"Released under terms of the GNU General Public License \n> version 2\" ;; crossfadetracks.ny by Steve Daulton Nov 2014. ;; Updated \n> Sept 2015. ;; Released under terms of the GNU General Public License \n> version 2: ;; http://www.gnu.org/licenses/old-licenses/gpl-2.0.html . \n> ;control type \"Fade type\" choice \"Constant Gain,Constant Power \n> 1,Constant Power 2,Custom Curve\" 0 ;control curve \"Custom curve\" real \n> \"\" 0 0 1 (defun crossfade (type) (mult _track_ (cond ((equal \n> (guessdirection) 'OUT) ; fade out. (case type (0 (pwlv 1 1 0)) (1 (osc \n> (hz-to-step (/ (get-duration 4))) 1 _sine-table_ 90)) (2 (s-sqrt (pwlv \n> 1 1 0))) (T (custom curve 0)))) (T ; else fade in. (setf \n> _control-srate_ _sound-srate_) (case type (0 (pwlv 0 1 1)) (1 (osc \n> (hz-to-step (/ (get-duration 4))) 1)) (2 (s-sqrt (pwlv 0 1 1))) (T \n> (custom curve 1))))))) (defun custom (curve inout) ;; 'epsilon' \n> defines the curvature of a logarithmc curve. ;; To avoid log 0 or /0 \n> it must be > 0 and < 1. (let\\* ((curve (+ 0.99 (\\* -0.98 (min 1 (max 0 \n> curve))))) ; magic number 2.7 gives approx 'constant power' curve at \n> 50% setting. (epsilon (power curve 2.7))) (if (= inout 0) (setf \n> logcurve (pwev epsilon 1 1)) (setf logcurve (pwev 1 1 epsilon))) (sum \n> 1 (mult (/ -1 (- 1 epsilon)) (diff logcurve epsilon))))) (defun \n> guessdirection () (let\\* ((start (get '_selection_ 'start)) (end (get \n> '_selection_ 'end)) (clips (get '_track_ 'clips)) (in end) (out in)) \n> (dotimes (i (length clips)) (setf in (min in (abs (- start (first (nth \n> i clips)))))) (setf out (min out (abs (- end (second (nth i \n> clips))))))) (if (< in out) 'in 'out))) (crossfade type) |\n> \n> \u2014\n> Reply to this email directly or view it on GitHub \n> https://github.com/audacity/audacity/pull/72#issuecomment-140561960.\n =||= I have posted my proposed updated version to the Audacity forum.\nIt will be easier, and I'd be happy to discus it there: http://forum.audacityteam.org/viewtopic.php?p=286488#p286488\n\nSteve\n =||= The Cross Fade Tracks effect now has this feature, so closing this pull request. Thanks campg2j003 for your input that helped make this happen.\n =||= "], ["74", "Update Build.txt", "Nicholas Tomlin", "nickatomlin", "01/22/16, 06:06:50 PM", "Added verified Xcode version numbers and moved the latter half of the instructions to the list format.", "Thanks!\n =||= "], ["75", "Use noinst_SCRIPTS for toplevel audacity script.", "Thomas Klausner", "0-wiz-0", "11/09/19, 04:45:16 PM", "When using libtool, this file is a copy of a shell script\nand will be installed instead of the real executable.", "`bin_SCRIPTS` was changed to `bin_PROGRAMS` in commit 8d822707 (hence the conflict) \u2014 that seems correct, as the file in question was never a script. It's a copy of the compiled executable:\r\n````Makefile\r\naudacity$(EXEEXT): src/audacity$(EXEEXT)\r\n\trm -f audacity$(EXEEXT)\r\n\tcp src/audacity$(EXEEXT) audacity$(EXEEXT)\r\n\t[ -e plug-ins ] || ln -s $(srcdir)/plug-ins\r\n\t[ -e nyquist ] || ln -s $(srcdir)/nyquist\r\n\t[ -e locale ] || ln -s po locale\r\n````\r\n\r\nSo, with that executable correctly categorized as `bin_PROGRAMS`, I believe this can be closed as superseded by that change, no? I don't see that we'd want the executable to be `noinst`. =||= My original point is still valid.\r\nWhen building on Unix with libtool, `src/audacity$(EXEEXT)` is a shell wrapper that sets the library search path before calling the real executable. `libtool --install ...` then creates the actual binary.\r\nThe target in the main `Makefile.am` runs too early and copies the shell wrapper, which points to the build path. =||= Sorry, this has sat in the queue too long and is now being closed as we couldn't decide on progressing it. =||= "], ["76", "bug1197: Correct horizontal scrollbar position at extreme zoom-in", "Paul Licameli", "Paul-Licameli", "09/21/15, 05:40:18 PM", "I see this one is ranked P2.  A regression from 2.1.1 and my fault.", "NaN"], ["77", "Bug1213: \"Spectrogram\" not \"Spectrum\" in tracks prefs.", "Paul Licameli", "Paul-Licameli", "09/23/15, 09:35:40 PM", "This is a string change, however that string should be replicated elsewhere in\\\nthe translation files.", "NaN"], ["78", "bug1197 again:  better fix", "Paul Licameli", "Paul-Licameli", "09/24/15, 03:18:04 PM", "NaN", "NaN"], ["79", "Internal PortAudio error on Windows 10", "Andreas", "ryrun", "11/10/19, 03:56:04 PM", "I've two audio devices working fine on windows 10. Sound is working on both in typical multimedia applications (media player, winamp, chrome browser). I use renoise on this system with DirectSound. No issues there, too. Audacity cant find any sound hardware. Try to start it with admin rights, too. But does not help. Tried lates nightly build and current stable build.\n\n```\n==============================\nDefault recording device number: -1\nDefault playback device number: -1\nNo devices found\n```\n\nLog show some missing dll files...\n\n```\n19:54:52: Audacity 2.1.1\n19:54:52: Trying to load FFmpeg libraries...\n19:54:52: Trying to load FFmpeg libraries from system paths. File name is 'avformat-55.dll'.\n19:54:52: Looking up PATH environment variable...\n19:54:52: PATH = ...\n19:54:52: Checking that '' is in PATH...\n19:54:52: FFmpeg directory is in PATH.\n19:54:52: Checking for monolithic avformat from 'avformat-55.dll'.\n19:54:52: Fehler: Laden der DLL 'avformat-55.dll' gescheitert (Fehler 126: das angegebene Modul wurde nicht gefunden.)\n19:54:52: Loading avutil from ''.\n19:54:52: Fehler: Laden der DLL '.dll' gescheitert (Fehler 126: das angegebene Modul wurde nicht gefunden.)\n19:54:52: Loading avcodec from ''.\n19:54:52: Fehler: Laden der DLL '.dll' gescheitert (Fehler 126: das angegebene Modul wurde nicht gefunden.)\n19:54:52: Loading avformat from 'avformat-55.dll'.\n19:54:52: Fehler: Laden der DLL 'avformat-55.dll' gescheitert (Fehler 126: das angegebene Modul wurde nicht gefunden.)\n19:54:52: Fehler: Failed to load FFmpeg libraries.\n19:54:52: Fehler: Es konnten keine passenden FFmpeg-Bibliotheken gefunden werden.\n```", "Hi Andreas,\n\nWhich host interface are you attempting to use, MME, Directsound or WASAPI?  Have you tried the others?  Would you be willing to help us gather some info on this?  If so, can you give me a day or two to modify one of the portaudio test programs to display debugging information?\n\nThanks much,\n\nLeland\n =||= Not sure, what interface audacity try to use on the first start. I cant choose one of them in the config. The select box is empty. Sure i can help here. No problem.\n =||= @lllucius Any news about this?\n =||= Sorry Andrew\u2026my second job has been taking up much of my spare time over the last few weeks.  I haven\u2019t done much with Audacity because of that.  I \u201chope\u201d to be freed up soon.\n\nFrom: Andreas [mailto:notifications@github.com] \nSent: Thursday, October 15, 2015 2:36 PM\nTo: audacity/audacity audacity@noreply.github.com\nCc: Leland Lucius github@homerow.net\nSubject: Re: [audacity] Internal PortAudio error on Windows 10 (#79)\n\n@lllucius https://github.com/lllucius  Any news about this?\n\n\u2014\nReply to this email directly or view it on GitHub https://github.com/audacity/audacity/issues/79#issuecomment-148498982 .  https://github.com/notifications/beacon/AHAeiJs9mlI3RlazqoyBszxkdU79qopCks5o7_eQgaJpZM4GDTPf.gif \n\n---\n\nThis email has been checked for viruses by Avast antivirus software.\nhttps://www.avast.com/antivirus\n =||= Any updates on this issue?\n =||= See http://audacityteam.org/download/windows#sysreq  . At a minimum we will be updating to latest PortAudio to pull in these two commits which may help:\nhttps://www.assembla.com/spaces/portaudio/subversion/commits/1962\nhttps://www.assembla.com/spaces/portaudio/subversion/commits/1963 .\n\nMost people can get at least some version of Audacity working on Windows 10 by following http://wiki.audacityteam.org/wiki/Windows_10_OS#solutions . \n =||= We have updated PortAudio.  If the issue persists, please make a new issue report. =||= "], ["80", "Audacity doesn\u2019t remember window position", "Roland Illig", "rillig", "11/11/19, 01:41:49 PM", "Audacity seems to remember something like the last window position, but it often fails to restore the exact window position.\n\nWindows version: 8.1\nAudacity version: 2.1.1 (or any 2.1.2-alpha version)\n1. Open Audacity \n2. Press Ctrl+W\n3. Drag the window a little bit to the right\n4. Press Ctrl+W. The window is now thinner than before\n5. Drag the window to the bottom of the desktop so that only the title bar is visible\n6. Press Ctrl+W. The window\u2019s height is now so small that the client area is not visible anymore\n7. In a two-screen setup, maximize Audacity to one of the screens\n8. Press Ctrl+W\n9. Maximize Audacity on the other screen\n10. Press Ctrl+W", "Thank You!\r\nThis has been fixed now, but we never got round to adding a comment here or closing this bug.   =||= Ah, beautiful. It works now exactly as expected. Even in half-screen mode and in full-screen mode. Thank you for fixing it and informing me. =||= "], ["81", "Update branches.txt", "Deleted user", "ghost", "10/23/15, 12:53:51 PM", "NaN", "NaN"], ["83", "Problems compiling audacity with wxwidgets 3.0.2", "Deleted user", "ghost", "11/04/15, 10:55:02 PM", "I have some problems compiling audacity with wxwidgets-3.0.2\n\nMy GCC version is:\n\n```\ng++ (GCC) 5.2.0\n```\n\nConfigure statement was:\n\n```\n./configure --prefix=/Programs/Audacity/2.1.1 --with-libvorbis --with-libvorbis --with-ffmpeg  --with-lame --with-lame --with-libflac --with-libsndfile\n```\n\nError is:\n\n ^\nIn file included from AudacityApp.cpp:26:0:\n/usr/include/wx-3.0/wx/event.h:3683:22: note: declared here\n         virtual bool TryValidator(wxEvent& WXUNUSED(event)), return false; )\n                      ^\n/usr/include/wx-3.0/wx/defs.h:615:43: note: in definition of macro 'wxDEPRECATED'\n #define wxDEPRECATED(x) wxDEPRECATED_DECL x\n                                           ^\n/usr/include/wx-3.0/wx/event.h:3682:5: note: in expansion of macro 'wxDEPRECATED_BUT_USED_INTERNALLY_INLINE'\n     wxDEPRECATED_BUT_USED_INTERNALLY_INLINE(\n     ^\nAudacityApp.cpp:2159:1: warning: 'virtual bool wxEvtHandler::TryParent(wxEvent&)' is deprecated [-Wdeprecated-declarations]\n }\n ^\nIn file included from AudacityApp.cpp:26:0:\n/usr/include/wx-3.0/wx/event.h:3686:22: note: declared here\n         virtual bool TryParent(wxEvent& event), return DoTryApp(event); )\n                      ^\n/usr/include/wx-3.0/wx/defs.h:615:43: note: in definition of macro 'wxDEPRECATED'\n #define wxDEPRECATED(x) wxDEPRECATED_DECL x\n                                           ^\n/usr/include/wx-3.0/wx/event.h:3685:5: note: in expansion of macro 'wxDEPRECATED_BUT_USED_INTERNALLY_INLINE'\n     wxDEPRECATED_BUT_USED_INTERNALLY_INLINE(\n     ^\nAudacityApp.cpp:2159:1: warning: 'virtual void wxWindowBase::SetVirtualSizeHints(int, int, int, int)' is deprecated [-Wdeprecated-declarations]\n }\n ^\nIn file included from AudacityApp.cpp:26:0:\n/usr/include/wx-3.0/wx/window.h:459:32: note: declared here\n     wxDEPRECATED( virtual void SetVirtualSizeHints( int minW, int minH,\n                                ^\n/usr/include/wx-3.0/wx/defs.h:615:43: note: in definition of macro 'wxDEPRECATED'\n #define wxDEPRECATED(x) wxDEPRECATED_DECL x\n                                           ^\nAudacityApp.cpp:2159:1: warning: 'virtual void wxWindowBase::MakeModal(bool)' is deprecated [-Wdeprecated-declarations]\n }\n ^\nIn file included from AudacityApp.cpp:26:0:\n/usr/include/wx-3.0/wx/window.h:688:32: note: declared here\n     wxDEPRECATED( virtual void MakeModal(bool modal = true) );\n                                ^\n/usr/include/wx-3.0/wx/defs.h:615:43: note: in definition of macro 'wxDEPRECATED'\n #define wxDEPRECATED(x) wxDEPRECATED_DECL x\n                                           ^\nAudacityApp.cpp:2159:1: warning: 'virtual void wxWindowBase::SetInitialBestSize(const wxSize&)' is deprecated: use SetInitialSize() instead. [-Wdeprecated-declarations]\n }\n ^\nIn file included from /usr/include/wx-3.0/wx/nonownedwnd.h:14:0,\n                 from /usr/include/wx-3.0/wx/toplevel.h:20,\n                 from /usr/include/wx-3.0/wx/frame.h:18,\n                 from /usr/include/wx-3.0/wx/docview.h:21,\n                 from AudacityApp.cpp:29:\n/usr/include/wx-3.0/wx/window.h:1872:13: note: declared here\n inline void wxWindowBase::SetInitialBestSize(const wxSize& size)\n             ^\nAudacityApp.cpp:2159:1: warning: 'virtual bool wxEvtHandler::TryValidator(wxEvent&)' is deprecated [-Wdeprecated-declarations]\n }\n ^\nIn file included from AudacityApp.cpp:26:0:\n/usr/include/wx-3.0/wx/event.h:3683:22: note: declared here\n         virtual bool TryValidator(wxEvent& WXUNUSED(event)), return false; )\n                      ^\n/usr/include/wx-3.0/wx/defs.h:615:43: note: in definition of macro 'wxDEPRECATED'\n #define wxDEPRECATED(x) wxDEPRECATED_DECL x\n                                           ^\n/usr/include/wx-3.0/wx/event.h:3682:5: note: in expansion of macro 'wxDEPRECATED_BUT_USED_INTERNALLY_INLINE'\n     wxDEPRECATED_BUT_USED_INTERNALLY_INLINE(\n     ^\nAudacityApp.cpp:2159:1: warning: 'virtual bool wxEvtHandler::TryParent(wxEvent&)' is deprecated [-Wdeprecated-declarations]\n }\n ^\nIn file included from AudacityApp.cpp:26:0:\n/usr/include/wx-3.0/wx/event.h:3686:22: note: declared here\n         virtual bool TryParent(wxEvent& event), return DoTryApp(event); )\n                      ^\n/usr/include/wx-3.0/wx/defs.h:615:43: note: in definition of macro 'wxDEPRECATED'\n #define wxDEPRECATED(x) wxDEPRECATED_DECL x\n                                           ^\n/usr/include/wx-3.0/wx/event.h:3685:5: note: in expansion of macro 'wxDEPRECATED_BUT_USED_INTERNALLY_INLINE'\n     wxDEPRECATED_BUT_USED_INTERNALLY_INLINE(\n     ^\nAudacityApp.cpp:2159:1: warning: 'virtual void wxWindowBase::SetVirtualSizeHints(int, int, int, int)' is deprecated [-Wdeprecated-declarations]\n }\n ^\nIn file included from AudacityApp.cpp:26:0:\n/usr/include/wx-3.0/wx/window.h:459:32: note: declared here\n     wxDEPRECATED( virtual void SetVirtualSizeHints( int minW, int minH,\n                                ^\n/usr/include/wx-3.0/wx/defs.h:615:43: note: in definition of macro 'wxDEPRECATED'\n #define wxDEPRECATED(x) wxDEPRECATED_DECL x\n                                           ^\nAudacityApp.cpp:2159:1: warning: 'virtual void wxWindowBase::MakeModal(bool)' is deprecated [-Wdeprecated-declarations]\n }\n ^\nIn file included from AudacityApp.cpp:26:0:\n/usr/include/wx-3.0/wx/window.h:688:32: note: declared here\n     wxDEPRECATED( virtual void MakeModal(bool modal = true) );\n                                ^\n/usr/include/wx-3.0/wx/defs.h:615:43: note: in definition of macro 'wxDEPRECATED'\n #define wxDEPRECATED(x) wxDEPRECATED_DECL x\n                                           ^\nAudacityApp.cpp:2159:1: warning: 'virtual void wxWindowBase::SetInitialBestSize(const wxSize&)' is deprecated: use SetInitialSize() instead. [-Wdeprecated-declarations]\n }\n ^\nIn file included from /usr/include/wx-3.0/wx/nonownedwnd.h:14:0,\n                 from /usr/include/wx-3.0/wx/toplevel.h:20,\n                 from /usr/include/wx-3.0/wx/frame.h:18,\n                 from /usr/include/wx-3.0/wx/docview.h:21,\n                 from AudacityApp.cpp:29:\n/usr/include/wx-3.0/wx/window.h:1872:13: note: declared here\n inline void wxWindowBase::SetInitialBestSize(const wxSize& size)\n             ^\nAudacityApp.cpp:2159:1: warning: 'virtual bool wxEvtHandler::TryValidator(wxEvent&)' is deprecated [-Wdeprecated-declarations]\n }\n ^\nIn file included from AudacityApp.cpp:26:0:\n/usr/include/wx-3.0/wx/event.h:3683:22: note: declared here\n         virtual bool TryValidator(wxEvent& WXUNUSED(event)), return false; )\n                      ^\n/usr/include/wx-3.0/wx/defs.h:615:43: note: in definition of macro 'wxDEPRECATED'\n #define wxDEPRECATED(x) wxDEPRECATED_DECL x\n                                           ^\n/usr/include/wx-3.0/wx/event.h:3682:5: note: in expansion of macro 'wxDEPRECATED_BUT_USED_INTERNALLY_INLINE'\n     wxDEPRECATED_BUT_USED_INTERNALLY_INLINE(\n     ^\nAudacityApp.cpp:2159:1: warning: 'virtual bool wxEvtHandler::TryParent(wxEvent&)' is deprecated [-Wdeprecated-declarations]\n }\n ^\nIn file included from AudacityApp.cpp:26:0:\n/usr/include/wx-3.0/wx/event.h:3686:22: note: declared here\n         virtual bool TryParent(wxEvent& event), return DoTryApp(event); )\n                      ^\n/usr/include/wx-3.0/wx/defs.h:615:43: note: in definition of macro 'wxDEPRECATED'\n #define wxDEPRECATED(x) wxDEPRECATED_DECL x\n                                           ^\n/usr/include/wx-3.0/wx/event.h:3685:5: note: in expansion of macro 'wxDEPRECATED_BUT_USED_INTERNALLY_INLINE'\n     wxDEPRECATED_BUT_USED_INTERNALLY_INLINE(\n     ^\nAudacityApp.cpp:2159:1: warning: 'virtual void wxWindowBase::SetVirtualSizeHints(int, int, int, int)' is deprecated [-Wdeprecated-declarations]\n }\n ^\nIn file included from AudacityApp.cpp:26:0:\n/usr/include/wx-3.0/wx/window.h:459:32: note: declared here\n     wxDEPRECATED( virtual void SetVirtualSizeHints( int minW, int minH,\n                                ^\n/usr/include/wx-3.0/wx/defs.h:615:43: note: in definition of macro 'wxDEPRECATED'\n #define wxDEPRECATED(x) wxDEPRECATED_DECL x\n                                           ^\nAudacityApp.cpp:2159:1: warning: 'virtual void wxWindowBase::MakeModal(bool)' is deprecated [-Wdeprecated-declarations]\n }\n ^\nIn file included from AudacityApp.cpp:26:0:\n/usr/include/wx-3.0/wx/window.h:688:32: note: declared here\n     wxDEPRECATED( virtual void MakeModal(bool modal = true) );\n                                ^\n/usr/include/wx-3.0/wx/defs.h:615:43: note: in definition of macro 'wxDEPRECATED'\n #define wxDEPRECATED(x) wxDEPRECATED_DECL x\n                                           ^\nAudacityApp.cpp:2159:1: warning: 'virtual void wxWindowBase::SetInitialBestSize(const wxSize&)' is deprecated: use SetInitialSize() instead. [-Wdeprecated-declarations]\n }\n ^\nIn file included from /usr/include/wx-3.0/wx/nonownedwnd.h:14:0,\n                 from /usr/include/wx-3.0/wx/toplevel.h:20,\n                 from /usr/include/wx-3.0/wx/frame.h:18,\n                 from /usr/include/wx-3.0/wx/docview.h:21,\n                 from AudacityApp.cpp:29:\n/usr/include/wx-3.0/wx/window.h:1872:13: note: declared here\n inline void wxWindowBase::SetInitialBestSize(const wxSize& size)\n             ^\nAudacityApp.cpp:2159:1: warning: 'virtual bool wxEvtHandler::TryValidator(wxEvent&)' is deprecated [-Wdeprecated-declarations]\n }\n ^\nIn file included from AudacityApp.cpp:26:0:\n/usr/include/wx-3.0/wx/event.h:3683:22: note: declared here\n         virtual bool TryValidator(wxEvent& WXUNUSED(event)), return false; )\n                      ^\n/usr/include/wx-3.0/wx/defs.h:615:43: note: in definition of macro 'wxDEPRECATED'\n #define wxDEPRECATED(x) wxDEPRECATED_DECL x\n                                           ^\n/usr/include/wx-3.0/wx/event.h:3682:5: note: in expansion of macro 'wxDEPRECATED_BUT_USED_INTERNALLY_INLINE'\n     wxDEPRECATED_BUT_USED_INTERNALLY_INLINE(\n     ^\nAudacityApp.cpp:2159:1: warning: 'virtual bool wxEvtHandler::TryParent(wxEvent&)' is deprecated [-Wdeprecated-declarations]\n }\n ^\nIn file included from AudacityApp.cpp:26:0:\n/usr/include/wx-3.0/wx/event.h:3686:22: note: declared here\n         virtual bool TryParent(wxEvent& event), return DoTryApp(event); )\n                      ^\n/usr/include/wx-3.0/wx/defs.h:615:43: note: in definition of macro 'wxDEPRECATED'\n #define wxDEPRECATED(x) wxDEPRECATED_DECL x\n                                           ^\n/usr/include/wx-3.0/wx/event.h:3685:5: note: in expansion of macro 'wxDEPRECATED_BUT_USED_INTERNALLY_INLINE'\n     wxDEPRECATED_BUT_USED_INTERNALLY_INLINE(\n     ^\nAudacityApp.cpp:2159:1: warning: 'virtual void wxWindowBase::SetVirtualSizeHints(int, int, int, int)' is deprecated [-Wdeprecated-declarations]\n }\n ^\nIn file included from AudacityApp.cpp:26:0:\n/usr/include/wx-3.0/wx/window.h:459:32: note: declared here\n     wxDEPRECATED( virtual void SetVirtualSizeHints( int minW, int minH,\n                                ^\n/usr/include/wx-3.0/wx/defs.h:615:43: note: in definition of macro 'wxDEPRECATED'\n #define wxDEPRECATED(x) wxDEPRECATED_DECL x\n                                           ^\nAudacityApp.cpp:2159:1: warning: 'virtual void wxWindowBase::MakeModal(bool)' is deprecated [-Wdeprecated-declarations]\n }\n ^\nIn file included from AudacityApp.cpp:26:0:\n/usr/include/wx-3.0/wx/window.h:688:32: note: declared here\n     wxDEPRECATED( virtual void MakeModal(bool modal = true) );\n                                ^\n/usr/include/wx-3.0/wx/defs.h:615:43: note: in definition of macro 'wxDEPRECATED'\n #define wxDEPRECATED(x) wxDEPRECATED_DECL x\n                                           ^\nAudacityApp.cpp:2159:1: warning: 'virtual void wxWindowBase::SetInitialBestSize(const wxSize&)' is deprecated: use SetInitialSize() instead. [-Wdeprecated-declarations]\n }\n ^\nIn file included from /usr/include/wx-3.0/wx/nonownedwnd.h:14:0,\n                 from /usr/include/wx-3.0/wx/toplevel.h:20,\n                 from /usr/include/wx-3.0/wx/frame.h:18,\n                 from /usr/include/wx-3.0/wx/docview.h:21,\n                 from AudacityApp.cpp:29:\n/usr/include/wx-3.0/wx/window.h:1872:13: note: declared here\n inline void wxWindowBase::SetInitialBestSize(const wxSize& size)\n             ^\nAudacityApp.cpp:2159:1: warning: 'virtual bool wxEvtHandler::TryValidator(wxEvent&)' is deprecated [-Wdeprecated-declarations]\n }\n ^\nIn file included from AudacityApp.cpp:26:0:\n/usr/include/wx-3.0/wx/event.h:3683:22: note: declared here\n         virtual bool TryValidator(wxEvent& WXUNUSED(event)), return false; )\n                      ^\n/usr/include/wx-3.0/wx/defs.h:615:43: note: in definition of macro 'wxDEPRECATED'\n #define wxDEPRECATED(x) wxDEPRECATED_DECL x\n                                           ^\n/usr/include/wx-3.0/wx/event.h:3682:5: note: in expansion of macro 'wxDEPRECATED_BUT_USED_INTERNALLY_INLINE'\n     wxDEPRECATED_BUT_USED_INTERNALLY_INLINE(\n     ^\nAudacityApp.cpp:2159:1: warning: 'virtual bool wxEvtHandler::TryParent(wxEvent&)' is deprecated [-Wdeprecated-declarations]\n }\n ^\nIn file included from AudacityApp.cpp:26:0:\n/usr/include/wx-3.0/wx/event.h:3686:22: note: declared here\n         virtual bool TryParent(wxEvent& event), return DoTryApp(event); )\n                      ^\n/usr/include/wx-3.0/wx/defs.h:615:43: note: in definition of macro 'wxDEPRECATED'\n #define wxDEPRECATED(x) wxDEPRECATED_DECL x\n                                           ^\n/usr/include/wx-3.0/wx/event.h:3685:5: note: in expansion of macro 'wxDEPRECATED_BUT_USED_INTERNALLY_INLINE'\n     wxDEPRECATED_BUT_USED_INTERNALLY_INLINE(\n     ^\nAudacityApp.cpp:2159:1: warning: 'virtual void wxWindowBase::SetVirtualSizeHints(int, int, int, int)' is deprecated [-Wdeprecated-declarations]\n }\n ^\nIn file included from AudacityApp.cpp:26:0:\n/usr/include/wx-3.0/wx/window.h:459:32: note: declared here\n     wxDEPRECATED( virtual void SetVirtualSizeHints( int minW, int minH,\n                                ^\n/usr/include/wx-3.0/wx/defs.h:615:43: note: in definition of macro 'wxDEPRECATED'\n #define wxDEPRECATED(x) wxDEPRECATED_DECL x\n                                           ^\nAudacityApp.cpp:2159:1: warning: 'virtual void wxWindowBase::MakeModal(bool)' is deprecated [-Wdeprecated-declarations]\n }\n ^\nIn file included from AudacityApp.cpp:26:0:\n/usr/include/wx-3.0/wx/window.h:688:32: note: declared here\n     wxDEPRECATED( virtual void MakeModal(bool modal = true) );\n                                ^\n/usr/include/wx-3.0/wx/defs.h:615:43: note: in definition of macro 'wxDEPRECATED'\n #define wxDEPRECATED(x) wxDEPRECATED_DECL x\n                                           ^\nAudacityApp.cpp:2159:1: warning: 'virtual void wxWindowBase::SetInitialBestSize(const wxSize&)' is deprecated: use SetInitialSize() instead. [-Wdeprecated-declarations]\n }\n ^\nIn file included from /usr/include/wx-3.0/wx/nonownedwnd.h:14:0,\n                 from /usr/include/wx-3.0/wx/toplevel.h:20,\n                 from /usr/include/wx-3.0/wx/frame.h:18,\n                 from /usr/include/wx-3.0/wx/docview.h:21,\n                 from AudacityApp.cpp:29:\n/usr/include/wx-3.0/wx/window.h:1872:13: note: declared here\n inline void wxWindowBase::SetInitialBestSize(const wxSize& size)\n             ^\nAudacityApp.cpp:2159:1: warning: 'virtual bool wxEvtHandler::TryValidator(wxEvent&)' is deprecated [-Wdeprecated-declarations]\n }\n ^\nIn file included from AudacityApp.cpp:26:0:\n/usr/include/wx-3.0/wx/event.h:3683:22: note: declared here\n         virtual bool TryValidator(wxEvent& WXUNUSED(event)), return false; )\n                      ^\n/usr/include/wx-3.0/wx/defs.h:615:43: note: in definition of macro 'wxDEPRECATED'\n #define wxDEPRECATED(x) wxDEPRECATED_DECL x\n                                           ^\n/usr/include/wx-3.0/wx/event.h:3682:5: note: in expansion of macro 'wxDEPRECATED_BUT_USED_INTERNALLY_INLINE'\n     wxDEPRECATED_BUT_USED_INTERNALLY_INLINE(\n     ^\nAudacityApp.cpp:2159:1: warning: 'virtual bool wxEvtHandler::TryParent(wxEvent&)' is deprecated [-Wdeprecated-declarations]\n }\n ^\nIn file included from AudacityApp.cpp:26:0:\n/usr/include/wx-3.0/wx/event.h:3686:22: note: declared here\n         virtual bool TryParent(wxEvent& event), return DoTryApp(event); )\n                      ^\n/usr/include/wx-3.0/wx/defs.h:615:43: note: in definition of macro 'wxDEPRECATED'\n #define wxDEPRECATED(x) wxDEPRECATED_DECL x\n                                           ^\n/usr/include/wx-3.0/wx/event.h:3685:5: note: in expansion of macro 'wxDEPRECATED_BUT_USED_INTERNALLY_INLINE'\n     wxDEPRECATED_BUT_USED_INTERNALLY_INLINE(\n     ^\nAudacityApp.cpp:2159:1: warning: 'virtual void wxWindowBase::SetVirtualSizeHints(int, int, int, int)' is deprecated [-Wdeprecated-declarations]\n }\n ^\nIn file included from AudacityApp.cpp:26:0:\n/usr/include/wx-3.0/wx/window.h:459:32: note: declared here\n     wxDEPRECATED( virtual void SetVirtualSizeHints( int minW, int minH,\n                                ^\n/usr/include/wx-3.0/wx/defs.h:615:43: note: in definition of macro 'wxDEPRECATED'\n #define wxDEPRECATED(x) wxDEPRECATED_DECL x\n                                           ^\nAudacityApp.cpp:2159:1: warning: 'virtual void wxWindowBase::MakeModal(bool)' is deprecated [-Wdeprecated-declarations]\n }\n ^\nIn file included from AudacityApp.cpp:26:0:\n/usr/include/wx-3.0/wx/window.h:688:32: note: declared here\n     wxDEPRECATED( virtual void MakeModal(bool modal = true) );\n                                ^\n/usr/include/wx-3.0/wx/defs.h:615:43: note: in definition of macro 'wxDEPRECATED'\n #define wxDEPRECATED(x) wxDEPRECATED_DECL x\n                                           ^\nAudacityApp.cpp:2159:1: warning: 'virtual void wxWindowBase::SetInitialBestSize(const wxSize&)' is deprecated: use SetInitialSize() instead. [-Wdeprecated-declarations]\n }\n ^\nIn file included from /usr/include/wx-3.0/wx/nonownedwnd.h:14:0,\n                 from /usr/include/wx-3.0/wx/toplevel.h:20,\n                 from /usr/include/wx-3.0/wx/frame.h:18,\n                 from /usr/include/wx-3.0/wx/docview.h:21,\n                 from AudacityApp.cpp:29:\n/usr/include/wx-3.0/wx/window.h:1872:13: note: declared here\n inline void wxWindowBase::SetInitialBestSize(const wxSize& size)\n             ^\nIn file included from AudacityApp.cpp:216:0:\n../images/AudacityLogoWithName.xpm:2:21: warning: 'AudacityLogoWithName_xpm' defined but not used [-Wunused-variable]\n static const char \\* AudacityLogoWithName_xpm[] = {\n                     ^\nAudacityApp.cpp:228:13: warning: 'void wxOnAssert(const wxChar_, int, const wxChar_)' defined but not used [-Wunused-function]\n static void wxOnAssert(const wxChar _fileName, int lineNumber, const wxChar *msg)\n             ^\nMakefile:2620: recipe for target 'audacity-AudacityApp.o' failed\nmake[1]: *_\\* [audacity-AudacityApp.o] Error 1\nmake[1]: Leaving directory '/Depot/jj/audacity-2.1.1/src'\nMakefile:716: recipe for target 'install-recursive' failed\nmake: **\\* [install-recursive] Error 1\n\n---\n\nAny advice on how I could resolve it or should I just wait for a new release of audacity?", "2.1.1 isn't suitable for wxWidgets 3.0.2.  Recommend waiting for 2.1.2 to be released, or using GitHub master, if compiling with wxWidgets 3.0.2.  Also have a look at a recent automated build.... https://travis-ci.org/audacity/audacity/builds/89121174.  You're treating warnings as errors?\n =||= "], ["84", "Fixed miscategorization of an executable in Makefile: SCRIPTS->PROGRAMS.", "yuri@FreeBSD", "yurivict", "01/22/16, 06:13:42 PM", "'make install' doesn't strip executables when they are categorized as SCRIPTS.", "yurivict - sorry this took us so long to commit.  We had to delay our release from the original plan,and 2.1.2 was only released two days ago.\n =||= "], ["85", "package from daily build ppa for trusty is missing", "\u202e", "HybridDog", "11/16/15, 07:03:16 PM", "l noticed that compilation failed:\nhttps://launchpad.net/~audacity-team/+archive/ubuntu/daily/+packages\nhttps://launchpadlibrarian.net/225381917/buildlog_ubuntu-trusty-amd64.audacity_2.0.6%2Bgit20151106%2Br3800%2B31%2B32~ubuntu14.04.1_BUILDING.txt.gz\n\nl'm now installing audacity from that local-libraries.daily repository.", "NaN"], ["86", "cppcheck: fix 2 reports", "Julien Nabet", "serval2412", "01/22/16, 06:05:15 PM", "[lib-src/libnyquist/nyquist/nyqsrc/sndwritepa.c:249]: (style) Same expression in both branches of ternary operator\n[lib-src/libnyquist/nyquist/nyqsrc/f0.cpp:137]: (error) Mismatching allocation and deallocation: results", "NaN"], ["87", "Please remove duplicate \"static\" keywords", "yuri@FreeBSD", "yurivict", "11/10/19, 03:54:07 PM", "Example is \"static static inline void fft2pt(float *ioptr){\" in fftlib.c\n\nThis causes compiler errors.", "Thanks.  That's fixed in our current source code. =||= "], ["88", "Make RuleTable scrollable & DnD move instead of copy", "Sven Giermann", "Giermann", "09/12/16, 04:23:05 PM", "Having lots of rules in RuleTable may lead to an assertion failure on opening preferences dialog:\n\n> assert \"sz.x <= 1000 && sz.y <= 750\" failed in\n> PrefsDialog::PrefsDialog(): Preferences dialog exceeds max size\n\nThis change will make the RuleTable scrollable (as it is/was when creating many rules) instead of expanding the dialog size.\nFurther I had to fix the calculation of the clicked row from the given coords. Even without this proposed change for scrolling, the calculated row has always been the one above the clicked row - maybe this changed in wxWidgets 3.0.\nNow it uses CalcUnscrolledPosition() which seems to work fine even without scrolling.\n\nLast change is for drag and drop mode: rules are not being copied, but moved on dnd - I changed this to reflect this mode on the cursor while dragging an item.", "Merged into master with https://github.com/audacity/audacity/commit/ce09f4b883d15610590eecf95ab69eedb5d6b542\n\nThanks!\n =||= "], ["89", "Update Ukrainian translation", "Yuri Chornoivan", "yurchor", "01/22/16, 06:00:58 PM", "Just a minor update to Ukrainian translation (2 fuzzied strings updated).\n\nMany thanks for merging.", "NaN"], ["90", "Set Tremolo Hz to a more precise value than a tenth of a Hz?", "Mil\u00e1n Nagy", "Wizek", "11/17/15, 04:03:46 PM", "Hello,\n\nI've stumbled into this issue:\nhttp://sound.stackexchange.com/questions/37600/in-audacity-how-to-apply-tremolo-effect-of-0-25-hz-15-cycles-minute\n\nAnd am wondering how easy or difficult would it be to allow more precise values to be entered in the text field than a tenth of an Hz.\n\nI'm also wondering that if I look for relevant sections of the code and prepare a patch, would you likely merge my pull request of a fix?", "The Tremolo effect has been updating in the forthcoming Audacity 2.1.2 release and now allows values less than 0.1 Hz.\n\nSteve\n =||= Oh, really? I'm glad to hear that!\n\nJust to note: I've also started to look at the code, and found this section: https://github.com/audacity/audacity/blob/ae5d29a04815cc41ccf36ef765a9f75636b8bd21/plug-ins/tremolo.ny#L22\n\nIt was surprisingly easy to tweak a value in here that allowed me to get the result I wanted even in Audacity 2.0.5.\nSince you are saying this is fixed anyways in an upcoming release, I won't be making a pull request.\n\nThanks for the quick response!\n =||= "], ["91", "Fix building on musl libc", "Kylie McClain", "somasis", "01/22/16, 06:09:24 PM", "Without this patch:\n\n```\neffects/VST/VSTEffect.cpp: In member function 'bool VSTEffect::Load()':\neffects/VST/VSTEffect.cpp:2579:90: error: 'RTLD_DEEPBIND' was not declared in this scope\n    void *lib = dlopen((const char *)wxString(realPath).ToUTF8(), RTLD_NOW | RTLD_LOCAL | RTLD_DEEPBIND);\n                                                                                          ^\n```", "Thanks somasis!\n =||= Thanks for reviewing :+1: \n =||= "], ["92", "Broken link to release notes on website", "Michael Ten", "MichaelTen", "11/29/15, 06:41:42 PM", "I hope it is OK to post this here. I couldn't send the devs messages on here or at least i couldn't figure out how to. \nThe link: http://wiki.audacityteam.org/wiki/Release_Notes (on http://audacityteam.org/download/source)  is broken. \"Forbidden You don't have permission to access /wiki/Release_Notes on this server.\"\n\nFYI. TY! Awesome software! (= ", "The feedback address http://audacityteam.org/contact/#feedback is the best way to contact us without having to subscribe or log in anywhere.  \n\nhttp://wiki.audacityteam.org/wiki/Release_Notes is working for me as I write. \n\nhttp://downforeveryoneorjustme.com/http://wiki.audacityteam.org/wiki/Release_Notes \n =||= I see it working now too. either way. thank you for reply. (= \n =||= "], ["93", "Audacity doesn't remember working directory when opening new file through menu (Mac)", "Florian LB", "flothesof", "11/12/19, 10:07:34 AM", "Hi there,\n\nI use Audacity 2.1.1 on Mac (El Capitan). Whenever I use the open file dialog, Audacity sets me back to my home directory instead of the directory I opened the last file in.\nI expect Audacity to remember the working directory I am in when opening new files. Is my expectation wrong, or might this be a bug? \nThanks in advance for your help, I've been unable to find anything related in the FAQ or googling.\n\nBest,\nFlorian", "Hi,  Please note this is not a guaranteed support address or bug reporting line. For support, Audacity Forum http://forum.audacityteam.org/viewforum.php?f=47 . For bug reports, http://audacityteam.org/contact/#feedback .\n\nThe last file open location is stored at \"DefaultOpenPath\" in the audacity.cfg settings file.  You could try deleting that file ( ~/Library/Application Support/audacity/audacity.cfg ).  If that does not solve the problem then check if the path is getting written to audacity.cfg. If not you may have permissions failure on the file - see https://discussions.apple.com/thread/7292563?start=0&tstart=0 .\n =||= Sorry for not getting back to this sooner.\r\nAudacity on Mac does (now) remember the last location you opened from (not the last location you saved to) so this is fixed now, and probably was some time ago.\r\nThanks for the bug report. =||= "], ["94", "Fix (workaround) for bug #1266.", "Leland Lucius", "lllucius", "12/21/15, 11:00:24 PM", "NaN", "NaN"], ["95", "One bit of gPrefs->Flush() cleanup", "Leland Lucius", "lllucius", "12/26/15, 03:09:29 PM", "Remove flushing of preferences in ShuttlePrefs and only flush when all settings have been written.  (Reduces the time it takes to leave the Preferences dialog)", "NaN"], ["96", "Hotkeys doesn't work with non-english keyboard layout on linux", "Yan Pashkovsky", "Yanpas", "11/12/19, 04:39:22 PM", "Ctrl+O doesn't work\nOpening menu via keyboard (Alt+\u0424 for \u0424\u0430\u0439\u043b) highlights File(\u0424\u0430\u0439\u043b) entry, but does not expand it. (see screenshot)\nI use two layouts : russian and american. version 2.0.5\n![_2015-12-28_17-36-34](https://cloud.githubusercontent.com/assets/7345761/12020118/90df4fd6-ad89-11e5-8c7d-b85a54c4d454.png)", "2.0.5 is long obsolete, and probably built with a version of Widgets we no longer support. If it's a packaged version of Audacity, please report the problem to your distribution. \n\nIf the problem occurs in the tarball \"Linux 2.1.2 RC1 minimal source (for testing)\"  available from http://www.fosshub.com/Audacity.html , please let us know. This is the bug report address: http://audacityteam.org/contact/#feedback . However I don't see those problems on Ubuntu 14.04 in 2.1.2 RC1 using English or Czech QWERTY layouts.\n =||= I've tried audacity from ubuntu 16.04 beta. (audacity version 2.0.6). Bug with Alt+F is fixed, but Ctrl+O still doesn't work, seems like wxwidgets problems\nI've tried to build latest audacity, but make returns error. Are there binary builds somewhere?\n![_2015-12-28_19-52-21](https://cloud.githubusercontent.com/assets/7345761/12022000/bb872494-ad9c-11e5-8d84-4d02f13e2cec.png)\n =||= The packaged 2.0.6 might be built with wx3 but that was an error by Ubuntu because 2.0.6 did not support wx3 at the time.  \n\nI do not recommend using Ubuntu 16.04 because that OS is still four months before release. \n\nYou could build the 2.1.2 tarball on Ubuntu 15.x  - try these steps:\nhttp://forum.audacityteam.org/viewtopic.php?f=19&t=88922 .\n\nTo resolve your compilation error, configure Audacity with --disable-dynamic-loading or even better,\n--without-ffmpeg .\n\nPlease note this not a support channel. Please use http://forum.audacityteam.org/viewforum.php?f=48 if you need more help.\n =||= QA believe this is fixed in current Audacity (when built correctly) and so closing this bug.\r\nThanks for the bug report. =||= "], ["97", "Noise source in  audacity/src/effects/Noise.cpp is poor", "Torbj\u00f6rn Rathsman", "milasudril", "01/04/16, 03:30:33 PM", "Is there any reason to not use a more descent random generator for noise. In C++11\n\n```\nstd::mt19937 randgen;\nstd::uniform_real_distribution<float> U(-1,1);\n\nbuffer[i]=mAmp*U(randgen);\n```\n\nIf C++11 is not an option yet, boost might be.", "Is there a practical use case where \"more random than now\" is required ?\nIf you think that there is a strong case for why changing this will benefit Audacity users, please raise the issue on the mailing list: https://lists.sourceforge.net/lists/listinfo/audacity-quality\nAs we have limited resources, we don't really want to be spending time on things that have no significant benefit for users.\n =||= The most obvious benefit is that you will get the same quality on all platforms. In particular, Windows users will have the most benefit, because this engine is very poor.\n =||= "], ["98", "Please report issues to http://forum.audacityteam.org/", "James Crook", "JamesCrook", "11/10/19, 10:51:55 AM", "We don't actively use this issue tracker!\n\nIf you are using audacity and want to report an issue, please use the forum.\nIf you are a developer and want to help us develop audacity, please subscribe to our developer mailing list https://lists.sourceforge.net/lists/listinfo/audacity-devel and post there.\n\nOur bugzilla bug tracker is here http://bugzilla.audacityteam.org/", "Unwelcoming.  Issue closed/deleted. =||= "], ["99", "fix German translation (de)", "Tim Pollandt", "pollti", "01/22/16, 05:57:50 PM", "NaN", "@JamesCrook is there anything I should do for this patch?\n =||= Thanks Pollti.  We've just released 2.1.2 two days ago, and this will be in 2.1.3.\n =||= Thanks for merging!\n =||= "], ["100", "Update the manifest pragma to match the docs.", "Henric Jungheim", "henricj", "02/13/16, 07:17:45 PM", "The language and processorArchitecture are wildcards.\nThis can be found on the [Enabling Visual Styles](https://msdn.microsoft.com/en-us/library/windows/desktop/bb773175.aspx) page.", "NaN"], ["101", "Enable the DEP and ASLR flags.", "Henric Jungheim", "henricj", "02/13/16, 07:42:09 PM", "More precisely, /DYNAMICBASE and /NXCOMPAT are set unless explicitly disabled.  More info: [Windows ISV Software Security Defenses](https://msdn.microsoft.com/en-us/library/bb430720.aspx).  Unless they have been set deliberately, the flags are likely left over from when Visual Studio upgraded the project file.", "Is enabling ASLR a problem for XP SP3 which we still support, but which does not support ASLR?\n =||= No, it just sets a flag in the EXE's header that opts it in where supported.  XP ignores it.  Per [Microsoft][http://blogs.msdn.com/b/vcblog/archive/2009/05/21/dynamicbase-and-nxcompat.aspx], \"ASLR is supported only on Windows Vista and later operating systems. It will be ignored on older OS\".\n =||= ASLR and DEP have also been the default for OS X and Linux for a number of years.  I didn't see any attempt in the Audacity build to turn off ASLR for the OS X build (there would be a \"-no_pie\" somewhere) and I'm not aware of any sane way to disable it for Linux builds.\n =||= "], ["102", "Mac OSX El Capitan Build", "Dyddye", "Dyddye", "09/17/16, 11:16:39 PM", "Fix missing newline error on Mac OSX El Capitan:\n\n```\n./test/patest_mono.c:155:2: error: no newline at end of file [-Werror,-Wnewline-eof]\n```\n\nUpdate Mac OSX compile instructions (+El Capitan) in mac/Build.txt.", "The newline issue is for PortAudio to consider. We only make changes to third-party code in lib-src in extreme cases (and then tell them what we have done). We never change code in lib-src for compiler or other warnings such as no newline. I know PortAudio are close to a new release, so I suggest you contact them with your issue at http://www.portaudio.com/contacts.html .\n\nThanks for the comments about mac/Build.txt. The only changes I would propose to our current text are: \n- add the one-line xcodebuild command that could be used (rather than your four lines)\n- add a terse warning about packaged versions of wxWidgets\n- add a note not to accept the Xcode app warning to change the base SDK to 10.11.\n\nThe current version of Build.txt (that of course you did not have when you made your pull request) already mentions:\n\n\"Xcode 7.2 and later require a custom build setting to accept the 10.6 SDK, or to edit src\\MemoryX.h in the Audacity code. See this topic:\nhttp://forum.audacityteam.org/viewtopic.php?p=303835#p303835 .\" \n\nSo, we won't say that 7.2 is verified to work. Using the 7.2 SDK is  I believe the source of at least one of the problems you mention, perhaps both. \n\nWe can't give links to web pages written in German. \n\nIf there are no other comments I will commit the minor changes to Build.txt then close this request. Thanks again for your request though. Sorry it has taken a long time to respond.\n =||= There being no further comments, I made my proposed changes in https://github.com/audacity/audacity/commit/16e6629 .\n =||= "], ["103", "continuous integration of build for windows", null, "ThomasFeher", "09/12/16, 02:41:33 PM", "Adds a configuration for appVeyor triggering a build of the release\nversion for each new commit. Needs registering at ci.appveyor.com with\nthe github account. Debug is not built, due to time limit of the free\nversion of appVeyor. Release build takes at least 30 minutes and up to\n45 minutes. The time limit is 60 minutes.\n\nUses the undocumented possibility of building wxWidgets as dynamic\nlibrary by specifying \"DLL Release\" as configuration. The method in the\ninstall instructions is impossible to automate as far as I could find\nout.\n\nBuilds all targets except of \"help\" and \"locale\", because locale took\ntoo long for the complete build to succeed the time limit.\nThis is not satisfying as new targets must be added manually to the\nbuild. If this does not happen, the build will not fail, although the\nnew target could possibly fail building.\nUnfortunately their seems to be no way to build the default targets\nwhile excluding specific ones.\nAdding target \"help\" was not tested.\n\nPossible improvement: Put the complete \"install\" part into a install\nscript. That would help people easily building audacity and prevent\noutdated install instruction as is the case at the moment.\n\nI am not sure if renaming wx/setup_redirect.h into wx/setup.h is the\ncorrect way, but it seems to work. Following the install instructions\nresulted in missing wx/setup.h.", "Thanks for the information. Just as a comment, it would be important for testing that locale was built. Was locale hanging because of missing msgfmt?   \n =||= No, msgfmt is currently installed (first step during install). It is started and then nothing happens, see here: https://ci.appveyor.com/project/ThomasFeher/audacity/build/2.1.2-71\nIf you put the mouse cursor over the last line, you see the tooltip that this was called at 00:32:00 and then nothing happend until timeout.\nIf msgfmt should not take that long, there could be something else wrong, but I could not find out, because I do not have a windows machine at hand.\n =||= Committed.\nhttps://github.com/audacity/audacity/commit/df2de94f6b42670cd2529436c8f3f68e6b253e61\nMy apologies for not acting sooner.  I hadn't seen that the file does no harm whatsoever if it is there and unused, and may help some GitHub users who develop on Linux and want to check they are not breaking the build on Windows.\n =||= "], ["104", "Enable some C++11 features in Travis, which now uses 4.6.3...", "Paul Licameli", "Paul-Licameli", "02/27/16, 12:59:20 AM", "... See here for supported features: https://gcc.gnu.org/projects/cxx0x.html\n\nIf later versions of gcc are used, the option should be changed to\n-std=c++11", "NaN"], ["105", "Update danish (da) translation", null, "scootergrisen", "02/13/16, 07:07:41 PM", "NaN", "NaN"], ["106", "Travis upgrade gcc", null, "ThomasFeher", "09/08/16, 10:15:31 PM", "Use a more recent version of gcc for building on Travis-CI.\nThis prepares the CI for using C++11 features.", "But should we use 4.8.2 as James suggests?\n =||= Just added a commit to display the full version. It shows \"4.8.1\" (line no. 300). Normally you can't specify the patch level of a package on Linux, it should always be the latest. But it seems due to the old Ubuntu version, that patches after 4.8.1 are not available.\nI'll do some more research on possible workarounds.\n =||= Thank you Thomas.\n\nI am pleased to have new language features available.  The important\nquestion is whether there were notable compiler bugs related to -std=c++11\nthat were fixed in the patches.  That might be documented somewhere\nonline...\n\nPRL\n\nOn Sat, Feb 13, 2016 at 11:40 AM, ThomasFeher notifications@github.com\nwrote:\n\n> Just added a commit to display the full version. It shows \"4.8.1\" (line\n> no. 300). Normally you can't specify the patch level of a package on Linux,\n> it should always be the latest. But it seems due to the old Ubuntu version,\n> that patches after 4.8.1 are not available.\n> I'll do some more research on possible workarounds.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/audacity/audacity/pull/106#issuecomment-183700388.\n =||= [This is the list of fixed bugs in 4.8.2](https://gcc.gnu.org/bugzilla/buglist.cgi?bug_status=RESOLVED&resolution=FIXED&target_milestone=4.8.2)\n =||= We could use a more recent version of Ubuntu on Travis, see [here](https://docs.travis-ci.com/user/trusty-ci-environment/). It is in beta state and includes gcc 4.8.5. But the `git show \u2026` lines do somehow crash the build (it hangs until timeout when printing the result, seems to be some issue with escape characters, see [here](https://travis-ci.org/ThomasFeher/audacity/builds/109040456)). [Removing them works, though.](https://travis-ci.org/ThomasFeher/audacity/builds/109030635)\nWould that be an alternative?\n =||= Is this pull request still relevant or can it be closed?\n =||= Depends if you want to include displaying the full version of the compiler in the log or not.\n =||= Thanks Thomas.  Travis now on gcc 4.9.4 and using your way to show version number.\n =||= "], ["107", "Fix build with wxWidgets using STL", null, "ThomasFeher", "02/22/16, 09:38:15 PM", "This fixes building Audacity with wxWidgets configured with `--with-stl`, e.g. on openSuse.\n\nProblem was probably that wxWidgets' own implementation of a string class had some implicit conversion functions that are not available when std::string is used.", "Rather than adding c_str in hundreds of places, why not change the functions called so that they take const wxString& instead of const wxChar_t \\* ?  There would be less code to review.\n =||= You are right. Closing this one. Please apply @jengelh 's patch.\n =||= "], ["108", "Fix linking with non-system compiler on linux", null, "ThomasFeher", "11/09/19, 04:46:38 PM", "This replaces the previous fix, which was applied to a generated file.", "Sorry, this has sat in the queue too long and is now being closed as we couldn't decide on progressing it. =||= "], ["109", "CANCEL: Auto Save Export in Timer Recording", "Mark Young", "tip2tail", "02/25/16, 12:23:44 PM", "Hi,  I have modified the Timer Recording process to allow for automatic project save and/or export when the recording has been completed.\n\nI am submitting this pull request for review and would like to see this implemented into Audacity.\n\nThanks", "Hi, I see the travis build has failed - however I cannot see why - any advice?\n =||= Closed so I can make enhancements and pull from a different branch.\n =||= "], ["110", "comment out extra tokens at end of #endif directive to avoid compiler warnings [-Wextra-tokens]", "Mojca Miklavec", "mojca", "02/26/16, 02:45:34 PM", "My compiler keeps complaining about:\n\n```\n./nyquist/nyqsrc/sound.h:462:8: warning: extra tokens at end of #endif directive [-Wextra-tokens]\n#endif WIN32\n       ^\n       //\n1 warning generated.\n```\n\nso I'm attaching a trivial patch to comment out the extra tokens. (One could just as well delete them, but I didn't want to modify the code too much.)", "Thank you.\n =||= "], ["111", "show more warnings on Travis-CI", null, "ThomasFeher", "02/26/16, 06:00:03 PM", "enables `-Wall` and `-Wextra`\nsee [here](https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html) for listing of all warnings that are added by these flags", "NaN"], ["112", "build: rework everything to use wxString instead of pointer-to-wxChar", "Jan Engelhardt", "jengelh", "07/13/18, 08:34:13 AM", "make it build with wx3 --enable-stl and throw out other type sillynesses. That's all. It's not tested.\n- abolish reliance on pointer-to-wxChar\n- use backend-neutral wxString\n- drop all wxString::c_str() calls because they give a pointer to\n  the internal representation, which is also bounded by the lifetime\n  of the surrounding object.\n- drop calls to wxString::mb_str() because they give a\n  platform-dependent internal representation; under a Unicode\n  wxWidgets build, this is wchar_t, which\n  - on Windows: is not usable, because most APIs expect narrow\n    locale-specific strings\n  - on Linux: is not usable, because most APIs expect narrow\n    UTF-8 strings\n- drop calls to wx_str, same as mb_str", "A brief but not complete look shows you were alert to use const wString& in\narguments.  That is good.  I lately made my own sweep replacing string\nvalue arguments with references, so let's not get more of that again.\n\nDid you make some attempt to stop at least once in every changed function\nand be sure nothing funny happens?\nPRL\n\nOn Friday, February 26, 2016, jengelh notifications@github.com wrote:\n\n> make it build with wx3 --enable-stl and throw out other type sillynesses.\n> That's all. It's not tested.\n> \n> abolish reliance on pointer-to-wxChar\n> use backend-neutral wxString\n> drop all wxString::c_str() calls because they give a pointer to the\n> internal representation, which is also bounded by the lifetime of the\n> surrounding object.\n> drop calls to wxString::mb_str() because they give a platform-dependent\n> internal representation; under a Unicode wxWidgets build, this is wchar_t,\n> which\n> \n> on Windows: is not usable, because most APIs expect narrow\n> locale-specific strings\n> on Linux: is not usable, because most APIs expect narrow UTF-8 strings\n> \n> drop calls to wx_str, same as mb_str\n> \n> ---\n> \n> You can view, comment on, or merge this pull request online at:\n> \n>   https://github.com/audacity/audacity/pull/112\n> \n> Commit Summary\n> \n> build: rework everything to use wxString instead of pointer-to-wxChar\n> \n> File Changes\n> \n> M .gitignore (9)\n> M src/AboutDialog.cpp (4)\n> M src/AboutDialog.h (4)\n> M src/AudacityApp.cpp (39)\n> M src/AutoRecovery.cpp (77)\n> M src/AutoRecovery.h (7)\n> M src/BatchCommands.cpp (16)\n> M src/BatchProcessDialog.cpp (6)\n> M src/Benchmark.cpp (4)\n> M src/BlockFile.cpp (4)\n> M src/DirManager.cpp (127)\n> M src/DirManager.h (10)\n> M src/Envelope.cpp (13)\n> M src/Envelope.h (14)\n> M src/FFT.cpp (2)\n> M src/FFT.h (2)\n> M src/FFmpeg.cpp (77)\n> M src/FFmpeg.h (4)\n> M src/FileIO.cpp (4)\n> M src/FileNames.cpp (2)\n> M src/FreqWindow.cpp (14)\n> M src/Internat.cpp (7)\n> M src/Internat.h (4)\n> M src/LabelDialog.cpp (4)\n> M src/LabelTrack.cpp (29)\n> M src/LabelTrack.h (4)\n> M src/LangChoice.cpp (8)\n> M src/Languages.cpp (12)\n> M src/Legacy.cpp (2)\n> M src/Menus.cpp (34)\n> M src/ModuleManager.cpp (17)\n> M src/NoteTrack.cpp (19)\n> M src/NoteTrack.h (4)\n> M src/PitchName.cpp (77)\n> M src/PitchName.h (4)\n> M src/PluginManager.cpp (36)\n> M src/PluginManager.h (1)\n> M src/Prefs.cpp (2)\n> M src/Project.cpp (77)\n> M src/Project.h (10)\n> M src/SampleFormat.cpp (2)\n> M src/SampleFormat.h (2)\n> M src/SelectedRegion.cpp (14)\n> M src/SelectedRegion.h (14)\n> M src/Sequence.cpp (60)\n> M src/Sequence.h (8)\n> M src/Tags.cpp (18)\n> M src/Tags.h (4)\n> M src/Theme.cpp (44)\n> M src/TimeTrack.cpp (18)\n> M src/TimeTrack.h (6)\n> M src/TimerRecordDialog.cpp (4)\n> M src/TrackPanel.cpp (34)\n> M src/ViewInfo.cpp (2)\n> M src/ViewInfo.h (2)\n> M src/WaveClip.cpp (12)\n> M src/WaveClip.h (6)\n> M src/WaveTrack.cpp (17)\n> M src/WaveTrack.h (6)\n> M src/blockfile/LegacyAliasBlockFile.cpp (12)\n> M src/blockfile/LegacyAliasBlockFile.h (2)\n> M src/blockfile/LegacyBlockFile.cpp (14)\n> M src/blockfile/LegacyBlockFile.h (2)\n> M src/blockfile/ODDecodeBlockFile.cpp (12)\n> M src/blockfile/ODDecodeBlockFile.h (2)\n> M src/blockfile/ODPCMAliasBlockFile.cpp (12)\n> M src/blockfile/ODPCMAliasBlockFile.h (2)\n> M src/blockfile/PCMAliasBlockFile.cpp (12)\n> M src/blockfile/PCMAliasBlockFile.h (2)\n> M src/blockfile/SilentBlockFile.cpp (12)\n> M src/blockfile/SilentBlockFile.h (2)\n> M src/blockfile/SimpleBlockFile.cpp (12)\n> M src/blockfile/SimpleBlockFile.h (2)\n> M src/commands/CommandManager.cpp (88)\n> M src/commands/CommandManager.h (44)\n> M src/commands/HelpCommand.cpp (2)\n> M src/commands/ImportExportCommands.cpp (6)\n> M src/commands/ResponseQueue.h (2)\n> M src/commands/ScreenshotCommand.cpp (2)\n> M src/effects/ChangePitch.cpp (2)\n> M src/effects/ChangeSpeed.cpp (2)\n> M src/effects/Contrast.cpp (4)\n> M src/effects/DtmfGen.cpp (6)\n> M src/effects/DtmfGen.h (2)\n> M src/effects/Effect.cpp (18)\n> M src/effects/Effect.h (4)\n> M src/effects/EffectManager.cpp (4)\n> M src/effects/EffectRack.cpp (4)\n> M src/effects/Equalization.cpp (32)\n> M src/effects/Equalization.h (5)\n> M src/effects/Equalization48x.cpp (4)\n> M src/effects/LoadEffects.cpp (4)\n> M src/effects/Noise.cpp (2)\n> M src/effects/NoiseReduction.cpp (16)\n> M src/effects/Reverb.cpp (4)\n> M src/effects/ScienFilter.cpp (4)\n> M src/effects/TruncSilence.cpp (2)\n> M src/effects/VST/VSTEffect.cpp (104)\n> M src/effects/VST/VSTEffect.h (8)\n> M src/effects/audiounits/AudioUnitEffect.cpp (36)\n> M src/effects/ladspa/LadspaEffect.cpp (6)\n> M src/effects/nyquist/LoadNyquist.cpp (4)\n> M src/effects/nyquist/Nyquist.cpp (96)\n> M src/export/Export.cpp (10)\n> M src/export/Export.h (2)\n> M src/export/ExportCL.cpp (8)\n> M src/export/ExportFFmpeg.cpp (18)\n> M src/export/ExportFFmpegDialogs.cpp (84)\n> M src/export/ExportFFmpegDialogs.h (30)\n> M src/export/ExportFLAC.cpp (6)\n> M src/export/ExportMP2.cpp (4)\n> M src/export/ExportMP3.cpp (20)\n> M src/export/ExportMultiple.cpp (16)\n> M src/export/ExportOGG.cpp (4)\n> M src/export/ExportPCM.cpp (190)\n> M src/import/Import.cpp (64)\n> M src/import/ImportFFmpeg.cpp (12)\n> M src/import/ImportFLAC.cpp (2)\n> M src/import/ImportGStreamer.cpp (38)\n> M src/import/ImportLOF.cpp (2)\n> M src/import/ImportMIDI.cpp (2)\n> M src/import/ImportMP3.cpp (2)\n> M src/import/ImportOGG.cpp (4)\n> M src/import/ImportPlugin.h (2)\n> M src/import/ImportQT.cpp (8)\n> M src/import/ImportRaw.cpp (2)\n> M src/ondemand/ODComputeSummaryTask.h (2)\n> M src/ondemand/ODDecodeTask.h (2)\n> M src/ondemand/ODTask.h (2)\n> M src/ondemand/ODWaveTrackTaskQueue.cpp (4)\n> M src/prefs/DirectoriesPrefs.cpp (6)\n> M src/prefs/KeyConfigPrefs.cpp (10)\n> M src/prefs/MidiIOPrefs.cpp (12)\n> M src/prefs/ModulePrefs.cpp (2)\n> M src/toolbars/ControlToolBar.cpp (2)\n> M src/toolbars/ControlToolBar.h (2)\n> M src/toolbars/EditToolBar.cpp (2)\n> M src/toolbars/EditToolBar.h (2)\n> M src/toolbars/SelectionBar.cpp (8)\n> M src/toolbars/SelectionBar.h (2)\n> M src/toolbars/ToolBar.cpp (2)\n> M src/toolbars/ToolsToolBar.cpp (4)\n> M src/toolbars/ToolsToolBar.h (6)\n> M src/toolbars/TranscriptionToolBar.cpp (2)\n> M src/toolbars/TranscriptionToolBar.h (2)\n> M src/widgets/ASlider.cpp (4)\n> M src/widgets/HelpSystem.cpp (4)\n> M src/widgets/KeyView.cpp (24)\n> M src/widgets/Meter.cpp (4)\n> M src/widgets/MultiDialog.cpp (19)\n> M src/widgets/MultiDialog.h (2)\n> M src/widgets/NumericTextCtrl.cpp (10)\n> M src/widgets/Ruler.cpp (4)\n> M src/widgets/numformatter.cpp (2)\n> M src/xml/XMLFileReader.cpp (4)\n> M src/xml/XMLTagHandler.cpp (18)\n> M src/xml/XMLTagHandler.h (6)\n> M src/xml/XMLWriter.cpp (33)\n> M src/xml/XMLWriter.h (1)\n> \n> Patch Links:\n> \n> https://github.com/audacity/audacity/pull/112.patch\n> https://github.com/audacity/audacity/pull/112.diff\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.<\n> https://ci6.googleusercontent.com/proxy/vpvJrEFOLM1wcJ8n05WUo-XKdZslV8L5AMu_zKkds3jQrzJX23vRA8SGXCZwwslvopun-pWcZUw9oVMFsRIUYLOVj5e2AK_V-QqWDoDgBBsYJyrppGennaKEJfj8L2-lVSF4_46ebSnYSyzErBCLGkU9CqHEiQ=s0-d-e1-ft#https://github.com/notifications/beacon/ALITYW977OW98_-fw_alHtooqWRhxH4dks5poPEGgaJpZM4HkUue.gif\n =||= This fixes building on openSuse. :+1: \n =||= I am not willing to pull this.  This is a large commit that Jan admitted\nwas not tested.  I may not understand all the issues with multibyte\ncharacters and such.  I don't know who else can review.\n\nBetter to break this into smaller commits, for instance such as separating\nall the changes for XML handling.\n\nI noticed a profanity in one of the comments -- please don't do that.\n\nPRL\n\nOn Sat, Mar 12, 2016 at 11:10 AM, ThomasFeher notifications@github.com\nwrote:\n\n> This fixes building on openSuse. [image: :+1:]\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/audacity/audacity/pull/112#issuecomment-195768457.\n =||= Leaving this open for now, even though now has conflicts.  I think the idea is right.  The changes should be 'mechanical' and hence safe.  \n =||= Added reject-if-not-updated soon.  It has merge conflicts, a profanity, and Paul would like it in smaller chunks.  It's still a nice idea, and would help us on SUSE.\n =||= No activity since 2016.  Closing. =||= "], ["113", "Timer Recording Improvements", "Mark Young", "tip2tail", "02/28/16, 08:42:34 PM", "Hi,\n\nThis PR contains the following changes to the Timer Recording process:\n- Ability to automatically save project after recording completed\n- Ability to automatically export recording when completed\n- Option to Close Audacity after timer recording competed.\n- WINDOWS ONLY: Ability to shutdown/restart the PC after recording is completed\n\nI look forward to having discussion about this, and hope it can be integrated into Audacity soon.", "cacel\n =||= "], ["114", "Timer Recording Improvements", "Mark Young", "tip2tail", "03/29/16, 08:53:10 PM", "Hi,\n\nI have now completed some improvements to the Timer Recording system.\n- Options to auto save and/or export the recording\n- Ability to close Audacity when recording completed\n- Windows Only: Ability to restart or shut down the system when recording completed\n\nA compiled build is available at http://www.tip2tail.scot/audacity/20160321-B-tip2tail.zip", "New version at removed (see latest build in 1st post) \n =||= Another new version: (see first post)\nNow available for testing.\n =||= "], ["115", "Fix two effects that declared parameters but did not use them...", "Paul Licameli", "Paul-Licameli", "09/11/16, 09:14:45 PM", "... Travis build warnings discovered this problem for me.", "There was actually a reason those were not verified...they aren't part of the saved effects settings.\n =||= You refer to Amplify or Equalization or both?\n\nPRL\n\nOn Wed, Mar 2, 2016 at 1:10 AM, Leland Lucius notifications@github.com\nwrote:\n\n> There was actually a reason those were not verified...they aren't part of\n> the saved effects settings.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/audacity/audacity/pull/115#issuecomment-191083274.\n =||= Both.  I actually did include the \"amp\" value when I first converted the effects, but it was determined that it didn't make any sense to save it.  The EQ fellas are basically in the same boat.\n =||= Why does it not make sense for Amplify?\n\nIf I use Amplify, then use it again in-session, the last-used amplification\nfactor is forgotten.\n\nOn Wed, Mar 2, 2016 at 3:11 AM, Leland Lucius notifications@github.com\nwrote:\n\n> Both. I actually did include the \"amp\" value when I first converted the\n> effects, but it was determined that it didn't make any sense to save it.\n> The EQ fellas are basically in the same boat.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/audacity/audacity/pull/115#issuecomment-191121255.\n =||= Unfortunately, I don't recall all of the details, but it was all discussed back in April/May of last year.\n\nHowever, there may have been further changes since then that have broken this or that we didn't get it right back then.\n =||= I \"believe\" it was because mAmp isn't really used when the effect is applied.  Only the ratio is used.\n =||= Amplification is supposed to be recalculated based on the actual loudness of the audio selected.   This pull request has been around since March.  I figure if Paul would have committed it, and still can even with me closing the pull request, as he has commit rights, if he thought it was OK.\n =||= "], ["116", "fix -Wmissing-field-initializer (3 occurences)", null, "ThomasFeher", "03/01/16, 10:19:14 PM", "NaN", "Reviewed by me\n =||= "], ["117", "Update Ukrainian translation", "Yuri Chornoivan", "yurchor", "04/09/16, 01:49:17 PM", "Tested with msgfmt -vc, synced with code.\n\nMany thanks for merging.", "NaN"], ["118", "Timer Recording Enhancements", "Mark Young", "tip2tail", "04/01/16, 10:14:19 AM", "To allow Automatic Save and Export of a  recording.  Also allows for additional options to be carried out after a successful timer recording such as Exit, Retsrat and Shutdown.\n\nDevelopment by Mark Young over multiple commits squashed into one.", "These are now in the main Audacity GitHub repo.  Thanks Mark.\n =||= "], ["119", "Timer Recording Disk Space Warning", "Mark Young", "tip2tail", "04/04/16, 09:21:43 PM", "As discussed on development mailing list", "NaN"], ["120", "Further Timer Recording Enhancements", "Mark Young", "tip2tail", "04/09/16, 01:29:29 PM", "Introduce further enhancement of the Timer Recording process:\n- Disk space warning if the recording potentially will not fit in disk space available.\n- ProgressDialog enhancements that allow the Stop/Cancel button to be confirmed and the elapsed time to be hidden.\n- Messages enhanced to clearly show the actions being taken.", "Thanks.  I rebased this off master and pushed to master.  Mark, you will now need to branch from master to make further changes to timer record.\n =||= "], ["121", "Fix unused parameter warnings", null, "ThomasFeher", "09/11/16, 07:00:37 PM", "Fixes all occurences of unused parameter warnings in \"src\" folder.\nIgnores warnings in \"lib-src\" folder.\n\nRemaining warnings of unused parameter are due to usage of macros that conditionally use those parameters, depending on whether being build in debug or release mode.", "Thanks.  I've updated and applied these.\nNote that: \nwxUSE_ACCESSIBILITY\n\nMeant that some parameters WERE used in other builds.\n =||= "], ["122", "Timer Record: Ensure that Stop/Cancel in progress dialog always works", "Mark Young", "tip2tail", "04/21/16, 11:45:08 AM", "As per discussion on audacity-devel", "NaN"], ["123", "First pull request", null, "ShanghaiTimes", "04/21/16, 11:43:07 AM", "First pull request of VS2015", "Closed.  We use VS2013 and will for release of 2.1.3, so we can't accept a pull request directly in to master - which we use to build releases.  There is some interest in the team in updating the toolchain.  Discussion on audacity-devel email list is needed.  You need to talk with the people there who want to update the toolchain.\n =||= Will we move to VS2015 at some time?\n\nThe implementation of C++11 on VS2013 is incompete in a few things.  (No\nconstexpr, no nothrow, no inherited constructors, and some other things.)\n But not yet in anything I find most important.\n\nPRL\n\nOn Thu, Apr 21, 2016 at 7:43 AM, James Crook notifications@github.com\nwrote:\n\n> Closed #123 https://github.com/audacity/audacity/pull/123.\n> \n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly or view it on GitHub\n> https://github.com/audacity/audacity/pull/123#event-636027729\n =||= We might skip VS2015 entirely and jump to a later version.  \n\nBest discussed on audacity-devel.\n =||= "], ["124", "Don't use a separate build script for optional files.", "Henric Jungheim", "henricj", "06/27/18, 08:49:33 AM", "The current portaudio-v19.vcxproj does two builds.  First it runs the normal MSBuild to compile and create a static library.  It then runs a second pass to compile additional files and update the static library.  This change adds the optional files to the main MSBuild, using conditional  <ExcludeFromBuild>s to only include these files when needed.\n\nThe preprocessor definitions are added directly to the <PreprocessorDefinitions> instead of through a force-included header file.\n\nThis exposes the files in the Visual Studio Solution Explorer, makes the compiler flags used to build the optional files default to the same flags as the non-optional files (and editable in the UI), and eliminates the second cl/lib cycle.", "NaN"], ["125", "VS2013 needs <functional> for mem_fun_ref", "Henric Jungheim", "henricj", "04/25/16, 01:45:02 AM", "The VS2013 build is broken with an undefined mem_fun_ref.  It needs <functional>.", "Sorry, thanks for the alert, it built all right on Mac.  I fixed it\nmyself.  Please close the pull request.\nPRL\n\nOn Sun, Apr 24, 2016 at 8:26 PM, Henric Jungheim notifications@github.com\nwrote:\n\n> ## The VS2013 build is broken with an undefined mem_fun_ref. It needs .\n> \n> You can view, comment on, or merge this pull request online at:\n> \n>   https://github.com/audacity/audacity/pull/125\n> Commit Summary\n> - VS2013 needs <functional> for mem_fun_ref\n> \n> File Changes\n> - _M_ src/tracks/ui/Scrubbing.cpp\n>   https://github.com/audacity/audacity/pull/125/files#diff-0 (1)\n> \n> Patch Links:\n> - https://github.com/audacity/audacity/pull/125.patch\n> - https://github.com/audacity/audacity/pull/125.diff\n> \n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly or view it on GitHub\n> https://github.com/audacity/audacity/pull/125\n =||= Already fixed.\n =||= "], ["126", "Ignore Visual Studio .vcxproj.user files.", "Henric Jungheim", "henricj", "04/25/16, 02:04:42 AM", "Visual Studio creates .vcxproj.user files to store local, per-user settings.  These are not under source control, but do clutter the git status.", "NaN"], ["127", "Get rid of the Windows compatibility headers stdint.h and inttypes.h.", "Henric Jungheim", "henricj", "06/27/18, 08:37:16 AM", "Microsoft has added official stdint.h and inttypes.h headers since these compatibility headers were created.  VS2013 already has them, but the conflicting headers cause build problems with VS2015 when other system headers #include them.", "NaN"], ["128", "Update _MSC_VER #if blocks.", "Henric Jungheim", "henricj", "06/27/18, 08:37:09 AM", "This updates the _MSC_VER related #if blocks in to avoid some warnings in VS2013 and to fix some errors when building with VS2015 (particularly related to VS2015 adding its own snprintf).", "Should it be split into separate pull requests or just separate commits in the same pull request?  AFAIK, the upstream changes would be much better done there, but apart from Nyquist I'm not sure which projects are still being actively developed.  Should there be separate pull requests for each project?  Perhaps one pull request for Audacity specific code and one for lib-src, with separate commits for each project?\n =||= "], ["129", "Adds FR comment to audacity.desktop.in", "Olivier Humbert", "trebmuh", "07/05/16, 03:05:59 PM", "... and remove unnecessary duplication of the name (no needs to override the original name if it doesn't change when translated).", "ping ?\n =||= Ping, any issue with this pull request maybe ?\n =||= ping ?\n =||= This seems a good change and in accordance with the \"Desktop Entry Specification\" at  https://specifications.freedesktop.org/desktop-entry-spec/desktop-entry-spec-latest.html .\n\nAnyone think not? \n =||= Committed at https://github.com/audacity/audacity/commit/145a54d . \n =||= Sweet, thanks.\n =||= "], ["130", "Several build failure fixes", "Max Kellermann", "MaxKellermann", "09/07/16, 10:53:14 AM", "NaN", "Please explain which \"build failures\" you are fixing with each of these commits.\n\nPlease explain more about how the wxFileNameWrapper kludge causes a crash.  I would like to keep that kludge for the compilers that let us get away with it.\n =||= Ok, I'll add error messages to the commit messages.\n =||= In any case, the wxFileNameWrapper kludge causes severe double free bugs. Valgrind is screaming loudly, and sometimes, even glibc notices heap corruption. I'll post details.\n =||= According to the travis output linked herein, commit 7acc599cd7999020bec9d92f9a99cbc55429b863 is causing build failures.\n =||= Apparently, Travis builds with a very old FFmpeg version which doesn't have the `const` yet. Without that commit, build fails here (FFmpeg 3.0 and 2.8.6).\n =||= I cherry-picked the fix for Track.cpp\n =||= So I'm using my system FFmpeg, because I hate projects which ship (outdated) copies of other libraries. The FFmpeg version in `lib-src/ffmpeg/` is 2.2.2 according to 14b47b46ab51f31f43f73017aac55e2789aaa96e. Would you agree to update those headers again? (I'd remove them completely, but that's just my opinion.)\n =||= I've added a valgrind log to the wxFileNameWrapper commit. Do you need to know anything else?\n =||= I am not qualified to make the decision about FFmpeg.  I suggest you ask the question also at audacity-devel@lists.sourceforge.net\n\nCan you figure out conditional compilation that could make the build work with either version?\n =||= Ok, wrapped in preprocessor version checks.\n =||= Please see my commit https://github.com/audacity/audacity/commit/e09f62031156dbe792d98a161eaf7267095e94a5\nwhich implements a different cheat for wxFileNameWrapper which might not crash you.\n =||= This will fall apart as well any day. I wouldn't do that. I understand your desire for move operations, but in this case I'd wait for WX to support it. Everything else is a kludge that's just waiting to crash (or corrupt data randomly).\n =||= It's ugly either way, but humor me and see if it compiles and runs and lets you load and save a project without apparent trouble.\n =||= Compiles and doesn't crash, no valgrind warning.\n =||= Good, I enabled the less evil swap function.  It should be safe so long as we do not change version of wxWidgets.\n\nThis discussion page is still telling me you did not satisfy the Travis build for FFmpeg functions.\n =||= That's because your FFmpeg version numbers are inconsistent!\n\nIn upstream FFmpeg, the `const` was added in commit https://github.com/FFmpeg/FFmpeg/commit/ec4f04da1 and `version.h` said:\n\n```\n#define LIBAVFORMAT_VERSION_MAJOR 55\n#define LIBAVFORMAT_VERSION_MINOR 20\n#define LIBAVFORMAT_VERSION_MICRO  0\n```\n\nNow your `version.h` without the `const` says:\n\n```\n#define LIBAVFORMAT_VERSION_MAJOR 55\n#define LIBAVFORMAT_VERSION_MINOR 33\n#define LIBAVFORMAT_VERSION_MICRO 100\n```\n\n.. which is the more recent version number set by commit https://github.com/FFmpeg/FFmpeg/commit/db3c9701f46d20fd7e94c3222cf4fd4524a16414 . The real problem is that FFmpeg applied those two changes in different branches, and your copy is a newer branch but without the `const` change.\n\nSo now I've changed the minimum version expected for `const` to 55.33.101, one more than Audacity's FFmpeg copy. I hope this covers all relevant versions.\n =||= What needs to be done to get the FFmpeg patch through?\n =||= For a start, the commit has conflicts. \n\nAnd when that is solved, we have to be sure that the currently recommended FFmpeg 2.2.3 \nmaximum is still supported (so e.g. the recommended Windows/Mac FFmpeg downloads at http://manual.audacityteam.org/man/faq_installation_and_plug_ins.html#ffdown still work).\n\nOr upgrade Audacity to support later FFmpeg/libav (what range of versions?)\n\nOr migrate to gstreamer and use their FFmpeg support rather than hardcoding our own.  \n\nThe last two are major undertakings but I am not an expert in this. \n\nI doubt we will want to make any changes now before 2.1.3 release but I \nsuggest taking Paul's recommendation to ask on the -devel list. \n =||= I was hoping to give Max a chance to do this, if he doesn't I will submit a new pull request and this one can be closed.\n\nI cherry picked the FFmpeg commit only, and it doesn't break the current master branch. I don't know about Travis yet. I don't expect any change in behavior (or supported versions) as a result.\n\nFWICT this patch is about fixing a build failure since the function prototypes changed in the new headers. But since they're only adding a const where there wasn't one, that won't break anything (const isn't part of the C calling conventions AFAIK). So functionally, nothing has changed, the same symbols are still loaded from the libraries. This can all be verified of course without much effort.\n =||= As of yet, I have no feedback whether my changes will be merged. I don't want to waste time on something that will go to the trash can. When I submitted this PR, there was no conflict - the Audacity project ignored my PR for so long, and **after** that merged changed which conflicted with this PR. Yes, I will do you the favor and resolve the conflicts - if you want me to.\n\nAbout the `const`: the function pointers are not compatible if the constness of pointer targets is not the same. This has nothing to do with calling conventions - calling conventions describe how calls are made on the machine language level. Thus, calling conventions have little to do with the C language, they're a lower level, and semantic API declarations like constness do not matter on that level.\n =||= As I said to Max before, I do not consider myself competent to decide which\nversion of the library should be used in our released binaries for Mac and\nWindows.\n\nHowever I reexamined commit 41de5b385b2ca721a71871fcdb00ec3fa4441b5b\n\nand I saw that all changes are conditionally compiled, so that it leaves\nour source code compatible with use of either version of the library.\n\nTherefore I have cherry-picked and commited that.  Alone, it was\nunconflicting.\n\nThe other commits are not relevant to upgrading the library version.\nUpdates of Makefile.in are periodically done by other people, and simply\ncommit the results of an automated tool, which doesn't demand real\nprogramming effort.\n\nAnd from discussions earlier with Max, I found other changes to\nwxFileNameWrapper that do not give up the performance improvements I\nintended, while also fixing the complaints from valgrind.\n\nTherefore I do not intend to take those commits.\n\nThe changes to .gitignore give developers some convenience while not\naffecting the build at all.  No development really depends on them.\n\nTherefore I intend to close the commit request, having selected the one\nmost important part.\n\nPRL\n\nOn Wed, Sep 7, 2016 at 2:25 AM, Max Kellermann notifications@github.com\nwrote:\n\n> As of yet, I have no feedback whether my changes will be merged. I don't\n> want to waste time on something that will go to the trash can. When I\n> submitted this PR, there was no conflict - the Audacity project ignored my\n> PR for so long, and _after_ that merged changed which conflicted with\n> this PR. Yes, I will do you the favor and resolve the conflicts - if you\n> want me to.\n> \n> About the const: the function pointers are not compatible if the\n> constness of pointer targets is not the same. This has nothing to do with\n> calling conventions - calling conventions describe how calls are made on\n> the machine language level. Thus, calling conventions have little to do\n> with the C language, they're a lower level, and semantic API declarations\n> like constness do not matter on that level.\n> \n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> https://github.com/audacity/audacity/pull/130#issuecomment-245186932,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/ALITYQlVb91C0qUBtdgxHX_i0fQ_dK_Kks5qnlj3gaJpZM4IRpzz\n> .\n =||= ... And the Travis build has succeeded.\nPRL\n\nOn Wed, Sep 7, 2016 at 6:39 AM, Paul Licameli paul.licameli@gmail.com\nwrote:\n\n> As I said to Max before, I do not consider myself competent to decide\n> which version of the library should be used in our released binaries for\n> Mac and Windows.\n> \n> However I reexamined commit 41de5b385b2ca721a71871fcdb00ec3fa4441b5b\n> \n> and I saw that all changes are conditionally compiled, so that it leaves\n> our source code compatible with use of either version of the library.\n> \n> Therefore I have cherry-picked and commited that.  Alone, it was\n> unconflicting.\n> \n> The other commits are not relevant to upgrading the library version.\n> Updates of Makefile.in are periodically done by other people, and simply\n> commit the results of an automated tool, which doesn't demand real\n> programming effort.\n> \n> And from discussions earlier with Max, I found other changes to\n> wxFileNameWrapper that do not give up the performance improvements I\n> intended, while also fixing the complaints from valgrind.\n> \n> Therefore I do not intend to take those commits.\n> \n> The changes to .gitignore give developers some convenience while not\n> affecting the build at all.  No development really depends on them.\n> \n> Therefore I intend to close the commit request, having selected the one\n> most important part.\n> \n> PRL\n> \n> On Wed, Sep 7, 2016 at 2:25 AM, Max Kellermann notifications@github.com\n> wrote:\n> \n> > As of yet, I have no feedback whether my changes will be merged. I don't\n> > want to waste time on something that will go to the trash can. When I\n> > submitted this PR, there was no conflict - the Audacity project ignored my\n> > PR for so long, and _after_ that merged changed which conflicted with\n> > this PR. Yes, I will do you the favor and resolve the conflicts - if you\n> > want me to.\n> > \n> > About the const: the function pointers are not compatible if the\n> > constness of pointer targets is not the same. This has nothing to do with\n> > calling conventions - calling conventions describe how calls are made on\n> > the machine language level. Thus, calling conventions have little to do\n> > with the C language, they're a lower level, and semantic API declarations\n> > like constness do not matter on that level.\n> > \n> > \u2014\n> > You are receiving this because you commented.\n> > Reply to this email directly, view it on GitHub\n> > https://github.com/audacity/audacity/pull/130#issuecomment-245186932,\n> > or mute the thread\n> > https://github.com/notifications/unsubscribe-auth/ALITYQlVb91C0qUBtdgxHX_i0fQ_dK_Kks5qnlj3gaJpZM4IRpzz\n> > .\n =||= "], ["131", "Add audacity.props to support using multiple versions of Visual Studio.", "Henric Jungheim", "henricj", "06/27/18, 08:51:29 AM", "It allows WXWIN to be overriden by WXWIN_VS2013 and WXWIN_VS2015, which can point to separate VS2013 and VS2015 wxWidgets builds.  Project output and intermediate files are all put under a unified \"build\" directory and include the platform, toolset, and configuration in the path.  The net effect is that the the same source tree can be open simultaneously in VS2013 and VS2015, without the build artifacts interfering.  This should also mean that, barring compiler changes, adding support for future versions of Visual Studio should be a matter of adding a line or two to the props file.\n\nThis is similar to how wxWidgets handles multiple Visual Studio versions.  The main differences is that while wxWidgets' props file sets the toolset version directly, audacity.props defines MSBuild properties that are then used by the various project files to set the toolset version.  This makes it apparent in the UI that these properties are being set dynamically (e.g., the \"Platform Toolset\" in Audacity's \"General\" Confiuration Properties appears as \"$(AudacityPlatformToolset)\").\n\nThis does change the build artifact paths.  For example, the debug Audacity.exe now winds up in \"win\\build\\bin\\v120\\Win32\\Debug\" and the release build will be in \"win\\build\\bin\\v120_xp\\Win32\\Release\".  Since something based on the toolset version needs to be in the path to keep the VS2013 and VS2015 stuff apart, this seems reasonable.  If another scheme is preferred, it is easy to change since they are all defined in [audacity.props](https://github.com/henricj/audacity/blob/audacity.props/win/audacity.props).\n\nVS2013 builds and runs, but building with the VS2015 compiler will result in compilation errors without pull requests [127](https://github.com/audacity/audacity/pull/127) and [128](https://github.com/audacity/audacity/pull/128) (and possibly [124](https://github.com/audacity/audacity/pull/124)).", "There is an alternate way to resolve the problem the changed paths caused with copying the PlugIns and Nyquist files (*.ny, *.lsp, etc) here:  https://github.com/henricj/audacity/commit/74a1f93dfad00f400bac269342016284c38c9790\nThat change gets rid of the custom \"copy\" task used for some of the files and uses MSBuild's Copy task for everything.  It also tries to handle the Clean and Rebuild targets properly.\n =||= The original version did not include the portaudio-v19 project file change, which is needed to do a clean build (with a really clean directory; the \"Clean\" target was not enough).\n =||= "], ["132", "Fix uninitialized pointer warning in TrackPanel.cpp", "Henric Jungheim", "henricj", "05/07/16, 03:21:36 PM", "NaN", "Thanks, pulled it.  This was in fact harmless, if you read the logic closely.\n =||= Enabling /sdl turns the C4703 warning into an error.  Getting rid of that one warning makes it possible to compile Audacity with the SDL checks enabled.\n =||= "], ["133", "Update Catalan translation", "Robert Antoni Buj Gelonch", "rbuj", "08/15/16, 08:59:32 AM", "NaN", "NaN"], ["134", "Added a Warnings/Prompts option to disable the save on exit prompt.", "Timothy Brackett", "bracketttc", "05/22/16, 03:35:16 AM", "I use Audacity trivially and frequently open audio files briefly and then close the program. Audacity lacked a way to disable the save project on exit prompts, so I made that option.\n\nA checkbox is added to the Warnings/Prompts preferences page that allows the user to opt out of the save on exit prompts.", "I believe most of us are against such a change, \n\nYou are an advanced user,. Many are not, and import files for editing then delete them.  Naive users can change preferences in error too. \n\nWe might do something like check to see if  the entire audio has been exported before hiding the prompt, but that would be no improvement to someone using Audacity only as a media player. \n\nHave you thought of doing without the visible preference? Then if an advanced user must disable the prompt at their own risk, they can edit audacity,cfg directly. That is reasonably safe because naive users would not know how to do it, and it could not be done by accident. \n =||= I agree with Gale that not showing the warning when the project has been changed exposes naive users to an unacceptable risk of losing their work. However, there are some cases where I think we could safely suppress the message, such as, if the project has only been exported and the metadata not edited. I'd be in favour of suppressing the message in \"some\" cases, but we would need to discuss which specific cases the message can be safely suppressed. I'd suggest raising this question on either this mailing list: https://lists.sourceforge.net/lists/listinfo/audacity-quality or this part of the forum: http://forum.audacityteam.org/viewforum.php?f=20\n =||= Fair enough. Like I said, I actually use Audacity kind of trivially. I currently work in DSP and use Audacity to playback files and look at spectrograms of audio files purely for diagnostic purposes. My Audacity \"projects\" are just imported wave files that I make no changes to.\n\nThe code clearly considers a \"project\" to be dirty if there are tracks added. Maybe it would be more fitting to add a visible preference for considering imported but otherwise unmodified projects to be clean?\n =||= "], ["135", "Create a hidden configuration option to disable the save prompt on exit", "Timothy Brackett", "bracketttc", "09/11/16, 08:26:32 PM", "Follow-up to audacity/audacity#134, after feedback regarding community direction and demographics, I removed the checkbox to control this option from the Preferences dialog. The only way to enable this option / disable the save prompt on exit is to add\n`[Warnings]\nPromptToSaveOnExit=0`\nto audacity.cfg.", "This tests OK for me on Windows. I am +1 because it directly addresses the use case of Audacity as a player or viewer without giving naive users an easy way to lose their data. At the least, we can then give a short, useful answer to the sometimes irate users who write to feedback@ or Forum about this.    \n =||= GitHub isn't showing the 'PromptToSaveOnExit' change, and the Bug1279 change is already in Audacity.  So closing.\n =||= "], ["136", "Change %Ld to %lld in PluginManager#GetConfig", "Austin Mullins", "amullins83", "09/11/16, 08:09:34 PM", "As of Visual Studio 2015, calling `wxstring#Printf` with a format `%Ld` throws a fatal exception. This is because the latest MSVC actually implements `snprintf`, and of course they do it differently than GCC. I couldn't find any documentation online regarding the `%Ld` format. It apparently works interchangeably with `%lld` on most compilers, but Microsoft had to be different.", "Thanks.  It looks as if since you made this pull request that code has gone, and there are now no instance of %Ld in the code.  Therefore should be good for VS 2105.  Closing pull request.\n =||= "], ["137", "Fix bug 322", "Timothy Brackett", "bracketttc", "09/09/16, 06:44:30 PM", "Fixes http://bugzilla.audacityteam.org/show_bug.cgi?id=322", "Thanks, bracketttc.\n\nOn Win 7 when using Taskbar close on minimised windows, the project windows pop up in turn with a \"Save Changes\" dialogue, whereas before the suggested change they don't.\n\nOn Windows 10 I see no change in behaviour. Did you test on that version of Windows? \n =||= I don't have Windows 10 on any of my systems.\n\nArguably this is really an upstream bug with wxWidgets. A modal dialog should force the parent window to front anyway.\n =||= CLOSED.\nCommit history is too messy (should be squashed). \nDoes not address the main part of bug 322 which is many windows with untitled projects. \nWe might use the Iconize() as part of the fix later.\n =||= "], ["138", "Update da.po", null, "scootergrisen", "07/10/16, 10:24:17 PM", "Just a few changes.", "NaN"], ["139", "Fix for Bug 1277", "Taiki Kim", "WaveMotion", "06/18/16, 11:04:47 PM", "NaN", "Thanks for your contribution.  I merged it.\n =||= "], ["140", "Update Ukrainian translation", "Yuri Chornoivan", "yurchor", "07/10/16, 10:29:16 PM", "An updated version (tested for validity as is and in vivo).\n\nThanks for pushing this update.", "NaN"], ["141", "Correctly load parameters for Change Pitch effect", "Taiki Kim", "WaveMotion", "07/12/16, 06:51:09 PM", "Partial fix for Bug 73.\nPartial fix for Bug 1207.", "Works for me and only a one line fix, so merged.\n =||= "], ["142", "Parameter loading for batch EQ", "Taiki Kim", "WaveMotion", "09/11/16, 09:11:17 PM", "This PR contains two commits; the first fixes chains that did EQ using a named EQ curve (i.e. not 'unnamed'). The second prevents users from using or making chains that use the 'unnamed' EQ curve. \n\nThe second commit restores what looked to me to be the originally intended behavior, but I put it separate in case I was wrong.", "This seems to work as far as it goes, but a couple of points:\n\n1) When Equalization is called from a Chain, Init() is not called, which means that there is no checking of the sample rate, and mHiFreq may not have been initialised. If mHiFreq has not neen initialised, then in EffectEqualization::setCurve\n`env->Insert(std::min(1.0, std::max(0.0, when)), value);`\nmay pass invalid values to Envelope::Insert\n\nOff the top of my head, if mHiFreq is initialised to say -1 in the constructor, then at the top of EffectEqualization::setCurve we could use something like:\n\n```\nif (mHiFreq == -1 && !Init())\n   return;\n```\n\nThere may be a better solution ;-)\n\n2) It's not a \"rule\" as far as I'm aware, but the usual style is to split long strings across multiple lines rather than relying on the ide/editor to wrap (see HelpText.cpp for examples).\n =||= 1) From inspecting call hierarchies, running an effect from a chain does seem to run its Init(). BatchCommands::ApplyEffectCommand() and Effect::Apply() both contain a call to AudacityProject::OnEffect(), which eventually leads to the Init() call. Running Debug with a breakpoint at EffectEqualization::Init() confirms this; the breakpoint is hit when normally applying EQ, when running a chain on the current project, and when running a chain on a file.\n\n2) Thanks for the heads up, didn't notice that from my IDE : ) Fix incoming.\n =||= Please try running your patched version through a debugger.\nYour addition of `setCurve(CurveName);` in  EffectEqualization::SetAutomationParameters is the cause of the problem because it leads to EffectEqualization::setCurve before Init() has been called.\n =||= Ah, you've also made the same mistake that I made a couple of weeks ago splitting long strings ;-)\nTo split the string over multiple lines, if you use \"/\" then the next line shouldn't have leading whitespace.\nAlternatively, each line may be quoted separately. The former seems to be the usual style in Audacity, but either of these works for me:\n\n```\n      // The user tried to run a chain using the unnamed curve\n      wxMessageBox( _(\"The chain which you tried to run had an Equalization \\\ncommand using an unnamed curve. Using Equalization in \\\nchain processing requires the chain file to specify a \\\nnamed EQ Curve.\\n\\nTo use a custom-drawn equalization \\\ncurve in a chain, please save your curve to a new name \\\nby pressing 'Save/Manage Curves...' and then renaming \\\nthe 'unnamed' curve. It will then be available under \\\nthat name in the 'Select Curve:' list when editing your \\\nchain's Equalization parameters.\"),\n                   _(\"Chain aborted: invalid EQ curve name: 'unnamed'\"),\n                   wxOK | wxICON_ERROR);\n```\n\n```\n      // The user tried to run a chain using the unnamed curve\n      wxMessageBox( _(\"The chain which you tried to run had an Equalization \"\n                      \"command using an unnamed curve. Using Equalization in \"\n                      \"chain processing requires the chain file to specify a \"\n                      \"named EQ Curve.\\n\\nTo use a custom-drawn equalization \"\n                      \"curve in a chain, please save your curve to a new name \"\n                      \"by pressing 'Save/Manage Curves...' and then renaming \"\n                      \"the 'unnamed' curve. It will then be available under \"\n                      \"that name in the 'Select Curve:' list when editing your \"\n                      \"chain's Equalization parameters.\"),\n                   _(\"Chain aborted: invalid EQ curve name: 'unnamed'\"),\n                   wxOK | wxICON_ERROR);\n```\n =||= Nice idea.  Not completed.  Not suitable for merging.  Closed.\n =||= "], ["143", "Code cleanup: removed the old real FFT code not used for a long time", "Rapha\u00ebl Marinier", "RaphaelMarinier", "07/13/16, 05:32:42 PM", "Hi Audacity developers,\n\nI have an idea for an Audacity plugin (I will share details in the ML) and to familiarize myself with the codebase I thought I could start by doing a small cleanup.\n\nIn this pull request, I remove the old real FFT code that hasn't been used since 2009 (and checked that the current real FFT code is faster than the old one - see first commit), and add a few healthy consts in FFT.{h,cpp} and RealFFTf.{h,cpp}.", "Did you confirm that the power spectrum was faster too?\n =||= Yes. The reported timings are actually comparing the current vs old versions of PowerSpectrum(). I also just directly compared the current vs old versions of the FFT themselves, without the PowerSpectrum proxy, and I get the same results. In PowerSpectrum(), almost all of the time is spent computing the FFT.\n\nAre cleanups like this welcome in the future?\n =||= This cleanup is welcome.  I intend to pull it soon into my own branch, add some more comments and then commit to main Audacity.\n\nOther removals of 'dead code' might not be so welcome.  Commented out code could be kept in Audacity for a good reason.  The MIDI code is a good example.  Const is good.  We like const.\n\nOur tardy responses to pull requests on GitHub are mostly because we don't (yet) visit here regularly.  Most activity happens on our email list https://lists.sourceforge.net/lists/listinfo/audacity-devel .  It is much much easier for us to accept a change that is from someone we know and have talked with on that list.  They will know when we are in lockdown, where and how we track bugs, a bit more about our plans and so on.   \n\nWe would for example like to make it so that Audacity can compile with wxWidgets compiled with STL enabled.  Lots of const wxString changes for that to work.  But to do that the developer making the changes needs to engage with us so that we get it in in the right stages.  So they need to contact us on the email list first and chat a bit about the plan.\n =||= Ok. Of course, I understand that not all dead code should be removed, but here I went ahead since we have the same functionality implemented twice, with one version behind superior (faster).\n\nI am the one who proposed on the ML to implement an audio alignment mechanism. I wrote this change in order to familiarize myself with Audacity's code base. I will start discussing on the ML when I see other potential small changes that I could make.\n =||= Ah, OK, Sorry Raphael, I had not made that connection.  That makes a world of difference.   \n\nMerged.\n\nFuture pull requests, please just share your branch name with us on devel with a comment there.\n =||= "], ["144", "bool AudacityApp::OnInit() {    // Ensure we have an event loop durin\u2026", "alex-chapiro", "alex-chapiro", "08/26/16, 10:48:49 AM", "\u2026g initialization    wxEventLoopGuarantor eventLoop;    std::unique_ptr < wxLog > { wxLog::SetActiveTarget(new AudacityLogger) }; // DELETE    mLocale = NULL;    m_aliasMissingWarningShouldShow = true;    m_LastMissingBlockFile = NULL;    mChecker = NULL;    mIPCServ = NULL; #if defined(**WXMAC**)    // Disable window animation    wxSystemOptions::SetOption(wxMAC_WINDOW_PLAIN_TRANSITION, 1); #endif #ifdef AUDACITY_NAME    wxString appName = wxT(AUDACITY_NAME); #else    wxString appName = wxT(\"Audacity\"); #endif    wxTheApp->SetAppName(appName);    // Explicitly set since OSX will use it for the \"Quit\" menu item    wxTheApp->SetAppDisplayName(wxT(\"Audacity\"));    wxTheApp->SetVendorName(wxT(\"Audacity\"));    // Unused strings that we want to be translated, even though    // we're not using them yet...    wxString future1 = _(\"Master Gain Control\");    ::wxInitAllImageHandlers();    wxFileSystem::AddHandler(new wxZipFSHandler);    //    // Paths: set search path and temp dir path    // #ifdef __WXGTK__    /\\* Search path (for plug-ins, translations etc) is (in this order):       \\* The AUDACITY_PATH environment variable       \\* The current directory       \\* The user's .audacity-files directory in their home directory       \\* The \"share\" and \"share/doc\" directories in their install path _/    wxString home = wxGetHomeDir();    /_ On Unix systems, the default temp dir is in /var/tmp. _/    defaultTempDir.Printf(wxT(\"/var/tmp/audacity-%s\"), wxGetUserId().c_str());    wxString pathVar = wxGetenv(wxT(\"AUDACITY_PATH\"));    if (pathVar != wxT(\"\"))       AddMultiPathsToPathList(pathVar, audacityPathList);    AddUniquePathToPathList(::wxGetCwd(), audacityPathList); #ifdef AUDACITY_NAME    AddUniquePathToPathList(wxString::Format(wxT(\"%s/.%s-files\"),       home.c_str(), wxT(AUDACITY_NAME)),       audacityPathList);    AddUniquePathToPathList(wxString::Format(wxT(\"%s/share/%s\"),       wxT(INSTALL_PREFIX), wxT(AUDACITY_NAME)),       audacityPathList);    AddUniquePathToPathList(wxString::Format(wxT(\"%s/share/doc/%s\"),       wxT(INSTALL_PREFIX), wxT(AUDACITY_NAME)),       audacityPathList); #else //AUDACITY_NAME    AddUniquePathToPathList(wxString::Format(wxT(\"%s/.audacity-files\"),       home.c_str()),       audacityPathList);    AddUniquePathToPathList(wxString::Format(wxT(\"%s/share/audacity\"),       wxT(INSTALL_PREFIX)),       audacityPathList);    AddUniquePathToPathList(wxString::Format(wxT(\"%s/share/doc/audacity\"),       wxT(INSTALL_PREFIX)),       audacityPathList); #endif //AUDACITY_NAME    AddUniquePathToPathList(wxString::Format(wxT(\"%s/share/locale\"),       wxT(INSTALL_PREFIX)),       audacityPathList);    AddUniquePathToPathList(wxString::Format(wxT(\"./locale\")),       audacityPathList); #endif //**WXGTK**    wxFileName tmpFile;    tmpFile.AssignTempFileName(wxT(\"nn\"));    wxString tmpDirLoc = tmpFile.GetPath(wxPATH_GET_VOLUME);    ::wxRemoveFile(tmpFile.GetFullPath());    // On Mac and Windows systems, use the directory which contains Audacity. #ifdef **WXMSW**    // On Windows, the path to the Audacity program is in argv[0]    wxString progPath = wxPathOnly(argv[0]);    AddUniquePathToPathList(progPath, audacityPathList);    AddUniquePathToPathList(progPath + wxT(\"\\Languages\"), audacityPathList);    // See bug #1271 for explanation of location    tmpDirLoc = FileNames::MkDir(wxStandardPaths::Get().GetUserLocalDataDir());    defaultTempDir.Printf(wxT(\"%s\\SessionData\"),       tmpDirLoc.c_str()); #endif //**WXWSW** #ifdef **WXMAC**    // On Mac OS X, the path to the Audacity program is in argv[0]    wxString progPath = wxPathOnly(argv[0]);    AddUniquePathToPathList(progPath, audacityPathList);    // If Audacity is a \"bundle\" package, then the root directory is    // the great-great-grandparent of the directory containing the executable.    AddUniquePathToPathList(progPath + wxT(\"/../../../\"), audacityPathList);    // These allow for searching the \"bundle\"    AddUniquePathToPathList(progPath + wxT(\"/../\"), audacityPathList);    AddUniquePathToPathList(progPath + wxT(\"/../Resources\"), audacityPathList);    defaultTempDir.Printf(wxT(\"%s/audacity-%s\"),       tmpDirLoc.c_str(),       wxGetUserId().c_str()); #endif //**WXMAC**    // Define languanges for which we have translations, but that are not yet    // supported by wxWidgets.    //    // TODO:  The whole Language initialization really need to be reworked.    //        It's all over the place. #if !wxCHECK_VERSION(3, 0, 1)    for (size_t i = 0, cnt = WXSIZEOF(userLangs); i < cnt; i++)    {       wxLocale::AddLanguage(userLangs[i]);    } #endif    // Initialize preferences and language    InitPreferences(); #if defined(**WXMSW**) && !defined(**WXUNIVERSAL**) && !defined(**CYGWIN**)    this->AssociateFileTypes(); #endif    // TODO - read the number of files to store in history from preferences    mRecentFiles = new FileHistory(ID_RECENT_LAST - ID_RECENT_FIRST + 1, ID_RECENT_CLEAR);    mRecentFiles->Load(_gPrefs, wxT(\"RecentFiles\"));    theTheme.EnsureInitialised();    // AColor depends on theTheme.    AColor::Init();    // Init DirManager, which initializes the temp directory    // If this fails, we must exit the program.    if (!InitTempDir()) {       FinishPreferences();       return false;    }    //<<<< Try to avoid dialogs before this point.    // The reason is that InitTempDir starts the single instance checker.    // If we're waiitng in a dialog before then we can very easily    // start multiple instances, defeating the single instance checker.    // Initialize the CommandHandler    InitCommandHandler();    // Initialize the PluginManager    PluginManager::Get().Initialize();    // Initialize the ModuleManager, including loading found modules    ModuleManager::Get().Initialize(_mCmdHandler);    // Parse command line and handle options that might require    // immediate exit...no need to initialize all of the audio    // stuff to display the version string.    auto parser = ParseCommandLine();    if (!parser)    {       // Either user requested help or a parsing error occured       exit(1);    }    if (parser->Found(wxT(\"v\")))    {       wxFprintf(stderr, wxT(\"Audacity v%s\\n\"), AUDACITY_VERSION_STRING);       exit(0);    }    long lval;    if (parser->Found(wxT(\"b\"), &lval))    {       if (lval < 256 || lval > 100000000)       {          wxPrintf(_(\"Block size must be within 256 to 100000000\\n\"));          exit(1);       }       Sequence::SetMaxDiskBlockSize(lval);    }    wxString fileName;    if (parser->Found(wxT(\"d\"), &fileName))    {       AutoSaveFile asf;       if (asf.Decode(fileName))       {          wxPrintf(_(\"File decoded successfully\\n\"));       }       else       {          wxPrintf(_(\"Decoding failed\\n\"));       }       exit(1);    }    // BG: Create a temporary window to set as the top window    wxImage logoimage((const char *_)AudacityLogoWithName_xpm);    logoimage.Rescale(logoimage.GetWidth() / 2, logoimage.GetHeight() / 2);    wxBitmap logo(logoimage);    AudacityProject *project;    {       wxSplashScreen temporarywindow(          logo,          wxSPLASH_CENTRE_ON_SCREEN | wxSPLASH_NO_TIMEOUT,          0,          NULL,          wxID_ANY,          wxDefaultPosition,          wxDefaultSize,       0); // wxSTAY_ON_TOP);       temporarywindow.SetTitle(_(\"Audacity is starting up...\"));       SetTopWindow(&temporarywindow);       wxEventLoopBase::GetActive()->YieldFor(wxEVT_CATEGORY_UI);       //JKC: Would like to put module loading here.       // More initialization       InitDitherers();       InitAudioIO(); #ifdef __WXMAC__       // On the Mac, users don't expect a program to quit when you close the last window.       // Create a menubar that will show when all project windows are closed.       wxMenu *fileMenu = new wxMenu();       wxMenu *recentMenu = new wxMenu();       fileMenu->Append(wxID_NEW, wxString(_(\"&New\")) + wxT(\"\\tCtrl+N\"));       fileMenu->Append(wxID_OPEN, wxString(_(\"&Open...\")) + wxT(\"\\tCtrl+O\"));       fileMenu->AppendSubMenu(recentMenu, _(\"Open &Recent...\"));       fileMenu->Append(wxID_ABOUT, _(\"&About Audacity...\"));       fileMenu->Append(wxID_PREFERENCES, wxString(_(\"&Preferences...\")) + wxT(\"\\tCtrl+,\"));       {          auto menuBar = std::make_unique<wxMenuBar>();          menuBar->Append(fileMenu, _(\"&File\"));          // PRL:  Are we sure wxWindows will not leak this menuBar?          // The online documentation is not explicit.          wxMenuBar::MacSetCommonMenuBar(menuBar.release());       }       mRecentFiles->UseMenu(recentMenu);       mRecentFiles->AddFilesToMenu(recentMenu);       SetExitOnFrameDelete(false); #endif //__WXMAC__        temporarywindow.Show(false);    }    #ifdef USE_FFMPEG    FFmpegStartup();    #endif    Importer::Get().Initialize();    //    // Auto-recovery    //    bool didRecoverAnything = false;    if (!ShowAutoRecoveryDialogIfNeeded(&project, &didRecoverAnything))    {       // Important: Prevent deleting any temporary files!       DirManager::SetDontDeleteTempFiles();       QuitAudacity(true);       return false;    }    //    // Remainder of command line parsing, but only if we didn't recover    //    if (!didRecoverAnything)    {       if (parser->Found(wxT(\"t\")))       {          RunBenchmark(NULL);          return false;       } // As of wx3, there's no need to process the filename arguments as they // will be sent view the MacOpenFile() method. #if !defined(**WXMAC**)       for (size_t i = 0, cnt = parser->GetParamCount(); i < cnt; i++)       {          MRUOpen(parser->GetParam(i));       } #endif    }    wxWindow \\* pWnd = MakeHijackPanel();    if (pWnd)    {      project->Show(false);       pWnd->SetParent(project);       SetTopWindow(pWnd);     pWnd->Show(true);    }    gInited = true;    project = CreateNewAudacityProject();    mCmdHandler->SetProject(project);    if (project->mShowSplashScreen)      project->OnHelpWelcome();    // JKC 10-Sep-2007: Enable monitoring from the start.    // (recommended by lprod.org).    // Monitoring stops again after any    // PLAY or RECORD completes.    // So we also call StartMonitoring when STOP is called.    project->MayStartMonitoring();    ModuleManager::Get().Dispatch(AppInitialized);    mWindowRectAlreadySaved = FALSE;    mTimer.SetOwner(this, kAudacityAppTimerID);    mTimer.Start(200);    return TRUE; }", "You quoted a lot of code instead of explaining the purpose of this commit!\n =||= OK, I just thought that I did it before.\nAnyway, there are two problems raised in Bug 1377.\n1) Splash screen placed above warning message\n2) After user presses button in Warning dialog (we see this warning in \ncase  of low disk memory) ,\nApplication crashes.\n\nThe cause of the first is that when we create splash screen (see line \n1406) using  wxSTAY_ON_TOP flag. Changing this flag value to 0, we \nchange warning dialog behavior  (only at this place!).\n\nThe cause of crash in provided scenario is the fact that we try to \ndisplay warning dialog using Application engine service before \ninitialization of this engine completed. I just moved code that uses \nthis service own to have initialization completed at the moment we try \nto create Warning Dialog. Alternative solution was to create Warning \nDialog using Windows GUI API.\n\nRegards,\n\nAlex\n\nOn 2016-06-27 10:07 AM, Paul Licameli wrote:\n\n> You quoted a lot of code instead of explaining the purpose of this commit!\n> \n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub \n> https://github.com/audacity/audacity/pull/144#issuecomment-228755878, or \n> mute the thread \n> https://github.com/notifications/unsubscribe/APFiJvi844n6jQQlPMona6aQXGpxqf07ks5qP9k_gaJpZM4I_HUf.\n =||= Please amend your git commit:  the comment is just a long code quotation,\nsurely not what you intended.\n\nPRL\n\nOn Mon, Jun 27, 2016 at 11:11 AM, alex-chapiro notifications@github.com\nwrote:\n\n> OK, I just thought that I did it before.\n> Anyway, there are two problems raised in Bug 1377.\n> 1) Splash screen placed above warning message\n> 2) After user presses button in Warning dialog (we see this warning in\n> case of low disk memory) ,\n> Application crashes.\n> \n> The cause of the first is that when we create splash screen (see line\n> 1406) using wxSTAY_ON_TOP flag. Changing this flag value to 0, we\n> change warning dialog behavior (only at this place!).\n> \n> The cause of crash in provided scenario is the fact that we try to\n> display warning dialog using Application engine service before\n> initialization of this engine completed. I just moved code that uses\n> this service own to have initialization completed at the moment we try\n> to create Warning Dialog. Alternative solution was to create Warning\n> Dialog using Windows GUI API.\n> \n> Regards,\n> \n> Alex\n> \n> On 2016-06-27 10:07 AM, Paul Licameli wrote:\n> \n> > You quoted a lot of code instead of explaining the purpose of this\n> > commit!\n> > \n> > \u2014\n> > You are receiving this because you authored the thread.\n> > Reply to this email directly, view it on GitHub\n> > https://github.com/audacity/audacity/pull/144#issuecomment-228755878,\n> > or\n> > mute the thread\n> > <\n> > https://github.com/notifications/unsubscribe/APFiJvi844n6jQQlPMona6aQXGpxqf07ks5qP9k_gaJpZM4I_HUf\n> > .\n> \n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> https://github.com/audacity/audacity/pull/144#issuecomment-228775300,\n> or mute the thread\n> https://github.com/notifications/unsubscribe/ALITYdWsStvPbMt9lJib09m1qf56xXbFks5qP-gQgaJpZM4I_HUf\n> .\n =||= Commit message not acceptable.  \n =||= In any case bug 1377 has already been fixed and resolved by QA.\n =||= "], ["145", "Bug 1403: Two column Progress Dialog message", "Mark Young", "tip2tail", "07/19/16, 08:59:21 PM", "Fix for Bug 1403... Added functionality to ally the progress dialog message to be displayed in two columns.\n\n\\t will switch to column 2,\n\\n will switch to column 1 again with a new line when this flag is set.\n\nExample build: http://audacity.tip2tail.scot/builds/20160630-tip2tail-B.zip", "Thanks Mark, the timer record dialog looks much better (tested on Linux), but personally I'm not very keen on relying on specially crafted strings (\\t) to split the string into two columns. \nAs TimerProgressDialog is only used for Timer Recording, wouldn't it be better to define it with two message strings (one per column)? Perhaps worth discussing on the developer's mailing list.  \n =||= Mark, I wonder if you are intending to fix any of the bugs in this list.\n\nhttp://bugzilla.audacityteam.org/buglist.cgi?quicksearch=%22timer%20record%22&list_id=6113\n =||= Hi\n\n@Paul, Some of this is on my radar yes however I'm going to be out of the\ncountry for the next few weeks so progress may not be speedy!\n\n@Steve. I had considered the use of a second parameter however my intention\nwas to limit the changes required for processes to call it - simply adding\na flag.\n\nMark\n =||= "], ["146", "Fixed capitalisation of \"Audacity\" in TimerRecord", "Mark Young", "tip2tail", "07/18/16, 12:33:58 PM", "The word \"audacity\" in the Post Timer Recording action dropdown has been fixed to read \"Audacity\" as a proper noun.", "NaN"], ["147", "Bug 1403: Two Column Progress Dialogs", "Mark Young", "tip2tail", "08/10/16, 11:56:49 AM", "Bug 1403: Amended ProgressDialog and TimerProgressDialog classes to allow\n\nfor a two column message.  The text for each column is created with a separate\nparameter when a given flag is set.\nAmendments made to Timer Record to take advantage of this new layout.\n\nCode redesigned to better reflect accepted Audacity coding standards.", "NaN"], ["148", "Reduced CPU usage of Audacity when idle.", "Rapha\u00ebl Marinier", "RaphaelMarinier", "07/21/16, 10:03:00 PM", "Before this change, an idle Audacity on a recent Linux laptop uses 6%\nof CPU. This is because DrawOverlays() is called every 50ms through a\ntimer in TrackPanel, which instanciates a wxClientDC. This is quite\nexpensive and dominates the profiles: creating wxClientDCs is 84% of\nthe CPU audacity spends while idle, according to callgrind. With this\nchange, we avoid creating wxClientDCs when it's not necessary.\n\nAfter this change, and idle Audacity consumes 1.6% of CPU, and most of\nthe time is spent in gtk/wxwidgets processing events.\n\nHere are the perf stats of an idle Audacity before the change:\n\n```\n    524.425485      task-clock (msec)         #    0.060 CPUs utilized\n           825      context-switches          #    0.002 M/sec\n            36      cpu-migrations            #    0.069 K/sec\n             0      page-faults               #    0.000 K/sec\n 1,198,433,346      cycles                    #    2.285 GHz\n 1,243,329,771      instructions              #    1.04  insn per cycle\n   308,073,049      branches                  #  587.449 M/sec\n     5,801,494      branch-misses             #    1.88% of all branches\n\n   8.808129958 seconds time elapsed\n```\n\nand after:\n\n```\n    149.110455      task-clock (msec)         #    0.016 CPUs utilized\n           908      context-switches          #    0.006 M/sec\n            32      cpu-migrations            #    0.215 K/sec\n             0      page-faults               #    0.000 K/sec\n   313,372,582      cycles                    #    2.102 GHz\n   167,401,770      instructions              #    0.53  insn per cycle\n    41,857,947      branches                  #  280.718 M/sec\n     1,189,566      branch-misses             #    2.84% of all branches\n\n   9.076940003 seconds time elapsed\n```", "NaN"], ["149", "Fixed uninitialized variable (mFreqSelTrack) in TrackPanel.", "Rapha\u00ebl Marinier", "RaphaelMarinier", "09/11/16, 09:01:28 PM", "This variable is used in OnTrackListUpdated before it is initialized.\n\nFound with valgrind's memcheck tool.", "Thanks.  Closed with\nhttps://github.com/audacity/audacity/commit/0f417a65c7535ba5042c6dd3c791d7b864fa3c8b\n =||= "], ["150", "Optimize the refresh of the selection bar while Audacity is playing.", "Rapha\u00ebl Marinier", "RaphaelMarinier", "08/16/16, 02:04:42 AM", "This saves 3-4% CPU while Audacity is playing on Linux/64bits. This is\ndone by avoiding the update of NumerixTextCtrls that stay unchanged.", "Caused bug: http://bugzilla.audacityteam.org/show_bug.cgi?id=1497\nFixed by:  https://github.com/audacity/audacity/commit/5d0951c6434e237d72ef07510237f88a2c799d7a\n\n(And despite the bug, thanks for the code/idea)\n =||= "], ["151", "Compressor.cpp: Allow higher-precision 'Ratio'", null, "rickst29", "08/01/16, 04:30:17 PM", "Preceding this change, the compression 'Ratio' could only be set to a value within\nthe Series (1.0, 1.5, 2.0, 2.5 .... 10.0).\nFollowing this change, 'Ratio' can be set with 0.01 precision, to any value between 1.01 and 10.0 (inclusive).\nThe GUI is also modified to show the specified 'Ratio' with two digits after the decimal point.", "cancelled, will work with a fesh and \"clean\" clone.\n =||= "], ["152", "Save 7-8% of CPU while playing by not refreshing the adorned ruler twice at each timer tick.", "Rapha\u00ebl Marinier", "RaphaelMarinier", "07/31/16, 09:09:14 PM", "Before, it was updated both directly in TrackPanel::OnTimer() through\nthe call mRuler->DrawOverlays(), and in\nAudacityProject::TP_DisplaySelection() that calls\nmRuler->Refresh(). After this change, the adorned ruler is only\nupdated by the first mechanism.", "This changes parts of the code I reorganized, and it looks mostly good to me.  I would prefer that the call\n\np->GetSelectionBar()->SetAudioTime(gAudioIO->GetStreamTime());\n\nbe done in PlayIndicatorOverlay's timer callback rather than TrackPanel's -- does the fix work just as well if so?\n =||= Sure. The fix works the same by updating the selection bar from the PlayIndicatorOverlay. I just added a commit to the branch that does that.\n =||= Good, now may I trouble you to:\n1) squash these two commits into one, rebased on the latest master, and\n2) Edit the first line of the commit comment so that it is 69 columns or less.\n =||= I made some mistakes with this branch. I am therefore dropping it, and I re-created a new one with the requested changes:\nhttps://github.com/audacity/audacity/pull/153\n =||= "], ["153", "Save CPU while playing by optimizing refreshes of the adorned ruler.", "Rapha\u00ebl Marinier", "RaphaelMarinier", "09/12/16, 12:08:01 PM", "On Linux 64 bits, I measured the CPU savings to be 7-8%.\n\nBefore, the adorned ruler was updated both directly in\nTrackPanel::OnTimer() through the call mRuler->DrawOverlays(), and in\nAudacityProject::TP_DisplaySelection() that calls\nmRuler->Refresh(). After this change, it is only updated by the first\nmechanism.", "Rejected.\nUnder windows the cursor leaves a trail behind it on the ruler.  That would need to be 'cleared up'.\n =||= "], ["154", "Compressor.cpp: Allow higher-precision 'Ratio'", null, "rickst29", "08/02/16, 11:32:53 PM", "NaN", "Congratulations Rick on your first Audacity commit.\n =||= "], ["155", "Fixed order of instructions in win/compile.txt", "Mark Young", "tip2tail", "08/15/16, 10:12:40 PM", "While setting up a new development Virual Machine I noticed that the win/compile.txt file contains instructions that appear to be in the incorrect order.\n\nWe instruct a user to patch wxWidgets with data from the Audacity repo before we have said to download the repo itself.  While I appreciate that users may have downloaded the repo first (in order to read win/compile.txt), I think we should be clear and have the steps in the order.", "Thanks Mark. Committed at https://github.com/audacity/audacity/commit/5a8801f .\n =||= "], ["156", "Update Catalan translation", "Robert Antoni Buj Gelonch", "rbuj", "09/09/16, 06:06:17 PM", "NaN", "NaN"], ["157", "OpenMP-ized SpecCache::Populate", "Darrell Walisser", "walisser", "08/26/16, 11:51:42 AM", "This is a pretty clean patch to give a huge boost to the spectrogram view (see numbers below). It is now quite smooth at 8k and usable at 16k.\n\nThe approach was straight-forward:\n- Make sure SpecCache::CalculateOneSpectrum is reentrant, by moving mutable data to arguments, and making it const\n- Make thread-local copies of the mutable arguments\n- Unleash the OMP in SpecCache::Populate\n\nNo locking was added, I believe it is not necessary, and helgrind did not produce errors (not sure it will without any locking).\n\nI have some numbers using Profiler, had to do it manually by repeated zoom in/zoom out.\n\nAverage over 3 runs for a few different window sizes, (default settings except Gaussian window)\n\n| Window | Single-Threaded | OpenMP (4c/8t) | Speedup |\n| --- | --- | --- | --- |\n| 512 | [0.030 0.030 0.293] | [0.013 0.013 0.013] | 2.292 |\n| 2k | [0.125 0.122 0.120] | [0.027 0.028 0.027] | 4.469 |\n| 8k | [0.531 0.531 0.516] | [0.094 0.093 0.092] | 5.656 |\n| 32k | [2.364 2.261 2.320] | [0.389 0.383 0.383] | 6.013 |\n\nI have compiled as follows:\n`CXXFLAGS='-O3 -march=native -fopenmp' LDFLAGS=-fopenmp ./configure`\n\nStuff left to do.\n- [ ] Address Potential Data Races\n- [ ] Pass the ideal thread count instead of hard-code\n- [ ] Add configuration option to enable OpenMP\n- [ ] Maybe do the remaining loops, but its a little yucky since they have a break statement", "Thank You!\n\nI have checked this in to master.  Very welcome change.\nPlease start a discussion on https://lists.sourceforge.net/lists/listinfo/audacity-devel about the next steps, e.g. compiling for windows.\n =||= James, I have a serious reservation about this.\n\nI took a look at this, and I believe it may give incorrect results when the\nreassignment algorithm is used.\n\nIt is the outer loops over times that are parallelized, not the inner loops\nover the frequency bins.  Usually for each time, there is one column of\npixels in the display, and values for that column only in the\ntwo-dimensional array are updated.\n\nBut in the case of reassignment, there are time and frequency corrections,\nwhich move the contribution of a time/frequency bin of the FFT, adding ti\nsometimes into the cells corresponding to another colum.\n\nTherefore, there may be a race condition to update those cells, and nothing\nin this code guards against that.  Indeed I am not sure how to prevent the\nraces in a simple way.\n\nPRL\n\nOn Fri, Aug 26, 2016 at 8:03 AM, James Crook notifications@github.com\nwrote:\n\n> Thank You!\n> \n> I have checked this in to master. Very welcome change.\n> Please start a discussion on https://lists.sourceforge.net/\n> lists/listinfo/audacity-devel about the next steps, e.g. compiling for\n> windows.\n> \n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/audacity/audacity/pull/157#issuecomment-242716900,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/ALITYf2hXPSpcTP-98xd3O7eZaDhW0F3ks5qjtYXgaJpZM4JtWy7\n> .\n =||= James has merged the request already, but I have a serious reservation about this.\n\nI took a look at this, and I believe it may give incorrect results when the reassignment algorithm is used.\n\nIt is the outer loops over times that are parallelized, not the inner loops over the frequency bins.  Usually for each time, there is one column of pixels in the display, and values for that column only in the two-dimensional array are updated.\n\nBut in the case of reassignment, there are time and frequency corrections, which move the contribution of a time/frequency bin of the FFT, adding ti sometimes into the cells corresponding to another colum.\n\nTherefore, there may be a race condition to update those cells, and nothing in this code guards against that.  Indeed I am not sure how to prevent the races in a simple way.\n\nPRL\n =||= Put this another way.\n\nSometimes in parallelizing a loop, you must identify the variables that are accumulators, and give each thread its copy of the accumulation variable, and then have extra work (\"reduction\") after the loop to combine the answers.\n\nIn the case of the reassignment algorithm, the entire vector freq is the accumulator that should be replicated among the threads, and the reduction step is itself another loop that sumes corresponding array elements into one array.\n =||= Thanks Paul.  Do you have a concern that it might give incorrect (or slower than before) results when not using OpenMP?  I'm willing to have it in as 'experimental support for OpenMP'.  Walisser believes locking isn't needed - and if it is needed is the downside of not having it that we get 'black pixels' or other artifacts in the reassigned spectrogram? People may accept that for speed, if the output is mostly OK?  \n\nI think we need a concrete example of a bad spectrogram before and after, and then Walisser can work to fix that.  I am pretty sure OpenMP will be 'for the adventurous', not something we offer precompiled or by default, at least for a while.\n =||= I also question the need for thread-local storage.  Could not stack-allocated arrays of caches and scratches do, with each thread simply fetching from its own slot in the array?  Could not std::vector<float> scratch simply be made larger, each thread using a different part of it?\n\nI also don't like the introduction of a few naked new and delete when I am working to eliminate those.\n\nI also wonder if there might be a smarter way to avoid the replication of WaveTrackCache objects.  This could avoid some redundant reads from the disk and make the algorithm even faster.  It would require that the loop\nfor (auto xx = lowerBoundX; xx < upperBoundX; ++xx)\n\nwould be factored into an outer loop over appropriate column ranges that would each require WaveTrackCache to be populated just once, and then the inner loop over columns, which would be parallelized as now, and could freely use the common cache without contention because none would cause a \"miss\" in it that changes its contents.\n =||= James, I saw nothing that makes me doubt the serial correctness.\n\nThe consequence of the race condition to accumulate sums may be that the sums come out too small.  These numbers (after conversion to dB) provide the input to TrackArtist::DrawClipSpectrum, which transforms them into a colored bitmap.  So some pixels in the reassigned spectrogram may be colored as less intense than they should be (red when they should be white, magenta when red, etc.) \n\nThe simplest fix for now might be just to cause only one thread to run, on condition that there is reassignment, but let us have the advantage of OpenMP otherwise.  Is there some library call to OpenMP to instruct it to do that?\n\nPerhaps TrackArtist::DrawClipSpectrum affords other opportunities to use OpenMP, without any races to worry about (whether with reassignment or not).  Perhaps these are less valuable.  Scroll with the mouse wheel in the vertical frequency ruler -- I believe that display update involves only these loops, not the WaveClip.cpp computations.  Maybe performance of this scrolling doesn't need the help.\n =||= I can suggest some test cases.\n\nTo get the most extreme effect of time reassignment, try generating a click track, or even just making an impulse by generating silence, then pulling one sample up with the draw tool.\n\nView that in spectrogram with the longest window.  View it with and without reassignment to see the big difference that makes in the display.\n\nThen contrast the reassigned picture with the serial and parallel algorithm.\n\nI have not tried it.  This is mostly likely to expose problems with race conditions.  But if you don't see a difference, that is not a proof that there is not a problem.\n\nWhat pattern the problem takes may depend on how OpenMP partitions the loop passes among threads, and I don't have the experience to understand that.\n =||= I am looking at potential data races now. There are some in BlockFile for example. I missed these because I did not properly instrument with helgrind the first time. There are some data members declared mutable which throws the whole const-correctness assumption out the window.\n\nAs for OMP partitioning, in the static schedule mode (default, used here), it will evenly divide the work between threads, with the last thread doing a little bit less; e.g. for an updates size of 800 samples wide, each thread does 100 samples in one go.\n =||= Can you explain more about BlockFile and which mutable fields you mean.\n =||= I think there are enough doubts about this, but also enough willingness from walisser to work on them, that this merge should be reverted for now and a better pull request made again later.\n =||= I agree this should be put on hold until more testing can be done to find and correct races.\n\nBlockFile.h contains a few members declared mutable to get around const. For example in PCMAliasBlockFile::ReadData (line PCMAliasBlockFile.cpp:117) it gets written from a const method.\n =||= I don't know helgrind at all, but I think this is irrelevant.  I doubt you construct any PCMAliasBlockFile objects in the usual use of Audacity.  They happen only in certain circumstances involving imported sound files.\n =||= I got that from the helgrind trace, so they are constructed in my test case which loads a .aiff file. Basically helgrind is telling us there was a read and write to some memory location from different threads while there was no mutex lock held between them. This does not mean it is an actual race of course, only potential. There could be some other form of race prevention that helgrind can't detect.\n\nHere is what I've distilled from the trace so far (there is a lot more in the trace, mostly from system libraries).\n\nhttps://gist.github.com/walisser/951929d36a998aa8b7209ebd88efdacf\n =||= You are right about reassignment, definitely race condition there and confirmed with helgrind. However, the effects to my eyes are imperceptible.\n\nIt seems the probability of the race occurring is low since there are relatively few threads compared to samples (e.g. with 4 threads, a 400 sample width, each thread does 100 sequential sample-windows). You may only see any artifacts near the border of those work groups, the lookahead/lookbehind is at most 0.5s if I'm reading it right.\n\nThe worse case could be scrolling, as there are at most 30 sample-windows in a scroll event (at least on my system), all of which could fall in the 0.5s window. I will look at that.\n\nIf you're interested, here are a few test images from a click track as suggested, comparing single thread vs multi-thread.\nhttps://goo.gl/9kIMry\n =||= "], ["158", "improved OpenMP SpecCache::Populate", "Darrell Walisser", "walisser", "08/31/16, 09:36:40 PM", "This is an improvement to pull request [#157 ](https://github.com/audacity/audacity/pull/157) based on those comments and some further testing.\n\nThis patch uses a cleaner TLS method and adds some race prevention. I think this covers all of the possible races that needed attention.\n\n[The races I identified](https://gist.github.com/walisser/951929d36a998aa8b7209ebd88efdacf) in BlockFile are due to a few mutable members which control error suppression (mSilentLog/mSilentAliasLog). These can be ignored since worst that can happen is a few undesired logs are sent when project is corrupted or files go missing (correct me if I'm wrong).\n\nAs Paul has pointed out, the reassignment case can race for sure, as the correction applied in CalculateOneSpectrum crosses bins. \nWhile the probability of this is very small, I have added race prevention in the form of atomic read/update/write for the offending assignment. This uses omp atomic (not mutex) so the overhead is very low, measured at about 5%.\n\nStuff left to do.\n- [ ] Add configuration option to enable OpenMP\n- [ ] Test on Windows and Mac OS X\n- [ ] Maybe do the remaining loops for reassignment case, but its a little yucky since they have a break statement", "Looks like OpenMP support in Visual Studio is poor and won't support some features. So audacity for windows will need to be compiled with gcc or clang.\n =||= I have examined these changes.\n\nDoes #pragma omp atomic truly guarantee an atomic fetch, add, and store of a float variable?  It's not just for incrementing and decrementing integers?  You actually had races reported by helgrind without this change, but not with it?\n\nIf all that is so, then you have found a simpler solution fortunately than the array reduction I suggested.\n\nAbout deletes, I am happier to see delete, if you must write it, in destructors only.\n\nYour use of vector, though, is not quite kosher.  You reserve instead of resizing.  I suppose you did that to avoid the zero initialization that resizing would do.  But then you are technically accessing the vector out of bounds.  Debug versions of STL libraries might complain about that.  It might then be more satisfactory to use new[] as before, just to get uninitialized memory -- if you put the corresponding delete[] in a destructor, then I am satisfied.\n =||= Wait now, the scratch array (formerly called buffer) was std::vector<float> in the serial version, so that it is initialized with zeros.  We must ask then, was the code relying on that?\n\nBut we easily see it was not, because of the way buffer was reused across loop passes without reinitializing its contents to zeros.\n\nSo maybe I was lazy to use vector but not make effort to economize away that filling with zeroes.\n\nBut then the filling is done only once, outside of the main loop over pixel columns.\n\nSo the short answer may be, change reserve to resize.  It would add a negligible time filling with zeros.  But it makes the code a bit more correct in its use of STL containers.\n =||= The omp atomic uses hardware instructions where possible, otherwise it falls back to mutex locks. On x86 cpus the fence instructions affect any load/store operations, so it isn't limited to any data type.\n\nThe form used here is the \"update\" form which protects a read/modify/write operation. I was able to verify it was working inserting a floating-point load/increment/store in the critical section and seeing that the resulting value was stable.\n\nhelgrind doesn't track atomics or futex system calls, it only instruments pthread library functions. Which is why it gives a lot of false positives sometimes. So I assume it will still show this is an issue (I didn't check this).\n\nNice catch on the resize vs reserve, I didn't even consider it at the time one way or the other. I will change this to resize. On a related note, why not use autoptr/new since this doesn't use any features of std::vector? Or maybe stack-allocated memory... but I hesitate to do that, it runs the risk of exceeding the stack size limits of the compiler or system. I've seen its benefits before however, as the allocation is free.\n =||= You mention auto_ptr.  But that is now deprecated in favor of unique_ptr, in C++11.\n =||= Presumably an atomic update of the sort we need is implemented as a compare-and-swap loop.  Can you verify that this is so from the disassembly?\n\nIf it's really only an atomic store, then it's not really fixing the race condition.\n\nc++11 also now provides std::atomic: http://en.cppreference.com/w/cpp/atomic/atomic\n\nHowever we can't use that yet.  We are still limited to an earlier version of the standard library on OSX, until we commit to abandoning version 10.6.\n =||= I reviewed the documentation for #pragma omp atomic at opemmp.org, at least for the latest version (4.5).\n#pragma omp atomic\n\nreally implies\n#pragma omp atomic update\n\nwhich might be good to write for more clarity of the intent.  The documentation implies that this does what I think it needs to do.\n\nAs I said, what it needs to do is something like a compare-and-swap loop, so that there is no possibility of reading a location, then adding to the value, but then another thread updating the location, before writing the value back.\n =||= Confirmed it uses compare and swap loop. [Assembly dump and sample code](https://gist.github.com/walisser/3a42d2446f4d02d5ff969e3bca63a9b0).\n =||= The loop is lines 33 to 44?  It looks like the right sort of thing.  I haven't deciphered it totally.\n =||= It looks right to me. I'm not good at reading this stuff, but I saw this:\n\nlock cmpxchg %edi,(%rcx)\n\nwhich is literally the compare and swap instruction. I looked it up, the \"lock\" denotes the instruction will do its thing atomically.\n =||= I studied the loop more just out of curiosity.  I am satisfied that your compiler is implementing #pragma omp atomic update as expected.  Let's assume other OpenMP compilers will do similar.\n =||= "], ["159", "Bug1403 Progress Dialog Split Message Fixes", "Mark Young", "tip2tail", "09/12/16, 11:32:14 PM", "Here is a new PR that should now fully fix Bug 1403.  I want to publicly thank @SteveDaulton for his assistance on this and for his guidance when we have been discussing it.\n\nI have tested this on Windows and found it to be working OK, Steve has tested on Linux, but I don't think it has been tested on Mac yet so any help there would be appreciated!", "Needs fix to crashing bug on Mac to progress this.  Steve, Gale and Mark  currently discussing.  Waiting for response.\n =||= The Mac crash was due to an old #if defined(**WXMAC**) workaround which has now been removed, so that fix should not affect Windows (tested previously), so I've merged the pull request.\n =||= "], ["160", "use std::isnan since c++11 provides it and wxIsNan is broken in c++11", "Darrell Walisser", "walisser", "09/12/16, 11:42:51 AM", "wxIsNan() is broken in c++11 and wx devs are not going to be fixing it, they recommend using cmath and std::isnan(). Also replaces bare isinf(), isnan() with std:: versions.\n\nhttps://github.com/wxWidgets/wxWidgets/pull/283", "Merged into master.  Thanks.\n =||= "], ["161", "Add support for cross compilation targeting Windows", "Darrell Walisser", "walisser", "10/14/18, 07:25:21 PM", "Enables cross-compilation via mxe environment for 32 or 64-bit Windows target.\r\n\r\n- Commits prefixed with \"cross-compile:\" pertain to build scripts and configure tests etc needed for cross compilation and/or targeting mingw. Generally there are separate commits for each lib-src subdir unless the issue was global.\r\n- Commits prefixed with \"win64\" have to do with any 64-bit compilation issues only\r\n- Commits prefixed with \"mingw\" have to do with mingw headers or conventions (mxe uses mingw)\r\n- There are separate commits for the autotools-generated files (comment \"autotools update\" etc).\r\n\r\nOther miscellaneous:\r\n- adds --enable-openmp for compiling with new OpenMP code\r\n- adds --std=gnu++11 instead of --std=c++11 as required by wxWidgets\r\n- configuration test for wxWidgets \"high dpi\" patch\r\n- cleaned up a few spots in configure.ac around other changes (cosmetics)\r\n\r\nBuild recipe:\r\n- Get mxe\r\n```\r\ngit clone https://github.com/mxe/mxe \r\nsudo mv mxe /opt/mxe\r\nsudo chown $USER:$USER /opt/mxe\r\n```\r\n- Build mxe environment (windows 32-bit) and packages\r\n```\r\ncd /opt/mxe\r\nmake wxwidgets libsndfile ogg vorbis expat cmake portmidi\r\n```\r\n\r\n- Get the source\r\n```\r\ngit clone https://github.com/audacity/audacity\r\ncd audacity\r\ngit fetch origin +refs/pull/161/merge \r\ngit checkout -qf FETCH_HEAD\r\n```\r\n\r\n- Build Audacity\r\n```\r\n# make your build prefix/destination\r\nmkdir ~/tmp/audacity-win32\r\n\r\n# configure\r\nexport PATH=/opt/mxe/usr/bin:$PATH\r\n./configure --host=i686-w64-mingw32.static --enable-openmp --prefix=/home/$USER/tmp/audacity-win32\r\n\r\n# compile and install\r\nmake -j4\r\nmake install\r\n```\r\n\r\nFor 64-bit build, change the following:\r\n\r\n- Compile 64-bit mxe environment\r\n```\r\ncd /opt/mxe\r\nmake MXE_TARGETS='x86_64-w64-mingw32.static' wxwidgets libsndfile ogg vorbis expat cmake portmidi\r\n```\r\n\r\n- Compile audacity\r\n```\r\nmkdir ~/tmp/audacity-win64\r\n./configure --host=x86_64-w64-mingw32.static --enable-openmp --prefix=/home/$USER/tmp/audacity-win64\r\n```", "I'm doing my own furious pushing of many fixes lately.  Could you please rebase this onto more recent master, at:\r\n\r\n2bc9497dc2e2892c99c6e6e05491c59013d46e36\r\n\r\nthen do push -f to your fork again?  Be sure none of your changes conflict with mine.  I will wait to push again until after you.\r\n\r\n\r\n =||= On closer examination, I see that you do very little under src/ , but you are doing much under lib-src.\r\n\r\nSo there will not be conflict with my work.  However, we may hesitate to take changes in lib-src, making our copies out of sync with the source projects.\r\n\r\nI suggest you separate those parts that affect libnyquist and discuss with Roger Dannenberg whether the changes are acceptable upstream in the Nyquist project.\r\n =||= libnyquist commits submitted #187 =||= This IS a nice idea, and I appreciate the work that has gone into it.  It really needs discussion on audacity devel mailing list if it has to have a hope of being included.  \r\n\r\nMy question really is what do we gain by supporting cross compiling with mingw?  Why not compile and test on the actual relevant platform and bypass the extra complexity of cross compiling?  It seems like there is potentially a lot of ongoing support work to maintain and check support for cross compiling. \r\n\r\nSo I have added flags that suggest we will reject/close this pull request soon.  Discussion on our mailing list could maybe change that.  =||= OpenMP on windows was the whole reason for this - it's the only way to get the OpenMP spectrogram on windows. However, there isn't any interest in OMP besides myself, and too few places where it makes sense to use it. So on this point it is not worthwhile to keep it alive.\r\n\r\nIn terms of gains for Audacity in general... probably zero. Again, I was probably the only person needing to do this. With a little more work, autotools could be used on every platform to replace MSVC/XCode, but I doubt anyone will want to do that even if it means less maintenance and support.\r\n\r\nIdeally autotools would be replaced with something more modern and MSVC/XCode support could be dropped or generated from the other system.\r\n\r\nI'll go ahead and close this, it was an interesting project at least.\r\n =||= \nOn Sun, Oct 14, 2018 at 12:25:25PM -0700, Darrell Walisser wrote:\n> OpenMP on windows was the whole reason for this - it's the only way to get the OpenMP spectrogram on windows. However, there isn't any interest in OMP besides myself, and too few places where it makes sense to use it. So on this point it is not worthwhile to keep it alive.\n\nHave you tried installing Ubuntu from the Windows Store and\nrunning Audacity for Linux that way?  One would need to run\nX Windows as well (xming?).  It runs directly on the Windows\nkernel so it doesn't require a VM with the memory overhead\nthat implies.\n\nFor the pie-in-the-sky future there should be a better\ndivision between computation and the rest of the\napplication.  Explaining to someone why their CUDA DLL to\naccelerate some fancy effect needs to include bits of\nwxWidgets, PulseAudio, and bits to emulate parts of\nAudacity's UI would be a little awkward (creating both\npractical and licensing integration problems).  Likewise,\nwhile something like FFT certainly needs a default\nimplementation inside Audacity, for maximum performance one\nwould generally want to use stuff designed and optimized for\nthe given system's hardware (be that an Intel AVX2 unit, an\nAMD GPU, or whatever).  Furthermore, such GPU or even\ndistributed computation is almost certainly going to require\nbatching or streaming to get good performance from\nhigh-throughput but also higher latency hardware.  All that\nstrongly implies a pluggable computation infrastructure of\nsome kind.\n\nFor C++ standard itself, one might look at the HPX and SYCL\nprojects to see where things might be headed.\n\n> \n> In terms of gains for Audacity in general... probably zero. Again, I was probably the only person needing to do this. With a little more work, autotools could be used on every platform to replace MSVC/XCode, but I doubt anyone will want to do that even if it means less maintenance and support.\n> \n> Ideally autotools would be replaced with something more modern and MSVC/XCode support could be dropped or generated from the other system.\n\nFor unifying the build, CMake is well supported on all of\nAudacity's platforms.  Visual Studio can open and build\nCMake projects directly.  It is also already supported by\nwxWidgets, including for building for Windows.  CMake may\nhave its warts, but autotools bring a level of\ncomplexity that renders it rather opaque to most.\n\n\nCMake is also what Microsoft's package manager \"vcpkg\" uses\nunder the hood:\n   https://docs.microsoft.com/en-us/cpp/vcpkg\n\n> \n> I'll go ahead and close this, it was an interesting project at least.\n> \n> \n> -- \n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly or view it on GitHub:\n> https://github.com/audacity/audacity/pull/161#issuecomment-429654544\n =||= "], ["162", "Fix bug 1507", "Steve Daulton", "SteveDaulton", "09/08/16, 09:45:32 PM", "Set flag mProjectNamedFromImport when Audacity automatically\nnames a new project from the name of an imported file.\n\nThis fixes the bug as described, but obscure and fringe ways of saving projects should be tested.\nI'd like this fix to be reviewed by a senior developer in case there is a better way to fix it.", "Basic idea extended into fix.\nhttps://github.com/audacity/audacity/commit/bf06b0485fa6886f63c21e6c8cab13b8e585a894\n =||= "], ["163", "OpenMP TrackArtist::DrawSpectrum", "Darrell Walisser", "walisser", "09/11/16, 06:36:16 PM", "Much faster drawing function, measured about 300% improvement. Not much to this, there is some minor refactoring to allow loop parallelization.\n\nAdditional refactoring to calculate number scale one time, could give a boost to the non-omp version esp when scale involves log(), etc.\n\nAlso changed pointless references like \"const double& x = y\" to \"const double x = y\", I don't see the point of having a reference to a primitive type, or basic struct like wxRect. This may allow better code generation inside loops.", "I will review this.\n\nI am not sure that the references were harming the compiled code.  To the contrary a reference is a way of saying \"don't copy.\"  The real question is whether a declaration is causing a register allocation or stack growth unnecessarily.  That may depend on how smart the optimizer is.\n =||= My incomplete review so far:\n\nI will not merge this as it is now.\n\nPlease don't remove the references unnecessarily without any proof that they help performance.  Keep the commit simple.\n\nI am surprised that line 2187 compiles, but it does for my on Mac.  But standard C++ should not allow the array dimension to be a non-constant expression.  This may not be portable.  This might break the Windows build, but I am not in a place where I can check that now.\n\nUse alloca instead.  Though not standard either, there is precedent for that elsewhere in our code.\n =||= Sorry, but the changes you made involving variables w0 and w1 can't go in.\n\nYou assumed reasonably enough that every pixel column covers an equal interval of time.  What you don't know is that I intentially wrote more general code that does not assume this, because I was developing a project tentatively called \"fisheye\" which can make the mapping non-uniform.  This project may be completed in version 2.1.4.\n =||= That completes my review.\nPRL\n =||= On reflection, I find a bit more to say.\n\nThe changes to w0 and w1 might be objectionable anyway because of numerical roundoff when computing timeStep.  This might make more difference when in zoomed very closely and making a (time) selection.\n\nI understand that you need to break a loop carried dependency.  I think there is no avoiding two calls to PositionToTime in each pass of the loop, in the parallel version, for the future fisheye to work.  The serial version can avoid the second call.\n =||= I'm closing this rather than have incremental additional changes since Paul is not OK with it.  Paul needs to add comments into the existing code to explain not lifting calculation outside the loop for w0 and w1.  I tend to side with Darrell over the '&' being unnecessary and unclear and favour removing them.  It's a well known idiom to pass small values by value and large values by pointer/reference, and I think it is correct to continue it here, as Darrell does, when essentially using const variables just for renaming.\n =||= Surely though we will welcome another commit that answers my objections.\n =||= Yes indeed.  But as a new pull request.\n =||= "], ["164", "Update translation", "JNylson", "JNylson", "09/30/16, 11:34:05 AM", "locale/audacity.pot and locale/pt_BR.po", "Thanks for the work on this, the missing translations and fixing capitalisation.\nThis is now merged into master.\n =||= "], ["165", "OpenMP TrackArtist::DrawSpectrum Take 2", "Darrell Walisser", "walisser", "09/20/16, 11:15:18 AM", "Update to PR #163. \n\nUsing vector now instead of dynamic array size. I've never seen where this didn't work in years, but better to keep standard compliant. This is not critical to performance so better to forget using alloca() as well.\n\nAlso w0, w1 recalculated every iteration so it can work with new fisheye feature. I did not special case this for the non-openmp as it was before since its very small component of the total and I imagine the compiler can do that for us.\n\nI left the const ref change alone per James' comment. IMO it is just a bizarre thing to do. I think we can be pretty sure the code generated is not any worse as there is nothing to dereference in the loops.", "I will relent then on the question of removing & , though I would be curious to know if -O3 removes the difference in code and stack size.\n\nBut again I suggest, using param.t0 intead of t0, etc., everywhere, and seeing if this improves the generated code even more at -O2 or -O3.\n\nHOWEVER:  Closer review shows me another problem that makes this still unacceptable.\n\nSee the variable fisheyeColumn now at line 2440.  Observe what happens to it.  Yes, there is still a loop-carry dependency.  I see that you were careful to fix such dependencies involving w0 and w1 and correctedX, but this one remains.\n\nTo fix it right, we would need first to identify the columns that are in the fisheye, using ZoomInfo::GetFisheyeLeftBoundary and GetFisheyeRightBoundary -- there will be columns before, in, and after.  Then, where fisheyeColumn++ is used inside the loop, instead write some arithmetic with xx and the known start and end of fisheye.\n\nOn the other hand, fisheye isn't real yet, there are lots of unused hooks in the code waiting for a user interface to make them accessible.  So I won't insist on fixing that now, but good for you if you do for me it in advance.  After all, I have left myself another related TODO because fisheye and reassignment still don't play nicely together.  It can be my problem at such time as we try to bring that project online.\n\nSo, you can just make a loud screaming comment with TODO in it.  Or add\n#ifdef _OPENMP\nwxASSERT(!inFisheye);\n#110 \n\nOne more thing, please consider alloca.  It avoids the free-store operations of vector, and I think it is more portable than using a non-constant expression in a built-in array dimension.  I suspect that latter is simply not standard C++ (what is the type of the array variable, without decay to pointer?  It can't be described in the type system) and may not be accepted by all the compilers we want to use.  But I saw how clang compiled that non-standard thing on Mac, and it worked, and I think alloca will generate just the same.\n\nFinally, I request that you rebase these commits onto a more recent master and squash them into one, so that the graph will be neater.  I do hope to merge this soon.  It's almost there.\n =||= So at -O3, the picture changes...\n\n[This diff](https://gist.github.com/walisser/f7078fe7c412f8b349dc4956cc3f885a) is const ref vs const value. It is smaller, but not by a lot, 1461 lines for ref version, 1500 for copy/value version.\n\n[This diff](https://gist.github.com/walisser/2a9af35ad47bb4d21fb021e6a3655d1f) is ref version (left) vs de-ref'd (const locals removed). Smaller still, 1434 lines. \n\nI timed each version and found no appreciable difference between them. \n\nBased on that finding, I think the best is to remove the local variables completely and go through the class/struct. I would prefer this since it reduces line count significantly, and I think it would be easier to understand the code.\n\nOn the squashing, can you do it when [merging the PR?](https://github.com/blog/2141-squash-your-commits). I'm happy to do whatever, but not sure if you knew about this option.\n =||= Rebased and squashed. Removed the references change for now. Added fisheye support.\n =||= I am satisfied with the changes now.  Thank you.  And thank you for alerting me to the squash and merge button.\n\nThe failed test noted on this GitHub page was a compilation error unrelated to this change.\n\nI have also learned that the variable-sized arrays you originally used cause a warning with appropriate clang options, that it is a C99 feature.  I am not acquainted with C99, but it is not standard C++, though it seems some compilers incorporate some of its features as nonstandard extensions, which is why the construct might never have been a problem in your experience.  But for portability I would rather avoid it.\n =||= "], ["166", "Fix references to sourceforge.net", "Richard Ash", "richardash1981", "09/21/16, 09:08:10 AM", "Fix a bunch of old references I have come across before next release.", "Merged into master.  Thanks.\n =||= "], ["167", "mMessage Fix", "Mark Young", "tip2tail", "09/19/16, 01:16:03 PM", "Assign mMessage to the first column wxStaticText control to allow non-TimerRecord usages to work correctly.", "I tested Normalize on an hour-long track.  No crash.  I'm satisfied too.\n =||= "], ["168", "Fix Bug 1402, \"and\" is now only added if required", "Mark Young", "tip2tail", "09/23/16, 12:51:59 PM", "Resolved issue in TimerRecord Disk Space Warning message where \"and\" was included in a sentance despite not being required.", "NaN"], ["169", "Bug 1402", "Mark Young", "tip2tail", "10/02/16, 10:16:10 PM", "Rewrite logic for the display of hours and minutes in status bar and dialog and ensure we use one routine for this.", "_(\"%d %s and %d %s.\") must have a translation hint.  A translator will not have a clue what is being translated otherwise.\n =||= Hi James,\n\nJust to clarify you mean have a comment above this line indicating an\nexample of the English text here?\n\nThanks,\nMark\n\nOn 30 September 2016 at 12:52, James Crook notifications@github.com wrote:\n\n> _(\"%d %s and %d %s.\") must have a translation hint. A translator will not\n> have a clue what is being translated otherwise.\n> \n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/audacity/audacity/pull/169#issuecomment-250725928,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/ABo9yhrdq_grS6KAJ3yfQAHQO3gDA3Skks5qvPf4gaJpZM4KIh7T\n> .\n =||= Hi Mark,\n\nI believe you should format the hint such as in this example so it will show up in poedit and other tools:\n\n/\\* i18n-hint: A time in hours and minutes. Only translate the \"and\". */\n =||= Merged into audacity:master,\n =||= "], ["170", "Add support for importing/exporting SubRip subtitles", "Micha\u0142 K\u0119pie\u0144", "kempniu", "11/09/19, 04:48:24 PM", "As I find Audacity to be a fantastic tool for synchronising text subtitles and there is [apparent community interest](http://wiki.audacityteam.org/wiki/Movie_subtitles_%28*.SRT%29) in adding support for the most common [SubRip format](https://en.wikipedia.org/wiki/SubRip#SubRip_text_file_format), I thought I will give it a shot.\n\nThis pull request enables Audacity to both import SubRip subtitles as labels and export labels as SubRip subtitles.\n\nThe gotchas I am aware of:\n- My way of integrating SubRip code with current label code is pretty heavy-handed, i.e. extending this code with further input/output formats will not be pleasant.  On the other hand, it is not as if there are a dozen of these waiting to be implemented.  If you would like to see this done differently, any pointers will be welcome.\n- I had to introduce a variable called `sindex` and pass it to `LabelTrack::Export()` so that a valid SubRip subtitle is produced when multiple label tracks are present in a project.  Audacity's own label format does not treat this case specially because labels are not assigned sequence numbers of any kind, just start and stop times.\n- The output format used for label export is determined by the extension of the target filename, not the filter index picked by the user in the file selection dialog.  This can be misleading, e.g. the user might choose to export labels as SubRip subtitles but then supply a filename ending with _.txt_, which will result in exporting labels in Audacity's own format.  Let me know if you would like this corrected as it would require reworking label export actions so that they use something more sophisticated than `FileSelector`, which only returns a filename.\n- While it is technically possible for labels to be multi-line, it looks awkward and Audacity is not currently suited for comfortable editing of such subtitles, so I settled for `|` being a line separator for multi-line subtitles.  This should not cause a lot of trouble as `|` serves as a line separator in other subtitle formats, e.g. MicroDVD (in which case I am pretty sure it is not even escapable).\n\nFinally, my C++ skills are lacking, so if you see something fishy, your gut is probably right.", "Sorry, this has sat in the queue too long and is now being closed as we couldn't decide on progressing it. =||= "], ["171", "Update Catalan translation", "Robert Antoni Buj Gelonch", "rbuj", "11/20/16, 09:09:21 PM", "NaN", "Applied in this commit:\nhttps://github.com/audacity/audacity/commit/da49dddb0c8473497c4482f60502925627c9b7d4\n =||= "], ["172", "Generate an AppImage for each build", null, "probonopd", "05/14/17, 10:05:19 AM", "This PR, when merged, will generate and upload an [AppImage](http://appimage.org/) of each commit. It does so by bundling Audacity and its core dependencies which cannot be expected to be part of each target system (Linux distribution) inside the AppImage.\r\n\r\nThe URL of the AppImage can be found in the Travis CI build log, it is beginning with `http://bintray...`. Of course you can change this to use the GitHub Releases mechanism for hosting the binaries instead.", "The resulting AppImage from df3c21d can be downloaded from\nhttps://transfer.sh/Tdm8O/audacity-travis1993-glibc2.15-x86-64.appimage\nas indicated in the [Travis CI build log](https://travis-ci.org/audacity/audacity/builds/175318699#L6577).\n =||= Would appreciate review, feedback, discussion. Even if you end up deciding not to use it in the end :-) =||= No one in team has volunteered to maintain this going forward, and it would be another deliverable we would need to create/test on each release.  Plus it pulls in binary code that we do not have full visibility of. \r\n For now we are staying with our current methods for distributing on linux. =||= @JamesCrook it pulls in binary code but only for the sake of speeding up the packaging process, and all is coming from traceable GitHub repository that contain the full source code.\r\n\r\nWhich \"current methods for distributing on linux\" are as easy for everyone as download one file, make it executable, and run? =||= No one in team has volunteered to maintain this going forward, and it would be another deliverable we would need to create/test on each release. Plus it pulls in binary code that we do not have full visibility of.\r\nFor now we are staying with our current methods for distributing on linux. =||= Isn't it a shame that if I was running a proprietary OS rather than Ubuntu LTS, I could be downloading and running Audacity 2.2.0 right now, whereas with Linux I am lost?\r\n\r\n![downloads](https://user-images.githubusercontent.com/2480569/32697153-771f0966-c78a-11e7-94a6-1c57db4e37c1.png)\r\n =||= > No one in team has volunteered to maintain this going forward, and it would be another deliverable we would need to create/test on each release.\r\n\r\nMaking the AppImage will simply involve bundling up the builds that you are already doing right now on Travis CI, and I am volunteering to help with any AppImage issues that might arise.\r\n\r\n> Plus it pulls in binary code that we do not have full visibility of.\r\n\r\nAppImageKit is 100% open source under the MIT License. \r\n\r\n> For now we are staying with our current methods for distributing on linux.\r\n\r\nWhat would need to change to make you reconsider?\r\n\r\nFor one, the AppImage tools have greatly improved since my original request, so that a bash script is no longer needed to do the conversion to AppImage. The https://github.com/probonopd/linuxdeployqt\r\ntool can do it now.\r\n\r\nNew version here: https://github.com/probonopd/audacity/blob/patch-1/.travis.yml\r\n\r\nNew build can be downloaded here: https://github.com/probonopd/audacity/releases =||= I'd love to see binaries for Audacity for Linux as well. Big fan of this software, use it a few times a week. AppImage seems like the easiest way for you guys to provide those binaries. I mean, seriously, how many lines of code is the AppImage build compared to the NSIS(?) installer?\r\n\r\nAnd whenever you would have trouble with the AppImage builds, you're free to join #AppImage on Freenode, there's a lot of people who can help you out. =||= Simon, thanks for taking this to the devel list.  That is moving it along faster.  At least now the AppImage build is being reviewed by the people in Audacity who make sure things work well on Linux.  Thanks also for your flexibility in being willing to maintain and host this yourself.  We will never be testing on as many Linux variants as you do! =||= Hi, will audacity release in appimage in the future? that will be awesome!!!!! =||= +Lvaakz, probonopd is providing AppImages at https://github.com/probonopd/audacity/releases .  Audacity team already have our hands full providing and supporting Windows installer, Mac dmg and Linux-src for those three platforms, and as yet it does not make sense for us to officially provide AppImage, Snaps and Flatpak for linux ourselves. =||= Still haven\u2019t given up the hopes of an official AppImage... definitely happy to help :-) =||= There are hundreds of them! Which of all to choose? =||= I would like to see one official :-) =||= > There are hundreds of them! Which of all to choose?\r\n\r\nThe most recent one that offers the combination of features you need. If people think there are build combinations that make no sense, let me know. Ideally the Audacity team would just decide on one. =||= @JamesCrook you could include in the download page the links of audacity flatpak https://flathub.org/apps/details/org.audacityteam.Audacity of snap https://snapcraft.io/audacity and audacity appimage https://github.com/probonopd/audacity/releases , indicating that they are not maintained by the audacity team, as does krita with the flatpak package?\r\nIs there some problem with that? It would be easier for some users to see from the audacity page that there are such packages.\r\n =||= Any way, you are not bundling such packages, only indicating a link,  if any body want them. :) =||= Thanks @Lvaskz .  I've passed your comment on to the people who make decisions about Linux. =||= Hi, any progress about it? =||= Let me know if you want me to change anything. =||= any news on official audacity appimage, would really want to have one =||= > \r\n> \r\n> any news on official audacity appimage, would really want to have one\r\n\r\nI am hopeful that this will happen one day, personally speaking, the appimages are manageable and less irritating when executing them, the terminal is not needed, etc. Although for a linux user of several years, the terminal becomes indispensable. Anyway, appimages is a good option to download binaries and test them on linux. =||= Hi, it would be wonderful to see an official `Audacity.AppImage`. I use three opensource applications for video creation namely Audacity, Kdenlive and OBS Studio.\r\n\r\n- Kdenlive already provides AppImages: https://kdenlive.org/en/download/\r\n- OBS is in the process of adopting one: https://github.com/obsproject/obs-studio/pull/2868\r\n\r\nI would love to see Audacity move in this direction. It would help a lot of content creators on Linux to get started with Audacity hassle free!\r\n\r\nLinked https://github.com/audacity/audacity/issues/695 =||= Thanks @joe733 . I've passed your comment on to the people who make decisions about Linux. =||= I think with this  (https://github.com/appimagecrafters/appimage-builder )appimage builder , create an appimage will be more easier.\r\nTo consider too =||= "], ["173", "Update Ukrainian translation", "Yuri Chornoivan", "yurchor", "11/21/16, 03:54:11 PM", "The update was tested for validity with msgfmt -vc.\r\n\r\nThanks in advance for merging this PR.", "NaN"], ["174", "Update nl.po", "Jan van den Berg", "jan-vandenberg", "11/25/16, 05:44:10 PM", "Doorrekenen is a weird Dutch word in this context and also not consistent with the menu item below it: \"Mixen en naar nieuw spoor renderen\". So I propose to change \"doorrekenen\" to \"renderen\" to be more logical and consistent.", "Many thanks for the suggestion. Thomas De Rocker has agreed to make this change when he submits his completed translation, so we can close this pull request.  =||= "], ["175", "Fix truncated decode of mp3 files on import", "Chris Cannam", "cannam", "02/24/17, 02:05:24 PM", "The MAD decoder will not decode the final frame in an mp3 stream unless\r\nit has a small amount of padding afterwards (MAD_BUFFER_GUARD bytes,\r\nactually 8). Without this, it loses sync before returning any decoded\r\ndata from the final frame. The result is that the imported audio is\r\ntruncated by up to 1152 samples.\r\n\r\nThis commit addresses that by using a final round of input callback\r\ncalls to provide the last MAD_BUFFER_GUARD bytes after the underlying\r\nfile has reached eof. The logic is based on madplay.", "You can find a test file at http://all-day-breakfast.com/m/ticks.mp3. It contains two short bursts of noise, one right at the start of the file and the other right at the end, separated by a couple of seconds of silence. If you open this in the Audacity master branch you will find that the second burst is missing; this commit fixes that.\r\n\r\nThe logic here is surprisingly fiddly, and would benefit from careful review.\r\n\r\n(I chanced on this after finding the same problem in my own use of the MAD library in Sonic Visualiser. I suspect that hardly anyone is using this library completely correctly, since everyone copies the minimad example code and that has this problem as well. The official madplay application handles this case and that's what the fix is based on.) =||= Thanks for this Chris.\r\n\r\nI can confirm that Audacity does have the problem that you  describe, and that your patch does allow Audacity to import the final frame, but it does not seem to be quite right yet. With your patched version I observe that the imported file is prepended with 1152 additional silent samples.\r\n\r\nAudacity  has just gone into freeze in preparation for releasing 2.1.3, so this can't be merged right now. If you can sort out the residual problem (the extra samples at the start) then I'd be keen to see this reviewed and committed when the freeze is ended. =||= Thanks for taking a look.\n\nThe effect you describe was already the case, this patch didn't\nintroduce that problem. I'm just concentrating on one bug at a time.\n\nI discuss both problems here:\nhttps://thebreakfastpost.com/2016/11/26/mp3-decoding-with-the-mad-library-weve-all-been-doing-it-wrong/\n\nThis PR is only for the more serious of the two bugs. I may prepare a\npatch for the other as well at some point, but I'm focusing on this one\nfirst and I'm not going to incorporate both into a single PR.\n\n\nOn Sun, 27 Nov 2016, at 12:20, Steve Daulton wrote:\n> Thanks for this Chris.\n> \n> I can confirm that Audacity does have the problem that you  describe, and\n> that your patch does allow Audacity to import the final frame, but it\n> does not seem to be quite right yet. With your patched version I observe\n> that the imported file is prepended with 1152 additional silent samples.\n> \n> Audacity  has just gone into freeze in preparation for releasing 2.1.3,\n> so this can't be merged right now. If you can sort out the residual\n> problem (the extra samples at the start) then I'd be keen to see this\n> reviewed and committed when the freeze is ended.\n> \n> -- \n> You are receiving this because you authored the thread.\n> Reply to this email directly or view it on GitHub:\n> https://github.com/audacity/audacity/pull/175#issuecomment-263119250\n =||= Thanks for the additional detail. Yes I see what you're saying about the leading samples. I'll forward your link to the developer's mailing list and log both of these issues on our bug-tracker.\r\nI'd be happy to assign these bugs to you if you'd care to join us on the developer's mailing list (https://lists.sourceforge.net/lists/listinfo/audacity-devel).\r\nAs I wrote previously, we're in freeze so we can't merge this right now, but please do come and say hello on-list (the GitHub comments are not heavily monitored - the primary communication channel for the Audacity developers is the mailing list).\r\nThanks again for your contribution (and by the way, I'm a big fan of Sonic Visualiser :-) =||= "], ["176", "Updated Hungarian translation", "Bal\u00e1zs \u00dar", "urbalazs", "11/28/16, 10:37:37 AM", "NaN", "NaN"], ["177", "Add menu items to toggle midi channels; fix EXPERIMENTAL_MIDI_OUT", "Pokechu22", "Pokechu22", "02/10/17, 06:03:34 PM", "Right now, while it _is_ possible to toggle midi channels, the process involves randomly clicking within the midi track panel as the positions you need to click to toggle each channel are unlabeled and there's no indication of what channels are enabled or not.\r\n\r\nThis PR removes the old toggle system and adds menu items to toggle individual channels, along with an item to show all channels and an item to hide all channels.\r\n\r\nI'm not too familiar with the audacity codebase (or C++ in general), so if I've done something wrong (either stylistically or functionally), let me know and I'll try to correct it.", "I just realized that the \"random click positions\" I was referring to actually _do_ make sense, but only when `EXPERIMENTAL_MIDI_OUT` is enabled.  I still find the option of toggling them channels without midi output useful, but I probably shouldn't remove support for those buttons (they should probably be put in an `#ifdef` instead). =||= I'm closing this PR because I feel like it's not implemented as well as it should be; I'm going to make a second PR like this one except done better. =||= "], ["178", "Fix bug 1575", "Steve Daulton", "SteveDaulton", "01/16/17, 05:52:00 PM", "Includes fix by PRL:\r\nhttps://github.com/Paul-Licameli/audacity/commit/cbca44e", "NaN"], ["179", "Minor translations in French", "Cl\u00e9ment Trassoudaine", "intv0id", "02/21/17, 11:52:16 PM", "NaN", "Will be in Audacity 2.1.3 =||= Thanks trebmuh.  I've made that change, but adding to a closed github pull request is likely not to be noticed usually.  Please use the audacity-translators email list in future.\r\n\r\nNote that the English does not distinguish between shortcuts in &Cut and &Copy.  =||= "], ["180", "Add missing template instantiation", "Darrell Walisser", "walisser", "02/07/17, 07:50:43 PM", "This is needed on Linux GCC 5.4 to fix a link error.", "Looks harmless to me.  James?\r\n =||= "], ["181", "Fixed a few typos on pt_BR translation file", "Lucas Teixeira", "lucaspontoexe", "02/21/17, 11:52:17 PM", "Also, I have added some missing translations.", "Will be in Audacity 2.1.3 =||= "], ["182", "Update Ukrainian translation", "Yuri Chornoivan", "yurchor", "02/21/17, 11:52:17 PM", "Tested for validity with msgfmt -vc\r\n\r\nThanks in advance for merging this PR.", "Will be in Audacity 2.1.3 =||= "], ["183", "Make this word to be a noun in Spanish, not a verb", "Francisco Vila", "pacovila", "02/22/17, 08:10:44 PM", "Make Silence to be a noun in Spanish as in Generate->Silence, not a verb", "Thanks. It is probably a good change but our policy is to use the audacity-translation mailing list \r\n\r\nhttps://lists.sourceforge.net/lists/listinfo/audacity-translation \r\n\r\nfor translation changes. Please follow that link to subscribe to the list. \r\n\r\nSo I'm closing this.  =||= Thank you but there it says very clearly it's for \"any decent sized pull requests\" or \"anything that is more than a couple of lines\". My patch changes a single word (or rather a fraction of one). I suggest to change those wordings so that people collaborating tiny changes like mine don't get confused for both following a policy and not following it at the same time. =||= Hello, our policy is for translations to be handled on the -translation list  http://wiki.audacityteam.org/wiki/GitHub_Pull_Requests#Milestones .\r\n =||= Now that 2.1.3 is released I committed this https://github.com/audacity/audacity/commit/64a6fa6 in order to get it done. Looking forwards perhaps to seeing you on the -translation list at some future time.    =||= "], ["184", "configure: add check for gcc 4.9.0 up-front", "Darrell Walisser", "walisser", "02/24/17, 09:55:34 PM", "Also sets -std=gnu++11 per wxWidgets requirement\r\nCloses bug #1506", "Thanks Darrell. =||= "], ["185", "Bug 1401 - Wait for window visibility before starting timer", "Darrell Walisser", "walisser", "02/25/17, 11:07:08 PM", "\r\nhttp://bugzilla.audacityteam.org/show_bug.cgi?id=1401\r", "NaN"], ["186", "make zoomed in view show evenly-spaced samples", "Brian Armstrong", "brian-armstrong", "07/16/17, 05:38:30 PM", "Hi,\r\n\r\nI love Audacity. Awesome stuff \ud83d\udc4d \r\n\r\nI have been using Audacity to debug my modem library. I was thinking how much I'd love to be able to inspect individual samples as a stem plot, so I took a whack at implementing it.\r\n\r\nYou'd probably want these changes behind some user preference toggle. I'm more than happy to make those changes, *if* you do think this would be something you'd want.\r\n\r\nHere's a screenshot of what it looks like http://i.imgur.com/Dqe2ds5.png\r\n\r\nI've had to change the zoom behavior a little. This looks weird when the horizontal spacing between samples varies, so this locks the zoom in to be a multiple of the project sample rate.\r\n\r\nCheers!", "Related discussion on Audacity forum: http://forum.audacityteam.org/viewtopic.php?f=28&t=94931\r\nAs previously discussed, I like the general idea of having \"stem plots\" as an option, but restricting zoom levels to integer multiples of pixels per sample, looks broken. Until audio tracks have sub-pixel rendering (or similar), rounding sample positions to pixels is the lesser evil imo. Please feel free to come and discus this on the developer's mailing list (see: http://www.audacityteam.org/community/developers/) =||= Love the idea, and I agree with Steve's point that we need sub-pixel resolution for the vertical lines.  That shouldn't slow plotting noticeably, because we are drawing fewer lines than in a zoomed out view.  May be able to use http://docs.wxwidgets.org/3.1.0/classwx_graphics_context.html for it.  I also have fast code for sub pixel resolution based on antigrain library.\r\n\r\nThe code here is proof of concept, so we will close this one shortly unless it is progressed as described by Steve. =||= Sounds good \ud83d\udc4d \r\n\r\nCan you help me with what specifically this would need to land? Is it just a matter of enabling Anti-aliasing in WxWidgets? =||= Hm, I don't think it's antialiasing I want. I tried turning it on and the lines get significantly blurrier. =||= The stem plot reminds me of another option for depicting the wave at high\nzoom levels that I thought I might try to implement some rainy day.\n\nThat is, to interpolate between samples, not with a piecewise linear curve,\nbut rather to compute the weighted sum of sinc functions.  I understand\nthat shows the unique band-limited continuous function that fits the given\nsamples, and is the curve on which new samples will fall if you do a\nhigh-quality resampling to a higher rate.\n\nIt's one of those interesting mostly math-y projects that wouldn't upset\nlarge amounts of code.\n\nPRL\n\n\nOn Sun, Apr 9, 2017 at 6:43 PM, Brian Armstrong <notifications@github.com>\nwrote:\n\n> Hm, I don't think it's antialiasing I want. I tried turning it on and the\n> lines get significantly blurrier.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/186#issuecomment-292818931>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ALITYWcVI3x7ImGpsqOkFlwCLb6k4vQHks5ruV8NgaJpZM4MWi4Y>\n> .\n>\n =||= @Paul-Licameli Although it's true that you could represent the signal in multiple ways, I believe the one I have provided is considered to be canonical within DSP.\r\n\r\nFor example, the following two pages appear in Richard Lyon's Understanding Digital Signal Processing\r\nhttp://i.imgur.com/Y1JMH5g.jpg\r\nhttp://i.imgur.com/T0GVbRB.jpg\r\n\r\nOn the second page, it explicitly says \"Do not be tempted to draw lines between the dots in Figure 1-1(b). For some reason, people ... want to connect the dots with straight lines, or the stairstep lines shown in Figure 1-1(c). Don't fall into this innocent-looking trap.\"\r\n\r\nOr to use another example, we can look at some arbitrarily-chosen plots from Proakis and Manolakis's Digital Signal Processing\r\nhttp://i.imgur.com/KR8qA9r.jpg\r\nhttp://i.imgur.com/7kSKGXp.jpg\r\n\r\nIt seems all of the plots in this book are rendered this way when they contain discrete-time signals. And as far as I know, this stem method is also commonly chosen for DSP plots generated by MATLAB.\r\n\r\nI think given the abundance of this particular plot, it would be handy to be able to render this way in Audacity as well, at least as an option :) After all, what is 44.1kHz audio if not discrete samples? =||= Can you share a screenshot of the 'blurrier' lines?  When anti-aliasing works well the lines ARE blurrier, and the overall effect (from screen distance) is better.  Have a look at the ruler lines in the 'zoomable ruler' section of http://wiki.audacityteam.org/wiki/Proposal_TrackPanel_Evolution . Have a look up close, and then from normal distance.  Those ruler lines are drawn with anti-aliasing in order to be able to draw them at any spacing.  They look evenly spaced and of even width.   =||= @JamesCrook Ok, I've pushed an update with AA turned on. Your explanation makes sense, thanks!\r\n\r\nHere's a preview\r\nhttp://i.imgur.com/SKPAwF7.png\r\nhttp://i.imgur.com/w8lCH6V.png =||= Unfortunately I'm getting a segmentation fault when zooming in.\r\nTested with debug build on Linux.\r\nI've not yet had chance to investigate further but will post on devel@ when I have. =||= @SteveDaulton I'm guessing that wxGraphicsContext is not always available. I pushed a change that should skip setting AA if it isn't. =||= I'd just quickly tested with pretty much the same:\r\nif (dc.GetGraphicsContext()) {\r\nand that works. =||= @SteveDaulton Ok, that makes sense. I'm not so familiar with wxWidgets. Just from what I can tell from some googling, it seems that AA won't be an option for OSes without a GraphicsContext then.\r\n\r\nIf that's a blocker, that may require a fairly substantial amount of work unless @JamesCrook's antigrain code can be used here? =||= I've started a thread to discus this on devel@ mailing list.\r\nhttps://sourceforge.net/p/audacity/mailman/message/35797568/\r\nPlease join the discussion by registering on the mailing list: https://lists.sourceforge.net/lists/listinfo/audacity-devel =||= Stem plots are in now, and may not always have even spacing, but that is OK.  So I am closing this pull request, which had some work on even spacing too. =||= Thank you all for helping to land this one, and for the thoughtful discussion. I'm really excited that this made it \ud83d\udc4d  =||= Brian, thank you for this contribution.  We wish to credit your contribution in the About Audacity... dialog of the next version, if you have no objections.\r\n =||= "], ["187", "Cross-compile Support: libnyquist", "Darrell Walisser", "walisser", "03/31/17, 05:02:46 PM", "Cherry-picking commits under lib-src/libnyquist from #161 per Paul's suggestion.", "NaN"], ["188", "Update Catalan translation", "Robert Antoni Buj Gelonch", "rbuj", "03/21/17, 03:12:08 AM", "NaN", "Thanks, but please read https://github.com/audacity/audacity/wiki:\r\n\r\n> Translation changes must be submitted by subscribing to the [audacity-translation] (https://lists.sourceforge.net/lists/listinfo/audacity-translation) list, even if only changing one or two words. =||= How often is updated https://sourceforge.net/p/audacity/mailman/audacity-translation/? I've sent an email one hour ago which is not shown. =||= @rbuj  Thank you for subscribing to the -translation list. I don't know why the SourceForge archive of the list is oudated, but we have received your message to the list:\r\nhttp://audacity.238276.n2.nabble.com/Update-Catalan-translation-for-Audacity-td7578860.html  so it will be dealt with in due course.   \r\n =||= Thanks for the clarification @windinthew and I apologize for the inconvenience. =||= "], ["189", "Fix Italian translation typos", "Lorenzo Pini", "Gnafu", "03/23/17, 08:54:16 AM", "NaN", "Thanks.  Merged into github.\r\nI'd encourage you to subscribe to audacity-translation@lists.sourceforge.net and post updates to the .po (and questions about translation) there, =||= "], ["190", "Update Ukrainian translation", "Yuri Chornoivan", "yurchor", "03/23/17, 08:54:42 AM", "Tested with msgfmt -vc for validity.\r\n\r\nThanks for merging this PR.", "Thanks.  Merged into github.\r\nI'd encourage you to subscribe to audacity-translation@lists.sourceforge.net and post updates to the .po (and questions about translation) there, =||= "], ["191", "Speccache for reassignment and performance improvements", "Darrell Walisser", "walisser", "04/10/17, 08:00:46 AM", "There is a comment in the code that reassignment spectrum could not work with speccache partial updates. However, I could not see a reason why not after reading the code, and so now it works and produces the same results as before. This is a big win when scrolling the reassignment spectrum.\r\n\r\nIn addition, the Resize() method reduces allocation and zero filling of buffers. Zero fill is only needed for reassignment case, and std::vector::resize() can efficiently resize without copying. This has a fairly big impact as the OpenMP case allows practical usage of much larger buffers.\r\n\r\nI've also stripped the profiling code, it isn't very useful anymore.\r", "I don't approve. =||= I had a reason for doing what I did for reassignment.  I believe the caching may give some different results from recomputation at extreme zoom levels and large window sizes.  Though I have not tested this. =||= OK.  I reverted the commit in head. =||= I will give this a more detailed review.  There may be parts I agree with.\r\n =||= Paul, I did a test with high frequency pluck (Midi note 120) and window 32k, I see gaps in the spectrum when scrolling. So I can confirm as-is the patch doesn't work for reassignment. My hypothesis is the number of lookahead/lookbehind windows (set to a maximum of 100) is insufficient. If so, do you think this logic could change to remedy the issue?\r\n\r\nPlease consider the other parts, they are worthwhile even though sadly the reassignment cache isn't perfect.\r\n\r\n =||= Darrell, I am catching up with a review of this.\r\n\r\n1) SpecCache::Resize has an error, assigning start_ to itself rather than to start.\r\n2) As already said, it is not yet acceptable to skip the reinitialization of cache in case of reassignment.  I don't yet know what is the smarter thing to do in case of large window sizes and high magnification.\r\n3) In WaveClip::GetSpectrogram, in the new block governed by   if (settings.algorithm == SpectrogramSettings::algReassignment), is it correct to assume that the un-copied part of the cache that needs zeroing is contiguous, at either the start or the end?  And not in two pieces?  Add the assertion\r\n      wxASSERT(\r\n         (copyBegin >= 0 && copyEnd == numPixels) ||\r\n         (copyBegin == 0 && copyEnd <= numPixels)\r\n      );\r\nAnd prove informally in comments that this assertion is correct.\r\n4) I think the whole point of this commit was to make horizontal scrolling faster.  So you remove the lines\r\n  std::unique_ptr<SpecCache> oldCache(std::move(mSpecCache));\r\n... and ...\r\n  if (!(copyEnd > copyBegin))\r\n      oldCache.reset(0);\r\nBut now each WaveClip's cache is reallocated to larger sizes as needed, but never shrinks.\r\n\r\nCan you write a more conservative fix that skips the deleting of the old cache, only in case the spectrogram window size has not been reduced -- but otherwise, reallocates as before?\r\n\r\nPRL\r\n =||= Another minor point is that we prefer three spaces of indentation, not four.\r\n\r\nPRL\r\n =||= Thanks, Paul. 3 spaces is the only 'law' we've ever enforced! -- V\n\nOn Tue, May 2, 2017 at 4:52 PM, Paul Licameli <notifications@github.com>\nwrote:\n\n> Another minor point is that we prefer three spaces of indentation, not\n> four.\n>\n> PRL\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/191#issuecomment-298793049>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ACIgbyz_TVDtsPEA9SmEK213WAvljt2vks5r18HYgaJpZM4MlfLK>\n> .\n>\n =||= "], ["192", "Windows compile", "Mark Young", "tip2tail", "03/30/17, 01:12:55 AM", "NaN", "Thanks, Mark. Actually we usually bump the version number to the current release after the release has been made, so 2.1.3 as now. When we gave the current version being developed, people compiling the current release complained.    \r\n\r\nPerhaps we should say now \"This document is for Audacity release 2.1.3 and for 2.2.0-alpha\". Mostly, compile.txt would be correct for previous release and the following alpha at any given time.    \r\n =||= Hi Gale,\n\nSorry - I misunderstood and thought we'd missed it on 2.1.3 release.  Do\nyou want me to change it to what you mentioned above?  Or do you want to\nmake the change?\n\nThanks,\n\nMark\n\nOn 24 March 2017 at 18:58, Gale Andrews <notifications@github.com> wrote:\n\n> Thanks, Mark. Actually we usually bump the version number to the current\n> release after the release has been made, so 2.1.3 as now. When we gave the\n> current version being developed, people compiling the current release\n> complained.\n>\n> Perhaps we should say now \"This document is for Audacity release 2.1.3 and\n> for 2.2.0-alpha\". Mostly, compile.txt would be correct for previous release\n> and the following alpha at any given time.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/192#issuecomment-289115056>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABo9yp61yQr7WUJ3KVIyP8I0lY3eXkG4ks5rpBJggaJpZM4MoZFo>\n> .\n>\n =||= We had missed it for 2.1.3 release and it is certainly wrong now.  Bumping the version \r\nnumber in win/compile.txt should be done when setting IS_ALPHA back to 1 and \r\nupdating the version numbers in src/Audacity.h. OTOH we don't mention Audacity\r\nversion at all in mac/Build.txt. Perhaps we should.\r\n\r\nI'd say don't trouble to recommit. Whoever commits this to MASTER can decide.\r\nI do think you should move your extra line in .gitignore under # Windows specific\r\nbut I assume whoever commits this will do that. Do you know if VS2015 adds the\r\nsame hidden folder to /win?  \r\n =||= To get this out the way I committed a slightly modified version at https://github.com/audacity/audacity/commit/930e834 , with the ignore moved into Windows-specific files and compile.txt saying it is for 2.1.3 but also works (currently)  with 2.2.0-alpha. Thanks.    =||= "], ["193", "Fix clang build", "Darrell Walisser", "walisser", "04/09/17, 09:31:32 PM", "Sample configuration:\r\n\r\n```bash\r\nCC=clang-4.0 CXX=clang++-4.0 ./configure\r\n```", "NaN"], ["194", "Speccache Improvements, Take 2", "Darrell Walisser", "walisser", "05/31/17, 01:11:48 AM", "Rebase and resolve #191 stuff.", "Rebased, sqaushed to one commit, and pushed.  Thank you, Darrell.\r\n =||= "], ["195", "Resolved Bug 1523 from Bugzilla", null, "BunelBerkane", "05/14/17, 09:58:39 AM", "Hello,\r\n\r\nThis change resolves Bug 1523 described here: http://bugzilla.audacityteam.org/show_bug.cgi?id=1523\r\nThe modification prevents Preferences from being changed if \"Language\" was set to \"System\" and unchanged.", "Thanks.  Committed.\r\nhttps://github.com/audacity/audacity/commit/4c3455c2c7beb16d370549ffb226eaf56268437c =||= "], ["196", "Add custom DTMF plugin", null, "aliask", "05/16/17, 09:18:34 AM", "A new plugin I created, based on the original DTMF generator which can generate arbitrary DTMF tones rather than limited to the telephone keypad type only.\r\n\r\nUseful for generating [other](https://en.wikipedia.org/wiki/Special_information_tones) telephony DTMF tones, and [SELCAL tones ](https://en.wikipedia.org/wiki/Selective_calling)for radio communication.", "Thank you for your proposal. Please discus this with us on the forum: https://forum.audacityteam.org/viewforum.php?f=42\r\n\r\nSteve =||= "], ["197", "Properly handle supplementary characters when saving XML files", null, "Yarn366", "11/06/17, 09:23:48 PM", "This fixes the problem experienced by a number of users, including [this one](http://forum.audacityteam.org/viewtopic.php?f=46&t=95866), where supplementary characters (which includes many emoji) are written as pairs of escaped surrogate code points.\r\n\r\n Note that the problem only affects platforms like Windows where `wchar_t` is 2 bytes.", "Thanks for this proposal.\r\nI am not familiar with details of character sets, but I understand that on Windows, the loss of\r\ninformation happens on Windows only at the line\r\nwxUChar c = s.GetChar(i);\r\n\r\nWould it not be simpler to change the type of c to something sure to be 32 bits wide on all platforms?  Could it be the char32_t type, which is standard since C++11?\r\n\r\nhttp://en.cppreference.com/w/cpp/language/types\r\n =||= The problem appears to be much deeper than I originally thought.\r\n\r\nIf you look up the return type of `s.GetChar(i);`, you'll notice that it returns not `wxUChar` but `wxUniChar`. From what I gather from the [documentation](http://docs.wxwidgets.org/3.0.2/classwx_uni_char.html) and personal testing, `wxUniChar` is always 4 bytes, not the size of `wchar_t`. However, Audacity doesn't seem to use this type anywhere and instead always uses `wxChar` and its variants, which are typecasts of `wchar_t`, and thus can store characters differently depending on the platform. This results in wxString only storing character values that `wchar_t` can store, at least some of the time.\r\n\r\nIt looks like the real solution here is to change the entire source code over from `wxChar` and its variants to `wxUniChar`, which appears to be no small task, considering how often the former occurs.\r\n\r\nEDIT: Or maybe I'm completely wrong there. What's definitely true, though, is that if I switch just that one function to use a 32-bit character type, it would still be necessary to deal with surrogate pairs, and additionally it would be necessary to decode and encode them in that function, which isn't necessary with the code that I submitted.\r\n\r\nThe code also uses `wxL()` everywhere, whose use has, [according to the documentation](http://docs.wxwidgets.org/3.0.2/group__group__funcmacro__string.html#ga437ea6ba615b75dac8603e96ec864160), been discouraged since wxWidgets 2.9.0. I don't know how important it is to change this, but I do know that the cases of the switch statement in `XMLEsc` use `wlL()` and cause compiler errors if the type of `c` is simply changed to `wxUniChar`. Unfortunately, I'm not aware of an alternative. (And I actually have very little experience with wxWidgets, for that matter; I learned most of this only today.) EDIT: According to [this page](http://docs.wxwidgets.org/3.0.2/overview_changes_since28.html#overview_changes_unicode), `wxL()` not only is harmless but can simply be removed. =||= In case any developers see this, I posted this issue on audacity-devel (here: https://sourceforge.net/p/audacity/mailman/message/35931978/) almost two weeks ago; it has yet to get a response. =||= Thanks Yarn. This fix has now been committed. =||= "], ["198", "Accessible version of Audacity 2.1.1 (for Mac OSX)", "zhoupengxun", "pengxun523", "06/27/17, 02:02:49 PM", " I run Audacity source code on MAC, found compile error\uff1a\r\n  Showing Recent IssuesSRC/Audacity. H: 194:10: fatal error: 'wx/defs. h' file not found", "Hi.  I don't see the actual changed files you are proposing, so closing this pull request.  If you want to report a problem with compiling please do so on audacity-devel mailing list. =||= This may be the same error about wx/defs.h missing, that I fixed at 4fab7365e5b634d01fd761a9259cf4b62097b1ca\r\n =||= "], ["199", "Update appveyor.yml", "Henric Jungheim", "henricj", "07/16/17, 05:30:59 PM", "Fix the appveyor.yml project path and produce a basic build artifact.\r\nRevisionIdent.h is updated so the about dialog can show where the file came from.", "NaN"], ["200", "Rework locale VS project to use CustomBuildStep.", "Henric Jungheim", "henricj", "04/02/18, 07:51:40 PM", "The Clean, Build, and Build targets all work.\r\nWe use NuGet to provide gettext for msgfmt.\r\nThe wxWidgets \"gl_ES\", \"ko_KR\" and \"pt\" exceptions are handled automatically (by putting them in the right place to begin with).\r\n\r\nThe existing locale.vcxproj is far more complicated that it needs to be.  It first compiles the Audacity *.po files with a UI-enabled MSBuild task, then it compiles the wxWidgets *.po files with a dos batch file.  The UI does allow one to change the arguments passed to msgfmt, but relies on the PATH to provide the path to the executable.", "NaN"], ["201", "Added a few lines to OnNewLabelTrack which try to find the name of th\u2026", "Justin Halls", "jathalls", "01/18/18, 06:09:33 AM", "\u2026e currently selected track and use that as the name for the new label track.  If unsuccessful then the existing default of LabelTrack is used.When creating a new label track it is generally to make labels that apply to an existing track, and it therefore makes sense to default the name of the label track tobe the same as the name of the currently selected track.  If it needs changing it is no more difficult than changing the existing name of 'Label Track' which is unlikely ever to be helpful.\r", "Too many problems, and too little activity on this pull request.  I'm closing it.\r\n =||= "], ["202", "Add danish translation", null, "scootergrisen", "07/07/17, 09:56:06 PM", "I would prefer these strings be added to the po files and then extracted from there to make a .desktop file.\r\nThat way translators will only have to think about one file.", "NaN"], ["203", "Make exported label tracks locale-independent", "Antonio Ospite", "ao2", "11/29/17, 04:30:49 PM", "Currently, when Audacity exports labels tracks numbers are formatted\r\nwith the \"%f\" specifier, which relies on the current user locale to pick\r\nup the decimal separator.\r\n\r\nThis means that the numbers indicating the start and the end of the\r\nlabeled interval could end up using a comma as a decimal separator.\r\n\r\nThis makes the exported file less portable, especially in the case of\r\nparsing the exported file with an external tool.\r\n\r\nAudacity is already able to _import_ labels tracks independently of the\r\nlocale because it uses Internat::CompatibleToDouble(), so do something\r\nsymmetric at _export_ time, using Internat::ToString() to make the\r\nexported data locale-independent (i.e. always using a dot as the decimal\r\nseparator).\r\n\r\nProposed in https://sourceforge.net/p/audacity/mailman/message/35534945/\r\n\r\nNOTE:\r\n\r\nWhen converting numbers to strings FLT_DIG is passed as the\r\ndigitsAfterDecimalPoint argument of Internat::ToString(), this is in\r\norder to preserve the look and the alignment of the previous \"%f\" format\r\nspecifier; without that Internat::ToString() would strip trailing zeros.\r\n\r\nAudacity requires C++11, this ensures that FLT_DIG is defined.", "I like the idea of exported labels being locale independent, but not yet had chance to test as we are currently preparing for the next release. Would like this to pull request be considered soon after the release. =||= Note that, as mentioned in the commit message, Audacity can already import the labels file regardless of what the decimal separator is, so this feature (assuming it's implemented correctly \ud83d\ude04) should not cause any compatibility problems, at least not with Audacity itself (external tools which parse the labels file could make different assumptions).\r\n\r\nThat said, it's entirely up to you when to merge it.\r\n\r\nKeep up the good work.\r\n\r\nCiao ciao,\r\n   Antonio =||= I rebased the branch on top of the latest master.\r\n\r\nI am going to write a message to audacity-devel to ask for comments.\r\n\r\nCiao,\r\n   Antonio =||= Steve said it's a good idea at Devel, and I tried it with Italian locale and confirmed that it works, exporting and importing.  Also that previously exported files with the comma also work.\r\n\r\nSo it seems harmless, and consistent with the emphasis in RC2 on improving translation matters.\r\n =||= \ud83d\udc4d  =||= Awesome, thanks. =||= "], ["204", "Fix compiling on Linux/GCC 4.9 with older distributions", "Darrell Walisser", "walisser", "10/14/18, 11:18:32 AM", "Fixes errors which can be worked around by passing CXXFLAGS=\"--std=gnu++11\" to ./configure. The errors seem limited to older GCC and/or wxwidgets (tested on Ubuntu 14.04, GCC 4.9, wxwidgets 3.0.2).\r\n\r\nThis change was already added to top-level ./configure where it only affects files under src/. It is not possible to cleanly apply the fix to sub-directories from there, so it must go into each subdir that requires it.\r", "Thanks.  I've pulled this into master now. =||= "], ["205", "Updated translation for Korean", null, "sheppaul", "08/18/17, 09:43:51 PM", "As the translation from transifex seems not properly reflected in the release version, I decided to try updating translation manually. This is the latest translation from transfiex. I'm not good at using github. So if there is something wrong here, please take a right action for me.\r\n\r\nThanks.", "This has been merged into Audacity.  Thanks! =||= "], ["206", "src/widget/OverlayPanel: PVS-Studio: fixes bug with remove function.", "Sviatoslav Razmyslov", "SvyatoslavRazmyslov", "10/11/17, 11:47:41 PM", "We have found and fixed a bug using PVS-Studio tool. PVS-Studio is a static code analyzer for C, C++ and C#: https://www.viva64.com/en/pvs-studio/\r\n\r\nAnalyzer warning: [V530](https://www.viva64.com/en/w/v530/) The return value of function 'remove' is required to be utilized. \r\n\r\nAll errors: [Code Defects in Music Software. Part 2. Audacity](https://www.viva64.com/en/b/0532/)", "Thank you, Svyatoslav!  This is merged now.\r\n\r\nShame on me, I should have known better.  That blunder was my own, and will now be a textbook example of yours.\r\n\r\nThe consequences were not serious though, because in fact the function was only ever called when the OverlayPanel object was soon to be destroyed along with the entire Audacity project window.\r\n\r\nI am reading the other things on the linked page with interest.\r\n\r\n\"To see the complete log, the project authors are welcome to email us for a temporary registration key so they can check the project themselves.\"\r\n\r\nI would like to take up that offer.\r\n\r\nPRL\r\n =||= @Paul-Licameli,\r\n\r\n> I would like to take up that offer.\r\n\r\nPlease, write to my the email, stated in a profile, on Monday (October, 16).  =||= "], ["207", "[WIP] Note track pitch bend display", "Pokechu22", "Pokechu22", "02/24/18, 03:01:33 AM", "This pull request adds support for displaying pitch bends in note tracks, and fixes a rendering issues with them as well.\r\n\r\n<dl>\r\n<dt>8a01491 &mdash; Stop rounding in NoteTrack::PitchToY</dt>\r\n<dd>Initial setup that was needed to implement pitch bends.</dd>\r\n<dt>d09530d &mdash; Remove unused (and unimplemented) TrackArtist::GetBottom</dt>\r\n<dd>Removes some old method signatures that were unused.</dd>\r\n<dt>da4c6a3 &mdash; Get rid of redundant horizontal note clipping</dt>\r\n<dd>The first commit that has actual rendering changes.  Basically note rects were shortened so that they wouldn't go outside of the track area, but this meant that there would also be vertical lines on the edge that make it look as if the note ends there.  By getting rid of this shortening, the edge is gone, so it is clear that the note doesn't actually start/stop right at the edge of the track.\r\n\r\nI've got a sample image of the changes at Pokechu22/general-test-repo@9393dc4 (abusing GitHub's image diff tool for this).</dd>\r\n<dt>9f1db7b &mdash; Fix edges of the note track vruler not redrawing</dt>\r\n<dd>This fixes a small rendering issue with the note track vruler (the piano).  Basically, it originally wasn't redrawing the rightmost edge, which would occasionally get overwritten by the blue measure lines (more common when using pinned playback).  Then the horizontal lines between piano keys would draw over that, and to make things worse it'd move those lines if you resized the track, but not redraw the now blue area.  Check [this image](https://alphamanual.audacityteam.org/m/images/b/b2/TCP_and_VS_-_Note_Track.png) (from the manual) for an example.\r\n\r\nThe fix is to just always draw both of them black.</dd>\r\n<dt>67983b0 &mdash; Add support for displaying pitch bends</dt>\r\n<dd>The actual main event.  Pitch bends are now rendered correctly.\r\n\r\nBefore:\r\n\r\n![Image without pitch bend (BFD id $58)](https://user-images.githubusercontent.com/8334194/32139403-1e3a8a8a-bbfc-11e7-9460-2363403e4f13.PNG)\r\n\r\nAfter:\r\n\r\n![Image showing pitch bend successfully (BFD id $58)](https://user-images.githubusercontent.com/8334194/32139402-1df03b9c-bbfc-11e7-9822-5129d064b589.PNG)\r\n\r\n\r\nThe way this is done is by calculating, for each channel, the location all pitch bend changes, and the new value at that point.  Then for each note I get the current offset, and any changes in the middle of the note, drawing the starting line once and the end line only on the last segment.\r\n\r\nI also handle the pitch bend range RPN, so taller pitch bends are correctly handled.  I might not be handling it correctly in 100% of the cases though (there is the data increment controller, which I haven't implemented).  Here's a simple file I used to test this: [PitchBendRPN.zip](https://github.com/audacity/audacity/files/1424696/PitchBendRPN.zip).\r\n</dl>\r\n\r\nThis is a WIP as I'm not entirely happy with the quality of the code I've written.  I'm sure it could be written better with fancier C++ stuff, but I'm not completely experienced with C++ yet.  Also ideally I'd cache the pitch bend offsets, but doing that seems complicated (since I don't know when the backing sequence is changed).\r\n\r\n(Also, obviously this is intended for being merged after 2.2.0 is released)", "Closing this for now.  I don't see myself finishing this any time soon, and I'm not happy with it as-is.\r\n\r\nI do think it's a useful feature, albeit a very niche one (I've used it once or twice), but when I need it I can just use the branch as-is.  The implementation isn't ready for mainstream use. =||= "], ["208", "Fix Russian translation", null, "Vort", "11/20/17, 01:42:53 AM", "Typo fixes.\r\nIt is also needed to replace _some_ \"\u0432\u0441\u0435\" with \"\u0432\u0441\u0451\", but that is another task.\r\n\r\nDid not checked build, but it should be fine.", "NaN"], ["209", "Fix German translation for \"light\" theme", "Tobias Markus", "tobbi", "11/20/17, 01:40:00 AM", "Current translation is wrong (means light as in \"opposite of heavy\" instead of \"opposite of dark\").", "Thanks Tobias.  We'll make sure this fix gets in AND we'll update the internationalization hints that warn translators too. =||= Coincidentally, today I got a different update of de.po from J. Huffer, for the few new strings in 2.2.1.  I can make sure this is merged with that.\r\n\r\nIn fact \"Light\" used to be present also meaning \"not heavy\" in the Leveller effect, but that is obsolete.\r\n\r\nIt's because of this that internationalizations can also specify \"context\" with msgid, but we don't use that feature anywhere, yet, and I think wxWidgets gives the interface to this only beginning in 3.1.0.\r\n\r\n\r\n =||= @JamesCrook The l10n hint is perfectly fine and states \"Light meaning the opposite of dark\".  =||= This one-line correction is included in the latest de.po with other updates.\r\n =||= "], ["210", "PortMIDI build changes + use Pa_GetStreamTime instead of PaUtil_GetTime", "Pokechu22", "Pokechu22", "05/31/20, 05:40:16 PM", "These changes adjust building, fix a few compile errors when features are disabled, and most importantly, switches to `Pa_GetStreamTime` instead of `PaUtil_GetTime`.\r\n\r\n<dl>\r\n<dt>1d32b0306 &mdash; Fix PortMidi automake files and update PortMidi's m4</dt>\r\n<dd>Corrections of some typos and other mistakes needed to use includes correctly that I made earlier.</dd>\r\n<dt>ed5bc5b04 &mdash; Include headers via automake instead of via hardcoded paths</dt>\r\n<dd>Replaces e.g. <code>#include \"../lib-src/portmidi/pm_common/portmidi.h\"</code> with just <code>#include \"portmidi.h\"</code>, which is possible due to the above change.</dd>\r\n<dt>f5f29d886 &mdash; Manually regenerate windows and mac configs</dt>\r\n<dd>I manually updated the mac and windows configs to match the new template (which was generated in the first commit) - they were both missing <code>USE_PORTMIDI</code>.</dd>\r\n<dt>0495ed56d &mdash; Check for both <code>USE_MIDI</code> and <code>USE_PORTMIDI</code> for <code>EXPERIMENTAL_MIDI_OUT</code></dt>\r\n<dd>Allows compiling <code>--without-portmidi</code> without manually editing <code>Experimental.h</code>.</dd>\r\n<dt>0c51ba734 &mdash;  Fix more missing checks for USE_MIDI</dt>\r\n<dd>Adds more missing checks relating to USE_MIDI (those that were missed in #257 since they didn't break compilation).</dd>\r\n<dt>ab9429c8a &mdash; Remove unused mAudioCallbackClockTime</dt>\r\n<dd>Removes a now-unused field (and one use of <code>PaUtil_GetTime</code>).</dd>\r\n<dt>21e55934d &mdash; Completely replace <code>PaUtil_GetTime</code> with <code>Pa_GetStreamTime</code></dt>\r\n<dd>This change is probably the most important in terms of building.  It means that <code>PaUtil_GetTime</code> is no longer directly linked by audacity, which means that the <code>extern \"C\"</code> change in portaudio is no longer necessary (and thus system portaudio should be usable again!).</dd>\r\n<dd>The change basically just uses <code>Pa_GetStreamTime</code> with <code>mPortStreamV19</code> &ndash; but since that requires a non-null stream, some logic needs to be reordered to ensure that the stream isn't <code>NULL</code>.</dd>\r\n<dt>15f82ff &mdash; Check <code>USE_PORTMIDI</code> instead of <code>EXPERIMENTAL_MIDI_OUT</code> for MIDI device info</dt>\r\n<dd>Since <code>USE_PORTMIDI</code> now exists, it makes more sense to use that to govern the MIDI device info option &ndash; especially since the option reports the status of that experimental flag.</dd>\r\n</dl>", "Looks like I originally missed one case (MIDI import via drag-and-drop or File&rarr;Open).  Will squash.  **EDIT: Squashed.**\r\n\r\nA side effect of disabling MIDI import the way I did there is that the low quality FFMPEG MIDI (/mod) import applies.  Since this would only be when `USE_MIDI` is disabled (and thus there's no other way for it to import), that is fine, but it's worth noting. =||= Seems stable enough from my testing, could maybe use some more but I think it's safe to no longer mark it as WIP.\r\n\r\nAlso went in and made a few small changes - using `wxASSERT_MSG` instead of just `wxASSERT` (for context), and using `USE_PORTMIDI` for MIDI device info. =||= Rebased off of latest master.  The changes that were already made in #257 aren't included.\r\n\r\nI haven't yet completely tested this for all build combos, currently doing that (but it takes a while since one of them involves building on my pi).\r\n\r\nCases I'm testing:\r\n\r\n- [x] MSVC with both EXPERIMENTAL_MIDI_OUT and USE_MIDI\r\n- [x] MSVC with just USE_MIDI\r\n- [x] MSVC with none\r\n- [x] MSVC with just EXPERIMENTAL_MIDI_OUT (no USE_MIDI)\r\n- [x] Ubuntu bash on windows with no special args\r\n- [x] Ubuntu bash on windows with `--without-portmidi`\r\n- [x] Ubuntu bash on windows with `--without-midi` and `--without--portmidi`\r\n- [x] Ubuntu bash on windows with `--without-midi` but not without portmidi\r\n- [x] Raspberry Pi with all enabled (this takes several hours so I'm not going to test them all) =||= Ah, glad I'm doing this testing, seems like I did actually make a mistake here, with the midi device info commit.  I only updated the defines for the definitions of the methods, not the ones in the headers.  Should be fixed now, still running the rest of the tests.  **EDIT**: fixed that =||= Found another case where it was broken, `PlayableTrack::DoSetHeight(h);` in `NoteTrack::DoSetHeight` is incorrect when `EXPERIMENTAL_MIDI_OUT` is disabled as `NoteTrack` extends `AudioTrack` in that case, instead of `PlayableTrack`. =||= Took a while, but all of the build configurations I listed above have succeeded. =||= Thanks.  We've moved to CMake, so would now need different build changes for this. =||= Is there a reason nobody reviewed this in 2.5 years until it was closed because the project switched to a different build system before anybody reviewed or merged it? Why close it rather than ask the author to rebase and switch the branch to the new build system? =||= > Is there a reason nobody reviewed this in 2.5 years\r\n\r\nProbably because over the last 2.5 years there has been so many things that 'must' be done, and so few people to do them, that many things that 'should' be done don't get done. Hopefully that will improve in the future.\r\n =||= That's no excuse for not even acknowledging the existence of a pull request. You also haven't given any explanation for why this was closed rather than asking the author to update it for the new build system. The least you could do is leave a comment like \"Hi, thanks for working on this! We're really busy with X, Y, and Z right now, so it may be a while before we're able to review this. Feel free to ping us in a few weeks/months if we haven't reviewed it yet.\"\r\n\r\nThis pull request fixes a major issue of using a library's private API (#871) which is preventing Audacity from complying with Linux distributions' packaging policies.\r\n\r\nAs for the technical matters in this pull request, I am copying over a [comment](https://github.com/audacity/audacity/issues/840#issuecomment-838316089) from @rbdannenberg:\r\n> Pa_GetStreamTime and PaUtil_GetTime are different clocks running at (slightly) different rates. If you replaced one with the other, then you either created or fixed a problem.\r\n\r\nI leave it to the maintainers and @Pokechu22 to investigate whether this creates a problem. =||= "], ["211", "Update defaultTempDir path in AudacityApp.cpp", "Dani Llewellyn", "diddledani", "05/31/18, 04:40:00 PM", "- Add a check against the `TMPDIR` environment variable and use it when it is defined to set the `defaultTempDir`.\r\n\r\nThis is part of my attempt at getting audacity working in [snappy](https://snapcraft.io). There are still more issues to tackle, but this patch gets past the temporary folder restrictions imposed by confined snaps.", "NaN"], ["212", "Update pl.po translation for Audacity 2.2.1", "Grzegorz Pruchniakowski", "Gootector", "11/20/17, 01:41:25 AM", "Update pl.po translation for Audacity 2.2.1", "Updated Polish by our previous translators was taken instead from Transifex.\r\n =||= "], ["213", "Replace AC_CHECK_FILE to enable cross build", null, "newbluemoon", "11/09/17, 10:49:14 PM", "The `audacity_checklib_*.m4` macros use AC_CHECK_FILE to test a file\u2019s existence. I don\u2019t know if there is a reason to use this method, but it breaks `configure` when cross compiling for other linux platforms. So my proposal is to just change it into a simple if/else statement. I\u2019m not sure if some further messages should be added.", "Just curious, what are the \"other linux platforms\" that are broken?\r\n\r\nNote, the same changes in PR #161, among others for cross compiling: [ef728277](https://github.com/audacity/audacity/pull/161/commits/ef728277b6cb826b9d5070b4670905b9e54c7c54) =||= Sorry, apparently I didn\u2019t look thoroughly enough! Guess I can close this now then.\r\nRegarding \u201cother linux platforms\u201d: I\u2019m using Void linux and packages for arm architectures are cross compiled. I was just trying to make audacity work and thought that this patch could be useful for others, too. =||= "], ["214", "Fix building without libid3tag", "Deleted user", "ghost", "01/07/18, 05:43:44 PM", "NaN", "Thank you for the fix for this! It has been merged as part of #230 (added missing fix for MP2 export), so closing this one. =||= "], ["215", "Add Arabic translation for audacity.desktop.in.", "Hussam al-Homsi", "Sawuare", "11/21/17, 12:04:15 PM", "NaN", "Thank you again, Hussam.\r\n =||= "], ["216", "Update French translation", "Olivier Humbert", "trebmuh", "11/22/17, 09:32:30 AM", "Update the French translation.\r\n\r\nI was on my way to update it to 100% but I noticed a reference to transifex. Since I'm not on transifex and I'm reluctant to be so and, before continuing to update the translation further, I'd like someone with commit access to the audacity git repo to confirm that it's OK for me to send a pull request with the full French GUI translation here on github.\r\n\r\nPlease advise. Thanks.", "Thanks Olivier!  Yes we can and will take it from GitHub.  Or from a .po file posted to the translators list.  Paul is coordinating the 2.2.1 release and managing deadlines for a .po to get into that release. =||= Awesome. I'll update the French translation and will update this pull request on the coming days. I'll ping you then.\r\n =||= Great thanks, Olivier!\r\n\r\nBut I still see in your file:\r\n\r\nPOT-Creation-Date: 2017-07-22 11:50+0100\\n\r\n\r\nThis tells me you did not start with the most up-to-date version of audacity.pot.\r\n\r\nPlease do so to complete the work.\r\n\r\nPlease subscribe, if you have not yet, to this mailing list:\r\n\r\nhttps://sourceforge.net/p/audacity/mailman/audacity-translation/\r\n\r\nPRL\r\n =||= @Paul-Licameli :\r\nI've subscribed to the mailing list you mentioned above and I've sent a message to check if my subscription was correct.\r\n\r\nAbout the fr.po, I didn't started from a fresh POT file since there is already a fr.po in the repo. So I started from the current fr.po where I can see a bunch of non-translated file. Shouldn't I do so ?\r\n =||= Olivier,\r\n\r\nI did see your email to the translation list.\r\n\r\nI suggest you talk to other translators there, who know the editing tools for .po files better than I do.  But I know this much:\r\n\r\nThere are command-line tools:\r\n\r\nmsgcmp fr.po audacity.pot\r\n\r\nlists error messages when the .po is incomplete.  There is also msgmerge that updates a .po to a .pot, marking some strings obsolete and putting new blank msgids in place.  Details in this long page:  \r\n\r\nhttps://www.gnu.org/software/gettext/manual/gettext.html#msgmerge-Invocation\r\n\r\nAnd there is also the graphical program poedit, which I know less about, but it is meant to aid the translator in finding the unfinished work and in other tasks.\r\n\r\nPRL\r\n\r\n =||= CLOSED.  This pull request was created to have a conversation, and communication and progress is now on the translation list and continuing there.  Audacity will later take either a pull request or an attached .po file for french at the translators list. =||= "], ["217", "Update FR translation (3279 first lines)", "Olivier Humbert", "trebmuh", "11/25/17, 07:43:38 PM", "...and a few others bits.", "Thank you, but I still see:\r\n\r\n\"POT-Creation-Date: 2017-07-22 11:50+0100\\n\"\r\n\r\nThat is still not the most up-to-date .pot file.\r\n\r\nThe latest is\r\n\r\n\"POT-Creation-Date: 2017-11-06 13:24-0500\\n\"\r\n =||= @Paul-Licameli : I'm currently writing an email on audacity-translator about it.\r\n =||= @Paul-Licameli : message sent to the ML list =||= I made other changes to all the .po files, that now make conflicts here that can't be easily solved with git, but they may be solved with msgmerge.\r\n\r\nI will close this pull request but put these changes in with msgmerge.\r\n\r\nThe merged .po file will be based on the latest .pot file, with more empty msgstrs for you to fill in.\r\n\r\nHowever there are still abundant errors from\r\n\r\nmsgcmp fr.po audacity.po\r\n\r\nI see in this diff that in many places you add a #, fuzzy comment.\r\n\r\nYou do understand that a fuzzy translation will not be used by the program.  If your translation of a string is not in doubt, then you shoudl remove that #, fuzzy line.\r\n\r\nSome of these lines are added automatically by the msgmerge program too.\r\n\r\n\r\n =||= Olivier,\r\n\r\nPlease see commit 81f9bf77628c71b6c0afc5cef4a22e5846978565 which merged these updates.\r\n\r\nPlease base your further work on that version of fr.po.\r\n\r\nIf you had other updates that you did not yet share, I suggest you rename that version to fr1.po, get the latest fr.po, then on a Unix command line:\r\n\r\nmsgmerge -U --previous --add-location=file fr1.po fr.po\r\nmv fr1.po fr.po\r\n\r\nIf you continue this work, I request that you first complete the translation by eliminating #, fuzzy lines where that is correct, and filling in new empty msgstr \"\" lines.  This is more important than making corrections to messages that already exist.\r\n\r\nThe goal is to reduce the number of errors reported by\r\n\r\nmsgcmp fr.po audacity.pot\r\n\r\nThank you for this effort!\r\n\r\nPaul\r\n\r\n\r\n =||= Hi @Paul-Licameli \r\n\r\n> I see in this diff that in many places you add a #, fuzzy comment.\r\n> You do understand that a fuzzy translation will not be used by the program.\r\n> If your translation of a string is not in doubt, then you shoudl remove that #, fuzzy line.\r\n\r\nYes I added those. My original plan was to make a whole review of the file, leaving some fuzzy when I need to double-check something, and make a last overview of all the fuzzy lines at the end of the review. That said, given the short timeline and the impression I have you're pushing me to do so ( :-) ), I'm fine to move from this plan to the other way around: \"get the rid of the fuzzy strings, then make complete review\". So, on my next run through the (new) fr.po, I'll get the rid of the fuzzy and untranslated lines (and put some translator-comment instead of for my future needs).\r\n\r\nThanks for the updates of the fr.po . By experience with other audio/midi software translations, it makes it much easier for translators if it can be done regularly by a dev' as a part of the usual maintenance.\r\n\r\nCheers =||= Apologies if I seem \"pushy,\" but I'm just letting you know what I think is best for you to do with limited time to improve the experience of French speaking users of Audacity.  We are trying to hold 2.2.1 to a tight schedule, but it is also very desirable to get our fr.po more up to date after a period of neglect, and we are thankful to you.\r\n\r\nTo repeat, besides eliminating the fuzzies, now fr.po is updated to latest audacity.pot, and so there are new blank msgstr lines for you to fill.  That is also priority work.\r\n\r\nPRL\r\n\r\n =||=  No worries. I do understand that you're giving a direction for the translators team. Be sure there is no offense taken \ud83d\udc4d  =||= "], ["218", "Update the French translation", "Olivier Humbert", "trebmuh", "11/28/17, 02:05:34 AM", "@Paul-Licameli : with this batch of translation, I did focused more on the fuzzy and untranslated strings as requested. Still I did some corrections/fixes/improvements on other strings while scrolling the file.\r\n\r\nI'll certainly not have time to work on it tomorrow (but maybe a bit) and will continue on Monday/Tuesday.\r\n\r\nFeel free to merge it right now or to wait for me to add more commits to this PR. No preference from me.\r\n\r\nHTH\r\n\r\n**Edit:** I forgot to let you know that I put some _translator-comments_ as defined in [the gettext manuel](https://www.gnu.org/software/gettext/manual/html_node/PO-Files.html#PO-Files). I did so when I've had a doubt about different topics (accelerators management is one of those) to ease a future revision for me when it requires a deeper reflexion. **Please, do not strip these (_you can see those with searching for \"trebmuh\" in the file_).**\r", "Made Travis happy eventually. :)\r\n\r\nLooking [at its log here](https://travis-ci.org/audacity/audacity/builds/307346157#L5586) tells us: `fr.po: 2759 translated messages, 94 fuzzy translations, 251 untranslated messages.` which enlighten me since I'm sure it's doable to have a great French coverage for the upcoming version (2.2.1, right ?) and start a whole review afterward (because, even when we'll have reached the \"0 fuzzy translations, 0 untranslated messages\", I can ensure you that there is a much bigger job to do in the French translation, consistency across it is really needed I can swear).\r\n\r\nHTH =||= With this I now see only 345 errors from\r\n\r\nmsgcmp fr.po audacity.pot\r\n\r\nFormerly, over 1000.  This is good.\r\n\r\nYou are making rapid progress, and it seems still in flux, so I will wait a little more for more word from you.  Add more commits to this branch.\r\n\r\nPRL\r\n =||= Thanks again for the effort.\n\nI see what you are doing:  replacing #, fuzzy with your own note-to-self\ncomments, for later review.  If I rebuilt the product today with only those\nchanges, that would expose those French strings to users choosing French\nlocale.\n\nWhat would seem worse to the Francophone user who is not good with English\n-- some inconsistency in the French terminology or punctuation, or the\ngrosser inconsistency of having only some things translated, but many other\nthings left in English?  The second is what you get leaving the #, fuzzy in\nplace.\n\nBut perhaps you really do think that much of the existing French\ntranslation was very bad and misleading, even worse then sending people to\ntheir French-English dictionaries?\n\nPRL\n\n\nOn Sat, Nov 25, 2017 at 10:31 PM, Olivier Humbert <notifications@github.com>\nwrote:\n\n> Made Travis happy eventually. :)\n>\n> Looking at its log here\n> <https://travis-ci.org/audacity/audacity/builds/307346157#L5586> tells\n> us: fr.po: 2759 translated messages, 94 fuzzy translations, 251\n> untranslated messages. which enlighten me since I'm sure it's doable to\n> have great French coverage for the upcoming version (2.2.1, right ?) and\n> start a whole review afterward (because, even when we'll have \"0 fuzzy\n> translations, 0 untranslated messages\", I can ensure you that there is a\n> much bigger job to do in the French translation, consistency across it is\n> really needed I can swear).\n>\n> HTH\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/218#issuecomment-346981542>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ALITYSp1f9PDPzMgtBHqPgbhmktfa_uoks5s6NudgaJpZM4QqogY>\n> .\n>\n =||= > With this I now see only 345 errors from\r\n\r\nYes, this looks to be like the \"94 + 251\" [reported by the Travis build](https://travis-ci.org/audacity/audacity/builds/307346157#L5586).\r\n\r\n> You are making rapid progress, and it seems still in flux, so I will wait a little more for more word from you. Add more commits to this branch.\r\n\r\nThanks for that, I might have a bit of time later today to work on continuing the translation. I'll push another commit to this PR then.\r\n\r\n>  I see what you are doing: replacing #, fuzzy with your own note-to-self comments, for later review.\r\n\r\nExact.\r\n\r\n> If I rebuilt the product today with only those changes, that would expose those French strings to users choosing French locale.\r\n\r\nReally ? Just to be sure that I get it and not misunderstand what you said above, you mean that if you rebuilt Audacity with this commit, users will then see the `# trebmuh to check` strings in the GUI interface? If yes, it shouldn't work like that if reading at the [gettext manual here](https://www.gnu.org/software/gettext/manual/html_node/PO-Files.html#PO-Files) where we can see:\r\n\r\n```\r\n One PO file entry has the following schematic structure:\r\n\r\nwhite-space\r\n#  translator-comments\r\n#. extracted-comments\r\n#: reference\u2026\r\n#, flag\u2026\r\n#| msgid previous-untranslated-string\r\nmsgid untranslated-string\r\nmsgstr translated-string\r\n```\r\nAnyway, if the `# trebmuh to check` are to be shown on the GUI, it's a pita and I suggest to remove those before building the final next Audacity version. I'll still keep those in my branch fork on github and will then be able to re-merge these in after 2.2.1 publication if needed. What do you think?\r\n\r\n> But perhaps you really do think that much of the existing French translation was very bad and misleading, even worse then sending people to their French-English dictionaries?\r\n\r\nReading that, I realize that I might have be a bit too strong on my last message here. The actual translation is not that bad (it's good, I've seen much much bad than that, like when I started reviewing the FR translation for mhwaveedit), but I can find a bunch of incorrect translations, some being misleading.\r\n\r\nI'll keep it going and keep pushing commit to this PR.\r\nCheers\r\n =||= I do not mean that users will see\r\n\r\n#trebmuh to check\r\n\r\nOh no!  What I mean is, there are certain strings in the msgstr directives, and there are #comment lines associated with the strings.  When there is an associated #, fuzzy comment, then the string will not be seen by users.  If you remove that comment or replace the comment with some other, then the string will be seen by users.\r\n\r\nBut surely the comments themselves are not seen!\r\n\r\nPRL\r\n =||= So if that is understood, what I meant about priorities is this:\r\n\r\nLooking quickly at commit 81f9bf77628c71b6c0afc5cef4a22e5846978565 I see examples like this:\r\n\r\n-msgstr \"R\u00e9cup\u00e9ration automatique de crash\"\r\n+msgstr \"R\u00e9cup\u00e9ration automatique de plantage\"\r\n\r\nWhile I understand it's good to correct such ugly \"franglais\" into better French, or fix spelling and grammar and punctuation mistakes, still, if bad strings are not very frequent, then I would rather first complete the translation, supplying the missing strings.\r\n\r\nThere were hundreds of those.  And while any string is still marked fuzzy, consider it missing.\r\n\r\nSome fuzzy strings, you may have marked as such.  Others might have been marked such by the msgmerge program, which makes guesses in case one untranslated msgid is similar to another translated one -- but it may guess wrongly and suggest something with a very unrelated meaning.\r\n\r\nThose may need more attention -- don't remove \"fuzzy\" indiscriminately.  I think they should also be marked with automatic #| comments, if I ran msgmerge correctly.\r\n\r\nPRL\r\n =||= Those 3 last commits:\r\n- gets the rid of all \"fuzzy\" string (yeah!)\r\n- translates a few \"untranslated\" strings (still a bunch to go)\r\n- corrects a few typos I spotted on\r\n- checks (and changes when needed) consistencies around the following topics:\r\n1) unification : the \"preset\" words are now all translated to \"pr\u00e9r\u00e9glage\" rather than \"pr\u00e9s\u00e9lection\" or \"pr\u00e9-r\u00e9glage\" or others (it's the commonly used translation for \"preset\")\r\n2) CC (\"courant continu\" in French) rather than \"DC\" (\"direct current\" in English)\r\n3) accentuated capital letters in the French translated strings such as \"\u00c9diter\" instead of the wrong \"Editer\", or \"A\" -> \"\u00c0\" when relevant\r\n4) correct a mistake : \"decay\" was wrongly translated to \"d\u00e9lai\" in French which is the translation for \"delay\" (this was very misleading). It is now correctly translated to \"d\u00e9clin\".\r\n\r\n@Paul-Licameli , re: \"#trebmuh to check\", OK, I'm happy that those comments doesn't shows up in the GUI ! :o) _(In order to ensure you that we are on the same page: yes, I understand that when a \"#, fuzzy\" line is present, then the translation is not shown in the GUI, and when I remove it, the translation is shown)_\r\n\r\nAbout my translation method, I'm working with a simple text editor (pluma from the MATE environment) which is showing me the whole text file. This is making me reading at a lot of strings, so when I can see some mistake/typo/punctuation, it's easy and quick to just correct those. Taking the example in your previous message (crash->plantage) when I encountered the first one, I used then a search & replace (not fully automatic, it asks me each time for the replacing confirmation), then it doesn't take a lot of time either. That's pretty much why, even if specialized software (like poeditor or other) are useful for certain cases/persons, I found myself being much more happy with working with a simple text editor when doing translation.\r\n\r\n> Those may need more attention -- don't remove \"fuzzy\" indiscriminately.\r\n\r\nDo not worry, I'm not doing that. When I remove a \"fuzzy\", this is because I checked the correctness of the translation first.\r\n\r\nTravis is saying that there are only 202 untranslated left. I might be able to finish most of those by the 29th.\r\n =||= In these 3 last ones:\r\n- a bunch of untranslated strings\r\n- disambiguation: \"decay\" (EN) -> \"d\u00e9clin\" (FR)\r\n- disambiguation: \"save\" (EN) -> \"sauvegarder\" (FR) and \"record\" (EN) -> \"enregistrer\" (FR)\r\n- consistency around \"preset\" (EN) -> \"pr\u00e9r\u00e9glage\" (FR)\r\n- consistency around the \"are you sure?\" (EN) strings\r\n- consistency around \"discard\" (EN) -> \"abandonner\" (FR)\r\n- consistency around \"batch chain\" (EN) -> \"traitement par lot\" (FR)\r\n- consistency around \"presmooth\" (EN) -> \"pr\u00e9lissage\" (FR)\r\n- fixes \"sample rate\" which was incorrectly translated with \"fr\u00e9quence d'\u00e9chantillonnage\" while the correct translation is \"taux d'\u00e9chantillonnage\"\r\n- fixes \"bit rate\" which was incorrectly translated with \"d\u00e9bit\" while the correct translation is \"d\u00e9bit binaire\"\r\n- fixes a misleading translation where a \"bit  rate\" (EN) was translated to \"taux d'\u00e9chantillonnage\" instead of \"d\u00e9bit binaire\"\r\n- a few typos/punctuations/...\r\n\r\n+ updates the header's timestamp\r\n\r\nDuring that, I've found a few typos (I think) in the sources and made a Pull Request: https://github.com/audacity/audacity/pull/219 hoping that'd be useful for Audacity.\r\n\r\nTravis is saying that there are 98 remaining untranslated strings.\r\n\r\n =||= - French translation updated to 100% (yeah !)\r\n- improvements of a bunch of `#trebmuh to check` annotations\r\n- consistency around \"preset\" -> \"pr\u00e9r\u00e9glage\"\r\n- consistency around \"library\" -> \"biblioth\u00e8que\"\r\n- fixes a few typos/mistakes/punctuations\r\n\r\nTravis seems happy and reports that all the 3104 strings are translated.\r\n\r\n@Paul-Licameli : it seems to me to be in a pretty good shape for the 2.2.1 release. Feel free to merge it to master. If I find some stuff to be changed, I'll update this PR (if not yet merged) with more commits or I'll open another PR (if this one is merged).\r\n =||= Those 4 ones includes:\r\n- get the rid off the (useless now) \"#| msgid\" (which were ancient translations)\r\n- better translation for 3 strings\r\n- a bunch of note-to-self precisions\r\n- a bunch of missing accelerators\r\n- a couple of better accelerators\r\n- a few typos\r\n- consistency around \"range\" (EN) -> gamme/\u00e9ventail (FR)\r\n- adds Christian Brochec in the header\r\n- updates the timestamp in the header\r\n =||= @Paul-Licameli : I took the liberty to mention the LibraZiK project [on line 517](https://github.com/audacity/audacity/pull/218/files#diff-93e30190dec4ab6cb403e6cfd69043e7R515) which is why I started this translation effort first. I hope it's correct to do so. If it wasn't, please let me know.\r\n =||= Catching up now.  Good work!\r\n\r\nI still get one error from\r\nmsgcmp fr.po audacity.pot\r\n\r\nBut I see that is because you accidentally changed one msgid:\r\n\r\nmsgid \"Confirm Cncel\"\r\n\r\nI will fix that.\r\n\r\n =||= We are very pleased to get fr.po up to 100% !  Thank you!\r\n\r\nI notice that you updated lines that start with\r\n#~ msgstr\r\n\r\nI regret to say, that was unnecessary work, because #~ lines are for obsolete messages for msgids that the program no longer uses.  These lines are generated by msgmerge when I update fr.po to audacity.pot .  It's your choice to keep them in the file for reference, or just delete them.\r\n\r\nI will \"squash\" and commit your changes to fr.po and audacity.iss, with the one correction to a msgstr that I last mentioned.\r\n\r\nI still see 320 \"trubmuh to check\" comments.  Do you intend to address more of these very soon?\r\n\r\nPRL\r\n\r\n =||= This work is now committed at b69a272ad97fbb5a0eee61bd784e7003fb1e6987\r\n =||= > I still get one error from `msgcmp fr.po audacity.pot` But I see that is because you accidentally changed one msgid: `msgid \"Confirm Cncel\"`. I will fix that.\r\n\r\nSorry for that, and thanks for fixing it. It's a bit strange that Travis didn't catch it.\r\n\r\n> I notice that you updated lines that start with `#~ msgstr` I regret to say, that was unnecessary work, because #~ lines are for obsolete messages for msgids that the program no longer uses. These lines are generated by msgmerge when I update fr.po to audacity.pot . It's your choice to keep them in the file for reference, or just delete them.\r\n\r\nYes I know I did that :) That said, I have a doubt. I kind of vaguely remember reading somewhere that if the `msgid` from one of those `#~ msgstr` is re-enable in the sources, then gettext will automatically pick it up back automatically. That said, I might be wrong here. Can you please confirm/infirm?\r\n\r\n> I still see 320 \"trubmuh to check\" comments. Do you intend to address more of these very soon?\r\n\r\nAbsolutely. Most of those 320 comments string (roughly ~ 200 of those) are about improving the accelerators in the GUI. To make a proper work with accelerators, one needs to have the GUI running (in order to check the consistency of the accelerators). This needs to have a rebuild of the software according to the sources where those accelerators are defined.\r\n\r\nGiven (1) the short time frame I had to review this translation, (2) the time needed to do a proper job with accelerators, and (3) following your advice (translates first the \"fuzzy\" and the untranslated strings), I choose to leave this part uncompleted for the moment (although I've already been improving this part a bit while doing this translation review) and to wait for the 2.2.1 release to have a proper build with the translation included to work with.\r\n\r\nIn other words, I plan to remove the `# trebmuh to check` for the 2.2.2 release.\r\n\r\nLastly, to give you a more thorough understanding of my work here, I intend to monitor the GUI French translation of the GUI from now on.\r\n\r\nCheers, and thanks for the merge @Paul-Licameli . =||= "], ["219", "typos in the source", "Olivier Humbert", "trebmuh", "11/28/17, 04:23:24 AM", "While doing the FR translation, I spotted those which looks to be typos to me. Please double-check carefully.\r", "@Pokechu22 : commits incorporates your comment. Thank you. =||= Plus two fixes for the same 2 typos in comments lines. =||= Another typo found.\r\n =||= Consistency. Really a small one. Quality sake.\r\n =||= Thanks.\r\n\r\nSee commit 0d89bc3f150384916bb0a02172b124ec1ef1debc.\r\n\r\n =||= "], ["220", "French translation improvements", "Olivier Humbert", "trebmuh", "11/28/17, 05:22:04 PM", "- fixes 2 accelerators as asked by @Paul-Licameli in the \"Please fix duplicate & accelerator characters\" message in the audacity-translation ML\r\n- precisions for a bunch of comments-to-self\r\n- adds a few comments-to-self\r\n- +1 accelerator\r\n- 38 typos/punctuations\r\n- 7 slightly betters translations\r\n- 5 misleading translation\r\n- consistency around \"export\" (EN) -> \"export\" (FR) and \"exporting\" (EN) -> \"exportation\" (FR)\r\n- update the header's timestamp\r", "\ud83d\udc4d  =||= "], ["221", "Update French translators credits + timestamp", "Olivier Humbert", "trebmuh", "11/29/17, 02:21:29 AM", "NaN", "Do these individuals deserve a user-visible credit in the msgstr for translator_credits ? =||= @Paul-Licameli : I don't know. I know that Christian Brochec have been \"the one\" for a long time but I don't know about those 2 persons. I simply took their names from [your commit](https://github.com/audacity/audacity/commit/c55ad8552707b607b49a0af1e5b0090332fb753f) in order for them to be still credited somewhere.\r\n =||= and ... I realize that I forgot one person...\r\n\r\nThe 2 last commits:\r\n- adds Lionel to the translators in the header\r\n- removes a few legacy translation strings\r\n- corrects a few typos/punctuations/better_translations/... in the legacy translation strings\r\n- updates header's timestamp\r\n =||= \ud83d\udc4d  =||= "], ["222", "One typo", "Olivier Humbert", "trebmuh", "12/09/17, 02:02:57 PM", "This one [is coming](https://anonscm.debian.org/git/pkg-multimedia/audacity.git/tree/debian/patches/0003-spelling.patch) from the debian-multimedia team and more precisely, from Jarom\u00edr Mike\u0161.\r", "Done at 8a1f5bb748030890db910af252add91b86ece726\r\n\r\nThank you\r\n =||= "], ["223", "FR translation improvements", "Olivier Humbert", "trebmuh", "01/06/18, 02:03:10 AM", "- fixes for a few typos in the FR translation\r\n- a few general improvements\r\n- some punctuations\r\n- min/maj\r\n- updates the header's timestamp\r", "@Paul-Licameli : I've used `&nbsp;` to provide the non-breakable spaces to the translation in French. That said, I've rebuild a 2.2.0 version with such a fr.po and the `&nbsp;` are displayed as this:\r\n\r\n![capture du 2017-12-10 15-23-53](https://user-images.githubusercontent.com/8705846/33805846-5164b0f4-ddbf-11e7-8a3c-55a8fe362d12.png)\r\n\r\nA strange thing is the `&nbsp;` are taken in account in other places such as ([in the code](https://github.com/audacity/audacity/blob/master/locale/fr.po#L594)):\r\n\r\n![capture du 2017-12-10 15-31-55](https://user-images.githubusercontent.com/8705846/33805876-9d4ccc86-ddbf-11e7-81d7-793027b92f00.png)\r\n\r\nAny idea? =||= @Paul-Licameli ping =||= Olivier, I am very sorry I missed your messages so long.\r\n\r\nI took the first seven of these commits, squashed as one.\r\n\r\nI cannot take the commits in which you added &nbsp;\r\n\r\nTranslations should not contain markup, unless the msgid has markup.\r\n\r\nAlmost all translated strings are used in contexts where they are not interpreted as HTML.\r\n\r\nI am sorry for your confusion on this point. =||= Olivier, I also took and squashed the other seven commits, but I replaced most of the &nbsp; with spaces.\r\n\r\nWhat I said is not quite correct:  a minority of the msgids with no markup really are still in HTML context.  But you don't know which.  Assume they are not.\r\n\r\nPerhaps in future I can add i18n-hint comments for the few that are.\r\n\r\nSo, relax, you work so far is saved.  But now there is a new audacity.pot to merge your fr.po with.\r\n =||= Thank you @Paul-Licameli \r\nNo worries about the spaces. They can stay like that.\r\n\r\n   =||= "], ["224", "A little mistake here for using incorrect script", null, "mkpoli", "01/06/18, 12:46:21 AM", "That was probably caused by me forgetting to switch between input methods.", "Rebase-and-merge from Github didn't work for unknown reasons.\r\n\r\nSo I fetched your repo and rebase by hand and pushed it.\r\n =||= "], ["225", "Standardize on an rDNS-style AppStream ID", "Nate Graham", "Pointedstick", "12/29/17, 11:14:50 PM", "Audacity's AppStream file currently defines an AppStream ID equal to the name of its desktop file: `audacity.desktop` (https://github.com/audacity/audacity/blob/master/help/audacity.appdata.xml#L3)\r\n\r\nThe AppStream folks [recommend using a reverse-DNS-style](url) AppStream ID instead. This patch changes it to `org.audacityproject.Audacity`). If accepted, it will make Audacity's AppStream ID match between Linux distro packages and what's on Flathub, as they actually enforce this requirement and use `org.audacityproject.Audacity` (https://github.com/flathub/org.audacityteam.Audacity/blob/master/org.audacityteam.Audacity.json#L2)\r\n\r\nWhen the AppStream IDs match between versions of Audacity that come from different sources, then Linux software center programs like GNOME Software and KDE Discover can correctly de-duplicate the multiple sources and show the user a nice UI that allows them to choose which source to install from. Without this, the programs confusingly show duplicates. Here's what it looks like in KDE discover:\r\n\r\n![two audacities](https://user-images.githubusercontent.com/1097249/34447881-5a0110c8-eca5-11e7-9be9-3405def5c03f.png)\r\n\r\nThe top one is from Flathub, and the bottom one is from my distro's package repository.\r\n\r\nIf you accept this patch and use `org.audacityproject.Audacity` as your AppStream ID then Discover and GNOME Software (and similar apps) can perform de-duplication correctly.", "Thanks Nate.  Committed  =||= Thanks so much! =||= "], ["226", "Small changes", "Bryan Slatner", "bslatner", "01/04/18, 03:14:46 PM", " I added a missing library to the appveyor file, and added an ignore for nuget package binaries to .gitignore.\r\n\r\nThe ignoring of the nuget package binaries is important if you're building based on the appveyor definition, which gets msgfmt from NuGet.", "I am about to reject this because of the very large commit in it, d40643b.  The title of this pull request 'Small Change' is misleading.  There is a lot to read through and analyse in that commit.\r\n\r\nPlease rebase your commits off Audacity master, if you want this pull request to be accepted. =||= Ah,  I'm a stupid git. I missed the merge. I'll rebase and re-do. =||= "], ["227", "Small changes (part deux)", "Bryan Slatner", "bslatner", "01/04/18, 03:53:14 PM", "Trying again :)\r\n\r\nA summary of changes:\r\n\r\n- Add \"xml\" to list of targets in appveyor.yml. It's required.\r\n- Add \"win/packages\" to .gitignore. The appveyor build process uses NuGet to fetch msgfmt.exe, which gets installed to this directory.\r", "Thanks Bryan.  Work to get automated Windows builds is much appreciated. =||= "], ["228", "Update Ukrainian translation", "Yuri Chornoivan", "yurchor", "01/24/18, 02:00:59 PM", "Tested with msgfmt -vc for validity, synced with audacity.pot.\r\n\r\nMany thanks in advance for merging this PR.", "I have copied this to master (with later updates).  Thank you.\r\n =||= "], ["229", "Two small fixes for automation commands", null, "DjMorgul", "01/06/18, 07:25:36 PM", "NaN", "Thanks.  These look useful.  Merged. =||= You're welcome. Thank you also, James. =||= "], ["230", "Fix building without libid3tag", "Richard Ash", "richardash1981", "01/07/18, 05:06:34 PM", "This is a super-set of https://github.com/audacity/audacity/pull/214, because it's sitting in Gentoo's bugzilla here https://bugs.gentoo.org/636722. Evidently some people do compile Audacity without libid3tag, judging by the number of CCs on the bug!\r\n\r\nI've built this both ways and it works fine without libid3tag.", "NaN"], ["231", "Make a dynamic check of misuse of _ that works in Windows too...", "Paul Licameli", "Paul-Licameli", "01/14/18, 07:55:44 PM", "see commit f57fdc99d7a1cd0cf4aa5818382b6b0ffcd2fa83\r\n\r\nNote:  I think this should work on Windows, both compiling, and also trapping in the debugger in case\r\nyou add to some file\r\n\r\nstatic wxString foo = _(\"Foo\");\r\n\r\nI ask that someone verify this for me and merge it.  Thanks.\r\n\r\nPRL\r", "I don't know whether it will require that you insert\r\n\r\n#include \"Streams.h\"\r\n\r\nwhich includes the Win32 header Wxdebug.h\r\n\r\nSee:\r\n\r\nhttps://msdn.microsoft.com/en-us/library/windows/desktop/dd388378(v=vs.85).aspx\r\n =||= "], ["232", "Note track vertical zooming changes (fixes to Bugs 1815, 1819, and 1820)", "Pokechu22", "Pokechu22", "04/15/19, 12:49:59 AM", "A rework of how note track vertical zooming internally works, and some other rendering changes.  The commit messages should generally summarize them pretty well.\r\n\r\nIncludes fixes for the following bugs:\r\n\r\n* [Bug 1815](http://bugzilla.audacityteam.org/show_bug.cgi?id=1815): fixed by importing zooming to include all notes; this may need to be reconsidered when MIDI recording is implemented though, although that's far off\r\n* [Bug 1819](http://bugzilla.audacityteam.org/show_bug.cgi?id=1819): fixed by checking the track (as is done with other things)\r\n* [Bug 1820](http://bugzilla.audacityteam.org/show_bug.cgi?id=1820): fixed by saving the top note &mdash; may want to retitle that bug because the pitch height isn't exactly what is saved", "I see nine commits.  Are they all relevant to this project, and you are following the good practice I like too, of committing things as many small increments, each one coherent and compilable alone?\r\n\r\nBut I see Travis isn't taking it yet (quick look suggests inheritance of NoteTrack from Track isn't known in some places, probably just a missing #include):\r\nhttps://api.travis-ci.org/v3/job/329261383/log.txt\r\n\r\nFor a detailed review, I'd like to leave that to James.\r\n =||= > Are they all relevant to this project, and you are following the good practice I like too, of committing things as many small increments, each one coherent and compilable alone?\r\n\r\nYep, each one should be usable on its own (though I haven't gone through and tested it), assuming the ones before it are present (attempting to apply them out of order won't work for some, but that's pretty normal).\r\n\r\n> But I see Travis isn't taking it yet\r\n\r\nTravis issue does seem to be missing an include; I think I've fixed that with the next commit but I'll wait for the build to finish.  MSVC doesn't seem to care about that missing include for some reason.\r\n =||= Hm, no, that didn't solve it.  The code that's failing is the code for bug 1819, which was basically just me copying code that regular tracks use (from `ButtonHandle`) so that I can check tracks.  However I guess because `NoteTrackButtonHandle` doesn't actually inherit `ButtonHandle` (there's a TODO about that) and the fields are different types, copying the code as-is wouldn't work.  I've pushed a second commit, maybe that's better.  If that does work, I'll rebase and squash both of those onto the first commit (which is where that actual change belongs). =||= Probably should also clarify: a few of these commits aren't directly relevant to note track zooming (in particular, the one for bug 1819 and to a lesser extent the margin fixes (but those actually matter more now that zooming behaves better)).  However I wrote the fixes while working on the rest of this and they do make sense to be bundled together. =||= Alright, fixed ([old build result](https://travis-ci.org/audacity/audacity/builds/329272327)) and squashed those fixups onto the appropriate commit. =||= I just looked over the commits to see what new internationalized strings there are.\r\n\r\nI see\r\n\r\n\"Down &Octave\"\r\n\r\nbut that modifies the existing\r\n\r\n\"Down Octa&ve\"\r\n\r\nand it's a wrong modification, because the &O conflicts with the shortcut in existing \"Up &Octave\"\r\n\r\nSo I would emend that if I merged it.\r\n\r\nI see:\r\n _(\"Max Zoom\")\r\n\r\nBut that one already exists.\r\n\r\nI see no other _(\"...\") in the added lines.\r\n\r\nSummary:  make the correction noted above, and then, none of these commits imply any changes for audacity.pot.  Therefore, these commits have no implications for string freeze, so it can be decided after that whether to merge all or some of them.  I have not examined further yet to decide whether to do that.  I might not be the one who does.\r\n =||= Thanks, I see you made the string change, but Travis still reports that the Linux build won't work.\r\nPRL\r\n =||= I'm not sure what broke with it, given that the previous build succeeded (and it doesn't seem reasonable for the string change to break anything), and the only thing I see in [the log](https://api.travis-ci.org/v3/job/329607104/log.txt) is `null`.\r\n\r\nI'll squash those two changes together, which should also force a rebuild.  One sec. =||= Sometimes the Travis build is really broken, but sometimes the build is \"errored\" which means some sort of glitch on the servers.  Maybe it was only that.  I didn't see which from the pull request page.\r\nPRL\r\n =||= Yep, it was errored ([here's the build](https://travis-ci.org/audacity/audacity/builds/329607103), for reference).  After forcing a rebuild everything seems to have gone fine. =||= I have cherry-picked the first of these commits, which fixes bug 1819.\r\n\r\nNo judgment implied for the rest of the changes.\r\n =||= Rebased off of latest master. =||= "], ["233", "Update sv.po", "A. Regnander", "Regnander", "01/16/18, 12:52:40 PM", "Translated the strings lacking a translation and updated all fuzzy strings. I fear that there might be more strings in need to be updated that I've missed, since many of them wasn't marked as \"fuzzy\".", "NaN"], ["234", "Update sv.po", "A. Regnander", "Regnander", "01/18/18, 05:31:33 PM", "Translated the strings lacking a translation and updated all fuzzy strings. I fear that there might be more strings in need to be updated that I've missed, since many of them wasn't marked as \"fuzzy\" when I opened this .po file in Poedit.\r\n\r\nThe reason why I closed my previous pull request is because I fixed a typo.", "Thank you, regnander.\r\n\r\naudacity.pot saw a few more updates since you did this.  The latest update is at d38f3752d0264aeb8ca2cb7686b2f3ced44b95de and is final for version 2.2.2.\r\n\r\nPlease merge your sv.po with the latest audacity.pot and supply translations for the very few new strings.\r\n\r\nPRL\r\n =||= Said and done. I'll close this pull request and create a new one right away. =||= "], ["235", "Remove some double spaces", null, "scootergrisen", "02/22/18, 05:31:04 PM", "NaN", "I think they should be removed from the source files the .pot file is made of.\r\n =||= Paul will pull #236 (which is same thing) when he is ready.   =||= "], ["236", "Remove some double space", null, "scootergrisen", "10/14/18, 10:30:01 AM", "If some of these double spaces are meant to be newlines feel free to change it.\r", "Thanks, but I will wait until 2.2.3 development opens to merge this.\r\nPRL\r\n =||= Apologies for the very long time taken to merge this pull request.  It is now merged, ready for 2.3.1. =||= "], ["237", "Remove a space before a \"?\"", null, "scootergrisen", "03/24/18, 11:15:42 AM", "NaN", "Merged\r\nhttps://github.com/audacity/audacity/commit/cd06f86619731e54fcf73386b7bcff28f3398b59 =||= "], ["238", "Remove space before \"?\" x 2", null, "scootergrisen", "03/24/18, 11:16:01 AM", "NaN", "Merged\r\nhttps://github.com/audacity/audacity/commit/cd06f86619731e54fcf73386b7bcff28f3398b59 =||= "], ["239", "Update French translation", "Olivier Humbert", "trebmuh", "01/24/18, 01:03:06 PM", "I updated the fr.po file from the pot file using:\r\n```\r\ngit clone https://github.com/audacity/audacity.git\r\ncd audacity/locale\r\nmsgmerge -U fr.po audacity.pot\r\n```\r\nI hope this is correct (please @Paul-Licameli , tell me).\r\n\r\nThis translation:\r\n- updates all untranslated+fuzzy against current pot file (from 18/01/2018)\r\n- fixes one typo\r\n- improves a few strings already translated previously\r\n- updates timestamps\r\n- updates (c) Olivier Humbert to 2018\r\n- removes most of the old translation (at the end of file)\r", "I have copied this to master.  Thank you.\r\n =||= "], ["240", "Update sv.po", "A. Regnander", "Regnander", "01/24/18, 01:02:55 PM", "Translated the strings lacking a translation and updated all fuzzy strings using the latest .pot file. I fear that there might be more strings in need to be updated that I've missed, since many of them wasn't marked as \"fuzzy\" when I opened the .po file in Poedit.", "I have copied this to master.  Thank you.\r\n =||= "], ["241", "Fix by Bobby Kent m4a export error", "Steve Daulton", "SteveDaulton", "01/19/18, 10:05:03 PM", "As discussed on QA list (https://sourceforge.net/p/audacity/mailman/message/36194968/)\r\nThis fixes an old problem in m4a export.\r\n\r\nPrior to the fix, the problem is very easy to reproduce:\r\nGenerate 30 second Chirp, then export as m4a. The error occurs every time.\r\n\r\nWith Bobby Kent's fix, the error never occurs and the exported files look exactly as expected.", "Closing because of the doubts about the correctness of this fix, as discussed at the -quality mailing list.\r\n =||= Thanks for the pull request Bobby, Although your patch was not used in the end, it lead to the discovery of a broader issue with FFmpeg exports which has now been resolved. =||= "], ["242", "Fix for building without portmixer", null, "v2e", "05/31/20, 05:39:01 PM", "I am not sure the proposed changes are correct, but they allow me to build Audacity both with portmixer enabled and disabled. So I hope, it will work for other people as well.", "Thanks.  This was a nice idea.  We've since moved to a CMake system so we won't be using this.  Thanks for offering it. =||= "], ["243", "Fix timeshift and length discrepency in M4A export.", "Darrell Walisser", "walisser", "01/29/18, 05:36:12 PM", "encode_audio() was incorrectly ignoring the frame->pts and\r\nas a result, the encoder output had no PTS/DTS values, which are\r\nessential to maintain correct timing in the output container.\r\n\r\nMy findings with FFmpeg AvCodec/AvFormat v57. Differences are in samples between Audacity export (AU) and ffmpeg transcoding (FF). Positive start means time shifted forward, positive end means longer duration compared to original. Measurement using Audacity import function.\r\n\r\n*Note it has now become clear this patch doesn't fix the length/truncation bug, only the timeshift.\r\n\r\n## Before Patch\r\n| Format | Start (AU) | End (AU) | Start(FF) | End(FF)\r\n|-------|------------|----------|-----------|--------\r\n|M4A    | +1024 | +1024 | 0     | 0\r\n|AC3    | +256  | 0     | +256  | 0\r\n|WMA    | +2048 | -1024 | +2048 | +1024\r\n\r\n## After Patch\r\n| Format | Start (AU) | End (AU)\r\n|-------|------------|---------\r\n|M4A    | 0     | 0\r\n|AC3    | +256  | 0\r\n|WMA    | +2048 | -1024\r\n\r\nAs for the AC3/WMA timeshift... this is intrinsic to how FFmpeg works and would need a workaround. AC3 for example, cannot store a negative PTS value (it needs to start the file at -256, not 0, to offset the preroll in the codec). And the decoder/importer needs to recognize that offset and discard the first 256 samples. This would be fine (and correctly handled) if the ac3 was exported/imported in another container format that could preserve the offset.\r", "Why closed?  Do you think it is incorrect now?\r\n\r\nDo not consider it rejected.  But this was not essential to 2.2.2 so it was not yet merged.\r\n\r\nPRL\r\n =||= I'm sure it was correct, but doesn't seem important right now. I think it\nwould also have to be combined with ensuring the same care was taken with\nthe PTS on the import side as well.\n\nOn Mon, Jan 29, 2018 at 1:00 PM, Paul Licameli <notifications@github.com>\nwrote:\n\n> Why closed? Do you think it is incorrect now?\n>\n> Do not consider it rejected. But this was not essential to 2.2.2 so it was\n> not yet merged.\n>\n> PRL\n>\n> \u2014\n> You are receiving this because you modified the open/close state.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/243#issuecomment-361331441>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AA8r1daVtmnhBW2JBTTknBEeTuUfwdS2ks5tPgdYgaJpZM4RlnqP>\n> .\n>\n =||= "], ["244", "Fix truncation on FFmpeg export", "Darrell Walisser", "walisser", "01/22/18, 10:54:50 PM", "This fixes the file truncation (missing last ~1000-2000 samples)\r\non file export. It will also eliminate error dialog some users\r\nhave witnessed. Does not address timeshift issue (other PR must be rebased on this)\r\n\r\nAlso cleans up the code\r\n- simplified the Finalize function\r\n- add error dialog for encoder errors\r\n- encodes all audio even if it has to pad with silence\r\n- correctly determine when a codec supports short final frame\r\n- update comments or remove irrelevant ones\r\n \r\nCODEC_CAP_VARIABLE_FRAME_SIZE does not have anything to do with CODEC_CAP_SMALL_LAST_FRAME\r\n\r\n\"encodeResult\" is a better variable name, the return value has nothing to do with bytes.\r\n\r\ncontrol flow is clearly split between emptying the fifo and flushing, with muxing on every iteration.\r\n\r", "I committed this at f4c8920e23176fff8a65e5c2cd9e4e48ee4570c4, with some modifications for error reporting consistent with other such changes I have lately made.\r\n\r\nNew strings with _() should not be introduced at this point of the release cycle, because there is a code freeze while translators update the message catalogs.\r\n\r\nWhenever errors are detected in Finalize, the user will see an error message and Finalize will return false, which will cause the caller to remove any incompletely written file.\r\n\r\nI verified that even with my older version of FFmpeg libraries, I can export and reimport a file without any loss of final samples.\r\n\r\nThank you, Darrell.\r\n\r\n =||= "], ["245", "Update icon and installer images", "Pokechu22", "Pokechu22", "01/24/18, 07:56:09 PM", "Fixes [bug 1789](https://bugzilla.audacityteam.org/show_bug.cgi?id=1789).\r\n\r\nThere were actually two things that needed to be updated, which I've done in separate commits.\r\n\r\n* The `audacity.ico` file: this is the icon used on the first page of the installer (the one for choosing a language); however it is also used in a number of other places, including as the actual icon for the app and the installer.  So all of those have been updated with this change.\r\n\r\n    PRL mentioned:\r\n\r\n    > I look in GIMP and see it's actually many image layers, each showing the old\r\nicon with various magnifications, and some sub-pixel half-toning going on in each.\r\n\r\n    To clarify about that, ICO contains a bunch of different sizes and bit depths.  The sizes that are provided in the audacity icon are 256x256, 128x128, 96x96, 64x64, 48x48, 32x32, 24x24, 16x16, 14x14, 10x10, and 8x8.  The original icon included bit depths of 4, 8, and 32; I've gotten rid of all but 32 since I find it extremely unlikely that anyone's using a 4 or 8 bit-per-pixel display (and couldn't find a proper way to generate those depths either).\r\n\r\n    I generated the icon using the following script (which uses [imagemagick](https://imagemagick.org/) and the logo from [here](http://wiki.audacityteam.org/wiki/File:Audacity_Logo_large_transparent.png)):\r\n\r\n    ```bash\r\n    base=Audacity_Logo_large_transparent.png\r\n    out=audacity.ico\r\n    files=\r\n    for size in 256 128 96 64 48 32 24 16 14 10 8; do\r\n        file=\"tmp_icon_${size}.bmp\"\r\n        convert \"$base\" -resize ${size}x${size} -extent ${size}x${size} \"$file\"\r\n        files+=\" $file\"\r\n    done\r\n    convert $files \"$out\"\r\n    rm $files\r\n    ```\r\n\r\n    This new icon should maybe also be used on the various websites, as they're also using the old icon.\r\n\r\n* The installer images: these are used on the other pages of the installer.  I made audacity_InnoWizardImage.bmp using [the wiki logo](https://www.audacityteam.org/wp-content/uploads/2016/01/NEW_AudacityTransMediaWiki_sans_serif.png), and the other one using a resized version of the icon.\r\n\r\nI have not attempted to handle the mac icon, as I don't know how to edit those (I don't even know which files are needed for the mac installer).", "Poke,\r\n\r\nLook in mac/Resources and find eight image files.  One is .png (the background that opens for the Mac .dmg).\r\n\r\nThe other seven are .icns files.  A little Googling tells me ImageMagick might not support that one.  But maybe that is out of date information.\r\n\r\nPRL\r\n\r\n =||= It seems it's not hard to find programs to interconvert that format, even if ImageMagick won't.  For instance:  https://iconverticons.com/online/#\r\n =||= It does seem like ImageMagick doesn't work for icns, and gimp also doesn't seem to have saving support for it (but there is [a plugin](https://github.com/brion/gimp-icns) to read them).\r\n\r\nAccording to [this article](http://applehelpwriter.com/2012/12/16/make-your-own-icns-icons-for-free/) there's a program built in to MacOS, which converts a bunch of specially-named PNGs of various sizes -- PNGs which I can generate with ImageMagick.  I do have access to a mac so I should be able to run that on a different machine.\r\n\r\nI've updated the DMG background, though, using [this image](http://wiki.audacityteam.org/wiki/File:Audacity_Logo_signika_512_transparent.png). =||= I have rebased and pushed these changes, thanks.\r\n\r\nPoke, look in mac/Resources.  There is one .png file and seven files with extension .icns.  Can you figure out edits for those too?\r\n =||= Currently working on those right now =||= I'll create a new pull request with them, to make this a bit less confusing =||= Sorry, our updates crossed, and I closed this PR.  Please open another for the Mac images.\r\n\r\nPRL\r\n =||= Or, I can just reopen.  Done!\r\n =||= I merged the change for the background .png.  It looked good -- the important thing being that the positions of the arrow and the blank spaces are unchanged.\r\n\r\nI hope some solution for the .icns files can also be found, perhaps converting to .ico, editing, and converting back?\r\n =||= I see with Preview on macOS that win/audacity.ico had 27 images, but now has only 9.  You explained that as using only a 32 bit depth, not supplying three depths.\r\n\r\nAll right.\r\n =||= "], ["246", "Simplification in av_log_wx_callback, because wxLogDebug is threadsafe.", "Rapha\u00ebl Marinier", "RaphaelMarinier", "01/24/18, 06:22:26 PM", "wxLogDebug is threadsafe since wxWidgets 2.9.1 (releated in 2010)\r\naccording to\r\nhttp://docs.wxwidgets.org/3.0/overview_log.html#overview_log_mt.\r\n\r\nNote also that wxLogDebug could already have been called from multiple\r\nthreads even with EXPERIMENTAL_OD_FFMPEG unset. According to FFmpeg\r\ndoc, the logging callback can be called from multiple threads because\r\nsome codecs are multithreaded:\r\nhttps://ffmpeg.org/doxygen/2.5/group__lavu__log.html#ga14034761faf581a8b9ed6ef19b313708", "Thank you.\r\n =||= "], ["247", "Update mac icons", "Pokechu22", "Pokechu22", "01/25/18, 11:12:29 PM", "This was a lot harder to do than the previous one, mostly because the majority of the needed tools only work on mac (I did find [libicns](http://icns.sourceforge.net/) (which is what is used for iconverticons.com), but ended up not using it).\r\n\r\nThere are two groups of icons here:\r\n\r\nAudacity.icns - this is the main app icon.  I'm fairly certain I did this one correctly; apple has [an article](https://developer.apple.com/library/content/documentation/GraphicsAnimation/Conceptual/HighResolutionOSX/Optimizing/Optimizing.html) explaining how you're supposed to generate it.  I ended up with this script that renders [the SVG version of the logo](http://wiki.audacityteam.org/w/images/5/52/Audacity_Logo_large.zip) using [Inkscape](http://inkscape.org/).\r\n\r\n```bash\r\nmkdir \"Audacity.iconset\"\r\n\r\nfor size in 512 256 128 32 16; do\r\n    for scale in 1 2; do\r\n        realsize=$(($size * $scale))\r\n        file=\"icon_${size}x${size}\"\r\n        if [ $scale -ne 1 ]\r\n        then\r\n            file+=\"@${scale}x\"\r\n        fi\r\n        /Applications/Inkscape.app/Contents/Resources/script --without-gui --export-png=Audacity.iconset/$file.png --export-width=$realsize --export-height=$realsize Audacity_Logo_large.svg\r\n    done\r\ndone\r\n\r\niconutil -c icns -o \"Audacity.icns\" \"Audacity.iconset\"\r\n```\r\n\r\nFor the other files, things were a bit more annoying.  I ended up using [docerator](https://code.google.com/archive/p/docerator/) to generate them, since that produces file icons that look reasonable (and I don't have the knowledge to actually draw the file icons myself, though for reference the page template is `/System/Library/CoreServices/CoreTypes.bundle/Contents/Resources/GenericDocumentIcon.icns`).  However, this has a major issue of not supporting the 2x scale icons, which I just chose to live with (the previous icons had a the largest size at 128, so only supporting 512 isn't that much of a problem).  Here's the script I used for that (assuming that [`docerator-2.0.zip`](https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/docerator/docerator-2.0.zip) has been extracted into the same folder):\r\n\r\n```bash\r\nfor ext in AIFF AU MP3 OGG Project WAV; do\r\n    generated=\"Audacity-${ext}.icns\" # format that docerator uses\r\n    text=$ext\r\n    if [ \"$ext\" == \"Project\" ]\r\n    then\r\n        generated=\"Audacity-Generic.icns\"\r\n        text=\r\n    fi\r\n    python docerator-2.0/docerator.py --appicon=Audacity.icns --background=default-unsplit --makeicns=docerator-2.0/makeicns --text=$text\r\n    mv \"$generated\" \"Audacity${ext}.icns\"\r\ndone\r\n```", "I notice that each of the file icon files has only five images, while previously there were twelve, but those used many more bit depths, which we might not need, and some of the images did not look good.  I did not take a close look at the sizes.\r\n\r\nI wonder if we ought to define more image files for more file extensions that could be associated with Audacity.  A task for the future maybe.\r\n\r\nI am less sure the new Audacity.icns came out correctly.  When I open the old in Preview, I see nine images, and two of them are just white silhouettes (did they serve any purpose?).  Sizes 128 square, and 48, 48, 32, 32, 32, 16, 16, 16.  The last six seem to be two triples of bright, dim, and monochrome outline versions.  But the first three don't make a similar triad.  I don't get it.\r\n\r\nBut in the new version, there are ten, all RGB, and the sizes are 1024, 512, 512, 256, 256, 128, 64, 32, 32, 16.\r\n\r\nI have not yet built and installed to see what happens.\r\n\r\n\r\n =||= I think preview might be broken for the old icons.  Using `icns2png -l <file>` (from libicns), I get the following lists for before and after (though it doesn't like some of the new ones -- but [Wikipedia](https://en.wikipedia.org/wiki/Apple_Icon_Image_format#Icon_types) does explain what the meanings should be for those).\r\n\r\n<dl>\r\n<dt><code>Audacity.icns</code> before these changes</dt>\r\n<dd><pre>Reading icns family from Audacity.icns...\r\n Extracting icons from Audacity.icns...\r\n Icon family size is 55010 bytes (including 8 byte header)\r\n Listing icon elements...\r\n  'ICN#' 32x32 1-bit icon with mask (256 bytes)\r\n  'icl8' 32x32 8-bit icon (1024 bytes)\r\n  'il32' 32x32 32-bit icon (4096 bytes compressed to 2093)\r\n  'l8mk' 32x32 8-bit mask (1024 bytes)\r\n  'ich#' 48x48 1-bit icon with mask (576 bytes)\r\n  'ich8' 48x48 8-bit icon (2304 bytes)\r\n  'ih32' 48x48 32-bit icon (9216 bytes compressed to 4284)\r\n  'h8mk' 48x48 8-bit mask (2304 bytes)\r\n  'ics#' 16x16 1-bit icon with mask (64 bytes)\r\n  'ics8' 16x16 8-bit icon (256 bytes)\r\n  'is32' 16x16 32-bit icon (1024 bytes compressed to 630)\r\n  's8mk' 16x16 8-bit mask (256 bytes)\r\n  'it32' 128x128 32-bit icon (65536 bytes compressed to 23435)\r\n  't8mk' 128x128 8-bit mask (16384 bytes)\r\n14 elements total found in Audacity.icns.</pre></dd>\r\n<dt><code>Audacity.icns</code> after these changes</dt>\r\n<dd><pre>Reading icns family from Audacity.icns...\r\n Extracting icons from Audacity.icns...\r\n Icon family size is 580963 bytes (including 8 byte header)\r\n Listing icon elements...\r\n  'ic09' 512x512 32-bit icon (1048576 bytes compressed to 101992)\r\nlibicns: icns_get_image_info_for_type: Unable to parse icon type 'ic07'\r\n  'ic07' 0x0 0-bit (13801 bytes)\r\nlibicns: icns_get_image_info_for_type: Unable to parse icon type 'ic12'\r\n  'ic12' 0x0 0-bit (5043 bytes)\r\n  'ic10' 1024x1024 32-bit icon (4194304 bytes compressed to 277046)\r\nlibicns: icns_get_image_info_for_type: Unable to parse icon type 'ic14'\r\n  'ic14' 0x0 0-bit (101992 bytes)\r\n  'l8mk' 32x32 8-bit mask (1024 bytes)\r\n  's8mk' 16x16 8-bit mask (256 bytes)\r\n  'ic08' 256x256 32-bit icon (262144 bytes compressed to 37814)\r\nlibicns: icns_get_image_info_for_type: Unable to parse icon type 'ic13'\r\n  'ic13' 0x0 0-bit (37814 bytes)\r\nlibicns: icns_get_image_info_for_type: Unable to parse icon type 'ic11'\r\n  'ic11' 0x0 0-bit (1923 bytes)\r\nlibicns: icns_get_image_info_for_type: Unable to parse icon type 'info'\r\n  'info' 0x0 0-bit (259 bytes)\r\n  'il32' 32x32 32-bit icon (4096 bytes compressed to 1457)\r\n  'is32' 16x16 32-bit icon (1024 bytes compressed to 430)\r\n13 elements total found in Audacity.icns.</pre></dd>\r\n<dt><code>AudacityProject.icns</code> before these changes</dt>\r\n<dd><pre>Reading icns family from AudacityProject.icns...\r\n Extracting icons from AudacityProject.icns...\r\n Icon family size is 52123 bytes (including 8 byte header)\r\n Listing icon elements...\r\n  'ICN#' 32x32 1-bit icon with mask (256 bytes)\r\n  'icl4' 32x32 4-bit icon (512 bytes)\r\n  'icl8' 32x32 8-bit icon (1024 bytes)\r\n  'il32' 32x32 32-bit icon (4096 bytes compressed to 1933)\r\n  'l8mk' 32x32 8-bit mask (1024 bytes)\r\n  'ich#' 48x48 1-bit icon with mask (576 bytes)\r\n  'ich4' 48x48 4-bit icon (1152 bytes)\r\n  'ich8' 48x48 8-bit icon (2304 bytes)\r\n  'ih32' 48x48 32-bit icon (9216 bytes compressed to 3878)\r\n  'h8mk' 48x48 8-bit mask (2304 bytes)\r\n  'ics#' 16x16 1-bit icon with mask (64 bytes)\r\n  'ics4' 16x16 4-bit icon (128 bytes)\r\n  'ics8' 16x16 8-bit icon (256 bytes)\r\n  'is32' 16x16 32-bit icon (1024 bytes compressed to 656)\r\n  's8mk' 16x16 8-bit mask (256 bytes)\r\n  'icm#' 16x12 1-bit icon with mask (48 bytes)\r\n  'icm4' 16x12 4-bit icon (96 bytes)\r\n  'icm8' 16x12 8-bit icon (192 bytes)\r\n  'it32' 128x128 32-bit icon (65536 bytes compressed to 18912)\r\n  't8mk' 128x128 8-bit mask (16384 bytes)\r\n20 elements total found in AudacityProject.icns.</pre></dd>\r\n<dt><code>AudacityProject.icns</code> after these changes</dt>\r\n<dd><pre>Reading icns family from AudacityProject.icns...\r\n Extracting icons from AudacityProject.icns...\r\n Icon family size is 152918 bytes (including 8 byte header)\r\n Listing icon elements...\r\n  'TOC ' table of contents\r\n  'is32' 16x16 32-bit icon (1024 bytes compressed to 533)\r\n  's8mk' 16x16 8-bit mask (256 bytes)\r\n  'il32' 32x32 32-bit icon (4096 bytes compressed to 1612)\r\n  'l8mk' 32x32 8-bit mask (1024 bytes)\r\n  'it32' 128x128 32-bit icon (65536 bytes compressed to 15954)\r\n  't8mk' 128x128 8-bit mask (16384 bytes)\r\n  'ic08' 256x256 32-bit icon (262144 bytes compressed to 30482)\r\n  'ic09' 512x512 32-bit icon (1048576 bytes compressed to 86529)\r\n9 elements total found in AudacityProject.icns.</pre></dd>\r\n</dl>\r\n\r\nI don't really know how to interpret this data, but maybe it'll be useful.  I'm not a mac user, though. =||= I don't follow all of the details, but all observed behavior seems as expected when I build with these.\r\n\r\nI have cherry-picked and pushed it.\r\n\r\nThank you.\r\n =||= "], ["248", "Update most of the other icons", "Pokechu22", "Pokechu22", "02/24/18, 09:08:11 PM", "Updates the remaining icons to use the new logo.\r\n\r\n* `audacity.svg`: just a direct save of [the SVG](http://wiki.audacityteam.org/w/images/5/52/Audacity_Logo_large.zip) found on the wiki.\r\n* `icons/*/audacity.png`: I created these using imagemagick and the large SVG render (I didn't want to manually resize, and using the large image avoids the issues relating to continuously downscaling from lower resolution files).  Script I used:\r\n\r\n    ```\r\n    base=Audacity_Logo_large_transparent.png\r\n    for size in 16 22 24 32 48; do\r\n        convert \"$base\" -resize ${size}x${size} -extent ${size}x${size} \"icons/${size}x${size}/audacity.png\"\r\n        files+=\" $file\"\r\n    done\r\n    ```\r\n* `icons/*.xpm`: I used GIMP to generate these from the PNGs.  In each case, I used alpha level of 1 when GIMP prompted for it.  In retrospect it looks like imagemagick can also generate XPM, but I didn't realize that until I'd already manually done it.\r\n* `MusicalInstruments/_default_instrument.xpm`: manually edited.  This is the icon found in the mixer board, which was still using the old logo.\r\n* `AudacityLogo.xpm`, `AudacityLogo48x48.xpm`, `AudacityLogoAlpha.xpm`: all manually edited and saved with GIMP, making sure to keep the same size.  **EDIT**: However, I will note that originally these files had a shadow behind the logo, which I didn't keep because I don't know how to make such a shadow.\r\n\r\nI have _not_ updated `gnome-mime-application-x-audacity-project.xpm`; I couldn't find a template for it (and the icon itself doesn't look that great: ![gnome-mime-application-x-audacity-project](https://user-images.githubusercontent.com/8334194/35424871-8afeed76-024e-11e8-98b5-4d543160997b.png)).\r\n\r\nI've also figured out how these icons are used: when running `make install` in images, I saw the following printed:\r\n\r\n> ```\r\n> /bin/mkdir -p '/usr/local//share/icons/hicolor/16x16/apps'\r\n> /usr/bin/install -c -m 644 icons/16x16/audacity.png '/usr/local//share/icons/hicolor/16x16/apps'\r\n> /bin/mkdir -p '/usr/local//share/icons/hicolor/22x22/apps'\r\n> /usr/bin/install -c -m 644 icons/22x22/audacity.png '/usr/local//share/icons/hicolor/22x22/apps'\r\n> /bin/mkdir -p '/usr/local//share/icons/hicolor/24x24/apps'\r\n> /usr/bin/install -c -m 644 icons/24x24/audacity.png '/usr/local//share/icons/hicolor/24x24/apps'\r\n> /bin/mkdir -p '/usr/local//share/icons/hicolor/32x32/apps'\r\n> /usr/bin/install -c -m 644 icons/32x32/audacity.png '/usr/local//share/icons/hicolor/32x32/apps'\r\n> /bin/mkdir -p '/usr/local//share/icons/hicolor/48x48/apps'\r\n> /usr/bin/install -c -m 644 icons/48x48/audacity.png '/usr/local//share/icons/hicolor/48x48/apps'\r\n> /bin/mkdir -p '/usr/local//share/icons/hicolor/scalable/apps'\r\n> /usr/bin/install -c -m 644 audacity.svg '/usr/local//share/icons/hicolor/scalable/apps'\r\n> /bin/mkdir -p '/usr/local//share/pixmaps'\r\n> /usr/bin/install -c -m 644 gnome-mime-application-x-audacity-project.xpm icons/16x16/audacity16.xpm icons/32x32/audacity32.xpm '/usr/local//share/pixmaps'\r\n> /bin/mkdir -p '/usr/local//share/pixmaps'\r\n> /usr/bin/install -c -m 644 icons/48x48/audacity.xpm '/usr/local//share/pixmaps'\r\n> ```", "Hm, build failure because\r\n\r\n```\r\nMixerBoard.cpp: In member function \u2018void MixerBoard::LoadMusicalInstruments()\u2019:\r\nMixerBoard.cpp:1443:4: error: invalid conversion from \u2018char**\u2019 to \u2018const char**\u2019 [-fpermissive]\r\n    };\r\n    ^\r\n```\r\n\r\nwhich seems to be because `MusicalInstruments/_default_instrument.xpm` previously was `static const char` but now is `static char` - not something I intentionally changed, just what GIMP changed.  I see the same change happened in other files too, though some already were non-const.  I could manually change it back, but it seems odd. =||= Ah, it looks like there are actually scripts for the purpose of making the images const (rather 3 copies of it: [ControlButtons/degimpify](https://github.com/audacity/audacity/blob/master/images/ControlButtons/degimpify), [TranscriptionImages/degimpify](https://github.com/audacity/audacity/blob/master/images/TranscriptionImages/degimpify), [EditButtons/degimpify](https://github.com/audacity/audacity/blob/master/images/EditButtons/degimpify)).  So they're supposed to be changed to const. =||= Closing this as it was implemented with 35e947fa2f6691f1417b09d3663dac1639c7b3db (the only change that wasn't performed was the change here to the darkaudacity logo, which was just making it const; that probably doesn't matter). =||= "], ["249", "Update for FFmpeg 3.5", "Darrell Walisser", "walisser", "01/28/18, 08:49:45 PM", "\r\nSummary of changes in v3.5 this accounts for:\r\n\r\n- VOXWARE codec is removed\r\n- AVCodecContext->codec_name is removed, replaced with avcodec_get_name()\r\n- channel_layout is required to be set. Using av_get_default_channel_layout()\r\n- some constants have AV_ prefix, using #define to account for old constant names\r\n\r\nAdditionally:\r\n- fixes format string asserts in wxString::Printf (only tripped in debug build)\r\n\r\nAssuming 2.2.x is the oldest we are supporting, tested with 2.2.9 and current git master. Versions in-between are assumed to work.\r", "This looks like less work than I feared.  Thanks for the rapid work.\r\n\r\nSo, this can conditionally compile the right things either with the present contents of lib-src/ffmpeg, or at such time as we upgrade our lib-src.  Yes?\r\n\r\nPRL\r\n =||= Darrell, please answer some questions.\r\n\r\nDo you know how we can discover, since which version a file was in the interface?  I can't find such information here.  https://ffmpeg.org/doxygen/2.1/group__lavu__audio.html#gacb84f3e93a583e1f84a5283162a606a2\r\n\r\nYou add two FFMPEG_INITDYN calls.  So this may increase the possibilities that Audacity refuses to continue with an old FFmpeg library if it can't find either of the two new functions.  This did no happen with the version I have.  Is it likely with anybody else's versions?\r\n\r\nYou use the new functions in two places.  One is in import but only to get some information for logging messages.  The other sets a channel layout for export.  So, this is necessary to make export work in the new version.  It was not necessary with the old.  Could it cause any important change of behavior in the old?\r\n\r\nI have tried this out on a simple mono track and confirmed that I can still export an .m4a and re-import it.  So, \"First do no harm.\"\r\n\r\nPRL\r\n =||= On Fri, Jan 26, 2018 at 7:20 PM, Paul Licameli <notifications@github.com>\nwrote:\n\n> Darrell, please answer some questions.\n>\n> Do you know how we can discover, since which version a file was in the\n> interface? I can't find such information here.\n> https://ffmpeg.org/doxygen/2.1/group__lavu__audio.html#\n> gacb84f3e93a583e1f84a5283162a606a2\n>\nNot sure how you would do that besides stepping through each version. There\nis an \"APIChanges\" doc in FFmpeg but these aren't listed there.\n\nhttps://ffmpeg.org/doxygen/2.0/group__lavu__audio.html#gacb84f3e93a583e1f84a5283162a606a2\nhttps://ffmpeg.org/doxygen/2.2/group__lavu__audio.html#gacb84f3e93a583e1f84a5283162a606a2\n\u200b\nhttps://ffmpeg.org/doxygen/2.4/group__channel__mask__c.html#gacb84f3e93a583e1f84a5283162a606a2\nhttps://ffmpeg.org/doxygen/3.2/group__channel__mask__c.html#gacb84f3e93a583e1f84a5283162a606a2\nhttps://ffmpeg.org/doxygen/3.4/group__channel__mask__c.html#gacb84f3e93a583e1f84a5283162a606a2\n\nI'm not git expert, but I found this technique that seems suitable,\nalthough a bit painful. Find the header with the symbol and use git log\nwith \"show patch\" option and release tag. But this won't notice a function\nthat moved from a different header in the past, in which case the search\ncould be expanded to more of the header files.\n\ngit log -p n1.2.9 libavutil/channel_layout.h | grep\nav_get_default_channel_layout\n+ *   av_get_default_channel_layout);\n+uint64_t av_get_default_channel_layout(int nb_channels);\n\n\u200bShows av_get_default_channel_layout() is present in the log, but not here:\n\ngit log -p n1.0.9 libavutil/channel_layout.h | grep\nav_get_default_channel_layout\n\u200b\n\n\u200bSimilarly:\n\u200bgit log -p n0.8.9 libavcodec/avcodec.h | grep avcodec_get_name\n\u200b*nothing*\n\u200b\n\ngit log -p n0.9.4 libavcodec/avcodec.h | grep avcodec_get_name\n   The table is queried using the avcodec_get_name function.\n   If CONFIG_SMALL is true, the table is not compiled in; the\navcodec_get_name\n+const char *avcodec_get_name(enum CodecID id);\n\nYou add two FFMPEG_INITDYN calls. So this may increase the possibilities\n> that Audacity refuses to continue with an old FFmpeg library if it can't\n> find either of the two new functions. This did no happen with the version I\n> have. Is it likely with anybody else's versions?\n>\n\u200bBased on my git search, not likely.\u200b These are both old APIs. Also I don't\nsee any breaking signature changes (the enum CodecID was renamed to\nAVCodecID at some point, was the one change).\n\nI think the best way to validate is to compile against the versions we need\nto support and do an import/export check. This isn't a huge deal for me,\ntakes about 5 minutes per version to check. I don't know how far back I\nneeded to go, I believe cutoff is still 2.2 due to the Windows and OS X\nbuilds using the lib-src version.\n\n> You use the new functions in two places. One is in import but only to get\n> some information for logging messages. The other sets a channel layout for\n> export. So, this is necessary to make export work in the new version. It\n> was not necessary with the old. Could it cause any important change of\n> behavior in the old?\n>\nI think we can safely assume that channels == 1 or 2 will not cause any\nchange in behavior.\n\n\u200bIt would be difficult to validate exactly what was happening before v3.5,\nbut a quick search shows av_get_default_channel_layout() was being used\nheavily in the library and example programs even in v2.2\n\nI have tried this out on a simple mono track and confirmed that I can still\n> export an .m4a and re-import it. So, \"First do no harm.\"\n>\n> PRL\n>\n =||= On Sat, Jan 27, 2018 at 1:57 PM, Darrell Walisser <notifications@github.com>\nwrote:\n\n> On Fri, Jan 26, 2018 at 7:20 PM, Paul Licameli <notifications@github.com>\n> wrote:\n>\n> > Darrell, please answer some questions.\n> >\n> > Do you know how we can discover, since which version a file was in the\n> > interface? I can't find such information here.\n> > https://ffmpeg.org/doxygen/2.1/group__lavu__audio.html#\n> > gacb84f3e93a583e1f84a5283162a606a2\n> >\n> Not sure how you would do that besides stepping through each version. There\n> is an \"APIChanges\" doc in FFmpeg but these aren't listed there.\n>\n> https://ffmpeg.org/doxygen/2.0/group__lavu__audio.html#\n> gacb84f3e93a583e1f84a5283162a606a2\n> https://ffmpeg.org/doxygen/2.2/group__lavu__audio.html#\n> gacb84f3e93a583e1f84a5283162a606a2\n> \u200b\n> https://ffmpeg.org/doxygen/2.4/group__channel__mask__c.html#\n> gacb84f3e93a583e1f84a5283162a606a2\n> https://ffmpeg.org/doxygen/3.2/group__channel__mask__c.html#\n> gacb84f3e93a583e1f84a5283162a606a2\n> https://ffmpeg.org/doxygen/3.4/group__channel__mask__c.html#\n> gacb84f3e93a583e1f84a5283162a606a2\n>\n> I'm not git expert, but I found this technique that seems suitable,\n> although a bit painful. Find the header with the symbol and use git log\n> with \"show patch\" option and release tag. But this won't notice a function\n> that moved from a different header in the past, in which case the search\n> could be expanded to more of the header files.\n>\n> git log -p n1.2.9 libavutil/channel_layout.h | grep\n> av_get_default_channel_layout\n> + * av_get_default_channel_layout);\n> +uint64_t av_get_default_channel_layout(int nb_channels);\n>\n> \u200bShows av_get_default_channel_layout() is present in the log, but not\n> here:\n>\n> git log -p n1.0.9 libavutil/channel_layout.h | grep\n> av_get_default_channel_layout\n> \u200b\n>\n> \u200bSimilarly:\n> \u200bgit log -p n0.8.9 libavcodec/avcodec.h | grep avcodec_get_name\n> \u200b*nothing*\n> \u200b\n>\n\nThanks for this research.  So, we must go back in time to an FFmpeg version\nfrom 2013, to lose either of those functions.  That's far enough I'll call\nit safe.\n\n\n>\n> git log -p n0.9.4 libavcodec/avcodec.h | grep avcodec_get_name\n> The table is queried using the avcodec_get_name function.\n> If CONFIG_SMALL is true, the table is not compiled in; the\n> avcodec_get_name\n> +const char *avcodec_get_name(enum CodecID id);\n>\n> You add two FFMPEG_INITDYN calls. So this may increase the possibilities\n> > that Audacity refuses to continue with an old FFmpeg library if it can't\n> > find either of the two new functions. This did no happen with the\n> version I\n> > have. Is it likely with anybody else's versions?\n> >\n> \u200bBased on my git search, not likely.\u200b These are both old APIs. Also I don't\n> see any breaking signature changes (the enum CodecID was renamed to\n> AVCodecID at some point, was the one change).\n>\n> I think the best way to validate is to compile against the versions we need\n> to support and do an import/export check. This isn't a huge deal for me,\n> takes about 5 minutes per version to check. I don't know how far back I\n> needed to go, I believe cutoff is still 2.2 due to the Windows and OS X\n> builds using the lib-src version.\n>\n> > You use the new functions in two places. One is in import but only to get\n> > some information for logging messages. The other sets a channel layout\n> for\n> > export. So, this is necessary to make export work in the new version. It\n> > was not necessary with the old. Could it cause any important change of\n> > behavior in the old?\n> >\n> I think we can safely assume that channels == 1 or 2 will not cause any\n> change in behavior.\n>\n> \u200bIt would be difficult to validate exactly what was happening before v3.5,\n> but a quick search shows av_get_default_channel_layout() was being used\n> heavily in the library and example programs even in v2.2\n>\n\nDo I understand that you discovered that export did not work in 3.5 unless\nthis call was added?  It's not needed for compilation.\n\nEarlier versions may not have enforced it.  It appears to do no harm to add\nthe call.  Perhaps there is some subtle bug we haven't discovered that is\nfixed by adding it.\n\nI'm persuded to commit this now.  It should also satisfy the Debian people\nthat they won't need to wait for version 2.2.3 for a version that builds\nwith the coming FFmpeg.\n\nThank you Darrell.\n\nPRL\n\n\n\n\n>\n> I have tried this out on a simple mono track and confirmed that I can still\n> > export an .m4a and re-import it. So, \"First do no harm.\"\n> >\n> > PRL\n> >\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/249#issuecomment-361006723>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ALITYZ-vOsq3l9mGvn9Zq9hkNSZD6I2uks5tO3GLgaJpZM4RvBOz>\n> .\n>\n =||= I added a guard for those, and tested the even release versions\n(2.2,2.4,2.6,2.8,3.0,3.2) with import/export test on each.\n\nRebased and pushed to the current branch. On hindsight I should have opened\na new PR?\n\nOn Sun, Jan 28, 2018 at 11:17 AM, Paul Licameli <notifications@github.com>\nwrote:\n\n> *@Paul-Licameli* commented on this pull request.\n> ------------------------------\n>\n> In src/FFmpeg.h\n> <https://github.com/audacity/audacity/pull/249#discussion_r164303854>:\n>\n> > @@ -128,6 +128,13 @@ extern \"C\" {\n>        }\n>        #endif\n>     #endif\n> +\n> +   #if LIBAVCODEC_VERSION_MAJOR < 58\n>\n> Section A.12.3 of my good old K & R book (ANSI C version) says that when a\n> a macro is expanded, occurrences of the same macro name in the resulting\n> token sequence are not re-expanded. So this will not produce undefined\n> results from the preprocessor. Rather AV_CODEC_FLAG_QSCALE will expand to\n> CODEC_FLAG_QSCALE which will expand to AV_CODEC_FLAG_QSCALE again and then\n> it stops.\n>\n> Still, I'd agree we should not rely on that, and instead invent a third\n> constant name to use in those few places in Audacity.\n>\n> PRL\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/249#discussion_r164303854>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AA8r1TMkat989ND6iYxZjF0k2hzLU5sMks5tPJ2ZgaJpZM4RvBOz>\n> .\n>\n =||= No need for a new PR.  Thanks, I have merged it again.\r\n =||= > I added a guard for those, and tested the even release versions (2.2,2.4,2.6,2.8,3.0,3.2) with import/export test on each.\r\n\r\nNot sure what you tested, but I (along with [many other people](https://superuser.com/questions/1211211/import-ffmpeg-into-audacity)) cannot load any version newer than 2.2, or api 55 if you'd like =||= "], ["250", "Fix OpenMP build", "Darrell Walisser", "walisser", "10/14/18, 10:52:06 AM", "Make WaveTrackCache return smart pointer for GetTrack() so it may be referenced in OpenMP thread context. Propagate this change elsewhere.", "\"may be referenced\" but apparently isn't yet.  Is this commit only a piece of something bigger yet to be shared with us?\r\n =||= Nope, this is for a build breaker only. Since each thread has its own\nWaveTrackCache it needs to construct one for each thread, which takes the\nsmart pointer to WaveTrack.\n\nOn Tue, Jan 30, 2018 at 2:25 PM, Paul Licameli <notifications@github.com>\nwrote:\n\n> \"may be referenced\" but apparently isn't yet. Is this commit only a piece\n> of something bigger yet to be shared with us?\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/250#issuecomment-361705807>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AA8r1eMeKy5-2mDXNzszKZ2b8ReNLlUUks5tP2zCgaJpZM4Ry3Wi>\n> .\n>\n =||= I never did figure out all the steps for making OpenMP builds for myself.\n\nI don't mind if you want to parellelize a few loops with some easy\n#pragmas, but as I have said elsewhere, if we want to do more serious\nconcurrency work in Audacity, it will need much more hard work and thought\nthan this.  Such as a higher-level task-based decomposition of the work to\nallow progressive rendering of spectrograms, that other view navigation and\nplayback operations don't block on.\n\nPRL\n =||= On Tue, Jan 30, 2018 at 2:38 PM, Paul Licameli <notifications@github.com>\nwrote:\n\n> I never did figure out all the steps for making OpenMP builds for myself.\n>\n>\n\u200bOn GCC it's simple, just add -fopenmp to cflags. On VC++, and XCode, won't\nwork out of the box, (deprecated support, or in Apple's case, disabled). Of\ncourse it *will* work on those if you can get the right compiler (Intel\ncompiler or clang with OpenMP enabled). So it looks like the open standards\nare losing the battle for the desktop. Which is surprising given Intel is\nthe main backer of OpenMP.\nThe cross-compiled version from my branch works too, but probably needs to\nbe rebased and fixed up again.\n\u200b\n\n> I don't mind if you want to parellelize a few loops with some easy\n> #pragmas, but as I have said elsewhere, if we want to do more serious\n> concurrency work in Audacity, it will need much more hard work and thought\n> than this.\n\n\n\u200bYes, and it took a lot just to make this work. I wouldn't even know where\nto start with something that actually could work well. Maybe throwing out\nall the display logic and starting over would be easier than attempting to\nrefactor.\n\u200b\n =||= Thanks Darrell.\r\nApologies for the long delay before committing this.\r\nAs far as I can see this has minimal if any downside for normal compilation, and so if it helps OpenMP there is no reason not to have it in master.  Accordingly I committed it and it will be in 2.3.1. =||= "], ["251", "Fix Ukrainian translation", "Yuri Chornoivan", "yurchor", "02/03/18, 02:23:18 PM", "Fixes according to a review by Olexander Pylypchuk.", "NaN"], ["253", "Update pl.po from Transifex", "Grzegorz Pruchniakowski", "Gootector", "02/08/18, 10:33:36 PM", "Update pl.po from Transifex", "Thanks.  I commit it at a76fd3d44cb14c59e91fb046a45ced6309f59293, with the normalization of line breaks done by\r\n\r\nmsgmerge pl.po audacity.pot\r\n\r\nwhich makes the diff of pl.po versions very small.\r\n =||= Thank You very much, Paul :D\r\n\r\nGreetings,\r\nGootector =||= "], ["254", "Updated and migrated the file to the latest appstream specs", "Deleted user", "ghost", "02/22/18, 05:27:41 PM", "+ Added GPL2 to project license\r\n+ Added required metadata license\r\n+ Added required nametag\r\n+ Added required summary\r\n+ Added categories\r\n+ Changed url's to https\r\n+ Added url for bugtracker, faq, help, donate and translate\r\n+ Fixed broken screenshot url's", "NaN"], ["255", "Warning fixes", null, "andheh", "02/25/18, 06:47:33 PM", "Fixed a couple of easy-to-fix compiler warnings (GCC on Linux).", "Thanks.\r\nWe're keen to remove warnings.\r\nPlease don't include changes to lib-src in the revised pull request.  We try not to patch third party libs if we can help it. =||= Hi James!\r\nOk, sure.\r\nWhat about files in lib-src/header-substitutes/, are these third-party files as well? =||= Changes in header-substitutes are fine.\r\n\r\nThere will likely be a delay before we apply the patch as we are in code freeze prior to releasing 2.2.2.  Hopefully within 2 weeks.  Also I work on Windows, only occasionally Linux, so someone more familiar with linux, probably Steve, will be checking/approving this. =||= Sounds good. All changes in lib-src have been reverted.\r\n\r\nI guess you should also check https://github.com/audacity/audacity/pull/255/commits/e044ef3f8088e6364ba6df7a36fc8c73cffcc185 on Windows.\r\nI'm not sure if MSVC will complain about unused variables there... =||= Windows does complain about the unused function parameters.  \r\nPlease use WXUNUSED() around the parameter instead.  \r\n\r\nThe 'compiler food' idiom arose from some case once upon a time, when a parameter was used in Mac, but not windows, so using WXUNUSED was 'too coarse'. =||= Could I also use a cast to void in the function body instead, or is WXUNUSED preferred in the audacity code?\r\n\r\nAdding WXUNUSED to the unused parameters makes the function parameter list look very cluttered in my opinion. =||= cast to void is fine.\r\n\r\nThe competing forces are that (a) we mostly use wxWidgets WXUNUSED() so for consistency one might and (b) we are moving over to avoiding wxisms like wxARRAY and similar more and more in our code.\r\n\r\nSo your preference to use cast to void is probably better, and it was just old habits that made me suggest WXUNUSED. =||= I created a revised version of this pull request. See pull request https://github.com/audacity/audacity/pull/260. =||= "], ["256", "Update pl.po from Transifex", "Grzegorz Pruchniakowski", "Gootector", "02/22/18, 05:57:31 AM", "File fixes a two typos. Ready to merge.\r\n\r\nThanks and greetings,\r\nGootector", "I'm sorry this was too late for inclusion in version 2.2.2.  I will merge it soon.\r\n\r\nPRL\r\n =||= "], ["257", "Fix --without-midi build", "Lars Wendler", "Polynomial-C", "02/22/18, 05:26:57 PM", "See downstream bug: https://bugs.gentoo.org/637110", "See also #210 =||= "], ["258", "Scripting", "James Crook", "JamesCrook", "02/24/18, 07:32:44 PM", "This adds (more) scripting via mod-script-pipe, via chains and via the menu extra->scriptables.  The scriptables are much extended, with new functions and new parameters.  Also new example scripts to fetch images for the manual.\r\n\r\nDeliberately does NOT include the (aud-do) Nyquist command.", "Rebased and merged now at 05de90d4a76d54580fa1f3add48e063bf09c74a4\r\n =||= "], ["259", "Update sv.po", "A. Regnander", "Regnander", "08/12/18, 03:01:57 PM", "Fixed a few typos, adjusted the ampersand for the \"Extra\" context menu, updated an old string, rewrote some strings", "NaN"], ["260", "GCC warning fixes", null, "andheh", "03/06/18, 10:10:44 PM", "Fixed a couple of easy-to-fix compiler warnings (GCC on Linux).\r\n(Revised version of pull request https://github.com/audacity/audacity/pull/255)", "Rebased and merged.  Thanks! =||= "], ["261", "Fix minor typos", "Yuri Chornoivan", "yurchor", "03/21/18, 02:00:50 PM", "Thanks for fixing these typos.", "Thanks.  Committed by Paul.\r\n8918744e62fae0c432dd1a442c104ac7d607a904 =||= "], ["262", "refactor SeekLeftOrRight", "Eva Short", "evashort", "03/14/18, 01:56:20 PM", "NaN", "Is this to serve some other purpose?  Do you wish to add other commands?\r\n =||= No, I just offered to clean it up as a familiarization task.\n\nOn Thu, Mar 8, 2018 at 1:26 PM, Paul Licameli <notifications@github.com>\nwrote:\n\n> Is this to serve some other purpose? Do you wish to add other commands?\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/262#issuecomment-371629738>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AHSDffo9AQy4tia_TyL_mUJ96xoSg17mks5tcaHpgaJpZM4SjVtU>\n> .\n>\n =||= I submitted an email to audacity-devel about it but I'll put it here as well:\r\n\r\nI finished my initial refactor of SeekLeftOrRight. I managed to remove 41 lines of code while making it (in my opinion) more readable.\r\n\r\nI removed some dead code for seeking by pixels while the audio is playing, but it would be very easy to restore in the future.\r\n\r\nI noticed the slightly odd behavior that when the audio is playing, shift+ctrl+arrow still constrains on the current selection even though shift+arrow is overridden to move the playback cursor. I disabled shift+ctrl+arrow during playback.\r\n\r\nAside from that, all the existing behavior should be preserved. I made a spreadsheet describing the existing behavior: https://gist.github.com/evanshort73/0b130c923edc12196ea1480a6c3d0188\r\n\r\nOf course I am open to any feedback about this pull request and I would greatly appreciate anyone who takes the time to review it. =||= Thanks.  I've pulled #263 instead. =||= "], ["263", "Second refactor of seekLeftOrRight", "Eva Short", "evashort", "03/14/18, 01:57:07 PM", "Updated version of https://github.com/audacity/audacity/pull/262 using enums instead of bool flags and replacing some else clauses with early returns. I'm just offering this as an alternative to the first refactor to find out whether the team thinks it's a step in the right direction.", "Thanks.  This is now in HEAD. =||= "], ["264", "Translate command names", "Paul Licameli", "Paul-Licameli", "03/14/18, 11:34:50 PM", "Complete the translation of choices in the Select Command dialog:  for Special commands, Effects, commands, and the two built-in Macros.\r\n\r\nSuppress the added short (CamelCase) command name in non-English locales, as unhelpful to monolingual foreign users.  (If you don't like this, leave it out, but please cherry-pick the other parts.)", "NaN"], ["265", "Migrate old chains...", "Paul Licameli", "Paul-Licameli", "03/15/18, 12:19:28 PM", "... Copy old Chains files to Macros, once only per session, never overwriting.\r\n\r\nLeave old files in place in case the user downgrades their Audacity.\r\n\r\nPlease consider this for merge!  A very small amount of extra code that will eliminate a nuisance for established Chains users and keep them happy.\r\n\r\nI tested this, and indeed the old Chain file format is (so far) still interpreted by Audacity 2.3.0 once the file is in the right place.\r", "What about:\r\n\r\n**Zombie Chains**\r\nWhere a user had, say 'Noise Removal' chain in 2.2.2, and in 2.3.0 creates a 'Noise Reduction' chain.  In 2.3.0 he then deletes 'Noise Removal' which he does not want any more.  However, it keeps being resurrected.  =||= Yep, this problem occurred to me as I was going to sleep, but will be\neasily fixed too.\n\nPRL\n\n\nOn Thu, Mar 15, 2018 at 4:49 AM, James Crook <notifications@github.com>\nwrote:\n\n> What about:\n>\n> *Zombie Chains*\n> Where a user had, say 'Noise Removal' chain in 2.2.2, and in 2.3.0 creates\n> a 'Noise Reduction' chain. In 2.3.0 he then deletes 'Noise Removal' which\n> he does not want any more. However, it keeps being resurrected.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/265#issuecomment-373302997>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ALITYXL_ASE6faGSWs8RSjgnJBT29ouUks5teisagaJpZM4SrXbO>\n> .\n>\n =||= Revised commit handles removal of macros, and also does not create an empty Chains folder where none existed =||= Thanks!\r\nAt some future date we will likely retire the checking-of-chains subdirectory. \r\nMerged into master. =||= On 15 March 2018 at 12:19, James Crook <notifications@github.com> wrote:\n\n> Thanks!\n> At some future date we will likely retire the checking-of-chains\n> subdirectory.\n> Merged into master.\n>\nI presume that until then, users could continue to \"install\" chains /\nmacros into their \"Chains\" folder?\nI don't see that this has really solved anything. It's just delayed the\nimpact and added a bit of clutter in the meantime.\n\nSteve\n\n\n\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/265#issuecomment-373357225>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ALI9SblOJThebPYkPu17ovVVtMGGe0zYks5telxbgaJpZM4SrXbO>\n> .\n>\n =||= Steve - they could, but said chains will be copied across to macros, so they will not lose them when we do retire the check.  We're not getting dups like Nyquist, and we are not risking losing macros when we do retire the feature.\r\n\r\nI think things will be even better when Import and Export buttons are actually implemented, since those buttons will go to the new directory, not the old.  Most users will go there to install chains provided to them by others. =||= On Thu, Mar 15, 2018 at 8:41 AM, Steve Daulton <notifications@github.com>\nwrote:\n\n> On 15 March 2018 at 12:19, James Crook <notifications@github.com> wrote:\n>\n> > Thanks!\n> > At some future date we will likely retire the checking-of-chains\n> > subdirectory.\n> > Merged into master.\n> >\n> I presume that until then, users could continue to \"install\" chains /\n> macros into their \"Chains\" folder?\n> I don't see that this has really solved anything. It's just delayed the\n> impact and added a bit of clutter in the meantime.\n>\n> Steve\n>\n\nI repeat that users of 2.2.2 and earlier who rely on their favorite Chain\nfiles can simply continue using them without the nuisance of finding the\nfiles and moving them to a new place.\n\nI urge this as a very important requirement of the Macros project, not to\nbe neglected if we want users to receive version 2.3.0 without grumbling\nabout the migration.\n\nI don't know what you mean by delating the \"impact.\"\n\nPRL\n\n\n\n>\n>\n>\n> > \u2014\n> > You are receiving this because you are subscribed to this thread.\n> > Reply to this email directly, view it on GitHub\n> > <https://github.com/audacity/audacity/pull/265#issuecomment-373357225>,\n> > or mute the thread\n> > <https://github.com/notifications/unsubscribe-auth/\n> ALI9SblOJThebPYkPu17ovVVtMGGe0zYks5telxbgaJpZM4SrXbO>\n>\n> > .\n> >\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/265#issuecomment-373362578>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ALITYYcsqoMDgBiT49POeHivU1qRfp9Oks5temGOgaJpZM4SrXbO>\n> .\n>\n =||= On Thu, Mar 15, 2018 at 8:46 AM, James Crook <notifications@github.com>\nwrote:\n\n> Steve - they could, but said chains will be copied across to macros, so\n> they will not lose them when we do retire the check. We're not getting dups\n> like Nyquist, and we are not risking losing macros when we do retire the\n> feature.\n>\n\nWhat's this talk of \"retirement\"?  Is the Macros feature only a step to\nsomething else I don't know about?\n\n\n> I think things will be even better when Import and Export buttons are\n> actually implemented, since those buttons will go to the new directory, not\n> the old. Most users will go there to install chains provided to them by\n> others.\n>\nThat is the hope.  It is important that macros have Import and Export.  I\nrecollect I was told by someone in this group, I don't recall when or by\nwhom, maybe Peter, that locating the Chains files was an undocumented\nfeature of the old Audacity, not in the manual, and users shouldn't do it.\nWell sorry, they did do that and it was cumbersome but useful to them to\nshare chains, and it's good that there will now be a supported and\ndocumented way to do that.\n\nI suggested drag and drop of chains files onto the Macros dialog as a way\nto make the Import even simpler.  James approved the idea, but I have not\nattempted the implementation.\n\n\nPRL\n\n\u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/265#issuecomment-373363810>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ALITYVBL1EznoGYDLp_qmjB4cktShTlkks5temKjgaJpZM4SrXbO>\n> .\n>\n =||=  Clarification: \"Retire the checking-of-the-chains subdirectory feature\" (and so only checking the macros subdirectory). =||= On Thu, Mar 15, 2018 at 2:38 PM, James Crook <notifications@github.com>\nwrote:\n\n> Clarification: \"Retire the checking-of-the-chains subdirectory feature\"\n> (and so only checking the macros subdirectory).\n>\n\nSo you are saying what I said?  This checking of Chains should be in at\nleast one Audacity version, so that users who upgrade to each new version\nwill have the copy of files done automatically.\n\nI don't see the harm of leaving this small amount of code in there\n\"forever,\" meaning anyway several versions, until such time as we might\nwant to rename the Macros directory to something else again.\n\nPRL\n\n\n\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/265#issuecomment-373481052>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ALITYdzsXCTp8bLYVbZK6m5qgTqK-d1-ks5terUngaJpZM4SrXbO>\n> .\n>\n =||= "], ["267", "Ellipsis problem", "Paul Licameli", "Paul-Licameli", "03/16/18, 08:20:09 AM", "Fix wrong inclusion of menu commands ending in ... in the Select Commands dialog, when locale is not English but (e.g.) Ukrainian.\r\n\r\nDon't test for \"...\" in the translated menu item name -- it might not be there.  (Was Unicode single ellipsis character instead for uk.po, who knows how else it might translate.)\r\n\r\nInstead, pass a boolean into CommandManager functions when the untranslated name contains \"...\", along with the translated name, and record that boolean, and later use it.\r\n\r\nThis is rather a lot of work for the result, but some similar amount of work seemed unavoidable.\r", "Thanks.\n\n\n\nOn Fri, Mar 16, 2018 at 4:20 AM, James Crook <notifications@github.com>\nwrote:\n\n> Merged #267 <https://github.com/audacity/audacity/pull/267>.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/267#event-1524988684>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ALITYRuJYCdK0Ux02E3bnr9XTlW2oDYLks5te3W_gaJpZM4StNVC>\n> .\n>\n =||= "], ["268", "Fix typo \"Linkus\"", null, "Double-A-92", "03/24/18, 11:23:55 AM", "NaN", "Merged\r\nhttps://github.com/audacity/audacity/commit/0fb08f74c8cc301ba0a400abbacce5eb9a6e6347 =||= "], ["269", "fixed some warnings (GCC/Linux)", null, "andheh", "03/24/18, 10:50:19 AM", "three minor fixes for GCC in debug mode", "added fixes in VSTEffect.cpp affect debug and release mode =||= Merged\r\nhttps://github.com/audacity/audacity/commit/ef5cc132efd8a6a37c661a7ddca07b27851056f1 =||= "], ["270", "Const'ify xpm", "Henric Jungheim", "henricj", "03/27/18, 09:36:03 AM", "The arrays storing the pointers to the XPM strings can be const.  This change moves a surprising chunk of data from read/write to read-only memory (several hundred kilobytes on 64-bit builds, presumably about half that for 32-bit builds).", "Thank you, Henric!\r\n =||= "], ["271", "Choice control names", "Paul Licameli", "Paul-Licameli", "03/27/18, 08:35:17 PM", "NaN", "Oops, that was hasty.\r\n\r\nI was expecting details to be critiqued and that the merge would wait.\r\n\r\nDid you read the email I wrote to -quality?\r\n\r\nPRL\r\n =||= "], ["272", "Update from original", "JNylson", "JNylson", "08/12/18, 02:36:47 PM", "NaN", "Updating audacity.pot directly is wrong, because it is generated from source files.  The source files should be corrected instead.\r\n\r\nIf these corrections are good to make, but you have not explaiend why.\r\n\r\nPRL\r\n =||= These commits are based on very out-of-date versions that conflict with other updates to pt_BR.po done by others.  Also, as I explained, changing msgids directly in audacity.pot is wrong.  They are generated from C++ and must be consistent with the strings in those source code files.\r\n =||= "], ["273", "Update to Lithuanian language", null, "jjimmyleo", "08/12/18, 02:26:17 PM", "I have noticed that the lithuanian language file has not been updated for ages and was only a few percent completed so I pushed the completion to about 50 percent. I'll fully complete it soon but just wanted to have half of it out there", "Thank you for this effort.\r\n\r\nPlease be aware that audacity.pot is not in a final form for the next release and will surely be updated again, requiring more work from translators.  I hope you will follow the audacity-translation mailing list to get notifications.\r\n\r\n =||= Thank you for your response. \r\n\r\nJust wanted to ask also will it still get merged or should I just wait for the updated form until i finish the translation? =||= This commit brings lt.po from 10% complete to 46%.\r\n\r\nThanks, and I hope you will find time to complete it still further.\r\n =||= "], ["274", "Update pl.po from Transifex - 100% completed", "Grzegorz Pruchniakowski", "Gootector", "08/12/18, 02:57:49 PM", "This is the latest polish translation from Transifex - 100% completed.\r\n\r\nGreetings,\r\nGootector (Grzegorz Pruchniakowski)", "I took instead another version of pl.po available from Transifex, that is 100% up-to-date with an even more recent version of audacity.pot.\r\n =||= Yes, the recent version of translation is on the Transifex. Now, in the Audacity repo :D Thank you very much for update!\r\n\r\nGreetings,\r\nGootector =||= "], ["275", "Mac: script to build wx 3.1.1 & change xcodeproj to use 10.7 minimum", "Paul Licameli", "Paul-Licameli", "04/16/18, 09:06:13 AM", "Changes that worked for me to build wxWidgets 3.1.1 and then build Audacity using it and the 10.7 SDK.\r", "I'd love to pull this, but am concerned about checking the steps to get 10.7 SDK - which are in our old  https://github.com/audacity/audacity/blob/master/mac/Build.txt .  Could you check they work, and update Build.txt too with any changes needed and add it to this pull request?  Then the scripts, pbxproj and the instructions stay in step. =||= "], ["276", "Typos fixes in the French translation", "Olivier Humbert", "trebmuh", "06/08/18, 05:57:20 PM", "NaN", "@Paul-Licameli : as discussed on the -translation ML, could you please merge this one before I start the FR translation against the new pot file? Thanks. =||= @Paul-Licameli @JamesCrook : ping? =||= Hi Olivier.\r\nIt should have been Paul responding as he is managing translations.  He may have a reason why he didn't merge this, but as he hasn't given you a reason, I went ahead and merged it.  Sorry you had to wait for this. =||= My apologies for neglecting this.  The notifications were going to a spam folder and I overlooked them.\r\n\r\nPRL\r\n =||= Thanks @JamesCrook and @Paul-Licameli  =||= "], ["277", "Add TransportOSC feature that sends OSC message on transport button triggering", "Gr\u00e9gory DAVID", "groolot", "11/09/19, 04:40:10 PM", "# Description\r\nBased on the Transport buttons triggering, OSC messages are sent to a configurable (through Preferences settings) target.\r\n\r\nEach button is configurable seperatly.\r\n\r\n# Goal\r\nThe aim of this feature is to help, in a school webradio studio, drive a Raspberry PI light switch to advise people outside the studio that RECORDING is ON.\r\n\r\nBy simply send an OSC message when triggering button, no more switch handling is necessary.", "Discussion initiated in https://sourceforge.net/p/audacity/mailman/audacity-devel/?viewmonth=201805&viewday=24 =||= Thanks.  We're not going to pull this.  It's too specialised a special use case. =||= "], ["278", "updated and renamed appdata.xml file", null, "joergister", "05/30/18, 10:32:00 AM", "renamed the appdata.xml file to match the appstream-spec, added release information, addet OARS information (Open Age Ratings Service), changed `<launchable type=\"desktop\">audacity.desktop</launchable>` to `<launchable type=\"desktop-id\">audacity.desktop</launchable>` to match the appstream spec.", "Rejected.  It breaks the Travis build.  Please check more carefully before making a pull request. =||= "], ["279", "Update ko.po", null, "chanu48", "08/12/18, 02:13:15 PM", "I changed some words and I hope Korean users can use this program a little more easily becuase of my changes.", "Unfortunately this commit has merge conflicts with commit 506f6c3a2a12654d7cd59a0fefac1d0659ca5c56, where the work of another Korean translator was added.  That commit brought the translation up to 90% completion.\r\n\r\nPlease download latest ko.po and recreate these few corrections in your editor, then make another pull request.\r\n =||= "], ["280", "fix typos and fuzzys in it l10n", "Valerio Bozzolan", "valerio-bozzolan", "08/12/18, 02:39:21 PM", "NaN", "NaN"], ["281", "[WIP] Meson port", "Salamandar", "Salamandar", "11/01/18, 11:25:18 PM", "As you may know, Meson presents itself as a replacement for Autotools, while staying \"Gnu-compliant\" and having a clearer syntax than CMake or autoconf/automake (and being incredibly faster).\r\n\r\nI started to port Audacity to Meson and it's almost complete. I just need to add some tweaks to use the internal dependencies.\r\n\r\nWhat do you think about that ?", "Discussion should happen on audacity-devel mailing list.  Not many devs visit the pull requests.  =||= No author response, so closed. =||= "], ["282", "Update Lithuanian translation", null, "welaq", "07/13/18, 12:12:44 AM", "NaN", "NaN"], ["283", "Add lt language to audacity.desktop.in", null, "welaq", "07/13/18, 08:24:02 AM", "NaN", "Thanks. =||= "], ["284", "Fix double space", null, "scootergrisen", "08/12/18, 02:27:09 PM", "NaN", "NaN"], ["285", "Update Russian translation", "Alexandre Prokoudine", "prokoudine", "08/12/18, 01:53:43 PM", "Had to use Audacity again, got a bit frustrated over some user-visible untranslated entries, did a quick update.", "Thanks Alexandre, but this failed to pass Travis.  There is at least one error to fix:\r\n\r\nru.po:8971: number of format specifications in 'msgid' and 'msgstr' does not match\r\n/usr/bin/msgfmt: found 3 fatal errors\r\n =||= Thanks! Fixed =||= Well, should I close this PR and open a new one? =||= Don't do that, I will catch up with this today.\r\n =||= "], ["286", "EBU R128 loudness normalization and normalize progress bar bugfix", "Max Maisel", "mmmaisel", "07/24/18, 07:13:00 PM", "This pull request implements EBU R128 loudness normalization in the Normalize effect.\r\n\r\nIt also refactors some parts of Biquad to allow code reuse in the \r\nloudness weighting filter implementation and fixes an existing bug in the\r\nNormalize progress bar when normalizing stereo tracks.\r\n\r\nMore details about the changes can be found in the individual commit messages.", "NaN"], ["287", "Normalize fixes and improvements", "Max Maisel", "mmmaisel", "07/26/18, 03:42:09 PM", "This Pull Request fixes an regression introduced by Normalize effect refactoring and\r\nseparates user preset values for LUFS and peak normalization.\r\nIt also improves the EBU R128 sample rate adaption source references.", "NaN"], ["288", "Don't expose non-translatable strings for translations", "Deleted user", "ghost", "08/12/18, 02:17:28 PM", "There are a few strings that (IMO) probably shouldn't be exposed to translators (things like numbers, pure printf commands, window class names).  I changed the _() macros to wxT().", "Thanks.  I leave it to Paul to decide whether to apply these changes.  Sometimes we do need to offer unexpected things for translation - for example commas are not used the same in all languages. =||= James is right:  even strings containing only punctuation may require localization because languages may have slightly different conventions.\r\n\r\nBut thank you for finding \"ToolDock\".  I think the correct change there is the opposite:  it should be a user-visible string, so should keep the _ macro but insert a space instead.\r\n =||= "], ["289", "Fix too low loudness normalization levels.", "Max Maisel", "mmmaisel", "07/27/18, 03:13:42 PM", "LUFS are defined as the power of the signal, not as the root mean square.\r\nAccidential use of the RMS caused incorrect normalization to only half\r\nof the LUFS value.", "NaN"], ["290", "Rewrite commit 1bc0f0f without further changes to lib-src...", "Paul Licameli", "Paul-Licameli", "08/02/18, 08:16:27 AM", "... Reuse the external function registration added earlier in 2.3.0\r\ndevelopment, for support of internationalization in Nyquist.\r\n\r\nThis way, we avoid making cyclic static linkage dependencies between the\r\nlibrary and the application.", "NaN"], ["291", "Scrubbing rewrite 1", "Paul Licameli", "Paul-Licameli", "08/22/18, 12:58:00 AM", "This includes preliminaries for rewriting scrubbing without the condition variable, by having only two threads left to contend for the relevant mutex -- not three.\r\n\r\nIt also rewrites the update of play head position drawn during scrubbing, anticipating other developments of improved seeking and adjusting loop play, though these may be seen as irrelevancies to the more immediate problems of 2.3.0.\r\n\r", "I'll retract this request and wait for 2.3.1.\r\n =||= "], ["292", "Seek fix", "Paul Licameli", "Paul-Licameli", "08/22/18, 12:59:53 AM", "The place in the PortAudio callback that detects a dried-up RingBuffer really shouldn't be hit.  We should eliminated all identifiable causes of that.\r\n\r\nJames lately fixed the case where it happened with scrubbing on WASAPI.\r\n\r\nThese changes fix it in case of seeking (with mouse, not arrow keys).  First, it happened most of the time seeking; then after some of the fix, there remained the cases of very slow mouse movement, and of moving the mouse past the end of track.\r\n\r\nIncidentally some of the breaking-up of very big AudioIO functions is accomplished here:  first I split out AudioIO::AllocateBuffers, then in other commits I make modifications.\r\n\r\nThese modifications attempt to maintain a certain minimum occupancy in the RingBuffer, and will be a preliminary to eliminating the use of a condition variable, perhaps in the next Audacity version.\r\n\r", "Closing this, will reopen a pull request for a rebased branch, with a typo fixed in one commit comment.\r\n =||= "], ["293", "Seek fix", "Paul Licameli", "Paul-Licameli", "08/26/18, 12:46:50 PM", "(rebased onto more recent master)\r\n\r\nThe place in the PortAudio callback that detects a dried-up RingBuffer really shouldn't be hit. We should eliminated all identifiable causes of that.\r\n\r\nJames lately fixed the case where it happened with scrubbing on WASAPI.\r\n\r\nThese changes fix it in case of seeking (with mouse, not arrow keys). First, it happened most of the time seeking; then after some of the fix, there remained the cases of very slow mouse movement, and of moving the mouse past the end of track.\r\n\r\nIncidentally some of the breaking-up of very big AudioIO functions is accomplished here: first I split out AudioIO::AllocateBuffers, then in other commits I make modifications.\r\n\r\nThese modifications attempt to maintain a certain minimum occupancy in the RingBuffer, and will be a preliminary to eliminating the use of a condition variable, perhaps in the next Audacity version.", "NaN"], ["295", "Typos", "Olivier Humbert", "trebmuh", "08/30/18, 03:11:22 AM", "Doing the French translation update, I've meet those.\r\nHope that helps.\r\nOlivier", "Thank you.\r\n\r\nI cherry-picked the two commits that change the C++ source code.\r\n\r\nOne corrects spelling in an i18n-hint comment.  The other changes http: to https: in a URL that was part of an internationalized string.  So that other requires a small update to audacity.pot.\r\n\r\nThe other changes, to audacity.pot and to the .po files, should instead by regenerated by the gettext tools from these source code changes.\r\n =||= :+1:  =||= "], ["296", "French translation update for the upcoming 2.3.0", "Olivier Humbert", "trebmuh", "08/30/18, 09:30:31 AM", "Strings update + typos fixes", "@JamesCrook @Paul-Licameli : there is [on error on the travis build](https://travis-ci.org/audacity/audacity/builds/422322306#L5904) that I don't understand and thus, don't know how to fix.\r\n\r\nThis is related to [this translation entry](https://github.com/trebmuh/audacity/blob/patch-1/locale/fr.po#L17068).\r\n\r\nAny advice welcome. =||= Sorry Olivier, I think we made some procedural errors in updating our audacity.pot.  All the generated lines\r\n#, elisp-format\r\nshould instead have been\r\n#, lisp-format\r\n\r\nI think we need to correct our audacity.pot first and then ask you to merge and update again.\r\n =||= Hi @Paul-Licameli and all.\r\n\r\nI've manually replaced the `#, elisp-format` by `#, lisp-format` (they were only 3 occurrences in the file) and the travis build now passes. Thanks for the hint.\r\n\r\nCan you please merge this PR before updating the pot file? I fear having to redo all the string translations if not. =||= Thanks @JamesCrook :+1: \r\n@Paul-Licameli let me know on the translation mailing list when/if a new .pot file is available and then the French translation .po file needs an update.\r\n =||= "], ["297", "Update fr.po", "Olivier Humbert", "trebmuh", "08/30/18, 05:32:05 PM", "refinements + timestamp update + typos + fixes + personal comments + min/MAJ", "Thanks.  I've merged this. =||= "], ["298", "Update fr.po", "Olivier Humbert", "trebmuh", "08/30/18, 06:27:19 PM", "fixes a fuzzy + timestamp update + remove the transifex link which is longggggg outdated (it's rating the translation at 59.4% finished while it's 100% translated here)", "NaN"], ["299", "French translation update", "Olivier Humbert", "trebmuh", "08/31/18, 01:05:21 PM", "2 strings finished + timestamp update", "Thanks.  Merged to master. =||= "], ["300", "Update the French translation", "Olivier Humbert", "trebmuh", "09/01/18, 08:08:29 AM", "NaN", "Merged =||= "], ["301", "Update polish translation from Transifex", "Grzegorz Pruchniakowski", "Gootector", "09/02/18, 11:02:08 AM", "Update polish translation from Transifex", "Thanks. =||= I added update for pl translation from Transifex (#303 ). Could you merge it? =||= "], ["302", "Update Ukrainian translation", "Yuri Chornoivan", "yurchor", "09/02/18, 10:09:42 AM", "Tested with \"msgfmt -vc\" for validity.\r\n\r\nThanks in advance for merging this PR.", "Thanks Yuri! =||= "], ["303", "Update polish translation from Transifex", "Grzegorz Pruchniakowski", "Gootector", "09/15/18, 01:32:00 PM", "Update polish translation from Transifex", "Thanks committed. =||= "], ["304", "Update issue templates", "James Crook", "JamesCrook", "09/10/18, 06:16:34 PM", "NaN", "Please hold off on merging this!  A pull request was the only way to get editable versions of the defaults. =||= Committed. =||= "], ["305", "wxWidgets as a submodule", "Martin Delille", "MartinDelille", "05/31/20, 05:27:49 PM", "This is a work in progress because I couldn't test the compilation on my laptop (unable to find Xcode 4.3.3).\r\n\r\nI opened a thread on the audacity-devel@lists.sourceforge.net list so feel free to speak about it here or there.", "Martin, we have not forgotten you!\r\n\r\nI hope to cooperate with you during the 2.3.1 development cycle to try out submodules for Audacity.\r\n\r\nBut right now, of course, the 2.3.0 release is imminent and takes priority.\r\n\r\nPRL\r\n =||= No worries! I'm currently focus on an OMF import/export library: https://github.com/MartinDelille/libomf/ =||= Should this be under \"vendor/wxWidgets\" or \"lib-src/wxWidgets\"?  Perhaps there will be \"lib-src\" directories that will switch to submodules in the future (since that makes managing changes much easer), if so, should they move from \"lib-src\" to \"vendor\"? =||= @henricj Changing from `lib-src` to `vendor` would imply changing 178 files. I would suggest to go step by step and putting only submodules in the `vendor` folder.\r\n\r\n`lib-src` folder could contains external sources that haven't been converted to submodules yet. =||= > @henricj Changing from lib-src to vendor would imply changing 178 files. I would suggest to go step by step and putting only submodules in the vendor folder.\r\n> lib-src folder could contains external sources that haven't been converted to submodules yet.\r\n\r\nWhich 178 files?  One can add a submodule to the lib-src directory without changing anything else in that directory.  For example, see the [Add wxWidgets as a submodule under lib-src](https://github.com/henricj/audacity/commit/6a5ded289aecc5c387037000b782a680899c3bcf) commit in my [global-settings](https://github.com/henricj/audacity/commits/global-settings) branch. =||= @henricj Sorry I misunderstand you: I thought you wanted me moving all the files in `lib-src` to `vendor`. =||= Thanks.  We've decided against wxWidgets as a submodule.  We sometimes like to have two different wxWidgets builds around, and switch between them.  Doing wxWidgets as a module reduces our flexibility too much, and potentially causes considerable confusion. =||= "], ["306", "French translation update", "Olivier Humbert", "trebmuh", "09/29/18, 05:54:47 PM", "This fixes a minuscule/capital letter typo, hence so small that there is no needs to update this file for 2.3.0 final.\r\n\r\nI'm currently trying the 2.3.0 RC2 version on a Debian Stretch linux system and, if I would be to find other issue with the current state of the French translation, I'll add a commit for such here.\r\n\r\nNote that if a typo/error which is big enough to be considered as very annoying for a 2.3.0 finale version would be found, I'd mention here that the translation update needs to be merged before the 2.3.0 finale release.\r", "Thanks.  Committed. =||= "], ["307", "Bug1988: Don't lose data in unusual inter-project copy-paste case", "Paul Licameli", "Paul-Licameli", "09/26/18, 04:43:06 PM", "NaN", "RM has decided to let the fix for this improbable use case wait after 2.3.0.  So I will push it myself after 2.3.1 development opens.\r\n =||= "], ["308", "Translated time (& freq & bandwidth) formats in numeric controls...", "Paul Licameli", "Paul-Licameli", "09/26/18, 11:00:12 PM", "NaN", "NaN"], ["309", "[WIP] Add travis CI for OSX", "Martin Delille", "MartinDelille", "11/01/18, 11:24:16 PM", "Here is what I plan to achieve in this PR:\r\n\r\n- [ ] Use a build matrix to support linux and osx\r\n- [ ] Compile wxWidget with a SDK support by travis (no Xcode 4.3.3 unfortunately)\r\n- [ ] Compile Audacity\r\n\r\nHere is a link to a helpful article: https://wiki.audacityteam.org/wiki/Building_On_Mac\r\n\r\nWhat could benefit if this PR is a success would be posting a compiled DMG here: https://github.com/audacity/audacity/releases", "This is work in progress isn't it?  So it is not ready to pull.  Also what it does does not match the title.  It's mostly about submodules, without the changes to compile on OSX.  We're likely to want to take the changes to do CI builds on OSX **_before_** we take any changes for submodules, so those should be separated out for now. =||= I think there is too much work trying to make OSX build without submodules. That is why this PR is blocked by https://github.com/audacity/audacity/pull/305 =||= Not updated, so closed. =||= This is not updated because my other PR hasn't been tested. =||= "], ["310", "Add EBU-R128 loudness gating and RMS to Normalize effect", "Max Maisel", "mmmaisel", "10/11/18, 05:45:44 PM", "This pull request adds RMS normalization option and EBU-R128 / ITU BS.1770-4\r\nloudness gating to the normalize effect.\r", "NaN"], ["311", "Bug 1832: Fix adjusting time track when in logarithmic scale", "Pokechu22", "Pokechu22", "10/03/18, 01:13:25 AM", "https://bugzilla.audacityteam.org/show_bug.cgi?id=1832\r\n\r\nThe typo that caused this appears to have been introduced when this code was restructured in 9e0010ec5f.  This ended up causing zoomMin to usually be larger than zoomMax, which caused the hit test to always fail.", "Thanks, you caught a mistake of mine.\r\n =||= "], ["312", "pretty README.md", "Martin Delille", "MartinDelille", "10/10/18, 04:40:31 PM", "Here is a proposal for a nicer README.md", "@trebmuh It looks like we are involved in the same projects :-) =||= Rejected.\r\nTravis build fails with this because Linux make files were not updated. =||= @JamesCrook this PR was just about documentation... I don't understand why I should update the documentation of a plateform I don't use... \ud83d\ude22  =||= If Audacity fails to build on Windows, macOS or Linux, then that is automatically a P1 bug (priority 1).\r\nIf you don't fix that, then someone else would have to do so straight away because it blocks all testing on the affected platform.\r\n\r\nPersonally, I like md files with markup, but I think this change would need to be discussed and agreed by the team. IF it is agreed that we want to change from plain text to markup (and there's pros and cons to both), then additional changes are required beyond what is included in these commits. For example, I think that the file MUST read correctly in a normal text viewer / text editor, because most users that download Audacity will not be viewing the README with a markdown viewer. So, as a specific, I think that numbered lists must retain sequential numbering.\r\n\r\nAlso, the README.txt file is used in the Windows installer as InfoAfterFile=..\\README.txt\r\nAccording to http://www.jrsoftware.org/ishelp/index.php?topic=setup_infobeforefile it must be \" in .txt or .rtf (rich text) format\".\r\n\r\nSo to answer your question briefly, this is not just a cosmetic change in the documentation. It would need to be discussed, agreed, fixed and tested. If you are interested in pursuing this, then the first step is to raise the question on the developer's mailing list (as James has already noted: https://github.com/audacity/audacity/milestone/1 ) =||= That makes sense. =||= Closing the pull request is not cool, especially for a first contribution.\r\n\r\nI didn't realized that the README.txt was a build dependency and could have tried to fix that (like I did [here](https://github.com/MartinDelille/audacity/commit/0c876c2485bedaf642d225d963b813f4cd753c86) but since the PR is closed, there is no more travis build)\r\n\r\nI correct the numbered list [here](https://github.com/MartinDelille/audacity/commit/8168a1c1722ca4765d15a17158d86136bf49536d)\r\n\r\nI did spoke about this change in the mailing list. =||= Martin, now perhaps you understand better why discussion on the mailing list is required?\r\n\r\nYour pull request simply had too many problems.  It was an un-necessary un-asked-for format change that creates several problems.  Please read over Steve's comments, and mine.  I agree with everything Steve says there.  If a pull request breaks the build it's a candidate for speedy rejection.\r\n\r\n312 is by the way not a first pull request from you.  305 and 309 are still pending.  You have also been given and accepted write access to https://github.com/audacity/portaudio so that, if you want to, you can experiment with making our patched version of it into a submodule.  It would be strange to have wxWidgets as a submodule (pull 305) and not portaudio.\r\n =||= Ok sorry for that. I'll be respecting the project policies in the futur. =||= "], ["313", "Link with -latomic if using clang on Linux.", "Max Maisel", "mmmaisel", "10/10/18, 04:35:09 PM", "Clang (tested with v7.0 on Arch Linux) needs to link with -latomic on Linux. Otherwise there will be linker errors about undefined references.\r\nThis can be easily fixed by checking if we are using clang and conditionally adding \"-latomic\" to LDFLAGS in configure.ac.", "Merged. =||= "], ["314", "Appdata enhacements (fix component type and add release information)", "Jorge", "jgarciao", "10/10/18, 04:34:27 PM", "With component type = desktop Audacity's information will be updated in [Audacity s page](https://flathub.org/apps/details/org.audacityteam.Audacity) at Flathub\r\n\r\nRelease info will be shown in the same page and also in Gnome Software and other software\r\n\r\n\r", "Merged. =||= "], ["315", "Added Pro Tools theme", "Jonat\u00e3 Bolzan Loss", "jonata", "10/16/18, 10:59:16 AM", "Just an optional theme for those familiar with the Avid DAW.", "Hi Jonata.  Please discuss on our devel email list.\r\nThis pull request is probably not suitable, as the graphics are likely to be copyright protools.\r\n =||= This also fails the CI build so is a candidate for speedy rejection. =||= Looks like you've got an unresolved merge conflict in src/Theme.cpp =||= That is just some tweak we made on a customised build we use here. The graphics does not contain any copyrighted material as it uses Audacity logo, just from another iconset/style. I just wanted to offer it for the team, but certainly this is not something essential to Audacity. So, no problem rejecting it. =||= Jonta, before I close this, can I encourage you to make your Pro Tools theme into an ImageCache.png file and provide it for download somewhere for people who are interested?  If you already do so, tell us where.\r\n\r\nIf you are using Pro Tools styles and icons, I would expect them to be covered by Pro Tools copyright.  If you aren't, and from what you say it sounds like you aren't, then calling it 'Pro Tools' theme is not very accurate, so you would need a different name. =||= Hi James! I will look at some more information about copyright use of the icon styles, and hopefully make it available for download somewhere with a different name. I fully understand the implications you presented. Anyway, thank you so much for your consideration. =||= Thanks Jonata. =||= "], ["317", "Print position in seconds to stout", "Jonat\u00e3 Bolzan Loss", "jonata", "09/05/19, 12:07:01 PM", "This gives the option to build Audacity that prints to stdout the cursor position in seconds (preceded with the str \"(seek)\". Useful for use with xjadeo, for example.", "Please discuss the use case on audacity devel mailing list.\r\nWe might want to extend this to a way to record many more events (for automation) rather than a special case mechanism just for selection changes.  For example, expose history list to automation queries. =||= Per conversation on audacity-devel, we won't take this change, and instead are interested in something more general at a future date. =||= "], ["318", "Updated the Norwegian translation quite heavily", "Imre Kristoffer Eilertsen", "DandelionSprout", "10/14/18, 09:04:34 AM", "I've updated the Norwegian translation considerably, making it 100% completed once again.\r\n\r\nHaving previously worked on translating Audacity back in 2016, I wasn't very comfortable with the mailing list system, as it made it difficult to ensure that messages were reaching the relevant individual persons properly, made me a recipient of E-mails from other translators that were irrelevant to me, and also left me open to receive spam messages from bots. Therefore I hope that it's possible for me to submit this on GitHub instead.", "Thank you so much for the Norwegian translation.  It's really appreciated.  I've merged it into master.\r\n\r\nMyself and Paul do monitor pull requests for updated translations here, so there is no problem with us taking translations from GitHub pull requests.  By not being on the translator mailing list you will miss out on some information.  For example the current plan is that we will have a string and code freeze on 15th November, in preparation for actual release of 2.3.1 before the end of 2018.  It is likely that the cut off date for translations for 2.3.1 will be morning of 1st December.  Schedule information is also at https://wiki.audacityteam.org/wiki/Next_Release and usually kept up to date there.\r\n\r\n\r\n\r\n =||= Ah, so there is a webpage that keeps track of upcoming versions of Audacity? That's pretty convenient, actually. It's nice for me to know that 2.3.1 isn't too far away, and that there may be more strings for me to translate in late November. \ud83d\ude42  =||= "], ["319", "Missing <wx/sizer.h> include", "Vitaly Kirsanov", "krokoziabla", "10/20/18, 11:19:36 AM", "Without it build on my Windows host fails\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r\n\r\n\r\n## The key points: \r\n\r\n* Come over talk with us at the audacity devel email list. If you just rely on the GitHub pull request messages, you may find we ignore or close the pull request for what does not seem to you to be a good reason. Please come and talk. \r\n\r\n* Translators should subscribe to audacity translators email list instead.  The translators list is also the right place for most translation discussion. \r\n\r\nThere is a bit more on our wiki about how we use the pull requests and the labels that can be attached to pull requests.\r\n\r", "NaN"], ["320", "Experimental Loudness effect", "Max Maisel", "mmmaisel", "11/07/18, 11:50:58 PM", "See audacity-devel mailing list for details.\r\n\r\nIn conclusion, the changes are:\r\n* Refactored parts of the Normalize effect for concurrent stereo processing (commit 2ff76bb667e...). This also adds the AllocBuffers(), LoadBufferBlock() and StoreBufferBlock() memory helper functions.\r\n* Splitted Normalize into Normalize and Loudness effect on the same code base.\r\n* Add EBU R 128 Loudness gating as described in ITU BS.1770-4.\r\n* Add RMS normalization.\r\n* Replace \"Use Loudness\" checkbox with dropdown menu.\r\n* Added \"Treat mono as dual-mono\" checkbox.\r\n* All new features can be easily disabled from Experimental.h", "I'm closing this pull request because RMS Normalize gives incorrect level on stereo tracks. I have posted details on audacity-devel mailing list. =||= "], ["321", "Cosmetic changes to help build from scratch", "Mikhail Korbakov", "mikekmv", "11/06/18, 01:00:39 AM", "When building audacity from scratch (following the instructions of course),\r\nI ran into two minor problems:\r\n1. In Ubuntu 16.04: Not all header files was installed.\r\n2. In Windows, when creating the installer the file Vietnamese.isl is missing ,\r\nbut I installed the files from the repository https://github.com/jrsoftware/issrc/tree/master/Files/Languages/Unofficial as recommended.\r", "Nothing changed for Travis )) =||= Thanks. =||= "], ["323", "Update ru.po", null, "Evropa1", "10/30/18, 06:57:25 PM", "# Pull Requests\r\n\r\nIf you are submitting a pull request, read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r\n\r\n\r\n## The key points: \r\n\r\n* Come over talk with us at the audacity devel email list. If you just rely on the GitHub pull request messages, you may find we ignore or close the pull request for what does not seem to you to be a good reason. Please come and talk. \r\n\r\n* Translators should subscribe to audacity translators email list instead.  The translators list is also the right place for most translation discussion. \r\n\r\nThere is a bit more on our wiki about how we use the pull requests and the labels that can be attached to pull requests.\r\n\r", "Thanks.  Committed. =||= "], ["324", "Tweak appdata XML", "Robert McQueen", "ramcq", "06/14/20, 05:33:07 PM", "Correct launchable type syntax, add OARS content ratings. This will improve handling in Flathub and app centers such as GNOME Software and KDE Discover which are starting to gain ability to filter by age-appropriateness.", "Any update on this? =||= We are about to start a new release cycle. Now would be a good time to come over talk with us at the audacity devel email list, explain what the benefit of this pull request is, and how it accomplishes it's aim. (See: https://github.com/audacity/audacity/milestone/1)\r\nFor what it's worth, this looks good to me, though I know very little about appdata.xml or OARS. =||= > explain what the benefit of this pull request is, and how it accomplishes it's aim\r\n\r\nEverything is explained in this PR.\r\n\r\n> come over talk with us at the audacity devel email list\r\n\r\nThis erects a needless hurdle for such simple drive-by patches. =||= It would be great if this PR could be merged. The current AppData file has invalid syntax and is [broken in Fedora](https://bugzilla.redhat.com/show_bug.cgi?id=1810509#c13). This PR fixes it. =||= "], ["325", "Darkaudacity", null, "romusprime", "11/23/18, 10:33:01 AM", "# Pull Requests\r\n\r\nIf you are submitting a pull request, read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r\n\r\n\r\n## The key points: \r\n\r\n* Come over talk with us at the audacity devel email list. If you just rely on the GitHub pull request messages, you may find we ignore or close the pull request for what does not seem to you to be a good reason. Please come and talk. \r\n\r\n* Translators should subscribe to audacity translators email list instead.  The translators list is also the right place for most translation discussion. \r\n\r\nThere is a bit more on our wiki about how we use the pull requests and the labels that can be attached to pull requests.\r\n\r", "Thanks romusprime but we keep darkaudacity separate intentionally.\r\nThis pull request also has conflicts, so it would not be merged in any case. =||= Will DarkAudacity be updated with the latest Audacity release? =||= @YodaEmbedding - it's unlikely.  What's more likely is that Audacity will pick up the LED meter and other changes from DarkAudacity. =||= "], ["326", "Fix 66 misleading-indentation warnings by g++ 6.3", null, "Themroc", "11/24/18, 05:41:53 PM", "# Pull Requests\r\n\r\nIf you are submitting a pull request, read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r\n\r\n\r\n## The key points: \r\n\r\n* Come over talk with us at the audacity devel email list. If you just rely on the GitHub pull request messages, you may find we ignore or close the pull request for what does not seem to you to be a good reason. Please come and talk. \r\n\r\n* Translators should subscribe to audacity translators email list instead.  The translators list is also the right place for most translation discussion. \r\n\r\nThere is a bit more on our wiki about how we use the pull requests and the labels that can be attached to pull requests.\r\n\r", "Thanks Themroc, but I am closing this.\r\nWe currently don't change third party libs in lib-src unless we have to.\r\n\r\nWe are looking into being much freer with changes to lib-src in future.  We'll probably/possibly be happier to make changes in lib-src when we have good communications with 'upstream' established. =||= Okay, lets see what happens upstream...\r\n\r\nhttps://sourceforge.net/p/portmedia/discussion/697912/thread/c37cd11790/ =||= Btw. here\r\n\r\nhttps://sourceforge.net/p/portmedia/mailman/portmedia-updates/?limit=250\r\n\r\nit looks like portsmf hasn't changed at all since 2010-10-09 16:48:27 ...  =||= "], ["327", "French translation update", "Olivier Humbert", "trebmuh", "11/24/18, 09:05:54 PM", "NaN", "Thanks.  Squash committed. =||= "], ["328", "Final touches on the Norwegian translation", "Imre Kristoffer Eilertsen", "DandelionSprout", "11/29/18, 07:52:15 PM", "As per #318, here's the last few strings for the Norwegian translation. \ud83d\ude42 ", "Thank You! =||= "], ["329", "Update Polish translation from Transifex", "Grzegorz Pruchniakowski", "Gootector", "12/01/18, 12:27:02 PM", "Update pl.po from Transifex.\r\n\r\nGreetings,\r\nGootector\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r\n\r\n\r\n## The key points: \r\n\r\n* Come over talk with us at the audacity devel email list. If you just rely on the GitHub pull request messages, you may find we ignore or close the pull request for what does not seem to you to be a good reason. Please come and talk. \r\n\r\n* Translators should subscribe to audacity translators email list instead.  The translators list is also the right place for most translation discussion. \r\n\r\nThere is a bit more on our wiki about how we use the pull requests and the labels that can be attached to pull requests.\r\n\r", "Thanks! =||= "], ["331", "Update sv.po", "A. Regnander", "Regnander", "12/20/18, 10:53:50 PM", "Translated all untranslated strings and corrected some existing strings\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r\n\r\n\r\n## The key points: \r\n\r\n* Come over talk with us at the audacity devel email list. If you just rely on the GitHub pull request messages, you may find we ignore or close the pull request for what does not seem to you to be a good reason. Please come and talk. \r\n\r\n* Translators should subscribe to audacity translators email list instead.  The translators list is also the right place for most translation discussion. \r\n\r\nThere is a bit more on our wiki about how we use the pull requests and the labels that can be attached to pull requests.\r\n\r", "Thanks.  Committed. =||= "], ["332", "Fix bug 2053", "Pokechu22", "Pokechu22", "04/11/19, 07:04:54 PM", "https://bugzilla.audacityteam.org/show_bug.cgi?id=2053\r\n\r\nSimply adding the FixScrollbars refresh code is sufficient.\r\n\r\nThis obviously isn't needed for 2.3.1; it's just something that I noticed and figured it would be better to PR before I forgot about it.", "Thanks. =||= "], ["333", "Don't declare snprintf macro for MSVC 2015 and 2017 in lv2", "Vitaly Kirsanov", "krokoziabla", "03/14/19, 11:57:53 AM", "That declaring breaks build on MSVC 2015/17 (2013 is ok). There is a note about\r\nchanged behaviour of snprintf beginning from VS 2015 here:\r\nhttps://docs.microsoft.com/ru-ru/cpp/c-runtime-library/reference/snprintf-snprintf-snprintf-l-snwprintf-snwprintf-l?view=vs-2017#remarks\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r\n\r\n\r\n## The key points: \r\n\r\n* Come over talk with us at the audacity devel email list. If you just rely on the GitHub pull request messages, you may find we ignore or close the pull request for what does not seem to you to be a good reason. Please come and talk. \r\n\r\n* Translators should subscribe to audacity translators email list instead.  The translators list is also the right place for most translation discussion. \r\n\r\nThere is a bit more on our wiki about how we use the pull requests and the labels that can be attached to pull requests.\r\n\r", "This snprintf change is similar to one of the [changes made](https://github.com/audacity/audacity/commit/8bf2071fddb398d4b9f1c02dbc0cec6177bb20c7) when support for VS2017 was added.  There were other MSBuild file (.vcxproj) changes that were pushed at around the same time (June 26, 2018) that might also be relevant for CMake. =||= "], ["334", "Update Italian translation", "Michele Locati", "mlocati", "03/15/19, 12:30:07 PM", "NaN", "Hi Michele,\r\n\r\nPlease join the translators list and talk with Carmelo Battaglia there.  He is coordinating translation for Italian. =||= @JamesCrook I already contacted him via email (a couple of months ago) =||= @mlocati what did Carmelo say about your changes?  Has he reviewed them? =||= @JamesCrook we discussed a bit about writing rules. He prefers to use a more personal approach when writing strings, I prefer to use the well established and discussed [rules defined by the Italian section of the Free Translation Project](http://tp.linux.it/buona_traduzione.html).\r\nAnyway, we also wrote:\r\n\r\n> hai un grande merito nell\u2019aver eseguito una revisione completa di tutte le stringhe di Audacity e sarei veramente felice che tu voglia continuare in futuro l\u2019aggiornamento delle prossime versioni perch\u00e9 io comincio a essere stanco di tale impegno e volentieri ti cederei il lavoro.\r\n\r\nWhich, transladed, sounds more or like a go for my strings, and he expresses the wish to delegate to me the maintenance of the Italian translations. =||= Thanks Michele.  I merged it.  For future updates to .pot file I have a preference for receiving them on the translation mailing list.  Announcements about when we are needing updates (and when we are NOT taking them due to release in progress) are made there. =||= > For future updates to .pot file I have a preference for receiving them on the translation mailing list.\r\n\r\nWhy? I think that seeing here on GitHub is much nicer, since you (and everybody) can see the differences very easily.\r\n\r\n> Announcements about when we are needing updates (and when we are NOT taking them due to release in progress) are made there.\r\n\r\nI'd prefer a more continuous system (like I suggested [in the mailing list](https://sourceforge.net/p/audacity/mailman/message/36526610/)): developers update the code, a [TravisCI job](https://github.com/audacity/audacity/pull/335) updates the .pot file, an online tool (like Transifex) can be configured to fetch the .pot file on a regular (daily) basis, translators translate strings as soon as they are available in Transifex (or whatever).\r\nThat way, we'd have a collaborative, continuous (we don't have to translate tons of strings on a hurry right before a release) way to translate Audacity.\r\nThe nice stuff of Transifex is that is allows translators to work with .po files (they can download/upload them). =||= I'm against using transifex (private business, non-free). I could cope with weblate but am not a big fan, and I'm fine with the current system using the mailing-list allowing translators to discuss when needed. =||= > I'm against using transifex (private business, non-free).\r\n\r\n@trebmuh I also am not a great supporter of closed source projects (that's one of the reasons why I developed [CommunityTranslation](https://github.com/concrete5/addon_community_translation), an online collaborative tool currently used by [translate.concrete5.org](https://translate.concrete5.org) to translate concrete5).\r\nNevertheless, IMHO online collaborative translation is much more powerful than offline translation... =||= Depends, a badly configured online service (such as transifex, weblate, ...whatever) can be very less useful, more errors-prone, and more selfish-oriented than a mailing list which has proven being useful in Audacity's case for a bunch of years now.\r\n\r\nAnyway, this discussion shouln't happen here on github but on the translators mailing-list. Please, switch it to there. =||= @mlocati please, as trebmuh says, have such discussion about tools for translation on the translators list.\r\n\r\nAs a practical matter, I personally find it easier to handle po files that arrive at the email address.  So if you do post here, they are likely to sit for much longer without comment from anyone.  Your choice though. =||= "], ["335", "Automatically refresh language files when pushing to master", "Michele Locati", "mlocati", "11/09/19, 04:39:03 PM", "As discussed in the audacity-translation mailing list, it'd be useful to automatically update the `locale/audacity.pot` language file, so that it's always up-to-date.\r\n\r\nThis is implemented by executing a script whenever a push to `master` occurs, which updates the .pot file and commits it back to the repository.\r\nThis requires to setup an encrypted environment variable named `GITHUB_ACCESS_TOKEN`, containing a GitHub token created at https://github.com/settings/tokens/new with write access to this repository.\r\nThis encrypted `GITHUB_ACCESS_TOKEN` variable should then be added to the `.travis.yml` file ([example](https://github.com/punic/punic/blob/3.3.1/.travis.yml#L18)), or to the administration area of the TravisCI project.", "One other thing that I am slightly concerned about is that the build for this PR hasn't finished at all, but I'm not sure if it's your fault (it says it's queued but it's been like that for several hours; I don't know enough about travis to say whether that's normal).  Do you know why that's happening? =||= I don't know why the TravisCI job is still pending. Maybe someone with admin rights could try to stop and restart it =||= I've cancelled the build and restarted it.\n\nSteve\n\nOn Thu, 24 Jan 2019 at 19:35, Michele Locati <notifications@github.com>\nwrote:\n\n> I don't know why the TravisCI job is still pending. Maybe someone with\n> admin rights could try to stop and restart it\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/335#issuecomment-457327685>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ALI9SfyCBNmbIIg45Z-b_f923nME1UjXks5vGgr1gaJpZM4aQs6M>\n> .\n>\n =||= It seems it's hung again: https://travis-ci.org/audacity/audacity/jobs/483883182\r\n\r\nTomorrow I'll contact the TravisCI support asking why this occurs. =||= I contacted the TravisCI support, and they suggested to change\r\n```yaml\r\nlanguage:\r\n    - cpp\r\n```\r\nto\r\n```yaml\r\nlanguage: cpp\r\n```\r\nAnd now the job started (see https://travis-ci.org/audacity/audacity/builds/484335545). =||= Thanks.  We're not going to do this though.  Updating .pot and .po files is part of the documented release process.  We don't want extra (somewhat spurious) automated GitHub commit messages for language file updates. =||= I don't understand why it's a bad/spurious thing if language files are automatically kept in sync with the source files... =||= It means an extra GitHub commit. =||= And is it a problem? =||= "], ["336", "Fix1899", "Mike Barker", "MikeOnEvelynB", "04/02/19, 08:17:30 PM", "# Pull Requests\r\n\r\nIf you are submitting a pull request, read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r\n\r\n\r\n## The key points: \r\n\r\n* Come over talk with us at the audacity devel email list. If you just rely on the GitHub pull request messages, you may find we ignore or close the pull request for what does not seem to you to be a good reason. Please come and talk. \r\n\r\n* Translators should subscribe to audacity translators email list instead.  The translators list is also the right place for most translation discussion. \r\n\r\nThere is a bit more on our wiki about how we use the pull requests and the labels that can be attached to pull requests.\r\n\r", "This fixes Bugs 1899 and 2007.  It also incorporates a fix for the problem where the Documents\\Audacity folder is created in the wrong directory when the user has moved 'Documents' out of their 'home' directory, this was discussed in my e-mail of 11th January 2019. =||= Thanks.  We'll consider this for 2.3.2 =||= Merged into master with 44fde0a90 =||= "], ["338", "Fix hard link", "Mike Barker", "MikeOnEvelynB", "01/29/19, 02:03:05 PM", "# Pull Requests\r\n\r\nIf you are submitting a pull request, read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r\n\r\n\r\n## The key points: \r\n\r\n* Come over talk with us at the audacity devel email list. If you just rely on the GitHub pull request messages, you may find we ignore or close the pull request for what does not seem to you to be a good reason. Please come and talk. \r\n\r\n* Translators should subscribe to audacity translators email list instead.  The translators list is also the right place for most translation discussion. \r\n\r\nThere is a bit more on our wiki about how we use the pull requests and the labels that can be attached to pull requests.\r\n\r", "Fix for Bug 1979.  See Line 78 in src\\Filenames.cpp.  The arguments to CreateHardLinkA are in the wrong order - which means it always fails and therefore we always revert to a more expensive copy operation. In addition the use of CreateHardLinkA is incorrect as it forces a conversion to Ascii which can fail. Since the Windows version of Audacity is compiled in Unicode then CreateHardLinkW is the correct call to use (or let the pre-processor decide). =||= "], ["339", "Correct config macro for expat lib on MacOS", "Vitaly Kirsanov", "krokoziabla", "03/14/19, 11:57:54 AM", "Otherwise build breaks\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r\n\r\n\r\n## The key points: \r\n\r\n* Come over talk with us at the audacity devel email list. If you just rely on the GitHub pull request messages, you may find we ignore or close the pull request for what does not seem to you to be a good reason. Please come and talk. \r\n\r\n* Translators should subscribe to audacity translators email list instead.  The translators list is also the right place for most translation discussion. \r\n\r\nThere is a bit more on our wiki about how we use the pull requests and the labels that can be attached to pull requests.\r\n\r", "NaN"], ["340", "Update French translation", "Olivier Humbert", "trebmuh", "03/14/19, 11:57:54 AM", "Fixes a typo. Please, merge ASAP.", "NaN"], ["341", "Fix loading of LV2 effects that have Event ports (Calf Plugins)", "Geoffrey McRae", "gnif", "11/24/19, 09:55:44 PM", "The Calf plugin suite exposes Event ports which is currently not supported or defined in `liblilv`, so instead of flat rejecting the filter, test the port name for `Events` and allow them to load.", "Thanks for the pull request gnif. Please come and talk to us about this on the developer's mailing list (see: https://sourceforge.net/projects/audacity/lists/audacity-devel ) =||= Thank you.  \r\nThis has now been merged. =||= "], ["342", "Add tr language to audacity.desktop.in", "Ya\u015far \u00c7iv", "yasarciv", "03/15/19, 01:55:51 PM", "NaN", "Thanks! =||= "], ["343", "Use native CMakeLists.txt for libexpat", "Vitaly Kirsanov", "krokoziabla", "03/16/19, 01:10:22 PM", "cmake-proxies/expat/CMakeLists.txt seems to make more problems than it\r\nsolves. But the native one appears doing its job well on multiple\r\nplatforms. Tested on Windows, OSX, Linux and FreeBSD.\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r\n\r\n\r\n## The key points: \r\n\r\n* Come over talk with us at the audacity devel email list. If you just rely on the GitHub pull request messages, you may find we ignore or close the pull request for what does not seem to you to be a good reason. Please come and talk. \r\n\r\n* Translators should subscribe to audacity translators email list instead.  The translators list is also the right place for most translation discussion. \r\n\r\nThere is a bit more on our wiki about how we use the pull requests and the labels that can be attached to pull requests.\r\n\r", "Sorry Vitaly, but we try to avoid changing our 3rd part libs.  That's the reason for the cmake-proxies directory.  We can make changes there.  Our problem is we have to back patch our changes to 3rd party libs, if we update them.  \r\n\r\nIf you don't like our plan/strategy, discus on audacity-devel mailing list NOT here. =||= Reopened since the change to the '3rd party lib' is not strictly our own, but rather a back-port of a future change.  Therefore will not be 'blown away' when we later upgrade the library. =||= "], ["344", "Bug 2079: FreeBSD compilation broken by -latomic use.", "Vitaly Kirsanov", "krokoziabla", "05/25/20, 06:50:04 AM", "To cut a long story short the least painful way to fix this is to link\r\nagainst libatomic if it is present and to not otherwise.\r\n\r\nclang needs libatomic if either:\r\n  1. it's using libstdc++ during build;\r\n  2. it's using libc++ but libcomiler-rt has been built without support of\r\n     atomic functions.\r\n\r\nIt seems quite a job to find out how clang has been set up. Therefore\r\nI'm prorosing this simpler patch which gives the desired result both on\r\nFreeBSD and Archlinux.\r\n\r\nAlso I've updated AX_COMPILER_VENDOR macro. Now it supports clang and\r\nthus detecting the type of the compiler can be expressed more elegantly.\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r\n\r\n\r\n## The key points: \r\n\r\n* Come over talk with us at the audacity devel email list. If you just rely on the GitHub pull request messages, you may find we ignore or close the pull request for what does not seem to you to be a good reason. Please come and talk. \r\n\r\n* Translators should subscribe to audacity translators email list instead.  The translators list is also the right place for most translation discussion. \r\n\r\nThere is a bit more on our wiki about how we use the pull requests and the labels that can be attached to pull requests.\r\n\r", "@krokoziabla I'm seeing this bug on OpenBSD too, but your fix does not work for me. I'd suggest something like the following, which should work regardless of the compiler vendor:\r\n\r\n```\r\nAC_LINK_IFELSE([AC_LANG_SOURCE([[\r\n  #include <atomic>\r\n  #include <cstdint>\r\n  std::atomic<std::int64_t> v;\r\n  int main() {\r\n    return v;\r\n  }\r\n]])], STD_ATOMIC_NEED_LIBATOMIC=no, STD_ATOMIC_NEED_LIBATOMIC=yes)\r\nif test \"x$STD_ATOMIC_NEED_LIBATOMIC\" = xyes; then\r\n   LDFLAGS=\"${LDFLAGS} -latomic\"\r\nfi\r\n``` =||= @RJVB: I didn't test yet, but the approach from @rrrapha looks like it might solve our problem as well (for which you wrote a quick-and-dirty workaround patch). Are you willing to test on both your Linux & Mac? =||= I can probably fit that in.\r\n\r\nEdit: an autoreconf of the configure scripts takes forever because it recurses into all contrib directories. That's overkill but there may not be any way to avoid it (I'll have to wait for this call to complete before trying with `--no-recursive`)?\r\nEdit2: autoreconf failed after 21 minutes (on my Linux rig), tripping over a missing AC_PROG_OBJCXX in the toplevel configure.ac because my other patches introduce ObjC++ code in src/Makefile.am. Another thing to take into account: all files (re)generated by autoreconf are tracked in git, so triggering a regenerate is going to make patch management a nightmare.\r\n\r\nNote that my own patch adds a simple platform check to determine whether or not -latomic might be required. *Are* there any platforms beyond Linux which do, and what guarantee is there that they will need a libatomic and not some other library? Because that's the assumption of the above patch...\r\nAnd btw, the test succeeds with clang, meaning even on Linux -latomic isn't always required?!\r\n\r\nAnyway, this patch looks like it should work (build now running). Note how one has to remove the special handling of clang (which according to the result of the new test is redundant anyway?!)\r\n\r\n```\r\n--- a/configure\r\n+++ b/configure\r\n@@ -19205,10 +19788,6 @@ if test x$enable_universal_binary = xyes; then\r\n    esac\r\n fi\r\n \r\n-if ($CXX --version | grep 'clang version' > /dev/null); then\r\n-    LDFLAGS=\"${LDFLAGS} -latomic\"\r\n-fi\r\n-\r\n if test x$enable_sse = xyes; then\r\n \r\n    if test \"${ax_cv_cxx_compiler_vendor}\" = \"gnu\"; then\r\n@@ -23741,6 +24320,35 @@ fi\r\n          as_fn_error $? \"dlopen not found, required by Audacity\" \"$LINENO\" 5\r\n       fi\r\n \r\n+                  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking if std::atomic requires libatomic\" >&5\r\n+$as_echo_n \"checking if std::atomic requires libatomic... \" >&6; }\r\n+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\r\n+/* end confdefs.h.  */\r\n+\r\n+        #include <atomic>\r\n+        #include <cstdint>\r\n+        std::atomic<std::int64_t> v;\r\n+        int main() {\r\n+          return v;\r\n+        }\r\n+\r\n+_ACEOF\r\n+if ac_fn_cxx_try_link \"$LINENO\"; then :\r\n+  STD_ATOMIC_NEED_LIBATOMIC=no\r\n+else\r\n+  STD_ATOMIC_NEED_LIBATOMIC=yes\r\n+fi\r\n+rm -f core conftest.err conftest.$ac_objext \\\r\n+    conftest$ac_exeext conftest.$ac_ext\r\n+      if test \"x$STD_ATOMIC_NEED_LIBATOMIC\" = xyes; then\r\n+         LDFLAGS=\"${LDFLAGS} -latomic\"\r\n+         { $as_echo \"$as_me:${as_lineno-$LINENO}: result: adding -latomic to LDFLAGS\" >&5\r\n+$as_echo \"adding -latomic to LDFLAGS\" >&6; }\r\n+      else\r\n+         { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\r\n+$as_echo \"no\" >&6; }\r\n+      fi\r\n+\r\n       { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for gtk3 use in wxWidgets\" >&5\r\n $as_echo_n \"checking for gtk3 use in wxWidgets... \" >&6; }\r\n       CPPFLAGS=\"${WX_CXXFLAGS}\"\r\ndiff --git a/configure.ac b/configure.ac\r\nindex 40fc326685dca2bd159321283d3d09bb0e8b7d55..dbb0c7a6672bae9c4a935c66fb7426ff1425f26f 100644\r\n--- a/configure.ac\r\n+++ b/configure.ac\r\n@@ -200,14 +200,6 @@ if test x$enable_universal_binary = xyes; then\r\n    esac\r\n fi\r\n \r\n-dnl Check if $CXX is clang by evaluating the version string because\r\n-dnl $ax_cv_cxx_compiler_vendor seems not to work (it is either \"gnu\" or just empty).\r\n-dnl If $CXX is clang (string is found), grep returns 0 and the if is executed.\r\n-dnl Use /dev/null to suppress grep output to shell.\r\n-if ($CXX --version | grep 'clang version' > /dev/null); then\r\n-    LDFLAGS=\"${LDFLAGS} -latomic\"\r\n-fi\r\n-\r\n if test x$enable_sse = xyes; then\r\n \r\n    if test \"${ax_cv_cxx_compiler_vendor}\" = \"gnu\"; then\r\n@@ -605,6 +597,24 @@ case \"${host_os}\" in\r\n          AC_MSG_ERROR([dlopen not found, required by Audacity])\r\n       fi\r\n \r\n+      dnl Check if we need to pull in libatomic\r\n+      dnl (assuming std::atomic is provided by libatomic in that case)\r\n+      AC_MSG_CHECKING([if std::atomic requires libatomic])\r\n+      AC_LINK_IFELSE([AC_LANG_SOURCE([[\r\n+        #include <atomic>\r\n+        #include <cstdint>\r\n+        std::atomic<std::int64_t> v;\r\n+        int main() {\r\n+          return v;\r\n+        }\r\n+      ]])], STD_ATOMIC_NEED_LIBATOMIC=no, STD_ATOMIC_NEED_LIBATOMIC=yes)\r\n+      if test \"x$STD_ATOMIC_NEED_LIBATOMIC\" = xyes; then\r\n+         LDFLAGS=\"${LDFLAGS} -latomic\"\r\n+         AC_MSG_RESULT([adding -latomic to LDFLAGS])\r\n+      else\r\n+         AC_MSG_RESULT([no])\r\n+      fi\r\n+\r\n       AC_MSG_CHECKING([for gtk3 use in wxWidgets])\r\n       CPPFLAGS=\"${WX_CXXFLAGS}\"\r\n       AC_EGREP_CPP(wxWidgets built with GTK3,\r\n\r\n``` =||= Verdict:\r\n\r\n```\r\naudacity-AudioIO.o: In function `AudioIO::AudioIO()':\r\n/usr/lib/gcc/x86_64-linux-gnu/8/../../../../include/c++/8/atomic:220: undefined reference to `__atomic_is_lock_free'\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\nmake[2]: *** [audacity] Error 1\r\n```\r\n\r\nMeans the test should probably check for something in addition; I'll come back to this tonight. =||= This works:\r\n\r\n```\r\ndiff --git a/configure b/configure\r\nindex e9f23be5471f718b42e290c44d19634e16bc2610..810d7088245c4173efecf94991d8c1cb7230f66e 100755\r\n--- a/configure\r\n+++ b/configure\r\n@@ -19205,10 +19205,6 @@ if test x$enable_universal_binary = xyes; then\r\n    esac\r\n fi\r\n \r\n-if ($CXX --version | grep 'clang version' > /dev/null); then\r\n-    LDFLAGS=\"${LDFLAGS} -latomic\"\r\n-fi\r\n-\r\n if test x$enable_sse = xyes; then\r\n \r\n    if test \"${ax_cv_cxx_compiler_vendor}\" = \"gnu\"; then\r\n@@ -23741,6 +23737,36 @@ fi\r\n          as_fn_error $? \"dlopen not found, required by Audacity\" \"$LINENO\" 5\r\n       fi\r\n \r\n+                  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking if std::atomic requires libatomic\" >&5\r\n+$as_echo_n \"checking if std::atomic requires libatomic... \" >&6; }\r\n+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\r\n+/* end confdefs.h.  */\r\n+\r\n+        #include <atomic>\r\n+        #include <cstdint>\r\n+        std::atomic<std::int64_t> v;\r\n+        int main() {\r\n+          bool f = std::atomic<double>{}.is_lock_free();\r\n+          return v;\r\n+        }\r\n+\r\n+_ACEOF\r\n+if ac_fn_cxx_try_link \"$LINENO\"; then :\r\n+  STD_ATOMIC_NEED_LIBATOMIC=no\r\n+else\r\n+  STD_ATOMIC_NEED_LIBATOMIC=yes\r\n+fi\r\n+rm -f core conftest.err conftest.$ac_objext \\\r\n+    conftest$ac_exeext conftest.$ac_ext\r\n+      if test \"x$STD_ATOMIC_NEED_LIBATOMIC\" = xyes; then\r\n+         LDFLAGS=\"${LDFLAGS} -latomic\"\r\n+         { $as_echo \"$as_me:${as_lineno-$LINENO}: result: adding -latomic to LDFLAGS\" >&5\r\n+$as_echo \"adding -latomic to LDFLAGS\" >&6; }\r\n+      else\r\n+         { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\r\n+$as_echo \"no\" >&6; }\r\n+      fi\r\n+\r\n       { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for gtk3 use in wxWidgets\" >&5\r\n $as_echo_n \"checking for gtk3 use in wxWidgets... \" >&6; }\r\n       CPPFLAGS=\"${WX_CXXFLAGS}\"\r\ndiff --git a/configure.ac b/configure.ac\r\nindex 40fc326685dca2bd159321283d3d09bb0e8b7d55..dbb0c7a6672bae9c4a935c66fb7426ff1425f26f 100644\r\n--- a/configure.ac\r\n+++ b/configure.ac\r\n@@ -200,14 +200,6 @@ if test x$enable_universal_binary = xyes; then\r\n    esac\r\n fi\r\n \r\n-dnl Check if $CXX is clang by evaluating the version string because\r\n-dnl $ax_cv_cxx_compiler_vendor seems not to work (it is either \"gnu\" or just empty).\r\n-dnl If $CXX is clang (string is found), grep returns 0 and the if is executed.\r\n-dnl Use /dev/null to suppress grep output to shell.\r\n-if ($CXX --version | grep 'clang version' > /dev/null); then\r\n-    LDFLAGS=\"${LDFLAGS} -latomic\"\r\n-fi\r\n-\r\n if test x$enable_sse = xyes; then\r\n \r\n    if test \"${ax_cv_cxx_compiler_vendor}\" = \"gnu\"; then\r\n@@ -605,6 +597,25 @@ case \"${host_os}\" in\r\n          AC_MSG_ERROR([dlopen not found, required by Audacity])\r\n       fi\r\n \r\n+      dnl Check if we need to pull in libatomic\r\n+      dnl (assuming std::atomic is provided by libatomic in that case)\r\n+      AC_MSG_CHECKING([if std::atomic requires libatomic])\r\n+      AC_LINK_IFELSE([AC_LANG_SOURCE([[\r\n+        #include <atomic>\r\n+        #include <cstdint>\r\n+        std::atomic<std::int64_t> v;\r\n+        int main() {\r\n+          bool f = std::atomic<double>{}.is_lock_free();\r\n+          return v;\r\n+        }\r\n+      ]])], STD_ATOMIC_NEED_LIBATOMIC=no, STD_ATOMIC_NEED_LIBATOMIC=yes)\r\n+      if test \"x$STD_ATOMIC_NEED_LIBATOMIC\" = xyes; then\r\n+         LDFLAGS=\"${LDFLAGS} -latomic\"\r\n+         AC_MSG_RESULT([adding -latomic to LDFLAGS])\r\n+      else\r\n+         AC_MSG_RESULT([no])\r\n+      fi\r\n+\r\n       AC_MSG_CHECKING([for gtk3 use in wxWidgets])\r\n       CPPFLAGS=\"${WX_CXXFLAGS}\"\r\n       AC_EGREP_CPP(wxWidgets built with GTK3,\r\n\r\n``` =||= Thank you, it looks like a reasonable patch to me.\r\n\r\nI guess this means that the flag is required for clang on Linux, but not on macOS?\r\n\r\n@krokoziabla, @rrrapha: does @RJVB's patch solve the issue for you?\r\n\r\nBtw: if you put `diff` immediately after the backticks, you get some nice syntax highlighting here as well. Partial example:\r\n\r\n```diff\r\n--- a/configure.ac\r\n+++ b/configure.ac\r\n@@ -200,14 +200,6 @@ if test x$enable_universal_binary = xyes; then\r\n    esac\r\n fi\r\n \r\n-dnl Check if $CXX is clang by evaluating the version string because\r\n-dnl $ax_cv_cxx_compiler_vendor seems not to work (it is either \"gnu\" or just empty).\r\n-dnl If $CXX is clang (string is found), grep returns 0 and the if is executed.\r\n-dnl Use /dev/null to suppress grep output to shell.\r\n-if ($CXX --version | grep 'clang version' > /dev/null); then\r\n-    LDFLAGS=\"${LDFLAGS} -latomic\"\r\n-fi\r\n-\r\n if test x$enable_sse = xyes; then\r\n \r\n    if test \"${ax_cv_cxx_compiler_vendor}\" = \"gnu\"; then\r\n@@ -605,6 +597,25 @@ case \"${host_os}\" in\r\n          AC_MSG_ERROR([dlopen not found, required by Audacity])\r\n       fi\r\n \r\n+      dnl Check if we need to pull in libatomic\r\n+      dnl (assuming std::atomic is provided by libatomic in that case)\r\n+      AC_MSG_CHECKING([if std::atomic requires libatomic])\r\n+      AC_LINK_IFELSE([AC_LANG_SOURCE([[\r\n+        #include <atomic>\r\n+        #include <cstdint>\r\n+        std::atomic<std::int64_t> v;\r\n+        int main() {\r\n+          bool f = std::atomic<double>{}.is_lock_free();\r\n+          return v;\r\n+        }\r\n+      ]])], STD_ATOMIC_NEED_LIBATOMIC=no, STD_ATOMIC_NEED_LIBATOMIC=yes)\r\n+      if test \"x$STD_ATOMIC_NEED_LIBATOMIC\" = xyes; then\r\n+         LDFLAGS=\"${LDFLAGS} -latomic\"\r\n+         AC_MSG_RESULT([adding -latomic to LDFLAGS])\r\n+      else\r\n+         AC_MSG_RESULT([no])\r\n+      fi\r\n+\r\n       AC_MSG_CHECKING([for gtk3 use in wxWidgets])\r\n       CPPFLAGS=\"${WX_CXXFLAGS}\"\r\n       AC_EGREP_CPP(wxWidgets built with GTK3,\r\n```\r\n =||= On Sunday November 10 2019 21:31:58 Mojca Miklavec wrote:\n\n>I guess this means that the flag is required for clang on Linux, but not on macOS?\n\nThat's the assumption (or rather, observation) on which my earlier patch was based. A quick check suggests it rather means that the required functions are provided either by libatomic or some library G++ always pulls in, or by libc++. Now rebuilding audacity on Linux with clang and `-stdlib=libc++` to confirm.\nThe interesting question would be what happens when you get G++ to build against libc++ (I still have a set of patches lying around adding `-stdlib=libc++` support to GCC).\n\n\n =||= BTW, I realise that the test may need `return v && f;` or something of the sort, to make certain the lock-free check isn't optimised away! =||= > @krokoziabla, @rrrapha: does @RJVB's patch solve the issue for you?\r\n\r\nYes :) =||= We will be switching to CMake builds shortly and I have added a check for libatomic. Do you want to give it a try? =||= We've now deleted the old build system, so closing =||= "], ["345", "CMakeLists.txt for FileDialog's been rewritten", "Vitaly Kirsanov", "krokoziabla", "03/18/19, 09:39:42 PM", "It appeared to be usable on Windows but still wasn't flexible. I've\r\nupdated it with commands based on the autotools configs and now\r\nfiledialog can be built on linux, macos and freebsd using cmake.\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r\n\r\n\r\n## The key points: \r\n\r\n* Come over talk with us at the audacity devel email list. If you just rely on the GitHub pull request messages, you may find we ignore or close the pull request for what does not seem to you to be a good reason. Please come and talk. \r\n\r\n* Translators should subscribe to audacity translators email list instead.  The translators list is also the right place for most translation discussion. \r\n\r\nThere is a bit more on our wiki about how we use the pull requests and the labels that can be attached to pull requests.\r\n\r", "Thanks! =||= "], ["346", "Use native CMakeLists.txt for portaudio", "Vitaly Kirsanov", "krokoziabla", "03/20/19, 08:22:24 PM", "The same story as libexpat's one--native CMakeLists.txt does its job better\r\nthan the proxy. Also it seems to be able to otionally build with ASIO support\r\non Windows. And it successfully builds on linux, freebsd and osx.\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r\n\r\n\r\n## The key points: \r\n\r\n* Come over talk with us at the audacity devel email list. If you just rely on the GitHub pull request messages, you may find we ignore or close the pull request for what does not seem to you to be a good reason. Please come and talk. \r\n\r\n* Translators should subscribe to audacity translators email list instead.  The translators list is also the right place for most translation discussion. \r\n\r\nThere is a bit more on our wiki about how we use the pull requests and the labels that can be attached to pull requests.\r\n\r", "Thanks. =||= "], ["347", "Use native CMakeLists.txt for portmidi", "Vitaly Kirsanov", "krokoziabla", "03/24/19, 06:29:54 PM", "Seems to work fine on Windows, OSX and Linux\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r\n\r\n\r\n## The key points: \r\n\r\n* Come over talk with us at the audacity devel email list. If you just rely on the GitHub pull request messages, you may find we ignore or close the pull request for what does not seem to you to be a good reason. Please come and talk. \r\n\r\n* Translators should subscribe to audacity translators email list instead.  The translators list is also the right place for most translation discussion. \r\n\r\nThere is a bit more on our wiki about how we use the pull requests and the labels that can be attached to pull requests.\r\n\r", "Thanks. =||= "], ["348", "CMakeLists.txt for libFLAC been rewritten", "Vitaly Kirsanov", "krokoziabla", "04/05/19, 05:47:29 PM", "I've reproduced the commands from FLAC's configure.ac. Seems to build fine on Windows, MacOS, Linux and FreeBSD. Also in [this PR](https://github.com/xiph/flac/pull/97) I've added commands to build tests so the built library should work good either.\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r\n\r\n\r\n## The key points: \r\n\r\n* Come over talk with us at the audacity devel email list. If you just rely on the GitHub pull request messages, you may find we ignore or close the pull request for what does not seem to you to be a good reason. Please come and talk. \r\n\r\n* Translators should subscribe to audacity translators email list instead.  The translators list is also the right place for most translation discussion. \r\n\r\nThere is a bit more on our wiki about how we use the pull requests and the labels that can be attached to pull requests.\r\n\r", "Please fix the conflicts and as a new pull request.  Thanks! =||= "], ["349", "Connected libFLAC with libogg", "Vitaly Kirsanov", "krokoziabla", "04/05/19, 09:11:51 PM", "# Pull Requests\r\n\r\nIf you are submitting a pull request, read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r\n\r\n\r\n## The key points: \r\n\r\n* Come over talk with us at the audacity devel email list. If you just rely on the GitHub pull request messages, you may find we ignore or close the pull request for what does not seem to you to be a good reason. Please come and talk. \r\n\r\n* Translators should subscribe to audacity translators email list instead.  The translators list is also the right place for most translation discussion. \r\n\r\nThere is a bit more on our wiki about how we use the pull requests and the labels that can be attached to pull requests.\r\n\r", "Thank you for this. =||= "], ["350", "CMakeLists.txt for portmixer and portaudio", "Vitaly Kirsanov", "krokoziabla", "04/11/19, 09:35:22 PM", "The support of ALSA, OSS and CoreAudio was added to portaudio. portmixer\r\nwas updated accordingly.\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r\n\r\n\r\n## The key points: \r\n\r\n* Come over talk with us at the audacity devel email list. If you just rely on the GitHub pull request messages, you may find we ignore or close the pull request for what does not seem to you to be a good reason. Please come and talk. \r\n\r\n* Translators should subscribe to audacity translators email list instead.  The translators list is also the right place for most translation discussion. \r\n\r\nThere is a bit more on our wiki about how we use the pull requests and the labels that can be attached to pull requests.\r\n\r", "NaN"], ["351", "Fixed library names and dependencies for FLAC, portaudio and portmidi", "Vitaly Kirsanov", "krokoziabla", "04/14/19, 08:29:36 PM", "# Pull Requests\r\n\r\nIf you are submitting a pull request, read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r\n\r\n\r\n## The key points: \r\n\r\n* Come over talk with us at the audacity devel email list. If you just rely on the GitHub pull request messages, you may find we ignore or close the pull request for what does not seem to you to be a good reason. Please come and talk. \r\n\r\n* Translators should subscribe to audacity translators email list instead.  The translators list is also the right place for most translation discussion. \r\n\r\nThere is a bit more on our wiki about how we use the pull requests and the labels that can be attached to pull requests.\r\n\r", "NaN"], ["352", "Note track vertical zooming changes redux", "Pokechu22", "Pokechu22", "04/15/19, 07:11:32 PM", "An updated version of #232.  Contains fixes for [bug 1820](https://bugzilla.audacityteam.org/show_bug.cgi?id=1820), [bug 1815](https://bugzilla.audacityteam.org/show_bug.cgi?id=1815), and [bug 2093](https://bugzilla.audacityteam.org/show_bug.cgi?id=2093) (the fix for [bug 1819](https://bugzilla.audacityteam.org/show_bug.cgi?id=1819) was cherry-picked separately a while back).\r\n\r\nEach commit should be relatively self-explanatory.  Do note that I removed the the two rendering-only commits ([1](https://github.com/audacity/audacity/pull/232/commits/e2d4b0424e1e55fb162f08bf1784829884faaafe), [2](https://github.com/audacity/audacity/pull/232/commits/d0ffdeb24a4e9ea37d429b7a7621499f8d087c56)), since I'm not completely sure their implementation is correct and the things they address are fairly minor.", "Merged at fe6afb91 =||= "], ["353", "Update build.txt", null, "gfilippini83", "11/09/19, 04:43:31 PM", "# Pull Requests\r\n\r\nIf you are submitting a pull request, read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r\n\r\n\r\n## The key points: \r\n\r\nThe main idea behind this PR is to highlight some of the commands used in UNIX to complete the developer install correctly. Additionally, I have added a key command that wasn't included in the previous iteration. When doing the build of wxWidgets, we need to add at the end 'sudo make install'. It is listed when doing the install for the overall Audacity project, but not within the wxWidgets repository. \r\n\r\nPlease consider these changes for the future iterations of Audacity.\r\n\r\nThanks!\r", "Thanks, but we don't need these changes.  It is too easy to pick up the 'quotes' when cut and pasting commands to use them. =||= "], ["354", "Updated French translation for Audacity 2.3.2", "Olivier Humbert", "trebmuh", "04/20/19, 06:06:02 PM", "NaN", "Closing since merged [here](https://github.com/audacity/audacity/commit/9df28dc5719436813c4a6bb4c1227abe9d734987) =||= "], ["355", "Add Slovak translation", null, "scootergrisen", "04/24/19, 07:10:02 PM", "NaN", "NaN"], ["356", "Update polish translation from Transifex", "Grzegorz Pruchniakowski", "Gootector", "04/26/19, 09:35:32 PM", "Update polish translation from Transifex. All strings translated - 100% done.\r\n\r\nGreetings,\r\nGootector\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r\n\r\n\r\n## The key points: \r\n\r\n* Come over talk with us at the audacity devel email list. If you just rely on the GitHub pull request messages, you may find we ignore or close the pull request for what does not seem to you to be a good reason. Please come and talk. \r\n\r\n* Translators should subscribe to audacity translators email list instead.  The translators list is also the right place for most translation discussion. \r\n\r\nThere is a bit more on our wiki about how we use the pull requests and the labels that can be attached to pull requests.\r\n\r", "Thanks =||= "], ["357", "Don't destroy auto-save file written by different architecture...", "Paul Licameli", "Paul-Licameli", "04/30/19, 08:59:24 PM", "... the error checking might not be complete, but it is sufficient for the\r\nobserved cases, where switching between 32 and 64 bit Mac builds causes\r\nauto-recovery in one build to destroy the data saved by the other build.\r\n\r\nNow instead, you will see the (previously existing) message\r\n\"Could not decode file: %s\" which comes from AudacityProject::OpenFile.\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r\n\r\n\r\n## The key points: \r\n\r\n* Come over talk with us at the audacity devel email list. If you just rely on the GitHub pull request messages, you may find we ignore or close the pull request for what does not seem to you to be a good reason. Please come and talk. \r\n\r\n* Translators should subscribe to audacity translators email list instead.  The translators list is also the right place for most translation discussion. \r\n\r\nThere is a bit more on our wiki about how we use the pull requests and the labels that can be attached to pull requests.\r\n\r", "Is there any risk of this rejecting a normally created auto recovery file?  If I recall correctly, the handling of matching tags is done in a special way for recordings.  Might the tag checking in Lookup in some circumstance reject a file from a crash during recording? =||= Is there any risk of 'stuck with autosave' where a user who has a bad autosave file gets prompted with it every time they start Audacity?  (and no guidance what to do to recover from that) =||= Answering the first comment, no.\r\n\r\nWhere the tag lookup quietly failed previously, what happened was that the map mIds associated a number with the empty string, and the result would be a malformed empty XML tag \"<>\" written to the file -- causing exactly the original symptom of this bug.\r\n\r\nIf a recovery file is correct, this lookup failure will not happen.\r\n\r\nBesides all of which, the recording recovery handling is quite separate from the saving and reinterpreting of the binary file format used by autosave.\r\n\r\n =||= Regarding the second question, when there is autosave file, the user is given the choice to recover (which may fail), discard the files, or quit the program.  If recovery fails, the directories are left in their prior state, so the dialog will appear again when you restart.\r\n\r\nDiscarding the recovery files would cause the dialog not to happen again at startup.\r\n\r\nSince we are after string freeze, we can't improve the guidance.  \"Could not decode file: <path>\" is all you will see if recovery fails.\r\n\r\nMaybe we could improve that now if we accept the non-translation of that message in other locales.\r\n =||= If this is a P2 bug, then an English-only (for 2.3.2) error message with better guidance is OK.  The error message will have a help button, and this will in any case take us to an English language help page.  The English message will get translated in 2.3.3.\r\n\r\nSince the fix is intended to avoid dataloss, I think better guidance is called for, for the fix to actually avoid dataloss.  So if you want to continue with this, please provide an updated pull request. =||= Rebased and updated the error message.\r\n\r\nAlso can write the changed error message to standard out when recovery is invoked via command line.  That was the only other place in the program where the decoding of the binary autosave file happens.\r\n =||= Thanks.  Let's get this to QA and see how it fares.  Committed.   =||= "], ["358", "Bug2105: Enable TAB to sliders on Mac...", "Paul Licameli", "Paul-Licameli", "04/30/19, 08:50:24 PM", "... I think this is a defect in wxWidgets, but one we can work around with a\r\nsimple wrapper class around wxSlider overriding one method.\r\n\r\nTo make the fix complete, change all occurrences of \"safenew wxSlider\"\r\nbut the one in ShuttleGui.cpp covers most cases\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r\n\r\n\r\n## The key points: \r\n\r\n* Come over talk with us at the audacity devel email list. If you just rely on the GitHub pull request messages, you may find we ignore or close the pull request for what does not seem to you to be a good reason. Please come and talk. \r\n\r\n* Translators should subscribe to audacity translators email list instead.  The translators list is also the right place for most translation discussion. \r\n\r\nThere is a bit more on our wiki about how we use the pull requests and the labels that can be attached to pull requests.\r\n\r", "Wow.  Love this.  Thanks. =||= "], ["359", "Bug2104: Mac: don't get trapped in radio button group when TABbing...", "Paul Licameli", "Paul-Licameli", "04/30/19, 09:07:07 PM", "... This is a fix for something mentioned already in the comment at\r\n7d25dedafd3827340d4e8c54dfc8c3c7848be72d before 2.1.3\r\n\r\nAs also mentioned there:  the reason we still need this hook function, is that\r\nwithout it, you can't tab between the panes of the Preference dialog, although\r\nwithout it, this bug would not have happened\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r\n\r\n\r\n## The key points: \r\n\r\n* Come over talk with us at the audacity devel email list. If you just rely on the GitHub pull request messages, you may find we ignore or close the pull request for what does not seem to you to be a good reason. Please come and talk. \r\n\r\n* Translators should subscribe to audacity translators email list instead.  The translators list is also the right place for most translation discussion. \r\n\r\nThere is a bit more on our wiki about how we use the pull requests and the labels that can be attached to pull requests.\r\n\r", "This fix isn't good enough.\r\n\r\nThough you don't get trapped in the radio button group, still the Tab key cycle visits only one of the buttons.  That's not as good as the behavior in Audacity 2.1.1.\r\n\r\n =||= "], ["360", "Fix Tab key navigation on Mac in presence of static boxes", "Paul Licameli", "Paul-Licameli", "05/01/19, 06:50:35 AM", "# Pull Requests\r\n\r\nIf you are submitting a pull request, read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r\n\r\n\r\n## The key points: \r\n\r\n* Come over talk with us at the audacity devel email list. If you just rely on the GitHub pull request messages, you may find we ignore or close the pull request for what does not seem to you to be a good reason. Please come and talk. \r\n\r\n* Translators should subscribe to audacity translators email list instead.  The translators list is also the right place for most translation discussion. \r\n\r\nThere is a bit more on our wiki about how we use the pull requests and the labels that can be attached to pull requests.\r\n\r", "Committed.   Thanks. =||= "], ["361", "Bug2107: Mac Enter should press def. button when text entry focused", "Paul Licameli", "Paul-Licameli", "11/10/19, 11:59:18 AM", "# Pull Requests\r\n\r\nIf you are submitting a pull request, read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r\n\r\n\r\n## The key points: \r\n\r\n* Come over talk with us at the audacity devel email list. If you just rely on the GitHub pull request messages, you may find we ignore or close the pull request for what does not seem to you to be a good reason. Please come and talk. \r\n\r\n* Translators should subscribe to audacity translators email list instead.  The translators list is also the right place for most translation discussion. \r\n\r\nThere is a bit more on our wiki about how we use the pull requests and the labels that can be attached to pull requests.\r\n\r", "Amended as suggested by David to test that the event is char hook, not key up.\r\n\r\n =||= This is a very recently reported P4 and is going to wait for review/assessment until 2.3.3. =||= On Wed, 1 May 2019 at 23:36, James Crook <notifications@github.com> wrote:\n\n> This is a very recently reported P4 and is going to wait for\n> review/assessment until 2.3.3.\n>\nAdditional info:\nWhen I recently added a number of mac accessibility bugs, I just left them\non the default p4 level. I was going to let Q&A change this if required.\nIf this fix works, then I presume it would fix bug 1329, which is a P2.\n\nDavid.\n\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/361#issuecomment-488465536>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AC2WDLLQTMISDE5X5TZZIOLPTILOBANCNFSM4HJUJ3PA>\n> .\n>\n =||= Thanks David.  We have 36 accessibility bugs recorded in Bugzilla.  This possible fix for (now) two issues, one of which has not even yet been assessed as to its priority, can and will wait until 2.3.3. =||= Tracked in Bugzilla, bug 2107.  Paul's fix applied and works.  Thanks Paul.\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2107 =||= "], ["362", "Compile Audacity for Windows with CYGWIN and MINGW", "Carlo Bramini", "carlo-bramini", "11/09/19, 04:51:14 PM", "Hello,\r\nI did some fixes for adding support for Windows to the autoconf scripts.\r\nAfter applying the fixes in this PR, it will be possible to compile all sources of Audacity with CYGWIN.\r\nUnfortunately, it prints these messages when doing the final linking:\r\n\r\n```\r\n../lib-src/portmixer/src/.libs/libportmixer.a(libportmixer_la-px_win_endpoint.o)\r\n: In function `open_ep_mixers':\r\n/home/Carlo/a/lib-src/portmixer/src/../../../../org/audacity/lib-src/portmixer/src/px_win_endpoint.c:103: undefined reference to `_imp__CoCreateInstance@20'\r\n/home/Carlo/a/lib-src/portmixer/src/../../../../org/audacity/lib-src/portmixer/src/px_win_endpoint.c:163: undefined reference to `_imp__CoTaskMemFree@4'\r\n/home/Carlo/a/lib-src/portmixer/src/../../../../org/audacity/lib-src/portmixer/src/px_win_endpoint.c:139: undefined reference to `_imp__CoTaskMemAlloc@4'\r\n/home/Carlo/a/lib-src/portmixer/src/../../../../org/audacity/lib-src/portmixer/src/px_win_endpoint.c:163: undefined reference to `_imp__CoTaskMemFree@4'\r\n/home/Carlo/a/lib-src/portmixer/src/../../../../org/audacity/lib-src/portmixer/src/px_win_endpoint.c:197: undefined reference to `_imp__CoTaskMemAlloc@4'\r\n/home/Carlo/a/lib-src/portmixer/src/../../../../org/audacity/lib-src/portmixer/src/px_win_endpoint.c:221: undefined reference to `_imp__CoTaskMemFree@4'\r\n/home/Carlo/a/lib-src/portmixer/src/../../../../org/audacity/lib-src/portmixer/src/px_win_endpoint.c:221: undefined reference to `_imp__CoTaskMemFree@4'\r\n../lib-src/portmixer/src/.libs/libportmixer.a(libportmixer_la-px_win_endpoint.o)\r\n: In function `open_ep_mixers_byid':\r\n/home/Carlo/a/lib-src/portmixer/src/../../../../org/audacity/lib-src/portmixer/src/px_win_endpoint.c:258: undefined reference to `_imp__CoCreateInstance@20'\r\n../lib-src/libnyquist/libnyquist.a(sndread.o):sndread.c:(.text+0x36f): undefined reference to `sf_open'\r\n../lib-src/libnyquist/libnyquist.a(sndread.o):sndread.c:(.text+0x384): undefined reference to `sf_strerror'\r\n../lib-src/libnyquist/libnyquist.a(sndwritepa.o):sndwritepa.c:(.text+0x405): undefined reference to `Pa_WriteStream'\r\n../lib-src/libnyquist/libnyquist.a(sndwritepa.o):sndwritepa.c:(.text+0x887): undefined reference to `sf_open'\r\n../lib-src/libnyquist/libnyquist.a(sndwritepa.o):sndwritepa.c:(.text+0xa46): undefined reference to `sf_open'\r\n../lib-src/libnyquist/libnyquist.a(sndwritepa.o):sndwritepa.c:(.text+0xa7f): undefined reference to `sf_error'\r\n../lib-src/libnyquist/libnyquist.a(sndwritepa.o):sndwritepa.c:(.text+0xa87): undefined reference to `sf_error_number'\r\n../lib-src/libnyquist/libnyquist.a(sndwritepa.o):sndwritepa.c:(.text+0xc18): undefined reference to `sf_open'\r\n../lib-src/libnyquist/libnyquist.a(sndwritepa.o):sndwritepa.c:(.text+0x14e6): undefined reference to `Pa_WriteStream'\r\n../lib-src/libnyquist/libnyquist.a(sndwritepa.o):sndwritepa.c:(.text+0x1bbe): undefined reference to `Pa_WriteStream'\r\n../lib-src/portmidi/libportmidi_s.a(ptwinmm.o):ptwinmm.c:(.text+0x49): undefined reference to `_imp__timeBeginPeriod@4'\r\n../lib-src/portmidi/libportmidi_s.a(ptwinmm.o):ptwinmm.c:(.text+0x5b): undefined reference to `_imp__timeGetTime@0'\r\n../lib-src/portmidi/libportmidi_s.a(ptwinmm.o):ptwinmm.c:(.text+0xa4): undefined reference to `_imp__timeSetEvent@20'\r\n../lib-src/portmidi/libportmidi_s.a(ptwinmm.o):ptwinmm.c:(.text+0xfa): undefined reference to `_imp__timeKillEvent@4'\r\n../lib-src/portmidi/libportmidi_s.a(ptwinmm.o):ptwinmm.c:(.text+0x12a): undefined reference to `_imp__timeEndPeriod@4'\r\n../lib-src/portmidi/libportmidi_s.a(ptwinmm.o):ptwinmm.c:(.text+0x14b): undefined reference to `_imp__timeGetTime@0'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0x7): undefined reference to `_imp__midiInGetNumDevs@0'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0x5e): undefined reference to `_imp__midiInGetDevCapsA@12'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0xdb): undefined reference to `_imp__midiInGetDevCapsA@12'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0x125): undefined reference to `_imp__midiOutGetNumDevs@0'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0x17c): undefined reference to `_imp__midiOutGetDevCapsA@12'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0x1f7): undefined reference to `_imp__midiOutGetDevCapsA@12'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0x32a): undefined reference to `_imp__midiInGetErrorTextA@12'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0x3c7): undefined reference to `_imp__midiOutGetErrorTextA@12'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0x71c): undefined reference to `_imp__midiInPrepareHeader@12'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0x75b): undefined reference to `_imp__midiInAddBuffer@12'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0x8b8): undefined reference to `_imp__midiInOpen@20'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0x917): undefined reference to `_imp__midiInStart@4'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0x942): undefined reference to `_imp__midiInReset@4'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0x957): undefined reference to `_imp__midiInClose@4'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0x99d): undefined reference to `_imp__midiInGetErrorTextA@12'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0xa20): undefined reference to `_imp__midiInStop@4'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0xa40): undefined reference to `_imp__midiInReset@4'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0xa52): undefined reference to `_imp__midiInClose@4'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0xa66): undefined reference to `_imp__midiInReset@4'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0xa86): undefined reference to `_imp__midiInClose@4'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0xa9a): undefined reference to `_imp__midiInClose@4'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0xaf2): undefined reference to `_imp__midiInGetErrorTextA@12'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0xcac): undefined reference to `_imp__midiInPrepareHeader@12'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0xcf8): undefined reference to `_imp__midiInAddBuffer@12'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0xd59): undefined reference to `_imp__midiInUnprepareHeader@12'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0xe20): undefined reference to `_imp__midiStreamPosition@12'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0xfd7): undefined reference to `_imp__midiOutOpen@20'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0x1015): undefined reference to `_imp__midiStreamOpen@24'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0x10c4): undefined reference to `_imp__midiStreamProperty@12'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0x1105): undefined reference to `_imp__midiStreamProperty@12'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0x114c): undefined reference to `_imp__midiStreamRestart@4'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0x1180): undefined reference to `_imp__midiOutClose@4'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0x11c6): undefined reference to `_imp__midiOutGetErrorTextA@12'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0x12ec): undefined reference to `_imp__midiOutClose@4'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0x1305): undefined reference to `_imp__midiStreamClose@4'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0x1340): undefined reference to `_imp__midiOutGetErrorTextA@12'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0x13b0): undefined reference to `_imp__midiStreamStop@4'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0x143b): undefined reference to `_imp__midiOutPrepareHeader@12'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0x149e): undefined reference to `_imp__midiOutLongMsg@12'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0x14cc): undefined reference to `_imp__midiStreamOut@12'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0x1574): undefined reference to `_imp__midiOutShortMsg@8'\r\n../lib-src/portmidi/libportmidi_s.a(pmwinmm.o):pmwinmm.c:(.text+0x1961): undefined reference to `_imp__midiOutUnprepareHeader@12'\r\ncollect2: error: ld returned 1 exit status\r\n```\r\n\r\nThis happens because portmidi, portmixer and libnyquist need to be linked with some extra libraries and it does not seem that they could be added in the current state.\r\nI think that the most effective way is to migrate also those libraries to libtool.\r\nIn this way, the required libraries for Windows, but it may be applied also to other platforms, will be included and the link will succeded.\r\nHowever, this seems to be a bit more invasive change, so I provided these first simple changes for starting.\r\nI hope that you could give me your opinion for these changes.\r\nThese fixes cover also some parts of the MINGW port, but more are required, here I isolated the ones that made a working Audacity with CYGWIN.\r\n\r\nSincerely.", "Thanks for this PR.  It would probably be a good idea to talk about it more on [the audacity-devel mailing list](https://sourceforge.net/projects/audacity/lists/audacity-devel).\r\n\r\nI've never attempted to build audacity in cygwin and I haven't attempted to build on linux in quite some time, so I can't say too much about your actual changes.  However, I do know that there has been [some recent work by krokoziabla](https://github.com/audacity/audacity/pulls?q=is%3Apr+author%3Akrokoziabla) to build with cmake.  I don't know much about it, just that it's been worked on; I'm sure some of the other people on audacity-devel know more. =||= Sorry, I noticed immediately after I did the PR that portmixer already uses libtool.\r\nSo I added the missing `-lole32` to `LIBADD` and now portmixer does not give linking errors anymore.\r\nportmidi and libnyquist are the only one left with this issue.\r\n\r\nSincerely. =||= I have seen that the travis  ci build failed with this message:\r\n\r\n```\r\n../../../lib-src/portmidi/pm_linux/pmlinuxalsa.c: In function \u2018alsa_write_byte\u2019:\r\n../../../lib-src/portmidi/pm_linux/pmlinuxalsa.c:204:32: error: too many arguments to function \u2018Pt_Time\u2019\r\n                                Pt_Time(NULL));\r\n                                ^\r\nIn file included from ../../../lib-src/portmidi/pm_linux/pmlinuxalsa.c:16:0:\r\n../../../lib-src/portmidi/porttime/porttime.h:79:22: note: declared here\r\n PMEXPORT PtTimestamp Pt_Time(void);\r\n                      ^\r\nmake[2]: *** [pmlinuxalsa.o] Error 1\r\n\r\n```\r\nwhich happens after a change that I did in the sources.\r\nActually, after searching inside the sources, Pt_Time() function is called with and without parameter in some files. What is the correct usage to assume? =||= Please introduce yourself on the audacity devel mailing list and tell us also why YOU are  wanting to build with Cygwin and MinGW on Windows (and not using MSVC).  Why would WE want to support an additional way to build? =||= Thanks.  We decided not to pull this.  We don't officially support cross compilation and don't have man/woman-power to maintain it. =||= > Thanks. We decided not to pull this. We don't officially support cross compilation and don't have man/woman-power to maintain it.\r\n\r\nThank you for your reply.\r\nI understand the reasons for not pulling this.\r\nHowever, I was wondering if somebody could evaluate at least the two litte fixes that I made to  `lib-src/libnyquist/nyx.c`  and `src/AudacityApp.cpp`, because IMO those lines were bugged.\r\nI can do a separate PR if you think that they could be accepted.\r\n\r\nSincerely. =||= Yes, if those are bugs please provide as a separate pull request.\r\nProbably we will pull them just after we release 2.3.3 which is planned for one week's time.\r\n\r\nYou may be interested that we have a project to get CMake working on Linuux, Windows and Mac, and we hope to get this done for 2.4.0 (the release after 2.3.3). =||= "], ["363", "Fix for bug 1539", null, "heldw", "11/09/19, 04:49:23 PM", "Hi All,\r\nI believe I have a fix for bug 1539. When the system country is set to US, the timed recording will now display the date in mm/dd/yyyy format. I know there has been some discussion on whether or not this is actually an issue, but I thought I would leave it here just incase you want to go through with the change.\r\n\r\nThanks!\r\nWill Held\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r\n\r\n\r\n## The key points: \r\n\r\n* Come over talk with us at the audacity devel email list. If you just rely on the GitHub pull request messages, you may find we ignore or close the pull request for what does not seem to you to be a good reason. Please come and talk. \r\n\r\n* Translators should subscribe to audacity translators email list instead.  The translators list is also the right place for most translation discussion. \r\n\r\nThere is a bit more on our wiki about how we use the pull requests and the labels that can be attached to pull requests.\r", "Thanks!  We decided not to pull this. =||= "], ["364", "Add missing #include for wxTreeCtrl.", "Adam Sampson", "atsampson", "11/24/19, 09:11:46 PM", "Building with wxwidgets 3.1.2 results in the following error:\r\n\r\n```\r\nIn file included from /gar/include/wx-3.1/wx/treebook.h:20,\r\n                 from prefs/PrefsDialog.cpp:35:\r\n/gar/include/wx-3.1/wx/treebase.h:57:35: note: forward declaration of \u2018class wxTreeCtrl\u2019                                                                        \r\nprefs/PrefsDialog.cpp:659:75: error: invalid use of incomplete type \u2018class wxTreeCtrl\u2019                                                                          \r\nIn file included from /gar/include/wx-3.1/wx/treebook.h:20,                     \r\n                 from prefs/PrefsDialog.cpp:35:                                 \r\n/gar/include/wx-3.1/wx/treebase.h:57:35: note: forward declaration of \u2018class wxTreeCtrl\u2019                                                                        \r\n```\r\n\r\nThis is the result of [this commit in wxwidgets](https://github.com/wxWidgets/wxWidgets/commit/bb492b99bd969629a52235fb8abbeb88d487a93a). Adding the `#include` explicitly fixes it.\r", "Thank you.  We're currently compiling for wx3.1.1.  We plan to move to wx3.1.3 for Audacity 2.4.0 and will need/use this fix then. =||= Thank you. =||= "], ["365", "Fix bug 2140", "Pokechu22", "Pokechu22", "06/30/19, 03:32:20 AM", "Fixes [bug 2140](https://bugzilla.audacityteam.org/show_bug.cgi?id=2140).  `mbShowTrackNameInTrack` just was not checked anymore after b05acc32daea72018084ded1dccb21884dd5f6ba.\r\n\r\nI also tidied up some of the other code I saw while figuring out what caused the bug.\r\n\r\nOne thing to note is that the show track names as overlay preference is also used in `LabelTrackView::ComputeLayout`, but not via the `TrackArtist` field:\r\n\r\nhttps://github.com/audacity/audacity/blob/68c1637bd334c51991666439e0edae5616842a95/src/tracks/labeltrack/ui/LabelTrackView.cpp#L379-L382\r\n\r\nI'm not sure which way is preferable.  I don't think `TrackArtist` can be used for that one since it isn't rendering, but I'm not certain of that.", "NaN"], ["366", "Enable OpenMP on Windows", "Pokechu22", "Pokechu22", "11/09/19, 04:55:04 PM", "I've had the first commit sitting around for a while, and I only just now remembered it.\r\n\r\n`#pragma omp atomic` is defined in [section 2.6.4](https://www.openmp.org/wp-content/uploads/cspec20.pdf#page=25) of the spec for 2.0, and is the only way it can be used.  It is defined in [section 2.8.5](https://www.openmp.org/wp-content/uploads/OpenMP3.1.pdf#G4.1057349) of the spec for 3.1, and optionally also accepts `read`, `write`, `update`, or `capture`.  If none is specified, it is the same as if update has been specified, so simply getting rid of `update` makes it compatible with 2.0.\r\n\r\nThe second commit enables OpenMP support in Visual Studio.  Adding [the `/Zc:twoPhase-` option](https://docs.microsoft.com/en-us/cpp/build/reference/zc-twophase?view=vs-2017) is required, as otherwise I get `c1xx : warning C4199: two-phase name lookup is not supported for C++/CLI, C++/CX, or OpenMP; use /Zc:twoPhase-`.  I enable it for both the main code and soxr, as those are the only places where OpenMP is used.", "Disabling two-phase lookup would re-enable non-compliant C++ parsing.  See details here:\r\n[Two-phase name lookup support comes to MSVC](https://devblogs.microsoft.com/cppblog/two-phase-name-lookup-support-comes-to-msvc/)\r\nAs of 2019-03-28, Microsoft is \"working on a fix\":\r\n[SIMD Extension to C++ OpenMP in Visual Studio](https://devblogs.microsoft.com/cppblog/simd-extension-to-c-openmp-in-visual-studio/#comments-135) =||= Indeed.  I'm not sure if that will actually cause any real problems, though (everything seems to work fine for me and it compiles properly). =||= My main concern would be causing headaches for folks assuming that gcc, clang, and MSVC will interpret a given piece of code in the same way.\r\n\r\nFor improving performance, __restrict, __assume(...) (for alignment) , declspec(noalias), and declspec(restrict) can help (and similar directives for gcc/clang).  \"/fp:fast\" can help by allowing the optimizer to change the order of floating point operations:  [Do You Prefer Fast or Precise?](https://devblogs.microsoft.com/cppblog/do-you-prefer-fast-or-precise/)\r\n\r\nEven so, [FFTW](http://www.fftw.org/) is going to be faster for FFTs.  Matrix/vector operations are usually  faster when delegated to some optimized library (e.g. [Eigen](http://eigen.tuxfamily.org/)).\r\n\r\nPerhaps my crankiness has more to do with seeing code that uses both wxWidgets (implying it is UI code) and low-level, specialized mathematical code (OpenMP, SpecCache::CalculateOneSpectrum()) all in the same file.  This is a serious code smell, but obviously not something caused by this PR.\r\n\r\nOut of curiosity, have you benchmarked these changes?  It seems like a good idea to make sure there is a significant improvement before risking bugs (given MS' lack of enthusiasm for OpenMP) and giving up ground--at least temporarily--on C++ language standard compliance. =||= For some reason I'd assumed that the spec was ambiguous about how it should be parsed until C++17, but the first article you linked (which I had skimmed before) says it was formalized more than two decades ago.  (I only realized that after looking up `temp.res` in the [C++14](http://open-std.org/JTC1/SC22/WG21/docs/papers/2013/n3797.pdf#section.14.6) and [C++17](http://open-std.org/JTC1/SC22/WG21/docs/papers/2017/n4659.pdf#section.17.6) standard drafts and seeing that they matched).  So I guess it is a bigger deal than I'd thought...\r\n\r\nI haven't done any strong benchmarking, but it feels roughly twice as fast when rendering the spectrogram.  My weak test is to import a rather long stereo audio file, make a 15-second selection and zoom to selection, select all, and enable pinned playback.  Then I also configure the track to show as a spectrogram, and use the largest window size (32768) and the Hann window type.  Then I start playback, and keep track of how often it finishes redrawing.  I get between 1 and 2 redraws a second before this change, and between 3 and 4 after (however, due to compilation time, I am testing with release 2.3.2 instead of master for comparison).  I also observe the rest of the UI updating infrequently with the change, with the timeline only updating around every 5 seconds (while before it updated every re-render).  I'm not sure if that's from this change or from other changes.  It's also important to note that I'm using a rather old laptop, and I'm sure more modern machines would have a less noticeable difference because it already updates frequently enough.\r\n\r\nI've heard of FFTW and it's something I want to look into further at some point.  I just haven't gotten around to it yet.\r\n\r\nAnd yeah, that code is definitely a mess.  This is more an attempt to make it a bit faster, but a real rework would probably be better. =||= If you want to see what effect \"/fp:fast\" might have on what you are looking at, then you can try one of [these builds](https://github.com/henricj/audacity/releases).  There are also x64 and x64/AVX2 binaries available.  Those builds use wxWidgets 3.1.2 and most use the VS2019 compiler, so \"/fp:fast\" isn't the only thing that is different.\r\n\r\nWhat could also be useful and shouldn't take much in the way of code changes would be to add some low-overhead instrumentation.  For example, being able to turn on something like an FPS indicator for the UI would save the user from having to count, \"one one thousand, two one thousand...\"\r\n\r\nAlso, the particular places where OpenMP is used seem really simple.  All the work appears to be CPU bound and broken into identical chunks.  A trivial thread pool should do about as well as OpenMP for that sort of thing, and wouldn't require anything beyond what is available in standard C++.  Granted that making assumptions about performance often makes fools of us, something like a thread pool with CPU-1 threads and a \"parallel_batch\" class or function should be able to implement something like [MS' concurrency:parallel_for()](https://docs.microsoft.com/en-us/cpp/parallel/concrt/how-to-write-a-parallel-for-loop) without requiring the PPL, TBB, or YetAnotherThreadPool(TM) library.\r\n\r\nGoing forwards, one would want to split the math from the UI, and leverage code that has already been optimized for performing that low level math, but perhaps some simple threading stuff like what was described in the previous paragraph could be useful in the meantime. =||= Thanks.  We decided not to pull this. =||= "], ["367", "Simplified some boolean expressions", "Deleted user", "ghost", "07/13/19, 06:11:27 AM", "Optimizations that make the code simpler and faster\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r\n\r\n\r\n## The key points: \r\n\r\n* Come over talk with us at the audacity devel email list. If you just rely on the GitHub pull request messages, you may find we ignore or close the pull request for what does not seem to you to be a good reason. Please come and talk. \r\n\r\n* Translators should subscribe to audacity translators email list instead.  The translators list is also the right place for most translation discussion. \r\n\r\nThere is a bit more on our wiki about how we use the pull requests and the labels that can be attached to pull requests.\r\n\r", "Thanks Pi, but in my opinion these changes neither make the expressions simpler nor faster. =||= "], ["368", "French translation: Accurate notch translation", "Valentin Valls", "vallsv", "07/17/19, 11:17:37 AM", "I spend many minutes to found this filter in Audacity. As \"filtre \u00e0 peigne\" is about \"comb filter\".\r\n\r\nUsing the translation of \"band stop filter\" is i think easier for a reader.\r\n\r\nOn side note, sorry, I read your key points about translation. But i am sorry, i don't want to register to a mailing list for this kind of contribution.", "Thanks. =||= On Wed, Jul 17, 2019 at 7:08 AM Valentin Valls <notifications@github.com>\nwrote:\n\n> I spend many minutes to found this filter in Audacity. As \"filtre \u00e0\n> peigne\" is about \"comb filter\".\n>\n> Using the translation of \"band stop filter\" is i think easier for a reader.\n>\n\nThe effect might either cut or boost a band.\n\nPRL\n\n\n\n> On side note, sorry, I read your key points about translation. But i am\n> sorry, i don't want to register to a mailing list for this kind of\n> contribution.\n> ------------------------------\n> You can view, comment on, or merge this pull request online at:\n>\n>   https://github.com/audacity/audacity/pull/368\n> Commit Summary\n>\n>    - Accurate notch translation to french\n>\n> File Changes\n>\n>    - *M* locale/fr.po\n>    <https://github.com/audacity/audacity/pull/368/files#diff-0> (4)\n>\n> Patch Links:\n>\n>    - https://github.com/audacity/audacity/pull/368.patch\n>    - https://github.com/audacity/audacity/pull/368.diff\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/368?email_source=notifications&email_token=ACZBGYKCLT2ZAUIRJ56R64DP734TDA5CNFSM4IEPFXRKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4G7WLSLQ>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ACZBGYLNGK2P73YQU4ZKI73P734TDANCNFSM4IEPFXRA>\n> .\n>\n =||= Thanks @vallsv , good catch. =||= "], ["369", "Make ffmpeg message to locate/download libraries clearer", "Hassan C", "hassan-c", "07/25/19, 12:50:57 PM", "Just a small change to make this particular dialogue box a little clearer. At the moment it implies \"Preferences\" is a top level menu, when in fact it is an option under the \"Edit\" menu.", "Thanks. =||= "], ["370", "I translated whole part of Korean po file.", "Hwanyong Lee", "hwan-ajou", "08/02/19, 12:29:56 PM", "# Pull Requests\r\n\r\nIf you are submitting a pull request, read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r\n\r\n\r\n## The key points: \r\n\r\n* Come over talk with us at the audacity devel email list. If you just rely on the GitHub pull request messages, you may find we ignore or close the pull request for what does not seem to you to be a good reason. Please come and talk. \r\n\r\n* Translators should subscribe to audacity translators email list instead.  The translators list is also the right place for most translation discussion. \r\n\r\nThere is a bit more on our wiki about how we use the pull requests and the labels that can be attached to pull requests.\r\n\r", "NaN"], ["371", "Add option to export with silence from the beginning", "Jonat\u00e3 Bolzan Loss", "jonata", "08/17/19, 11:15:32 AM", "This is an option to enable export the audio starting with silence from the beginning of the track (from 0.0s or from the start of selection) and not from the beginning of the audio (from the first sample of the first block).", "Thanks Jonat\u00e3, and thanks for discussing on audacity-devel.  I've applied this. =||= Great! \ud83d\ude00 Thank you so much! =||= "], ["372", "Fix building with wxWidgets 3.1.2", null, "mikhailnov", "08/19/19, 08:39:23 PM", "From changelog:\r\n- wx/treebook.h doesn't include wx/treectrl.h (and, via it, wx/textctrl.h) any\r\n  more, include these headers explicitly from your code if necessary.", "Thanks.  Merged. =||= "], ["373", "Fix compilation without USE_MIDI", "Alexander Tsoy", "puleglot", "08/27/19, 09:51:50 PM", "NaN", "Thank you!  Merged. =||= "], ["374", "Fix some compile issues", "StormBytePP", "StormBytePP", "08/30/19, 07:51:02 PM", "While compiling audacity with clang and libc++ instead of libstdc++ I came across some bugs that prevented compilation to be successful.\r\n\r\nThis pull request addresses those compilation failures.", "Thank You!  Committed. =||= "], ["375", "Fix compilation without USE_LAME", "Alexander Tsoy", "puleglot", "09/04/19, 06:46:43 PM", "NaN", "Scratch that, this also requires changes to Win and Mac build system which I cannot test. =||= "], ["376", "Fix exporting soloed track", "Jonat\u00e3 Bolzan Loss", "jonata", "09/05/19, 09:29:31 PM", "This fix an issue where you are not able to export a project that intentionally have solo tracks.", "NaN"], ["377", "Added project name on filename when exporting tracks", "Jonat\u00e3 Bolzan Loss", "jonata", "05/31/20, 05:24:53 PM", "https://sourceforge.net/p/audacity/mailman/message/36757390/\r\n\r\nThis add the project name + the label track name on the suggested txt filename field of the Export dialog.", "Thanks.  We've decided against this.  If we do do this we will likely do it in a different way, with more flexibility.  We're not keen to get this special case code in. =||= "], ["378", "Update French translation back to 100%", "Olivier Humbert", "trebmuh", "10/03/19, 02:29:28 PM", "NaN", "Thanks.  Merged.   =||= "], ["379", "Updated polish translation from Transifex", "Grzegorz Pruchniakowski", "Gootector", "10/03/19, 02:29:58 PM", "Updated polish translation from Transifex. 100% complete.\r\n\r\nGreetings,\r\nGootector\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r\n\r\n\r\n## The key points: \r\n\r\n* Come over talk with us at the audacity devel email list. If you just rely on the GitHub pull request messages, you may find we ignore or close the pull request for what does not seem to you to be a good reason. Please come and talk. \r\n\r\n* Translators should subscribe to audacity translators email list instead.  The translators list is also the right place for most translation discussion. \r\n\r\nThere is a bit more on our wiki about how we use the pull requests and the labels that can be attached to pull requests.\r\n\r", "Thanks.  Merged. =||= "], ["380", "Possible fix for bug #590", "Leland Lucius", "lllucius", "10/02/19, 04:02:34 PM", "This change reduces the risk of LADSPA plugins referencing\r\nAudacity symbols by using the RTLD_DEEPBIND flag when loading\r\nthe plugins.\r\n\r\nIt also addresses an issue specific to the \"blop\" plugins where\r\nthey load their own libraries (without RTLD_DEEPBIND).\r\n\r\nA much better solution would be to change Audacity's default\r\nsymbol visibility to \"hidden\" which would expose ONLY symbols\r\nspecificially marked as visible.\r", "NaN"], ["381", "Fix Ru translation of 'signed' and 'float'", null, "mikhailnov", "10/04/19, 06:18:48 PM", "Suggested to fix 'signed' at https://bugzilla.altlinux.org/show_bug.cgi?id=37238\r\nSee e.g. https://www.quora.com/What-do-the-16-bit-PCM-samples-in-a-wav-file-actually-represent/answer/Ian-Hendry-11\r\nif you don't believe that it's correct.\r\n\r\nAlso translate 'float', it was not translated.", "Merged. Thank you. =||= "], ["382", "Update audacity.desktop.in", "Avokene", "ajkenny122", "10/07/19, 09:39:49 AM", "Korean translation has been added.\r\n(ko)\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r\n\r\n\r\n## The key points: \r\n\r\n* Come over talk with us at the audacity devel email list. If you just rely on the GitHub pull request messages, you may find we ignore or close the pull request for what does not seem to you to be a good reason. Please come and talk. \r\n\r\n* Translators should subscribe to audacity translators email list instead.  The translators list is also the right place for most translation discussion. \r\n\r\nThere is a bit more on our wiki about how we use the pull requests and the labels that can be attached to pull requests.\r\n\r", "Thanks.  Merged. =||= Thank you!\n\n2019\ub144 10\uc6d4 7\uc77c (\uc6d4) \uc624\ud6c4 6:40, James Crook <notifications@github.com>\ub2d8\uc774 \uc791\uc131:\n\n> Thanks. Merged.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/382?email_source=notifications&email_token=ANNDXLJVSB7FQGGFDP4SOP3QNL7XTA5CNFSM4I5723W2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEAPUP7A#issuecomment-538920956>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ANNDXLLYLBSVJZUKDSPZXFTQNL7XTANCNFSM4I5723WQ>\n> .\n>\n =||= "], ["383", "Add support for exporting labels in SubRip format", "Pokechu22", "Pokechu22", "10/14/19, 07:51:08 AM", "Not intended for the 2.3.3; this is just something I needed for my own use (for [Wikimedia Commons](https://commons.wikimedia.org/wiki/Commons:Timed_Text)) and now that I've implemented it, I might as well put it out.\r\n\r\nThis adds support for importing and exporting label track context in the format used by [SubRip](https://en.wikipedia.org/wiki/SubRip) (with some weak documentation [here](http://fileformats.archiveteam.org/wiki/SubRip_text_file_format)), and also exporting in the related [WebVVT](https://en.wikipedia.org/wiki/WebVTT) format (but not importing due to [the increased complexity of that format](https://w3c.github.io/webvtt/)).", "As a minimum this sequence should be made into a subroutine:\r\n\r\n   LabelFormat format = LabelFormat::TEXT;\r\n   if (fName.Right(4).CmpNoCase(wxT(\".srt\")) == 0) {\r\n      format = LabelFormat::SUBRIP;\r\n   } else if (fName.Right(4).CmpNoCase(wxT(\".vtt\")) == 0) {\r\n      format = LabelFormat::WEBVVT;\r\n   }\r\n\r\nI think also that we need an #ifdef EXPERIMENTAL_SUBRIP_FORMATS.  We should support import of our own exported SRT, even if we don't support the full WebVVT format.  Closed for a resubmit with these corrections. =||= > We should support import of our own exported SRT, even if we don't support the full WebVVT format.\r\n\r\nImporting exported SRT files works; it's only WebVVT that can't be imported again. =||= OK. =||= As another note, I feel like there must already be some timestamp parsing code somewhere in audacity that I could re-use (since the UI has timestamps), but I couldn't find it. =||= The UI that draws the time ruler converts raw times into formatted timestamps.  It does not do the reverse conversion. =||= This looks like a very specialist use case, which would be better as an optional plug-in or module rather than a  core feature. Could we at least discus this on the QA list? =||= "], ["384", "Implementation of Timer Toolbar", "Jonat\u00e3 Bolzan Loss", "jonata", "02/16/20, 08:04:43 PM", "This code implements a Timer Toolbar, freely resizable.", "Thank you.  We have another implementation of this where the Toolbar is bigger but not resizable.  We'll be using your resizable version, possibly adapted slightly, in Audacity 2.4.0 =||= Closing this pull request as a modified version of it has been merged.\r\nThank you for this jonata. =||= "], ["385", "Add new colors for WaveColor", "Jonat\u00e3 Bolzan Loss", "jonata", "11/09/19, 04:33:14 PM", "This commit adds 20 colors to Wave Color selection.", "Thanks, but we're not going to go with this change.\r\nWhen we add more colours, we won't be extending the menu.  We'll provide some different interface that is easier to use (and easier to customise).  We can discuss that on audacity-devel email list or on Discord. =||= Sorry to dig into an old ticket but what about this feature ? I was looking for exactly this feature (searched options, played with the .aup XML file to try, even looked if some plugins exists). Having only 4 colors makes the audio edition not very visual in a project with dozens tracks.\r\nDoes this feature still planned ? =||= I'm not keen on the interface for this @Nozalys .  Four colours covers basic to mid level users.  For advanced users with large numbers of tracks we need to use colour more systematically, or the extra colour will start to get confusing rather than be helpful.  Also we would want to get coloured labels in at the same time, possibly coordinating label colours and clip colours in some way, to show a relation when there is one.  \r\n\r\nGoing to more colours - we need to think systematically about how colours are used.  \r\n\r\nIf you'd like to talk more about colour customisation, can I encourage you to start a conversation on audacity-devel email list where more people can join in? =||= Ok I see. I'll take a try with audacity-devel email list. Let's see. =||= "], ["386", "l10n(zh_TW): update translations", "pan93412", "pan93412", "11/09/19, 05:20:03 PM", "# Pull Requests\r\n\r\nIf you are submitting a pull request, read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r\n\r\n\r\n## The key points: \r\n\r\n* Come over talk with us at the audacity devel email list. If you just rely on the GitHub pull request messages, you may find we ignore or close the pull request for what does not seem to you to be a good reason. Please come and talk. \r\n\r\n* Translators should subscribe to audacity translators email list instead.  The translators list is also the right place for most translation discussion. \r\n\r\nThere is a bit more on our wiki about how we use the pull requests and the labels that can be attached to pull requests.\r\n\r", "Build checks failed, so pull request closed. =||= "], ["387", "Autotools are not aware of ObjectiveC", "Mojca Miklavec", "mojca", "06/03/20, 09:37:10 PM", "**Describe the bug**\r\n\r\nWhen building Audacity on macOS with a configure script rather than Xcode, some files are not built correctly due to the use of ObjectiveC. (The Xcode project explicitly marks those files as ObjectiveC, but automake doesn't know anything about the file types.)\r\n\r\nThe autotools would probably at least need to define `AC_PROG_OBJC`, but further changes might be needed. A quick-and-dirty workaround for us was to rename some files from `.cpp` to `.mm`, but that's probably not suitable to be upstreamed as these files are regular C++ files for any other platform. Another dirty workaround might be to simply always add `-ObjC` when using wxWidgets with Cocoa.\r\n\r\nClang as the default compiler on macOS builds ObjectiveC if one either passes the `-ObjC` compiler flag, or if the file ends with a suitable extension.\r\n\r\nEven if the CMake support gets added, the problem will not simply disappear as CMake would call the compiler based on file ending as well.\r\n\r\nThe list of affected files is roughly the following:\r\n```\r\nsrc/KeyboardCapture\r\nsrc/VSTControlOSX\r\nsrc/commands/CommandManager\r\nsrc/effects/Effect\r\nsrc/effects/lv2/LV2Effect\r\nsrc/menus/WindowMenus\r\n```\r\n\r\nA slightly related problem is the following piece of code blindly assuming that everyone using VST must be using GTK. We work around it by replacing `VSTControlGTK.cpp` with `VSTControlOSX.mm`, but this needs some conditional on WXMAC as well.\r\n\r\n```automake\r\nif USE_VST\r\naudacity_CPPFLAGS += $(VST_CFLAGS)\r\naudacity_LDADD += $(VST_LIBS)\r\naudacity_SOURCES += \\\r\n\teffects/VST/aeffectx.h \\\r\n\teffects/VST/VSTEffect.cpp \\\r\n\teffects/VST/VSTEffect.h \\\r\n\teffects/VST/VSTControlGTK.cpp \\\r\n\teffects/VST/VSTControlGTK.h \\\r\n\t$(NULL)\r\nendif\r\n```\r\n\r\n**To Reproduce**\r\nBuild Audacity on macOS with autotools.\r\n\r\n**Additional information (please complete the following information):**\r\n- OS: macOS (version not important)\r\n- Version: master branch as of November 19\r\n\r\n@RJVB @Paul-Licameli ", "On Saturday November 09 2019 15:41:25 Mojca Miklavec wrote:\n\n>Even if the CMake support gets added, the problem will not simply disappear as CMake would call the compiler based on file ending as well.\n\nIt will however be easier with CMake to add file-specific compiler arguments.\n\n>A slightly related problem is the following piece of code blindly assuming that everyone using VST must be using GTK. We work around it by replacing `VSTControlGTK.cpp` with `VSTControlOSX.mm`, but this needs some conditional on WXMAC as well.\n\nConditionals are easy with CMake too.\n\nA related, future problem which could be taken into account: wxQt is being rebooted and starting to get somewhere, esp. on MS Windows from what I can see. It definitely has the advantage of hiding a lot more platform-specific issues. At the moment Audacity doesn't support this wx variant at all but it would probably be a good idea to keep its existence in mind when overhauling code that juggles different wx variants (and the build system).\n =||= It would be most pleasing to segregate all mac-specific Objective-C++ into\n.mm files not included in the Windows and Linux builds.  It would be a\npleasing separation.\n\nI won't have time to consider the details of that until later this week.\n\nPRL\n\n\nOn Sun, Nov 10, 2019 at 4:13 AM Ren\u00e9 Bertin <notifications@github.com>\nwrote:\n\n> On Saturday November 09 2019 15:41:25 Mojca Miklavec wrote:\n>\n> >Even if the CMake support gets added, the problem will not simply\n> disappear as CMake would call the compiler based on file ending as well.\n>\n> It will however be easier with CMake to add file-specific compiler\n> arguments.\n>\n> >A slightly related problem is the following piece of code blindly\n> assuming that everyone using VST must be using GTK. We work around it by\n> replacing `VSTControlGTK.cpp` with `VSTControlOSX.mm`, but this needs some\n> conditional on WXMAC as well.\n>\n> Conditionals are easy with CMake too.\n>\n> A related, future problem which could be taken into account: wxQt is being\n> rebooted and starting to get somewhere, esp. on MS Windows from what I can\n> see. It definitely has the advantage of hiding a lot more platform-specific\n> issues. At the moment Audacity doesn't support this wx variant at all but\n> it would probably be a good idea to keep its existence in mind when\n> overhauling code that juggles different wx variants (and the build system).\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/issues/387?email_source=notifications&email_token=ACZBGYPEJLPSGJZBCPAB3FTQS7GDTA5CNFSM4JLKCSS2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEDUYZ5A#issuecomment-552176884>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ACZBGYNRYLFBTFXUO65R5HDQS7GDTANCNFSM4JLKCSSQ>\n> .\n>\n =||= On Sunday November 10 2019 03:14:38 Paul Licameli wrote:\n\n>.mm files not included in the Windows and Linux builds.  It would be a\n>pleasing separation.\n\nThe way we'd do that in KDE is by copying (instead of renaming) the required .cpp files to .mm, strip the ObjC code from the old .cpp files, and rewrite the build formula to include the .mm files on Mac instead of the .cpp files. Mostly trivial with CMake ....\n\n =||= On Sun, Nov 10, 2019 at 7:19 AM Ren\u00e9 Bertin <notifications@github.com>\nwrote:\n\n> On Sunday November 10 2019 03:14:38 Paul Licameli wrote:\n>\n> >.mm files not included in the Windows and Linux builds. It would be a\n> >pleasing separation.\n>\n> The way we'd do that in KDE is by copying (instead of renaming) the\n> required .cpp files to .mm, strip the ObjC code from the old .cpp files,\n> and rewrite the build formula to include the .mm files on Mac instead of\n> the .cpp files. Mostly trivial with CMake ....\n>\n\nI hope that does not mean duplication of the C++ needed in both builds.  Do\nyou mean the .mm file could #include the common code remaining in the .cpp\nfile?\n\nPRL\n\n\n\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/issues/387?email_source=notifications&email_token=ACZBGYJJI3Z3K4LZAK3LXETQS7353A5CNFSM4JLKCSS2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEDU35FA#issuecomment-552189588>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ACZBGYPNQPHXPU4VXSOMMX3QS7353ANCNFSM4JLKCSSQ>\n> .\n>\n =||= >I hope that does not mean duplication of the C++ needed in both builds.  Do\n>you mean the .mm file could #include the common code remaining in the .cpp\n>file?\n\nYes. You can of course also put only the ObjC++ code in .mm files which you pull in in addition to the .cpp files. Maybe a bit more work initially but indeed easier to maintain afterwards if only a small proportion is ObjC++ code .\n =||= cmake 3.16 will have support for Objective C/C++:\r\n\r\nhttps://cmake.org/cmake/help/v3.16/release/3.16.html =||= I know, but that doesn't help in any way at the moment. If files have wrong extension and you don't provide any explicit hints to it, CMake will also not magically recognise the need for objective C. Most importantly though the CMake build system is not yet ready. =||= >cmake 3.16 will have support for Objective C/C++:\n>\n>https://cmake.org/cmake/help/v3.16/release/3.16.html\n\n> > CMake learned to support the Objective C (OBJC) and Objective C++ (OBJCXX)\n> > languages. They may be enabled via the project() and enable_language()\n> > commands. When OBJC or OBJCXX is enabled, source files with the .m or .mm,\n> > respectively, will be compiled as Objective C or C++. Otherwise they will\n> > be treated as plain C++ sources as they were before.\n\nI've been using ObjC/ObjC++ with cmake for quite a while now, I wasn't aware this didn't work?! Or maybe it just worked because at the very least clang looks at the file extension (I cannot recall having tried to build ObjC++ enabled projects with GCC).\n =||= CMake is now used to build Audacity, so this issue closed.  Thanks to all who contributed to it. =||= "], ["388", "Changes made in Line 184 in WaveformVRulerControls.cpp to fix BUG ID \u2026", null, "AnshulKiyawat", "11/19/19, 03:40:23 PM", "\u20261734\r\n\r\nCo-authored-by: Hrishik Joshi <hrishik719@gmail.com>\r\nCo-authored-by: Hardik Jain <jainhardik1107@gmail.com>\r\nCo-authored-by: Piyush Chhalani <17ucs110@lnmiit.ac.in>\r\nCo-authored-by: Ritik Mishra <ritik.fcb@gmail.com>\r\nCo-authored-by: Anmol Garg <anmol.garg428@gmail.com>\r\nCo-authored-by: Akshit Devpura <akshitdevpura007@gmail.com>\r\nCo-authored-by: Sheetal Chaturvedi <sheetal1998chaturvedi@gmail.com>\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r\n\r\n\r\n## The key points: \r\n\r\n* Come over talk with us at the audacity devel email list. If you just rely on the GitHub pull request messages, you may find we ignore or close the pull request for what does not seem to you to be a good reason. Please come and talk. \r\n\r\n* Translators should subscribe to audacity translators email list instead.  The translators list is also the right place for most translation discussion. \r\n\r\nThere is a bit more on our wiki about how we use the pull requests and the labels that can be attached to pull requests.\r\n\r", "Please see https://sourceforge.net/p/audacity/mailman/message/36856192/\r\n\r\nAudacity QA team have reviewed the bug - THANK YOU for your work, which led to QA team doing that.  QA team decided the current behaviour is actually better, and that the 'bug' is a 'WONT-FIX'.  In other words, it is better if the code stays as it is now and the bug closed rather than making the change.\r\n\r\nThis does not lessen your contribution.  It led to one more bug being closed.  According to the 'WONT-FIX' status of the bug, and the comments in the bug tracker, that does though mean this pull request will shortly be closed.  Thank you all for your work on it. =||= Following discussion by the QA team, bug 1734 has been closed as \"won't fix\", on the basis that the current behaviour is preferable to the old behaviour on several counts. Consequently this pull request becomes obsolete. However, I would like to thank AnshulKiyawat and team for submitting this pull request, which brought the issue into scrutiny and has allowed it to be closed.  =||= "], ["389", "Add \"Toggle Mute Recording Volume\" on Extra - Mixer menu", "Jonat\u00e3 Bolzan Loss", "jonata", "05/31/20, 05:23:38 PM", "This PR implements an option to toggle the recording input volume to mute and back in Extra - Mixer menu.\r", "Thanks.  We've decided against this feature.  There is too much risk of new users toggling the recording volume to 0 and then wondering why their recording is flatlining.  The feature isn't sufficiently useful (not previously requested by users) to merit that risk. =||= "], ["390", "Fix (again) TAB key navigation to graphic EQ sliders on Mac...", "Paul Licameli", "Paul-Licameli", "11/14/19, 11:28:16 PM", "... original fix was at c8d95e1\r\n\r\nregression was at 3e98a10\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r\n\r\n\r\n## The key points: \r\n\r\n* Come over talk with us at the audacity devel email list. If you just rely on the GitHub pull request messages, you may find we ignore or close the pull request for what does not seem to you to be a good reason. Please come and talk. \r\n\r\n* Translators should subscribe to audacity translators email list instead.  The translators list is also the right place for most translation discussion. \r\n\r\nThere is a bit more on our wiki about how we use the pull requests and the labels that can be attached to pull requests.\r\n\r", "Thanks for spotting and fixing this Paul. =||= Rebasing my shuttlegui branch to recent master exposed it.\n\nPRL\n\n\nOn Thu, Nov 14, 2019 at 6:28 PM James Crook <notifications@github.com>\nwrote:\n\n> Thanks for spotting and fixing this Paul.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/390?email_source=notifications&email_token=ACZBGYKCYEBD55W3GFITZS3QTXNKLA5CNFSM4JNS6TAKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEEDWL7I#issuecomment-554132989>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ACZBGYIDIG6KCRVIDYOKKLLQTXNKLANCNFSM4JNS6TAA>\n> .\n>\n =||= "], ["391", "Add \"Toggle waveform/spectrogram view\" on focused track", "Jonat\u00e3 Bolzan Loss", "jonata", "11/16/19, 02:54:33 PM", "This adds a new item on Extra menu Track - Toggle Focused Track View, to change the view from Waveform to Spectrogram and back.", "I down vote this proposal.  It would conflict with my intentions to turn spectrogram into an optional plug-in.\r\n =||= As discussed on devel@ mailing list, this feature proposal will be redundant when simultaneous waveform / spectrogram views (\"split views\") are available. \"Split views\" is planned for the next version of Audacity (2.4.0), so closing this pull request. =||= "], ["392", "Vertical zoom incdec commands", "Jonat\u00e3 Bolzan Loss", "jonata", "05/31/20, 05:20:44 PM", "This implements vertical zoom increase and decrease for use in Extra menu and/or commands.", "I don't see a strong case for why we need a menu command and keyboard shortcut in addition to mouse zoom. If you would like to promote the merits of this addition, please come and discuss it with us on the developer's mailing list (https://sourceforge.net/projects/audacity/lists/audacity-devel). =||= Closed.  We've decided against this feature / enhancement. =||= "], ["393", "Prevent heap-use-after-free crash", "Philipp Cla\u00dfen", "philipp-classen", "11/24/19, 09:09:40 PM", "Quickly opening and closing windows can trigger a use-after-free memory violation.\r\n\r\nI'm able to reliably reproduce on Arch Linux with i3 as the window manager. To understand what happens, I created a debug build with `-fsanitize=address`. The crash happens in `ProjectWindow::FixScrollbars` (more information can be found in the attached stack trace).\r\n\r\n[address-sanitizer-report.txt](https://github.com/audacity/audacity/files/3881612/address-sanitizer-report.txt)\r\n\r\nI cannot guarantee that the fix will cover all possible races, but in the situation where the callback is executed and deletion is already in progress, it reliably crashes but with the patch, I was no longer able to reproduce it.\r", "Thank you! =||= "], ["395", "build: Fix bad include path", "Lars Wendler", "Polynomial-C", "11/24/19, 09:04:11 PM", "```\r\n  tracks/labeltrack/ui/LabelTextHandle.cpp:25:10: fatal error: ../../../images/Cursors.h: No such file or directory\r\n     25 | #include \"../../../images/Cursors.h\"\r\n        |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n  compilation terminated.\r\n```\r\nSigned-off-by: Lars Wendler <polynomial-c@gentoo.org>\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r\n\r\n\r\n## The key points: \r\n\r\n* Come over talk with us at the audacity devel email list. If you just rely on the GitHub pull request messages, you may find we ignore or close the pull request for what does not seem to you to be a good reason. Please come and talk. \r\n\r\n* Translators should subscribe to audacity translators email list instead.  The translators list is also the right place for most translation discussion. \r\n\r\nThere is a bit more on our wiki about how we use the pull requests and the labels that can be attached to pull requests.\r\n\r", "The include path did not stop our builds, so something is different in your build environment with default paths.  However I/we are happy to make this change as the actual path is clearer your way.  Maybe we should get rid of some of our default paths.\r\n\r\nThanks for the pull request. =||= "], ["396", "Error while recording to the end of existing track", null, "groowyCZ", "02/17/20, 12:36:31 PM", "Audacity version: 2.3.3-0build1~ubuntu18.04\r\nError:\r\n```\r\nExpression 'err' failed in 'src/hostapi/alsa/pa_linux_alsa.c', line: 3355\r\nExpression 'ContinuePoll( self, StreamDirection_In, &pollTimeout, &pollCapture )' failed in 'src/hostapi/alsa/pa_linux_alsa.c', line: 3896\r\nExpression 'PaAlsaStream_WaitForFrames( stream, &framesAvail, &xrun )' failed in 'src/hostapi/alsa/pa_linux_alsa.c', line: 4274```", "Could not reproduce.  Please give enough details so that we can. =||= I cannot reproduce this on W10 or on macOS 10.51.2 Catalina - with either 2.3.3 or that latest alpha builds I have for 2.4.0 =||= Could not reproduce. =||= "], ["398", "Request: update FFmpeg libraries", null, "l00tzOMG", "09/24/21, 06:03:22 PM", "Please be so kind to allow the use of newer FFmpeg libraries, e.g. 4.2. The currently used version (2.2.2) has issues with e-ac3.\r\n\r\nThank you very much in advance,", "https://forum.audacityteam.org/viewtopic.php?t=105590#p373215 seems to explain how to do it. I don't have time to prioritize this myself right now, but it sounds straightforward enough. =||= Yes, as said in the audacity forum, overwriting the ffmpeg lib-src/ffmpeg/{libavcodec,libavformat,libavutil}/ headers (I did it on bdcd907b5) worked for me\r\n\r\nMy local builded ffmpeg : version N-97687-gd0705ecb2b built with gcc 9 (Debian 9.3.0-11)\r\n\r\n![auda](https://user-images.githubusercontent.com/39339802/82296432-7a663080-99b1-11ea-9a88-aa4d1d303555.png)\r\n\r\n\r\n\r\n\r\n =||= I get your point, but if it is so easy to update, why don't developers make it available for the broad audience of users, who don't wish to bother with compiling from source (thinking of Windows users here...)? Also, if you make a pull request of your changes would probably speed up this process... =||= I can't believe they still haven't updated it. =||= Why does this have no priority? I've been waiting a long time to be able to use the new ffmpeg and not the old garbage 2.2\r\n\r\nIt is impossible to download version 2.2 of Ffmpeg from the guide. Error 403 =||= > Why does this have no priority? I've been waiting a long time to be able to use the new ffmpeg and not the old garbage 2.2\r\n> \r\n> It is impossible to download version 2.2 of Ffmpeg from the guide. Error 403\r\n\r\nThe sad thing is that there's already a pull request, which updates it to 4.2.3. The only effort needed from the authors is to check and merge... =||= :-( =||= \r\n\r\nI am not sure how much attention do the audacity developers put into the conversation here. \r\nAccording to [this audacity forum post](https://forum.audacityteam.org/viewtopic.php?f=20&t=68196&sid=15fe1125d989d5155cfcd9b6b47c4cf7), feature request should be sent on the forum. \r\nJoin [this forum discussion](https://forum.audacityteam.org/viewtopic.php?f=20&t=116912). Your voice will be helpful! =||= They just don't care. All they would have to do is push the merge button. =||= \"All they would have to do is push the merge button.\"  LOL.  Try running an open source project that way and then come back and say it in all seriousness.\r\n\r\nWe have updates to FFmpeg, Portaudio and wxWidgets planned.  See #741.  That's by Leland who has commit rights.  When we are ready it will go in. =||= Now that #741 has been merged, I think this issue can be closed, right?\r\n\r\n> \"All they would have to do is push the merge button.\" LOL. Try running an open source project that way and then come back and say it in all seriousness.\r\n\r\nTo be fair, no maintainers responded to #608 until close to 9 months after it was opened. It's totally reasonable to reject or delay pull requests because the maintainers have other priorities, but it's not cool to provide no explanation for why a pull request addressing an issue that many users have raised concerns about doesn't get merged for 9 months. =||= Before closing: another important thing would be to add the `-drc_scale 0` switch upon importing (e)ac3 files, as FFmpeg applies DRC on these automatically and this should be avoided. =||= @l00tzOMG - Please explain more.\r\n\r\nIs it already covered by this: https://ffmpeg.org/pipermail/ffmpeg-devel/2015-March/170985.html ?? =||= Hmmm, maybe I have missed something..., then it is already fixed :) =||= Closing per:\r\n> Now that #741 has been merged, I think this issue can be closed, right?\r\n\r\nand:\r\n\r\n> then it is already fixed :) =||= #741 was reverted so reopening. =||= > Is it already covered by this: https://ffmpeg.org/pipermail/ffmpeg-devel/2015-March/170985.html ??\r\n\r\nThis was not applied and is not going to be applied. see patch more modern try to do it. https://patchwork.ffmpeg.org/project/ffmpeg/patch/20200201193443.22419-1-rcombs@rcombs.me/ =||= "], ["399", "Updated Slovak translation of Audacity", null, "Giovani93", "12/06/19, 12:09:25 PM", "Hello.\r\n# Pull Requests\r\nThere is My latest slovak translation of Audacity. There were a lot of misstakes and technical translations using technical translator.\r\n[sk.zip](https://github.com/audacity/audacity/files/3914973/sk.zip)\r\n\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "Hi Giovani,\r\n\r\nFor a translation we just want the updated .po file.  This pull request has a load of changes to code in it too.  I think you may be new to using GitHub.  Please either try again, with just one file changed for us.  To do that you may need to 'rebase' your change on current Audacity head.  Or perhaps more simply, use the translators email list and send the single changed .po file to us there.\r\n\r\nThanks. =||= Updated slovak .po file committed 8947463 via translation email list  =||= "], ["400", "UI states, such as tracks height or expanded toggle, are not restored on load", "Elia Sarti", "eligt", "12/27/19, 04:23:36 PM", "**Describe the bug**\r\nWhen you change tracks height or set a track to collapse rather than expanded, save the project and re-open it, the tracks' heights are all set to a default value and all tracks are expanded. These UI states used to be restored on project load on the older version of Audacity (2.2.0 I think?) but is not working in the recent version 2.3.3.\r\n\r", "Thank you for this report - yes I can readily reproduce this on Windows 10 - so I shall be logging this on our bugtracker (I'll post back here for you with a Bugzilla link when I've done that).\r\n\r\nIt is even worse than you report as not only do you lose non-default track heights - you also lose any setting of the track view type to Waveform dB or Spectrogram.\r\n\r\nPeter (Audacity QA) =||= These are two different bugs that I shall log.\r\n\r\n1) The track size issue was present in 1.2.6 and fixed at some stage in the 1.3.x Beta Audacity series.  It was fine all the way up to  2.3.2 - so what we have with 2.3.3 (and my latest 2.4.0 alpha build) is a regression on 2.3.2 - so this will be a high priority bug.\r\n\r\n2) The issue with the track view type seems to have been present all the way back to 1.2.6 and 1.0.0 - so not a regression but a VERY longstanding bug.\r\n\r\nPeter. =||= Logged them both\r\n\r\n1)  P1 2265\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2265\r\nTrack heights are reset to default on project re-opening\r\n\r\n2) P3 2266\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2266\r\nAudio track view types are reset to default on project re-opening\r\n\r\nSo is it OK if I now close this Github entry in favor of the more trackable Bugzilla entry? =||= Yup, sounds good. =||= OK closing this - Thanks Elia - and once again thanks for the report, much appreciated,\r\n\r\nPeter =||= "], ["401", "year tag gets doubled", null, "cubetronic", "01/22/20, 10:33:40 AM", "id3v3.2 or whatever, for example...  \r\ni edit a song and export it, it already has tag data, i click ok.  \r\nbut what was date `2010-01-01` is now `2010-01-01; 2010-01-01`  \r\naudacity added an extra `; 2010-01-01`\r\nso now when i try to view the year on some mp3 players, like vanilla music player, it won't show the year. (and to make matters worse, flushing the cache in vanilla music player is not working either, so even though i've fixed the file, it still shows the old metadata)\r\n\r\nused latest release of audacity downloaded like a few days ago", "Are you on mac or windows?\r\nPerhaps you could send us a small example, and tell us the exact steps to make the problem happen.  Thanks. =||= I could not reproduce this on W10 =||= I just reproduced it. \r\nAudacity 2.3.3 \r\nWindows 10 Pro Version 10.0.18363 Build 18363 (Nov 2019) \r\nid3v2.3  \r\n  \r\n1. Start with an mp3 file tagged with id3v2.3, with a date like `1998` for example.\r\n2. Drag that file into Audacity.\r\n3. Edit the file however you wish. For me, I like to split it and remove audio I don't want.\r\n4. Highlight the audio you want, like with Ctrl-A for everything.\r\n5. Click on File | Export > Export as mp3\r\n6. I just went with the quality presets, renamed the file, selected a folder, and clicked Save.\r\n7. Current mp3 tag info will be displayed (note year `1998`). I just click OK.\r\n8. Now open that file in a DIFFERENT MUSIC PLAYER, like Foobar2000 (Windows 10), or Vanilla Music (Android) and you will see `1998; 1998` in the Date tag. The duplicate year will NOT be shown if you drag the new file into Audacity and view Metadata... (technically this is *another bug*, because Audacity should be showing what is truly there).\r\n\r\nFoobar2000 renders the new date as `1998, 1998` in the player but `1998; 1998` in the Properties Editor. This may be similar to how Audacity is only showing one year when the actual tag data is `1998; 1998`.\r\n\r\nVanilla Music fails to understand the date `1998; 1998`, so when sorting music by date, it is not sorted properly. I think it treats it as an invalid date.\r\n\r\n =||= Thanks.  We'll look into it. =||= As before I cannot reproduce this (using these latest Steps to reproduce) testing on W10 with 2.3.3.\r\n\r\nMy music player of choice (iTunes) as Step 8 shows only a single \"1998\"\r\n\r\nWhen I examine the MP3 file's properties with Windows Explored it too shows only a single \"1998\" =||= As before I cannot reproduce this (using these latest Steps to reproduce)\ntesting on W10 with 2.3.3.\n\nMy music player of choice (iTunes) as Step 8 shows only a single \"1998\"\n\nWhen I examine the MP3 file's properties with Windows Explored it too shows\nonly a single \"1998\"\n\nPeter.\n\nOn Mon, Jan 20, 2020 at 10:10 AM James Crook <notifications@github.com>\nwrote:\n\n> Thanks. We'll look into it.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/issues/401?email_source=notifications&email_token=AL7BKIA5LHZB7Z7L5SVHZE3Q6V2AVA5CNFSM4JXJFFGKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEJMCJ3I#issuecomment-576201965>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AL7BKIHNYOFMSMQF2TGCX4DQ6V2AVANCNFSM4JXJFFGA>\n> .\n>\n =||= Windows Explorer is not showing you the actual content of the data - but instead giving you a nicely formatted version of that data. I believe iTunes is doing the same thing, but I don't use iTunes.\r\n\r\nLike I said, this is noticeable in the 3rd Party Programs I use:\r\n- Foobar2000\r\n- Vanilla Music Player\r\n\r\nFor good measure, I just went ahead and downloaded an mp3 tag program:\r\n- *Mp3tag*  \r\nThis confirms the bug, **and** the hard-to-detect nature of the bug\r\nIf you drag your newly-created mp3 file into Mp3tag...\r\n`Mp3tag version:\r\n[2019-10-19]  REL: VERSION 2.99a (for Windows 10/8.1/8/7/2008/Vista/2003/XP SP3)`\r\nThen it will show `1998\\\\1998` on the left panel, but if you right-click on the file and go to Properties, it will just show `1998`. WHEREAS, if you use an un-altered file, it will show just `1998` in both places.\r\nOf course this is a bit different, with two backslashes. I honestly don't know what's *actually* in that data field. But I do know the data is mangled after exporting from Audacity.\r\n\r\nAlso, some programs call it \"date\", some \"year\"... whatever\r\n =||= So I installed MP3tag to investigate this further\n\nAnd yes at step 8 with MP3tag (invoked from Windows Explorer\nThe Year field indeed shows 1998\\\\1998\n\nBut the so does the MP3 file that I created at Step 5 (the original MP3 I\ncreated)\nshow as 1998\\\\1998\n\nSo it appears your Step 8 is not adding an extra \"1998\" as far as MP3tag is\nconcerned.\n\nSo I remain puzzled .\n\n-----------------------------------------------\n\nBTW - we know that Audacity is a poor manager of metadata, particularly of\npr-existing\nmetadata when an MP3 is imported - for example the artwork is discarded.\n\nI have a QA page on the Audacity Wiki (in addition to our Bigtracker) to\nkeep an eye on\nmetadata issues in Audacity:\nhttps://wiki.audacityteam.org/wiki/User:PeterSampson/Metadata_issues\n\nPeter.\n\nOn Tue, Jan 21, 2020 at 12:59 AM cubetronic <notifications@github.com>\nwrote:\n\n> Windows Explorer is not showing you the actual content of the data - but\n> instead giving you a nicely formatted version of that data. I believe\n> iTunes is doing the same thing, but I don't use iTunes.\n>\n> Like I said, this is noticeable in the 3rd Party Programs I use:\n>\n>    - Foobar2000\n>    - Vanilla Music Player\n>\n> For good measure, I just went ahead and downloaded an mp3 tag program:\n>\n>    - *Mp3tag*\n>    This confirms the bug, *and* the hard-to-detect nature of the bug\n>    If you drag your newly-created mp3 file into Mp3tag...\n>    Mp3tag version: [2019-10-19] REL: VERSION 2.99a (for Windows\n>    10/8.1/8/7/2008/Vista/2003/XP SP3)\n>    Then it will show 1998\\\\1998 on the left panel, but if you right-click\n>    on the file and go to Properties, it will just show 1998. WHEREAS, if\n>    you use an un-altered file, it will show just 1998 in both places.\n>    Of course this is a bit different, with two backslashes. I honestly\n>    don't know what's *actually* in that data field. But I do know the\n>    data is mangled after exporting from Audacity.\n>\n> Also, some programs call it \"date\", some \"year\"... whatever\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/issues/401?email_source=notifications&email_token=AL7BKIG4JWTCEGEPAL6RMOTQ6ZCG5A5CNFSM4JXJFFGKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEJOE3QQ#issuecomment-576474562>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AL7BKIFSCM6CHAD7AY4Q5UTQ6ZCG5ANCNFSM4JXJFFGA>\n> .\n>\n =||= I have discussed this with James and we have logged this in our Bugzilla bugtracker:  https://bugzilla.audacityteam.org/show_bug.cgi?id=2291 =||= "], ["402", "Says a bug has happened.", null, "noahdiamond4", "12/31/19, 03:42:09 PM", "\r\nDeletes files in the middle of recording\r\n![Single Parent Families Edits (1) 12_11_2019 8_49_40 PM](https://user-images.githubusercontent.com/58823273/70733101-9e716780-1cd7-11ea-9284-9724f6307554.png)\r\n\r", "Is there more detail needed? =||= Which version of Audacity?\r\nDid this appear during recording, or when you reopened the project?\r\nWas the project on a USB key?\r\nHad you moved the project from its original location?\r\n =||= This message normally appears on project opening when you have a corrupted project.  Is this when it occurred for you? \r\n\r\nYou would be better off raising this issue on the Audacity Forum:  https://forum.audacityteam.org/index.php =||= I have now added a page for this in the Audacity Manual - it will be in the upcoming 2.4.0 Manual (as I cannot edit or modify released Manuals).  You can get a preview of that page here:  https://alphamanual.audacityteam.org/man/Warning_-_Missing_Audio_Data_Block_Files\r\n =||= "], ["403", "l10n: zh_TW: update translation", "pan93412", "pan93412", "01/02/20, 04:33:35 AM", "<!-- # Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r\n-->\r\n\r\n- [x] Passed `msgfmt`\r\n- [x] Updated base", "could @Paul-Licameli take a look with this? :) =||= "], ["404", "Scrollbars in dark mode", "locness3", "locness3", "09/20/21, 02:47:05 PM", "**Is your feature request related to a problem? Please describe.**\r\nScrollbars in dark interface themes aren't dark colored an stay in the system colors.\r\n\r\n**Describe the solution you'd like**\r\nI'd like the scrollbars to be themed with the rest of the interface.\r\n\r\n**Additional context**\r\nmacOS :\r\n![Capture d\u2019e\u0301cran 2019-12-20 a\u0300 15 20 57](https://user-images.githubusercontent.com/37651007/71260931-60f68500-233c-11ea-9efe-0f03a7323e30.png)\r\n\r", "Thanks for creating an issue.  Yes, we would like this too.  At the moment it looks like we would need to draw the scrollbars ourselves to get the desired result. =||= Yeah, I understand. =||= "], ["405", "Recording audio with Audacity, BlackHole and multi output device", "Tobias Soloschenko", "klopfdreh", "12/27/19, 01:26:01 PM", "**Describe the bug**\r\nWhen I try to record audio with BlackHole audio mapping it is not working properly. QuickTime however is recording everything correctly, so the internal audio mapping is working correctly.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Install BlackHole like explained here: https://github.com/ExistentialAudio/BlackHole\r\n2. Created a multi output device within the Audio-Midi-Setup with the primary device being set to the internal speakers - drift correction applied to BlackHole 16ch\r\n3. Started the system preferences for audio and set the input to BlachHole 16ch\r\n4. Started Audacity and set the recording device to BlackHole 16ch and the output to the multi output device\r\n\r\n**Expected behavior**\r\nThe audio should be recorded like with QuickTime\r\n\r\n**Additional information (please complete the following information):**\r\n- macOS 10.15.2\r\n- Audacity 2.3.3\r\n- BlackHole v0.2.5\r\n\r\n**Additional context**\r\n- Related bug issue: https://github.com/ExistentialAudio/BlackHole/issues/39\r\n- Audacity setup with BlackHole: https://github.com/ExistentialAudio/BlackHole/wiki/Audacity\r\n- Micro access has been granted to Audacity\r\n\r", "Thanks.  For now we are treating this as the same as the 'not supporting Catalina' bug.  So am closing (as a duplicate).  If when we do support Catalina, expected with 2.4.0, and if it still does not work, then may be time to revisit it. =||= Okay - I am going to check it and report back here when 2.4.0 is released. Thanks for the reply. =||= "], ["406", "l10n: zh_TW.po: update audacity translation", "pan93412", "pan93412", "04/08/20, 05:49:42 PM", "Co-authored-by: pan93412 <pan93412@gmail.com>\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "closed #403 =||= @SteveDaulton @Paul-Licameli  =||= @SteveDaulton @Paul-Licameli =||= "], ["408", "Shown an error if loudness could not be calculated.", "Max Maisel", "mmmaisel", "01/04/20, 05:34:13 PM", "# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "I don't think this is the right fix. The error occurs much earlier in\r\ndouble EBUR128::IntegrativeLoudness()\r\n\r\nThe line:\r\ndouble Gamma_R = log10(sum_v/sum_c) - 1;\r\nhas a division by zero error (\"sum_c\" is zero for very small selections).\r\n\r\n =||= Better fix comes later. =||= "], ["409", "[Request] Add Support for FFMPEG AVCONF58", "Cubuzz", "cubuzz", "01/05/20, 01:45:25 PM", "**Is your feature request related to a problem? Please describe.**\r\nFFMPEG version required by Audacity is out of date. The program requires AVCONF55.DLL whilst the newest version is AVCONF58.DLL\r\n\r\n**Describe the solution you'd like**\r\nPlease add support for AVCONF55.DLL\r\n\r\n**Describe alternatives you've considered**\r\nAlternatively, allow different filenames for Audacity to try and find FFMPEGs .dll and don't have it snap back to AVCONF55.DLL as it does now.", "Duplicate of #398. Closed. =||= "], ["410", "Fix two bugs in loudness effect", "Max Maisel", "mmmaisel", "01/24/20, 06:04:20 PM", "As discussed on audacity-quality list.", "NaN"], ["411", "Macro/Scripting Method \"Export2:\" shows a dialog on windows 10 instead of being silent", "Ruben Klepp", "krupper", "05/13/21, 09:34:41 PM", "**Bug Description**\r\nThe \"Export2:\" Method from the macro / scripting section opens an export dialog.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to 'Tools'\r\n2. Go to 'Macros'\r\n3. Click on 'New'\r\n4. Enter a name\r\n5. Add a new Step\r\n6. Select \"Export2\"\r\n7. Apply macro on Project\r\n8. See export dialog\r\n\r\nThe bug also ocours if you trigger the method via scripting (through the pipe).\r\n\r\n**Expected behavior**\r\nThe export should be done in the background without promting a dialog.\r\nThe method is documented here: [https://manual.audacityteam.org/man/scripting_reference.html](https://manual.audacityteam.org/man/scripting_reference.html)\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Windows 10\r\n - Version: Audacity 2.3.3\r\n\r\nThank you guys for your work! :-)", "Thanks for the report, but I'm not able to reproduce this issue (testing with the latest Audacity 2.4.0 alpha source code). Please note that Export2: requires that \"Filename\" needs to be a fully qualified file name (including the full path and file extension). If you still have problems with this, please come and discus it with us on the Audacity forum and I think we should be able to get it working for you. https://forum.audacityteam.org/viewforum.php?f=69 =||= Did you ever enable debug output? I sometimes found that the same function will continue to output debug info even when deselected =||= Closed could not reproduce.  (also request to move to forum) =||= "], ["412", "Support XDG base directory specification", null, "shmerl", "02/03/20, 05:23:11 PM", "Currently on Linux, Audaicty creates `$HOME/.audacity-data` directory. Please follow XDG base directory specification to avoid cluttering `$HOME`.", "Yes please! The correct destination for \"data\" should be `~/.local/share`. Additionally, `~/.config` is the right directory for configs, `~/.cache` is the right directory for cache. If there's strong resistance to the full correct thing, then at least please put everything in `~/.config/audacity`.\r\n\r\nOn another note. The directory `.audacity-data` can by itself also be misleading, because it is normally read as \"audacity directory that stores binary data, like audios and exports/imports\". In reality, however, it also stores configuration, which is a completely different thing to the user. Having the name of the directory as just `.audacity` would avoid the wrong meaning and make it more clear that it's a directory that tries to hold everything together. (That being said, the best approach is still to follow XDG specs.) =||= Thank you for your comments. This issue is logged on the Audacity bug tracker. =||= For the reference: https://bugzilla.audacityteam.org/show_bug.cgi?id=2201\r\n\r\nIs there any plan to implement it? =||= We would, of course, like to fix every bug and issue, but resources are limited. Patches are welcome. =||= We also have to conscious of compatibility with previous versions of Audacity.  If we make this change, do we automatically \"migrate\" the existing folder contents to the XDG folder(s)?  What do we do if the user switches back to a previous version of Audacity? =||= I'd say it's a very unlikely scenario to support (switching to previous version). But I suppose you should know better what usage patterns are common. =||= Regarding forward compatibility. Yeah, as always in these cases, automatic migration should be there. It means more code to write than just changing default paths indeed.\r\n\r\n(Also, the sooner standards are fully followed, the better, if new files/directories are introduced. Not trying to be too pushy here, just saying.) =||= Not saying it's impossible.  Might just be a simple matter of providing guidance in the release notes or something like that for those types of situations. =||= I've successfully managed to point Audacity to the correct directories in a locally patched copy. I still need to fix the backwards/forwards compatibility, though. Any suggestions for how I should handle it? =||= @serebit if you want real forward compatibility, then only (relative) symlinks I guess? =||= That's not going to be easy, but I'll give it a shot seeing as it's realistically the best way forward. =||= Had a different idea-- if the `.audacity_data` directory *already exists*, use that. If it doesn't, use the XDG dirs (i.e. on a new install). This covers all use cases I can think of other than someone installing Audacity on a new machine, running it, and then immediately downgrading it to an older version (which seems pretty rare). =||= yes, clearly. If it doesn't exist you don't need to create any symlinks and such. That's the whole point. Use XDG only, in such case, don't clutter $HOME. =||= I don't think you need to worry about downgrading, that's just too much work for not valuable use case. Such cases can be covered in the release notes. =||= Yes, I was arguing for symlinks if the old destination existed and was replaced by a new one, or just standard XDG -- otherwise. I do feel that complying with XDG is better than making audacity work with both directories though, but that's somewhat subjective, and I'd be very happy with either change! =||= (I would also think that omitting downgrading support is okay, in which case audacity only needs to move data to the new destination if the new destination doesn't exist (but old one does).) =||= #632  =||= #632 has adressed this issue, can it be merged? =||= "], ["413", "[Bug] Mac save file window fail to use Command+V ect' properly", "zx", "zxzzz8", "05/14/21, 12:51:53 PM", "MacOS High-Sierra 10.13.6, audacity version 2.3.3.\r\n\r\nin the saving-project-as window....\r\nwhen i try to use all the keyboard commands, like copy, paste or Command+a [mark all], it fail or screw things up:\r\nwhen i try to paste something into the text, it instead reset it and paste my thing INSTEAD of what was in the box already, for example if i wrote ''some file name from today'' and i mark only the ''today'' or the spot after the word, in either case when i try to paste something like ''2020-01-12'' it instead erasing everything up and putting just the ''2020-01-12'' over,\r\nlike so:\r\nsome file name from today .aup\r\nturn to\r\n2020-01-12.aup\r\ninstead of \r\nsome file name from today 2020-01-12.aup\r\nor\r\nsome file name from 2020-01-12 .aup\r\n\r\nas for all the other stuff like copy and mark all, they just make some system sound and fail....\r\nright click and choosing the options like copy and paste from the menu work fine btw.\r\n\r\nits been really bugging me for a while now, giving me so much hell, and also so many times i forgot audacity do it, writing some long name and then pasting something in the end only to get all what i wrote beforehand deleted, and i can't undo ect' coz the undo also fail like copy and mark-all and just do the system sound, and undo don't even exist in the rightclick menu....\r\n\r\ni tried to update right now from 2.3.2 to 2.3.3 in hopes you fixed it, but sense you didn't then you might not be aware about this bug....\r\n\r\nso please fix? its driving me like crazy, thanks for reading.", "This now works on my Macbook Pro with macOS 11.2.3 Big Sur on 3.0.2 and the latest alpha test build I have for the upcoming 3.0.3\r\n\r\nCmd+V to paste a filename works for\r\na) Save Project\r\nb) Save Project AS\r\nc) Backup Project.\r\n\r\nIIRC I think we fixed this for the 3.0.0 release. =||= "], ["414", "Fixed bug 624", null, "binarywisdom", "01/31/20, 11:45:35 AM", "Hello,\r\nHere is the fix to Bug 624. The fix follows the agreed behavior (see emails from around October 25) . For the sake of convenience see the agreed behavior below:\r\n\r\n_\"- first, check the xml-file. If it contains illegal shortcut duplicates, refuse importing. Shortcut duplicates are LEGAL if default settings also have those operations with the matching shortcuts. A refusal to import shortcuts must happen with the message that warns the user of a failure and explains the reason. \r\n\r\n- if the xml-file looks ok, import the shortcuts. As discussed before, because different versions of Audacity might have different sets of operations with shortcuts, it is still possible to end up with illegal shortcut duplicates for a perfectly correct xml-file. This situation must be monitored. In case of any conflicts, the shortcut from the xml-file is used, and the pre-existing shortcut is wiped clean.\r\n\r\nWhen telling the user the commands which have had their shortcut removed, I think it would be useful to tell the user the name of the command, the shortcut, and and name of the command which still has that shortcut.\"_\r\n\r\nI didn't find a clean way to intercept the imported content before it makes its way to the shortcut preferences, so I had to jump through some hoops right in KeyConfigPrefs::OnImport().\r\nIn general, I tried to keep changes minimal.\r", "Thanks for the fix. I've done some testing, and the fix looks OK to me. It's possible that there could be some small improvements to the wording of the dialogs, but that would be easier done after the request is pulled. =||= I've squashed the commits, used binarywisdom's description of the commit above as the commit message, and merged it. =||= "], ["415", "l10n: zh_CN.po: update audacity translation", "xingkong", "xingkong0113", "02/10/20, 12:36:16 PM", "Fix the bug that the Simplified Chinese characters are not unified\r\n\r\n# Pull Requests\r\nnone\r\nthanks", "hi @Paul-Licameli \r\nI submitted this pulls because I was blind and coupled with transifex being unfriendly to screen readers.\r\nPlease help review\r\nthanks =||= \u53e6\u5916\uff0c\u8fd9\u4e2apr\u7684\u63d0\u4ea4\u610f\u4e49\u5c31\u662f\u4e0d\u8ba9poedit\u62a5\u9519\u3002 =||= > \u53e6\u5916\uff0c\u8fd9\u4e2apr\u7684\u63d0\u4ea4\u610f\u4e49\u5c31\u662f\u4e0d\u8ba9poedit\u62a5\u9519\u3002\r\n\r\nPoedit \u7684\u8b66\u544a\u5c0d\u65bc CJK \u652f\u63f4\u9084\u4e0d\u662f\u5f88\u597d\u3002\u53c3\u8003\u5c31\u597d\u3002 =||= > \u9019 PR \u5efa\u8b70\u64a4\u92b7\uff0c\u539f\u7ffb\u8b6f\u662f\u6b63\u78ba\u7684\uff0c\u90a3 `...` \u78ba\u5be6\u5efa\u8b70\u76f4\u63a5\u7528 Unicode \u7684\u7701\u7565\u865f\u300c\u2026\u300d\u3002\r\n> \r\n> Poedit \u8aa4\u628a\u539f\u6587\u7684 `...` \u7684\u6700\u5f8c\u4e00\u500b\u9ede\u770b\u6210\u53e5\u865f\u4e86\u3002\r\n\r\n\u597d\uff0c\u6211\u5173\u95ed\u6b64pr\u611f\u8c22\u3002 =||= > \u9019 PR \u5efa\u8b70\u64a4\u92b7\uff0c\u539f\u7ffb\u8b6f\u662f\u6b63\u78ba\u7684\uff0c\u90a3 `...` \u78ba\u5be6\u5efa\u8b70\u76f4\u63a5\u7528 Unicode \u7684\u7701\u7565\u865f\u300c\u2026\u300d\u3002\r\n> \r\n> Poedit \u8aa4\u628a\u539f\u6587\u7684 `...` \u7684\u6700\u5f8c\u4e00\u500b\u9ede\u770b\u6210\u53e5\u865f\u4e86\u3002\r\n\r\n\u963f\u62b1\u6b49\u6211\u6253\u932f\u4e86\u2026 \u662f Revert \u9019\u500b Commit Orz \u62b1\u6b49qwq =||= "], ["416", "l10n: zh_CN.po: update audacity translation", "xingkong", "xingkong0113", "05/13/21, 09:31:43 PM", "hello audicity team\r\nmy name dingpengyu\r\nI updated the Simplified Chinese translation of Audicity\r\nMajor fixes:\r\nFix the bug that the Simplified Chinese characters are not unified\r\nThe problem\r\nthanks\r\n#415 ", "Closed as #415 was committed.   =||= "], ["418", "F11 / can't exit from full screen", null, "csgerg", "02/17/20, 12:46:01 PM", "Audacity 2.3.3-alpha-Nov 22 2019\r\nManjaro 18.1.5 Xfce\r\nHi, I tired the full screen mode, it works fine but you cant exit with F11.\r\nYou can leave the full screen mode with change workspace.", "Works fine on Windows 10 =||= Works fine in Xubuntu 18.04.\n\nSteve\n\nOn Thu, 13 Feb 2020 at 16:09, petersampsonaudacity <notifications@github.com>\nwrote:\n\n> Works fine on Windows 10\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/issues/418?email_source=notifications&email_token=ACZD2SK342MVFQB4NSBUOGDRCVWCLA5CNFSM4KLTBKZKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOELVSMAI#issuecomment-585836033>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ACZD2SIBUZGK2RZUAR2MBE3RCVWCLANCNFSM4KLTBKZA>\n> .\n>\n =||= We support Ubuntu linux builds, and not every flavour of Linux, so closing this since it works on Ubuntu. =||= "], ["419", "Artist is missing in the metadata after exporting multiple files", null, "BaumGuard", "05/13/21, 09:32:49 PM", "One of my major purposes of using Audacity is to digitize vinyl records. Every track on the record is being exported as a separate file. When I export a part of the recorded audio and fill in the tag-form, the artist is only written to the metadata of the first file. The tags of the following files all don't contain the artist. Except the artist every information standing in the form is written to every file.\r\nTo mention a further detail: I always use MP3 to export the audios. I don't know whether that's the reason for the issue.\r\n\r\nSteps to reproduce:\r\n1. Select a part of the audio\r\n2. Export the selected part as MP3\r\n3. Fill in the tag-form with the information\r\n4. After exporting this part, select another part of the audio and export it as MP3 as well.\r\n\r\nNow you will see that the first file has the artist in its metadata, but not the second one, even though the artist had been displayed in the tag-form.\r\n\r\nAs you can imagine, I always have to write the artist in to the metadata of the files manually.", "I'll have a look into this\r\n =||= For some reason this doesn't occur every time, but sometimes. =||= I have tested this thoroughly today and I cannot reproduce this.  All seven of the standard metadata tags appear to get passed through:\r\na) to the next use of the export dialog\r\nb) to the file.\r\n\r\n1) Examining the exported files with Windows explorer shows the first six present and carried through, including \"artist\".  WE does not show the \"comments\" metadata\r\n\r\n2) I f I import the files into iTunes I see all seven standard metadata tags  carried through =||= I'm using Audacity on my linux system. I've tried it again and now the artist doesn't appear in any track when I open them with Kid3. =||= On Thu, 13 Feb 2020 at 16:18, BaumGuard <notifications@github.com> wrote:\n\n> I'm using Audacity on my linux system. I've tried it again and now the\n> artist doesn't appear in any track when I open them with Kid3.\n>\n\nIs the file definitely MP3 (and not, for example \"WAV\")?\n\nSteve\n\n\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/issues/419?email_source=notifications&email_token=ACZD2SPANSBF4NGM2MVO4CDRCVXDZA5CNFSM4KLXSME2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOELVTN7I#issuecomment-585840381>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ACZD2SKRSUYER7BDCTIO65LRCVXDZANCNFSM4KLXSMEQ>\n> .\n>\n =||= Yes. =||= Closed.  Could not reproduce. =||= "], ["420", "Port vocoder to SuperCollider", null, "bramtayl", "02/16/20, 02:02:45 PM", "Hello! I was wanting a better vocoder in SuperCollider so I ported your implementation. See the [PR](https://github.com/supercollider/sc3-plugins/pull/273). I wanted to ask your permission first. If anyone is inclined, you might look over the code I wrote in SuperCollider to check whether I ported the implementation correctly.", "The vocoder effect in Audacity is not a \"traditional\" vocoder. It's a quirky kind of \"vocoder-like\" effect. As such, I doubt that it would be a suitable replacement for SuperCollider's vocoder, though they may accept is as an addition.\r\nAs with the main Audacity application, the effect is licensed under the terms of GPL v2. =||= Sorry are you waiting for a response from me? What's the question? See the discussion on the PR =||= I think this \"issue\" is resolved at our end. As far as I'm aware, if your code is licensed as (verbatim) \"GPL v2 or later\", then that protects the full rights of our GPL v2 license, and allows it to be used in GPL v3 or later. The important phrase in GPLv2 with respect to this is in section 6 of the GPL v2 license:\r\n\"You may not impose any further restrictions on the recipients' exercise of the rights granted herein.\"\r\n\r\nAs joshpar wrote in the PR, I would suggest including (in the file) a comment that describes where you got it, links to any sources you referenced, and  the name of the original author. I don't think that is legally required, but is generally considered to be courteous and good practice.\r\n =||= Ok I did that =||= "], ["421", "2.3.3 has been retagged", "David Runge", "dvzrv", "02/17/20, 12:34:50 PM", "**Describe the bug**\r\nThe tag `Audacity-2.3.3` has apparently been re-done on 2019-11-28 according to the [release notes](https://github.com/audacity/audacity/releases/tag/Audacity-2.3.3).\r\n\r\nWhen packaging 2.3.3 for Arch Linux, I have used a tarball downloaded on *2019-11-22 14:21 CEST*.\r\nHowever, that one had a different checksum, which breaks reproducibility of the audacity package.\r\n\r\nWhile I understand, that changes to software are inevitably to be done, I urge you to please **not** retag versions, but rather just release a new version (e.g. 2.3.4). After all, the code has been changed!\r\n\r\nThanks for your consideration!\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Be (un)fortunate enough to download a tarball before the version got re-tagged\r\n2. Have [downstream bug reports](https://bugs.archlinux.org/task/65405)\r\n3. Move initially downloaded tarball to backup location\r\n4. Diff old and new version and hope that the resulting patch (see below) doesn't eat your kittens\r\n5. Write an upstream bug report\r\n\r\n**Expected behavior**\r\nWhen downloading a tarball, that was created by a git tag, it will never change in content.\r\n\r\n**Screenshots**\r\n\r\n```\r\ndiff -ruN audacity-2.3.3/mac/scripts/build_dist2.sh audacity-2.3.3-old/mac/scripts/build_dist2.sh\r\n--- audacity-2.3.3/mac/scripts/build_dist2.sh\t2019-11-15 12:14:55.000000000 +0100\r\n+++ audacity-2.3.3-old/mac/scripts/build_dist2.sh\t1970-01-01 01:00:00.000000000 +0100\r\n@@ -1,105 +0,0 @@\r\n-set -x\r\n-\r\n-# Setup\r\n-VERSION=`awk '/^#define+ AUDACITY_VERSION / {print $3}' build/Info.plist.h`\r\n-RELEASE=`awk '/^#define+ AUDACITY_RELEASE / {print $3}' build/Info.plist.h`\r\n-REVISION=`awk '/^#define+ AUDACITY_REVISION / {print $3}' build/Info.plist.h`\r\n-VERSION=$VERSION.$RELEASE.$REVISION\r\n-\r\n-cd \"${DSTROOT}\"\r\n-chmod -RH \"${INSTALL_MODE_FLAG}\" \"${TARGET_BUILD_DIR}\"\r\n-chown -RH \"${INSTALL_OWNER}:${INSTALL_GROUP}\" \"${TARGET_BUILD_DIR}\"\r\n-\r\n-echo \"Audacity has been installed to: ${DSTROOT}\"\r\n-\r\n-cd ..\r\n-\r\n-VOL=\"Audacity $VERSION\"\r\n-DMG=\"audacity-macos-$VERSION\"\r\n-\r\n-# Preclean\r\n-rm -rf \"$DMG\" \"$DMG.dmg\" TMP.dmg\r\n-\r\n-# Create structure\r\n-mkdir \"$DMG\"\r\n-cp -pR \"${DSTROOT}/\" \"${DMG}\"\r\n-\r\n-#Add a custom icon for the DMG\r\n-#cp -p mac/Resources/Audacity.icns \"${DMG}\"/.VolumeIcon.icns\r\n-\r\n-# Make sure it's not already attached\r\n-ATTACHED=$(hdiutil info | awk \"/\\/Volumes\\/${VOL}/{print \\$1}\")\r\n-if [ -n \"${ATTACHED}\" ]\r\n-then\r\n-   hdiutil detach \"${ATTACHED}\"\r\n-fi\r\n-\r\n-# Create and mount the image\r\n-hdiutil create -ov -format UDRW -srcdir \"$DMG\" -fs HFS+ -volname \"$VOL\" TMP.dmg\r\n-if [ $? -ne 0 ]\r\n-then\r\n-   echo \"Create failed\"\r\n-   exit 1\r\n-fi\r\n-\r\n-#Mount the DMG and store the name it was mounted with\r\n-TITLE=$(hdiutil attach TMP.dmg | grep \\/Volumes | sed \"s/^.*\\/Volumes\\///\")\r\n-if [ $? -ne 0 ]\r\n-then\r\n-   echo \"Attach failed\"\r\n-   exit 1\r\n-fi\r\n-\r\n-# And wait for it to show up in Finder\r\n-osascript <<EOF\r\n-   tell application \"Finder\"\r\n-      repeat until exists disk \"${TITLE}\"\r\n-         log \"Waiting for ${TITLE} to appear\"\r\n-         delay 0.2\r\n-      end repeat\r\n-   end tell\r\n-EOF\r\n-\r\n-#Set the custom icon flag\r\n-#SetFile -a C /Volumes/\"$TITLE\"\r\n-\r\n-#Make our DMG look pretty and install the custom background image\r\n-echo '\r\n-   tell application \"Finder\"\r\n-     tell disk \"'$TITLE'\"\r\n-           open\r\n-           set current view of container window to icon view\r\n-           set toolbar visible of container window to false\r\n-           set statusbar visible of container window to false\r\n-           set the bounds of container window to {400, 100, 1000, 550}\r\n-           set theViewOptions to the icon view options of container window\r\n-           set arrangement of theViewOptions to not arranged\r\n-           set icon size of theViewOptions to 72\r\n-           set background picture of theViewOptions to file \".background:Audacity-DMG-background.png\" \r\n-           make new alias file at container window to POSIX file \"/Applications\" with properties {name:\"Applications\"}\r\n-           set position of item \"Audacity\" of container window to {170, 350}\r\n-           set position of item \"Applications\" of container window to {430, 350}\r\n-           close\r\n-           open\r\n-           update without registering applications\r\n-           delay 5\r\n-           eject\r\n-     end tell\r\n-   end tell\r\n-' | osascript\r\n-\r\n-# Compress and prepare for Internet delivery\r\n-hdiutil convert TMP.dmg -format UDZO -imagekey zlib-level=9 -o \"$DMG.dmg\"\r\n-\r\n-# Create zip version\r\n-rm -rf \"${DMG}/.background\"\r\n-rm -rf \"${DMG}/Audacity.app/help/\"\r\n-zip -r9 \"${DMG}.zip\" \"${DMG}\"\r\n-\r\n-# Cleanup\r\n-#rm -rf ${DMG} TMP.dmg\r\n-echo 'resizing and openning dmg'\r\n-hdiutil resize -size 200m TMP.dmg\r\n-hdiutil mount TMP.dmg\r\n-echo 'declutter the dmg, sign, compress and sign it'\r\n-\r\ndiff -ruN audacity-2.3.3/src/Audacity.h audacity-2.3.3-old/src/Audacity.h\r\n--- audacity-2.3.3/src/Audacity.h\t2019-11-15 12:14:55.000000000 +0100\r\n+++ audacity-2.3.3-old/src/Audacity.h\t2019-11-15 00:28:15.000000000 +0100\r\n@@ -39,7 +39,7 @@\r\n // Its value may be more than 0 for pre-release \"Beta\" builds that differ only\r\n // in the welcome screen, and hiding of some development menu commands, but\r\n // still link to the alpha manual online.\r\n-#define AUDACITY_BUILD_LEVEL 2\r\n+#define AUDACITY_BUILD_LEVEL 0\r\n \r\n // used #ifdef not #if for IS_ALPHA, IS_BETA, IS_RELEASE, USE_ALPHA_MANUAL\r\n #undef IS_ALPHA\r\n```\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Arch Linux\r\n - Version 2.3.3.\r\n\r\n**Additional context**\r\nTo prevent [supply chain attacks](https://en.wikipedia.org/wiki/Supply_chain_attack) and establish a form of trust in upstreams it is viable to *not* retag a version.\r\n\r\nRetagging versions, especially for a repository without any form of author verification (e.g. PGP signed tags and commits) breaks the [reproducible build effort](https://tests.reproducible-builds.org/archlinux/archlinux.html) and trust in a given upstream (e.g. a developer could have been hacked, added malicious code and retagged a version) while introducing unnecessary bug reporting overhead for downstreams.", "Unfortunately, when Audacity 2.3.3 was released, the wrong commit was tagged. The tag pointed to the final 2.3.3 alpha (commit eb2161), rather than the first 2.3.3 release (commit 008d8d8). This was spotted a few days later and corrected. As you will see from the build information (Audacity \"Help menu > About Audacity\") you will see  that commit eb2161 is NOT a release version. Apologies for the confusion. =||= I'm getting an Cloudflare 1020 error when trying to access the audacity website, would it have anything to do with this release? =||= Nope, the Cloudflare 1020 error does not have anything to do with this release. =||= "], ["422", "Audacity website is blocked", null, "InfoLibre", "02/13/20, 04:04:38 PM", "Each time I want to access Audacity website (or forums, wiki...), It's blocked by Cloudflare :\r\n\r\n\r\nError 1020 Ray ID: 56357882edda1f39 \u2022 2020-02-11 09:59:33 UTC\r\nAccess denied\r\nWhat happened?\r\n\r\nThis website is using a security service to protect itself from online attacks.\r\n\r\nCloudflare Ray ID: 56357882edda1f39 \u2022 Your IP: 2a01:cb11:1cd:f500:5a3a:d059:82a2:82b5 \u2022 Performance & security by Cloudflare", "I will review the information using the Ray ID and might get back to you\ndepending on findings.\n\nOn Tue, Feb 11, 2020, 07:02 InfoLibre <notifications@github.com> wrote:\n\n> Each time I want to access Audacity website (or forums, wiki...), It's\n> blocked by Cloudflare :\n>\n> Error 1020 Ray ID: 56357882edda1f39 \u2022 2020-02-11 09:59:33 UTC\n> Access denied\n> What happened?\n>\n> This website is using a security service to protect itself from online\n> attacks.\n>\n> Cloudflare Ray ID: 56357882edda1f39 \u2022 Your IP:\n> 2a01:cb11:1cd:f500:5a3a:d059:82a2:82b5 \u2022 Performance & security by\n> Cloudflare\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/issues/422?email_source=notifications&email_token=AB2A6NIJ2XI7W6Z46X3DNODRCJZSLA5CNFSM4KS5SWX2YY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4IMQDAFA>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AB2A6NKPT36O425H4CIU4DLRCJZSLANCNFSM4KS5SWXQ>\n> .\n>\n =||= Your IP address belongs to Autonomous System 3215. That system traffics a\nnumber of IP addresses that have consistently attacked our servers. I could\nexclude your IP address, or I can temporarily disable the AS3215 filtering\nrule on probation.\n\nWhat do you think?\n\n\nOn Tue, Feb 11, 2020 at 7:15 AM Arturo 'Buanzo' Busleiman <\nbuanzo@buanzo.com.ar> wrote:\n\n> I will review the information using the Ray ID and might get back to you\n> depending on findings.\n>\n> On Tue, Feb 11, 2020, 07:02 InfoLibre <notifications@github.com> wrote:\n>\n>> Each time I want to access Audacity website (or forums, wiki...), It's\n>> blocked by Cloudflare :\n>>\n>> Error 1020 Ray ID: 56357882edda1f39 \u2022 2020-02-11 09:59:33 UTC\n>> Access denied\n>> What happened?\n>>\n>> This website is using a security service to protect itself from online\n>> attacks.\n>>\n>> Cloudflare Ray ID: 56357882edda1f39 \u2022 Your IP:\n>> 2a01:cb11:1cd:f500:5a3a:d059:82a2:82b5 \u2022 Performance & security by\n>> Cloudflare\n>>\n>> \u2014\n>> You are receiving this because you are subscribed to this thread.\n>> Reply to this email directly, view it on GitHub\n>> <https://github.com/audacity/audacity/issues/422?email_source=notifications&email_token=AB2A6NIJ2XI7W6Z46X3DNODRCJZSLA5CNFSM4KS5SWX2YY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4IMQDAFA>,\n>> or unsubscribe\n>> <https://github.com/notifications/unsubscribe-auth/AB2A6NKPT36O425H4CIU4DLRCJZSLANCNFSM4KS5SWXQ>\n>> .\n>>\n>\n =||= I don't know how my computer could attack your server, as I am working\nwith Linux and certainly without virus.\n\nBut I changed my internet box last month and had a new IP address.\nPerhaps all IP addresses from https://www.sosh.fr are banned ?\n\nDo what you think is better but perhaps AS3215 filtering is bad.\n\n\nLe 11/02/2020 \u00e0 14:58, Gale Andrews a \u00e9crit\u00a0:\n> Your IP address belongs to Autonomous System 3215. That system traffics a\n> number of IP addresses that have consistently attacked our servers. I\n> could\n> exclude your IP address, or I can temporarily disable the AS3215 filtering\n> rule on probation.\n>\n> What do you think?\n>\n>\n> On Tue, Feb 11, 2020 at 7:15 AM Arturo 'Buanzo' Busleiman <\n> buanzo@buanzo.com.ar> wrote:\n>\n> > I will review the information using the Ray ID and might get back to you\n> > depending on findings.\n> >\n> > On Tue, Feb 11, 2020, 07:02 InfoLibre <notifications@github.com> wrote:\n> >\n> >> Each time I want to access Audacity website (or forums, wiki...), It's\n> >> blocked by Cloudflare :\n> >>\n> >> Error 1020 Ray ID: 56357882edda1f39 \u2022 2020-02-11 09:59:33 UTC\n> >> Access denied\n> >> What happened?\n> >>\n> >> This website is using a security service to protect itself from online\n> >> attacks.\n> >>\n> >> Cloudflare Ray ID: 56357882edda1f39 \u2022 Your IP:\n> >> 2a01:cb11:1cd:f500:5a3a:d059:82a2:82b5 \u2022 Performance & security by\n> >> Cloudflare\n> >>\n> >> \u2014\n> >> You are receiving this because you are subscribed to this thread.\n> >> Reply to this email directly, view it on GitHub\n> >>\n> <https://github.com/audacity/audacity/issues/422?email_source=notifications&email_token=AB2A6NIJ2XI7W6Z46X3DNODRCJZSLA5CNFSM4KS5SWX2YY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4IMQDAFA>,\n> >> or unsubscribe\n> >>\n> <https://github.com/notifications/unsubscribe-auth/AB2A6NKPT36O425H4CIU4DLRCJZSLANCNFSM4KS5SWXQ>\n> >> .\n> >>\n> >\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/issues/422?email_source=notifications&email_token=AA6FWKYIVXI67GBTYX5RIDLRCKVJPA5CNFSM4KS5SWX2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOELMQAJQ#issuecomment-584646694>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AA6FWK2CR4WMLVLEGZVEQEDRCKVJPANCNFSM4KS5SWXQ>.\n>\n-- \nP\u00e9tition pour le retrait du projet de r\u00e9forme des retraites : https://onestla.tech\n\nInstaller facilement Linux : http://infolib.re\n\n    .--.\n   |o_o |\n   ||_/ |\n  //    \\\\    Envoy\u00e9 depuis mon Linux\n (|      |)\n/ \\_   _/ \\\n\\___)=(___/\n\n =||= I am willing to whitelist your IP address. Feel free to contact me directly\nbuanzo at audacityteam dot org\n\n\n\nOn Tue, Feb 11, 2020 at 11:03 AM InfoLibre <notifications@github.com> wrote:\n\n> I don't know how my computer could attack your server, as I am working\n> with Linux and certainly without virus.\n>\n> But I changed my internet box last month and had a new IP address.\n> Perhaps all IP addresses from https://www.sosh.fr are banned ?\n>\n> Do what you think is better but perhaps AS3215 filtering is bad.\n>\n>\n> Le 11/02/2020 \u00e0 14:58, Gale Andrews a \u00e9crit :\n> > Your IP address belongs to Autonomous System 3215. That system traffics a\n> > number of IP addresses that have consistently attacked our servers. I\n> > could\n> > exclude your IP address, or I can temporarily disable the AS3215\n> filtering\n> > rule on probation.\n> >\n> > What do you think?\n> >\n> >\n> > On Tue, Feb 11, 2020 at 7:15 AM Arturo 'Buanzo' Busleiman <\n> > buanzo@buanzo.com.ar> wrote:\n> >\n> > > I will review the information using the Ray ID and might get back to\n> you\n> > > depending on findings.\n> > >\n> > > On Tue, Feb 11, 2020, 07:02 InfoLibre <notifications@github.com>\n> wrote:\n> > >\n> > >> Each time I want to access Audacity website (or forums, wiki...), It's\n> > >> blocked by Cloudflare :\n> > >>\n> > >> Error 1020 Ray ID: 56357882edda1f39 \u2022 2020-02-11 09:59:33 UTC\n> > >> Access denied\n> > >> What happened?\n> > >>\n> > >> This website is using a security service to protect itself from online\n> > >> attacks.\n> > >>\n> > >> Cloudflare Ray ID: 56357882edda1f39 \u2022 Your IP:\n> > >> 2a01:cb11:1cd:f500:5a3a:d059:82a2:82b5 \u2022 Performance & security by\n> > >> Cloudflare\n> > >>\n> > >> \u2014\n> > >> You are receiving this because you are subscribed to this thread.\n> > >> Reply to this email directly, view it on GitHub\n> > >>\n> > <\n> https://github.com/audacity/audacity/issues/422?email_source=notifications&email_token=AB2A6NIJ2XI7W6Z46X3DNODRCJZSLA5CNFSM4KS5SWX2YY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4IMQDAFA\n> >,\n> > >> or unsubscribe\n> > >>\n> > <\n> https://github.com/notifications/unsubscribe-auth/AB2A6NKPT36O425H4CIU4DLRCJZSLANCNFSM4KS5SWXQ\n> >\n> > >> .\n> > >>\n> > >\n> >\n> > \u2014\n> > You are receiving this because you authored the thread.\n> > Reply to this email directly, view it on GitHub\n> > <\n> https://github.com/audacity/audacity/issues/422?email_source=notifications&email_token=AA6FWKYIVXI67GBTYX5RIDLRCKVJPA5CNFSM4KS5SWX2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOELMQAJQ#issuecomment-584646694\n> >,\n> > or unsubscribe\n> > <\n> https://github.com/notifications/unsubscribe-auth/AA6FWK2CR4WMLVLEGZVEQEDRCKVJPANCNFSM4KS5SWXQ\n> >.\n> >\n> --\n> P\u00e9tition pour le retrait du projet de r\u00e9forme des retraites :\n> https://onestla.tech\n>\n> Installer facilement Linux : http://infolib.re\n>\n> .--.\n> |o_o |\n> ||_/ |\n> // \\\\ Envoy\u00e9 depuis mon Linux\n> (| |)\n> / \\_ _/ \\\n> \\___)=(___/\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/issues/422?email_source=notifications&email_token=AB2A6NNL5XGXZZZYQMRY64TRCKVY7A5CNFSM4KS5SWX2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOELMQO3A#issuecomment-584648556>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AB2A6NOHUOHRWVOMIXSJKK3RCKVY7ANCNFSM4KS5SWXQ>\n> .\n>\n =||= I ran a short test, and I have temporarily disabled the AR3215 block.\n\n\nOn Tue, Feb 11, 2020 at 11:09 AM Arturo 'Buanzo' Busleiman <\nbuanzo@buanzo.com.ar> wrote:\n\n> I am willing to whitelist your IP address. Feel free to contact me\n> directly buanzo at audacityteam dot org\n>\n>\n>\n> On Tue, Feb 11, 2020 at 11:03 AM InfoLibre <notifications@github.com>\n> wrote:\n>\n>> I don't know how my computer could attack your server, as I am working\n>> with Linux and certainly without virus.\n>>\n>> But I changed my internet box last month and had a new IP address.\n>> Perhaps all IP addresses from https://www.sosh.fr are banned ?\n>>\n>> Do what you think is better but perhaps AS3215 filtering is bad.\n>>\n>>\n>> Le 11/02/2020 \u00e0 14:58, Gale Andrews a \u00e9crit :\n>> > Your IP address belongs to Autonomous System 3215. That system traffics\n>> a\n>> > number of IP addresses that have consistently attacked our servers. I\n>> > could\n>> > exclude your IP address, or I can temporarily disable the AS3215\n>> filtering\n>> > rule on probation.\n>> >\n>> > What do you think?\n>> >\n>> >\n>> > On Tue, Feb 11, 2020 at 7:15 AM Arturo 'Buanzo' Busleiman <\n>> > buanzo@buanzo.com.ar> wrote:\n>> >\n>> > > I will review the information using the Ray ID and might get back to\n>> you\n>> > > depending on findings.\n>> > >\n>> > > On Tue, Feb 11, 2020, 07:02 InfoLibre <notifications@github.com>\n>> wrote:\n>> > >\n>> > >> Each time I want to access Audacity website (or forums, wiki...),\n>> It's\n>> > >> blocked by Cloudflare :\n>> > >>\n>> > >> Error 1020 Ray ID: 56357882edda1f39 \u2022 2020-02-11 09:59:33 UTC\n>> > >> Access denied\n>> > >> What happened?\n>> > >>\n>> > >> This website is using a security service to protect itself from\n>> online\n>> > >> attacks.\n>> > >>\n>> > >> Cloudflare Ray ID: 56357882edda1f39 \u2022 Your IP:\n>> > >> 2a01:cb11:1cd:f500:5a3a:d059:82a2:82b5 \u2022 Performance & security by\n>> > >> Cloudflare\n>> > >>\n>> > >> \u2014\n>> > >> You are receiving this because you are subscribed to this thread.\n>> > >> Reply to this email directly, view it on GitHub\n>> > >>\n>> > <\n>> https://github.com/audacity/audacity/issues/422?email_source=notifications&email_token=AB2A6NIJ2XI7W6Z46X3DNODRCJZSLA5CNFSM4KS5SWX2YY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4IMQDAFA\n>> >,\n>> > >> or unsubscribe\n>> > >>\n>> > <\n>> https://github.com/notifications/unsubscribe-auth/AB2A6NKPT36O425H4CIU4DLRCJZSLANCNFSM4KS5SWXQ\n>> >\n>> > >> .\n>> > >>\n>> > >\n>> >\n>> > \u2014\n>> > You are receiving this because you authored the thread.\n>> > Reply to this email directly, view it on GitHub\n>> > <\n>> https://github.com/audacity/audacity/issues/422?email_source=notifications&email_token=AA6FWKYIVXI67GBTYX5RIDLRCKVJPA5CNFSM4KS5SWX2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOELMQAJQ#issuecomment-584646694\n>> >,\n>> > or unsubscribe\n>> > <\n>> https://github.com/notifications/unsubscribe-auth/AA6FWK2CR4WMLVLEGZVEQEDRCKVJPANCNFSM4KS5SWXQ\n>> >.\n>> >\n>> --\n>> P\u00e9tition pour le retrait du projet de r\u00e9forme des retraites :\n>> https://onestla.tech\n>>\n>> Installer facilement Linux : http://infolib.re\n>>\n>> .--.\n>> |o_o |\n>> ||_/ |\n>> // \\\\ Envoy\u00e9 depuis mon Linux\n>> (| |)\n>> / \\_ _/ \\\n>> \\___)=(___/\n>>\n>> \u2014\n>> You are receiving this because you commented.\n>> Reply to this email directly, view it on GitHub\n>> <https://github.com/audacity/audacity/issues/422?email_source=notifications&email_token=AB2A6NNL5XGXZZZYQMRY64TRCKVY7A5CNFSM4KS5SWX2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOELMQO3A#issuecomment-584648556>,\n>> or unsubscribe\n>> <https://github.com/notifications/unsubscribe-auth/AB2A6NOHUOHRWVOMIXSJKK3RCKVY7ANCNFSM4KS5SWXQ>\n>> .\n>>\n>\n =||= It works now, thank you.\n\n\nLe 11/02/2020 \u00e0 15:38, Gale Andrews a \u00e9crit\u00a0:\n> I ran a short test, and I have temporarily disabled the AR3215 block.\n>\n>\n> On Tue, Feb 11, 2020 at 11:09 AM Arturo 'Buanzo' Busleiman <\n> buanzo@buanzo.com.ar> wrote:\n>\n> > I am willing to whitelist your IP address. Feel free to contact me\n> > directly buanzo at audacityteam dot org\n> >\n> >\n> >\n> > On Tue, Feb 11, 2020 at 11:03 AM InfoLibre <notifications@github.com>\n> > wrote:\n> >\n> >> I don't know how my computer could attack your server, as I am working\n> >> with Linux and certainly without virus.\n> >>\n> >> But I changed my internet box last month and had a new IP address.\n> >> Perhaps all IP addresses from https://www.sosh.fr are banned ?\n> >>\n> >> Do what you think is better but perhaps AS3215 filtering is bad.\n> >>\n> >>\n> >> Le 11/02/2020 \u00e0 14:58, Gale Andrews a \u00e9crit :\n> >> > Your IP address belongs to Autonomous System 3215. That system\n> traffics\n> >> a\n> >> > number of IP addresses that have consistently attacked our servers. I\n> >> > could\n> >> > exclude your IP address, or I can temporarily disable the AS3215\n> >> filtering\n> >> > rule on probation.\n> >> >\n> >> > What do you think?\n> >> >\n> >> >\n> >> > On Tue, Feb 11, 2020 at 7:15 AM Arturo 'Buanzo' Busleiman <\n> >> > buanzo@buanzo.com.ar> wrote:\n> >> >\n> >> > > I will review the information using the Ray ID and might get\n> back to\n> >> you\n> >> > > depending on findings.\n> >> > >\n> >> > > On Tue, Feb 11, 2020, 07:02 InfoLibre <notifications@github.com>\n> >> wrote:\n> >> > >\n> >> > >> Each time I want to access Audacity website (or forums, wiki...),\n> >> It's\n> >> > >> blocked by Cloudflare :\n> >> > >>\n> >> > >> Error 1020 Ray ID: 56357882edda1f39 \u2022 2020-02-11 09:59:33 UTC\n> >> > >> Access denied\n> >> > >> What happened?\n> >> > >>\n> >> > >> This website is using a security service to protect itself from\n> >> online\n> >> > >> attacks.\n> >> > >>\n> >> > >> Cloudflare Ray ID: 56357882edda1f39 \u2022 Your IP:\n> >> > >> 2a01:cb11:1cd:f500:5a3a:d059:82a2:82b5 \u2022 Performance & security by\n> >> > >> Cloudflare\n> >> > >>\n> >> > >> \u2014\n> >> > >> You are receiving this because you are subscribed to this thread.\n> >> > >> Reply to this email directly, view it on GitHub\n> >> > >>\n> >> > <\n> >>\n> https://github.com/audacity/audacity/issues/422?email_source=notifications&email_token=AB2A6NIJ2XI7W6Z46X3DNODRCJZSLA5CNFSM4KS5SWX2YY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4IMQDAFA\n> >> >,\n> >> > >> or unsubscribe\n> >> > >>\n> >> > <\n> >>\n> https://github.com/notifications/unsubscribe-auth/AB2A6NKPT36O425H4CIU4DLRCJZSLANCNFSM4KS5SWXQ\n> >> >\n> >> > >> .\n> >> > >>\n> >> > >\n> >> >\n> >> > \u2014\n> >> > You are receiving this because you authored the thread.\n> >> > Reply to this email directly, view it on GitHub\n> >> > <\n> >>\n> https://github.com/audacity/audacity/issues/422?email_source=notifications&email_token=AA6FWKYIVXI67GBTYX5RIDLRCKVJPA5CNFSM4KS5SWX2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOELMQAJQ#issuecomment-584646694\n> >> >,\n> >> > or unsubscribe\n> >> > <\n> >>\n> https://github.com/notifications/unsubscribe-auth/AA6FWK2CR4WMLVLEGZVEQEDRCKVJPANCNFSM4KS5SWXQ\n> >> >.\n> >> >\n> >> --\n> >> P\u00e9tition pour le retrait du projet de r\u00e9forme des retraites :\n> >> https://onestla.tech\n> >>\n> >> Installer facilement Linux : http://infolib.re\n> >>\n> >> .--.\n> >> |o_o |\n> >> ||_/ |\n> >> // \\\\ Envoy\u00e9 depuis mon Linux\n> >> (| |)\n> >> / \\_ _/ \\\n> >> \\___)=(___/\n> >>\n> >> \u2014\n> >> You are receiving this because you commented.\n> >> Reply to this email directly, view it on GitHub\n> >>\n> <https://github.com/audacity/audacity/issues/422?email_source=notifications&email_token=AB2A6NNL5XGXZZZYQMRY64TRCKVY7A5CNFSM4KS5SWX2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOELMQO3A#issuecomment-584648556>,\n> >> or unsubscribe\n> >>\n> <https://github.com/notifications/unsubscribe-auth/AB2A6NOHUOHRWVOMIXSJKK3RCKVY7ANCNFSM4KS5SWXQ>\n> >> .\n> >>\n> >\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/issues/422?email_source=notifications&email_token=AA6FWK5T232KE53GT3YTX5TRCKZ5XA5CNFSM4KS5SWX2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOELMUYFA#issuecomment-584666132>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AA6FWK2CVA6RYBNWSGJD5XLRCKZ5XANCNFSM4KS5SWXQ>.\n>\n-- \nP\u00e9tition pour le retrait du projet de r\u00e9forme des retraites : https://onestla.tech\n\nInstaller facilement Linux : http://infolib.re\n\n    .--.\n   |o_o |\n   ||_/ |\n  //    \\\\    Envoy\u00e9 depuis mon Linux\n (|      |)\n/ \\_   _/ \\\n\\___)=(___/\n\n =||= "], ["423", "fixed bug 2128", null, "binarywisdom", "04/20/20, 06:03:04 PM", "This is a fix for Bug 2128. It is pretty minimalistic and preserves the existing Audacity behavior.\r\n\r\n- When recording is initiated, Audacity compares the sampling rates of the selected tracks. If the rates don\u2019t match, Audacity outputs an error message and stops recording. If all selected tracks have the same rate, that rate becomes the recording rate.\r\n\r\n- If the selected tracks have a non-project rate, there should be enough tracks selected to accommodate all input channels (to avoid automatic creation of non-project-rate new tracks). If not enough non-project-rate tracks are selected, the recording is stopped and the error message appears. \r\n\r\nThe following functionality modified:\r\n1. Standard recording\r\n2. Punch-and-Roll recording\r\n3. Timer recording. Timer recording performs the selected tracks checks from the very start. It is somewhat redundant but needed to let the user know about a bad selection before the timer expires.\r", "Thanks very much for the fix.\r\nThis has been committed at 70b748782000f65b52267c96a0b138cf53d83be3 =||= "], ["424", "Distortion in DTMF generation", "Nicholas Gregorich", "ngregorich", "06/03/20, 09:34:49 PM", "I have been using Audacity's DTMF Tone generation capabilities and noticed certain samples are distorted, as confirmed in the spectrogram. I have been generating samples with tone durations as low as 20 ms and silence of 5 ms, so I think this issue may only manifest itself in shorter durations. \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to _Generate_\r\n2. Scroll down to _DTMF Tones_\r\n3. Set _DTMF sequence to_ 0000000000 (ten 0s, value not critical)\r\n4. Set _Amplitude_ to 0.5\r\n5. Set _Duration_ to 1 s\r\n6. Set _Tone/Silence ratio Duty cycle_ to 80% (value not critical)\r\n7. Push _OK_ to generate audio\r\n8. Listen to resulting audio, first 6 or so tones will be distorted compared to following 4\r\n9. Go to _Audio Track_\r\n10. Scroll down to _Spectrogram_\r\n11. Observe differences in spectral content of first 6 vs following 4 tones\r\n\r\n**Expected behavior**\r\nI expected all 10 tones to sound identical. When I zoom in, it looks like the first 6 tones do not have an envelope applied to ensure the waveform amplitude is at / near 0 at the end of the tone duration. Later tones appear to have a proper envelope applied, as expected.\r\n\r\n**Screenshots**\r\nOverview of spectrogram generated from the _To Reproduce_ steps\r\n<img width=\"592\" alt=\"distorted_vs_clean_overview\" src=\"https://user-images.githubusercontent.com/44035038/74767984-a819cd00-523c-11ea-9f2b-4455fc3cacac.png\">\r\n\r\nComparison of distorted and clean tones in time domain\r\n<img width=\"1897\" alt=\"distorted_vs_clean_zoom_time\" src=\"https://user-images.githubusercontent.com/44035038/74768091-d0a1c700-523c-11ea-9c0f-377b97f43b38.png\">\r\n\r\nComparison of distorted and clean tones in frequency domain\r\n<img width=\"1897\" alt=\"distorted_vs_clean_zoom_freq\" src=\"https://user-images.githubusercontent.com/44035038/74768132-e7481e00-523c-11ea-9668-e4e1aa32f57f.png\">\r\n\r\n**Additional information:**\r\n - OS: macOS Mojave 10.14.6\r\n - Version: Audacity 2.3.3\r\n - OS: Linux Mint 19.3\r\n - Version: Audacity 2.2.1\r\n - Note: issue does not appear identically on both systems / versions\r\n\r\n**Additional context**\r\n - I have been able to work around this issue by generating a longer sequence than required\r\n - I have just started building Audacity from source and will see if I can aid in debugging", "I was able to build and find that the issue is related to the extra sample padding in _DtmfGen.cpp_ as seen below:\r\n\r\n```// the statement takes care of extracting one sample from the diff bin and```\r\n```// adding it into the current block until depletion```\r\n```numRemaining += (diff-- > 0 ? 1 : 0);```\r\n\r\nI have forked the repo and will try and get on the mailing list to discuss a pull request for this fix. [Here](https://github.com/audacity/audacity/compare/master...ngregorich:Distortion-in-DTMF) is the comparison with master. =||= Thanks for the bug report.\r\nTo fix it, why not just change:\r\n   // generate a fade-out of duration 1/250th of second\r\n   if (last == total - len) {\r\nto:\r\n   // generate a fade-out of duration 1/250th of second\r\n   if (last >= total - len) {\r\n =||= That is about where I started, but after logging _last_, _total_, and _len_ in _MakeDtmfTone_ I found that _last_ was always 0 and that _total_ and _len_ were always equal or differed by 1 with my test cases.\r\n\r\nI see now that longer tone durations require the phase preservation provided by _last_, which would be the cases where you wouldn\u2019t want a fade in / out envelope applied to the buffered tone.\r\n\r\nI will double check tomorrow to see if your proposed inequality will safely cover both shorter and longer tone durations. \r\n\r\nThank you =||= I've committed the \"simple\" fix, so you can now test it from the current GitHub code.\r\nI also replaced that \"protect against negative offset\" hack, so that even stupidly short tones now fade out correctly.\r\nThanks for your help with this. It looks like this bug had been present for years (but never reported until now). =||= I dug pretty deep into this, I\u2019ll post an update late next week. =||= Fix committed, and issue now closed. =||= "], ["425", "clang does not have -latomic", null, "xxjack12xx", "05/13/21, 09:30:32 PM", "Reading around, it looks like only cmake 3.8+ supports latomic. Need to properly check for it before using.\r\n\r\n[https://github.com/fish-shell/fish-shell/commit/45633f4a54f9d04d33406e97e48613066c072d81](https://github.com/fish-shell/fish-shell/commit/45633f4a54f9d04d33406e97e48613066c072d81)\r\nFreeBSD 12 amd64 audacity 2.3.3 has cmake 3.16.4 and llvm 9.0.1 which requires removing -latomic to configure\r\n\r\nThere's probably a better way to check for this in the previous URL.\r\n\r\n```\r\n--- configure.ac.orig   2019-02-24 08:28:05 UTC\r\n+++ configure.ac\r\n@@ -200,14 +200,6 @@ if test x$enable_universal_binary = xyes; then\r\n    esac\r\n fi\r\n \r\n-dnl Check if $CXX is clang by evaluating the version string because\r\n-dnl $ax_cv_cxx_compiler_vendor seems not to work (it is either \"gnu\" or just empty).\r\n-dnl If $CXX is clang (string is found), grep returns 0 and the if is executed.\r\n-dnl Use /dev/null to suppress grep output to shell.\r\n-if ($CXX --version | grep 'clang version' > /dev/null); then\r\n-    LDFLAGS=\"${LDFLAGS} -latomic\"\r\n-fi\r\n-\r\n if test x$enable_sse = xyes; then\r\n\r\n    if test \"${ax_cv_cxx_compiler_vendor}\" = \"gnu\"; then\r\n\r\n```", "This is related to #344 =||= We will be switching to CMake builds shortly and I have added a check for libatomic.  Do you want to give it a try? =||= Sure. Is it part of head or a patch?\n\nOn Tue, Feb 25, 2020 at 8:03 AM Leland Lucius <notifications@github.com> wrote:\n>\n> We will be switching to CMake builds shortly and I have added a check for libatomic. Do you want to give it a try?\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub, or unsubscribe.\n =||= Yes, it's part of HEAD.  I have some stuff in there already for FreeBSD, but I'm by no means an expert on FreeBSD (like I've installed it once ;-)), feel free to make suggestions to the CMake build.  I'll be able to incorporate those now, but I won't be able to incorporate source code changes as we're looking to release 2.4.0 shortly.\r\n =||= I'm working on testing out 5a2eaf9, if it doesn't crash, would be good\nenough for 2.4.4.\n\nI just installed the current HEAD version and the time interface is warped\n(screenshot attached). 2.3.3 was not warped. The rest of the interface is\nstill the same with everything going outside the boundaries from wxgtk\nbeing built with gtk3 instead of 2.\n\nOn Tue, Feb 25, 2020 at 2:24 PM Leland Lucius <notifications@github.com>\nwrote:\n\n> Yes, it's part of HEAD. I have some stuff in there already for FreeBSD,\n> but I'm by no means an expert on FreeBSD (like I've installed it once ;-)),\n> feel free to make suggestions to the CMake build. I'll be able to\n> incorporate those now, but I won't be able to incorporate source code\n> changes as we're looking to release 2.4.0 shortly.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/issues/425?email_source=notifications&email_token=ABONG54HUZTJ44QYTOQ2ZE3REWLBXA5CNFSM4KYYWO42YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEM5YDNI#issuecomment-591102389>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ABONG53ASQQOTQHMZVRJN2TREWLBXANCNFSM4KYYWO4Q>\n> .\n>\n =||= Wow, you got it working that quickly?!?!  Excellent work.  Would LOVE to see your screenshot.  Did I miss it or did you not attach it?\r\n> \r\n> I'm working on testing out [5a2eaf9](https://github.com/audacity/audacity/commit/5a2eaf9a527b702f2bb6adb67cb530051c7baf84), if it doesn't crash, would be good enough for 2.4.4. I just installed the current HEAD version and the time interface is warped (screenshot attached). 2.3.3 was not warped. The rest of the interface is still the same with everything going outside the boundaries from wxgtk being built with gtk3 instead of 2.\r\n> [\u2026](#)\r\n> On Tue, Feb 25, 2020 at 2:24 PM Leland Lucius ***@***.***> wrote: Yes, it's part of HEAD. I have some stuff in there already for FreeBSD, but I'm by no means an expert on FreeBSD (like I've installed it once ;-)), feel free to make suggestions to the CMake build. I'll be able to incorporate those now, but I won't be able to incorporate source code changes as we're looking to release 2.4.0 shortly. \u2014 You are receiving this because you authored the thread. Reply to this email directly, view it on GitHub <#425?email_source=notifications&email_token=ABONG54HUZTJ44QYTOQ2ZE3REWLBXA5CNFSM4KYYWO42YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEM5YDNI#issuecomment-591102389>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/ABONG53ASQQOTQHMZVRJN2TREWLBXANCNFSM4KYYWO4Q> .\r\n\r\n =||= Not sure about if I forgot to attach but here it is again just in case ;)\n\nOn Tue, Feb 25, 2020 at 3:37 PM Leland Lucius <notifications@github.com>\nwrote:\n\n> Wow, you got it working that quickly?!?! Excellent work. Would LOVE to see\n> your screenshot. Did I miss it or did you not attach it?\n>\n> I'm working on testing out 5a2eaf9\n> <https://github.com/audacity/audacity/commit/5a2eaf9a527b702f2bb6adb67cb530051c7baf84>,\n> if it doesn't crash, would be good enough for 2.4.4. I just installed the\n> current HEAD version and the time interface is warped (screenshot\n> attached). 2.3.3 was not warped. The rest of the interface is still the\n> same with everything going outside the boundaries from wxgtk being built\n> with gtk3 instead of 2.\n> \u2026 <#m_7500852499965229553_>\n> On Tue, Feb 25, 2020 at 2:24 PM Leland Lucius *@*.***> wrote: Yes, it's\n> part of HEAD. I have some stuff in there already for FreeBSD, but I'm by no\n> means an expert on FreeBSD (like I've installed it once ;-)), feel free to\n> make suggestions to the CMake build. I'll be able to incorporate those now,\n> but I won't be able to incorporate source code changes as we're looking to\n> release 2.4.0 shortly. \u2014 You are receiving this because you authored the\n> thread. Reply to this email directly, view it on GitHub <#425\n> <https://github.com/audacity/audacity/issues/425>?email_source=notifications&email_token=ABONG54HUZTJ44QYTOQ2ZE3REWLBXA5CNFSM4KYYWO42YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEM5YDNI#issuecomment-591102389>,\n> or unsubscribe\n> https://github.com/notifications/unsubscribe-auth/ABONG53ASQQOTQHMZVRJN2TREWLBXANCNFSM4KYYWO4Q\n> .\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/issues/425?email_source=notifications&email_token=ABONG5Y6XUQT377AW35QL6LREWTTBA5CNFSM4KYYWO42YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEM6A7CQ#issuecomment-591138698>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ABONG57EI4WE3TBWUESJUT3REWTTBANCNFSM4KYYWO4Q>\n> .\n>\n =||= Also during make install, got this:\n\n /bin/mkdir -p '/usr/obj/usr/ports/audio/audacity-devel/work/stage/usr/local/share/audacity/nyquist'\ninstall  -m 0644  nyquist/aud-do-support.lsp nyquist/dspprims.lsp\nnyquist/envelopes.lsp nyquist/equalizer.lsp nyquist/\nevalenv.lsp nyquist/fileio.lsp nyquist/init.lsp nyquist/misc.lsp\nnyquist/nyinit-dbg.lsp nyquist/nyinit.lsp nyquist/nyqm\nisc.lsp nyquist/nyquist-plot.txt\n'/usr/obj/usr/ports/audio/audacity-devel/work/stage/usr/local/share/audacity/nyquist'\nfind: lib-src/lv2/build: No such file or directory\n\nLooks like maybe these are causing it?\naudacity-5a2eaf9/Makefile.in:suillib_DATA = $(shell find\nlib-src/lv2/build -name \\*.so)\naudacity-5a2eaf9/Makefile.am:suillib_DATA = $(shell find\nlib-src/lv2/build -name \\*.so)\n\nOn Tue, Feb 25, 2020 at 3:37 PM Leland Lucius <notifications@github.com> wrote:\n>\n> Wow, you got it working that quickly?!?! Excellent work. Would LOVE to see your screenshot. Did I miss it or did you not attach it?\n>\n> I'm working on testing out 5a2eaf9, if it doesn't crash, would be good enough for 2.4.4. I just installed the current HEAD version and the time interface is warped (screenshot attached). 2.3.3 was not warped. The rest of the interface is still the same with everything going outside the boundaries from wxgtk being built with gtk3 instead of 2.\n> \u2026\n> On Tue, Feb 25, 2020 at 2:24 PM Leland Lucius @.***> wrote: Yes, it's part of HEAD. I have some stuff in there already for FreeBSD, but I'm by no means an expert on FreeBSD (like I've installed it once ;-)), feel free to make suggestions to the CMake build. I'll be able to incorporate those now, but I won't be able to incorporate source code changes as we're looking to release 2.4.0 shortly. \u2014 You are receiving this because you authored the thread. Reply to this email directly, view it on GitHub <#425?email_source=notifications&email_token=ABONG54HUZTJ44QYTOQ2ZE3REWLBXA5CNFSM4KYYWO42YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEM5YDNI#issuecomment-591102389>, or unsubscribe https://github.com/notifications/unsubscribe-auth/ABONG53ASQQOTQHMZVRJN2TREWLBXANCNFSM4KYYWO4Q .\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub, or unsubscribe.\n =||= Let me look into this.  It's probably something I recently added to the existing build to provide the suil UI wrappers.\r\n\r\n> \r\n> Also during make install, got this: /bin/mkdir -p '/usr/obj/usr/ports/audio/audacity-devel/work/stage/usr/local/share/audacity/nyquist' install -m 0644 nyquist/aud-do-support.lsp nyquist/dspprims.lsp nyquist/envelopes.lsp nyquist/equalizer.lsp nyquist/ evalenv.lsp nyquist/fileio.lsp nyquist/init.lsp nyquist/misc.lsp nyquist/nyinit-dbg.lsp nyquist/nyinit.lsp nyquist/nyqm isc.lsp nyquist/nyquist-plot.txt '/usr/obj/usr/ports/audio/audacity-devel/work/stage/usr/local/share/audacity/nyquist' find: lib-src/lv2/build: No such file or directory Looks like maybe these are causing it? audacity-5a2eaf9/Makefile.in:suillib_DATA = $(shell find lib-src/lv2/build -name \\*.so) audacity-5a2eaf9/Makefile.am:suillib_DATA = $(shell find lib-src/lv2/build -name \\*.so)\r\n> [\u2026](#)\r\n> On Tue, Feb 25, 2020 at 3:37 PM Leland Lucius ***@***.***> wrote: Wow, you got it working that quickly?!?! Excellent work. Would LOVE to see your screenshot. Did I miss it or did you not attach it? I'm working on testing out [5a2eaf9](https://github.com/audacity/audacity/commit/5a2eaf9a527b702f2bb6adb67cb530051c7baf84), if it doesn't crash, would be good enough for 2.4.4. I just installed the current HEAD version and the time interface is warped (screenshot attached). 2.3.3 was not warped. The rest of the interface is still the same with everything going outside the boundaries from wxgtk being built with gtk3 instead of 2. \u2026 On Tue, Feb 25, 2020 at 2:24 PM Leland Lucius @.***> wrote: Yes, it's part of HEAD. I have some stuff in there already for FreeBSD, but I'm by no means an expert on FreeBSD (like I've installed it once ;-)), feel free to make suggestions to the CMake build. I'll be able to incorporate those now, but I won't be able to incorporate source code changes as we're looking to release 2.4.0 shortly. \u2014 You are receiving this because you authored the thread. Reply to this email directly, view it on GitHub <#425?email_source=notifications&email_token=ABONG54HUZTJ44QYTOQ2ZE3REWLBXA5CNFSM4KYYWO42YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEM5YDNI#issuecomment-591102389>, or unsubscribe https://github.com/notifications/unsubscribe-auth/ABONG53ASQQOTQHMZVRJN2TREWLBXANCNFSM4KYYWO4Q . \u2014 You are receiving this because you authored the thread. Reply to this email directly, view it on GitHub, or unsubscribe.\r\n\r\n =||= Interesting.  In your build directory do you not have a lib-src/lv2/suil/build directory?  It should have:\r\n```\r\n[build]$ dir lib-src/lv2/build\r\ntotal 32\r\ndrwxr-xr-x. 8 yam 4096 Feb 24 15:55 .\r\ndrwxr-xr-x. 9 yam 4096 Feb 24 15:55 ..\r\ndrwxr-xr-x. 2 yam 4096 Feb 24 15:55 bin\r\ndrwxr-xr-x. 3 yam 4096 Feb 24 15:55 etc\r\ndrwxr-xr-x. 8 yam 4096 Feb 24 15:55 include\r\ndrwxr-xr-x. 5 yam 4096 Feb 24 15:55 lib\r\ndrwxr-xr-x. 3 yam 4096 Feb 24 15:55 lib64\r\ndrwxr-xr-x. 4 yam 4096 Feb 24 15:55 share\r\n```\r\n\r\nHere\u2019s where the suil libs should be:\r\n\r\n```\r\n[build]$ dir lib-src/lv2/build/lib/suil-0\r\ntotal 256\r\ndrwxr-xr-x. 2 yam  4096 Feb 24 15:55 .\r\ndrwxr-xr-x. 5 yam  4096 Feb 24 15:55 ..\r\n-rwxr-xr-x. 1 yam 18296 Feb 24 15:55 libsuil_gtk2_in_qt4.so\r\n-rwxr-xr-x. 1 yam 23696 Feb 24 15:55 libsuil_gtk2_in_qt5.so\r\n-rwxr-xr-x. 1 yam 19160 Feb 24 15:55 libsuil_qt4_in_gtk2.so\r\n-rwxr-xr-x. 1 yam 24344 Feb 24 15:55 libsuil_qt5_in_gtk2.so\r\n-rwxr-xr-x. 1 yam 24368 Feb 24 15:55 libsuil_qt5_in_gtk3.so\r\n-rwxr-xr-x. 1 yam 16304 Feb 24 15:55 libsuil_x11.so\r\n-rwxr-xr-x. 1 yam 28184 Feb 24 15:55 libsuil_x11_in_gtk2.so\r\n-rwxr-xr-x. 1 yam 28360 Feb 24 15:55 libsuil_x11_in_gtk3.so\r\n-rwxr-xr-x. 1 yam 31080 Feb 24 15:55 libsuil_x11_in_qt4.so\r\n-rwxr-xr-x. 1 yam 31360 Feb 24 15:55 libsuil_x11_in_qt5.so\r\n```\r\n\r\nAh wait\u2026just guessing here, but I bet when suil got configured it didn\u2019t find any Qt, Gtk, or X11 devel files.  Reconfigure and look for these lines.  I\u2019d wager that all of your \u201cSupport for\u201d lines say \u201cno\u201d.  I\u2019m going to try and simulate there here, but it\u2019d be good if you could confirm.\r\n\r\n```\r\nSetting top to                                : /home/yam/audacity/b/lib-src/lv2/suil\r\nSetting out to                                : /home/yam/audacity/b/lib-src/lv2/suil/build\r\nChecking for 'gcc' (C compiler)               : /usr/bin/gcc\r\nChecking for 'g++' (C++ compiler)             : /usr/bin/g++\r\nChecking for flag '-std=c99'                  : yes\r\nChecking for link flags -Wl,-z,-nodelete      : yes\r\nChecking for program 'pkg-config'             : /usr/bin/pkg-config\r\nChecking for 'lv2 >= 1.16.0'                  : yes\r\nChecking for 'x11'                            : yes\r\nChecking for 'gtk+-2.0 >= 2.18.0'             : yes\r\nChecking for 'gtk+-x11-2.0'                   : yes\r\nChecking for 'gtk+-quartz-2.0'                : not found\r\nChecking for 'gtk+-3.0 >= 3.14.0'             : yes\r\nChecking for 'gtk+-x11-3.0 >= 3.14.0'         : yes\r\nChecking for 'QtGui >= 4.4.0'                 : yes\r\nChecking for 'Qt5Widgets >= 5.1.0'            : yes\r\nChecking for header QMacCocoaViewContainer    : not found\r\nChecking for library dl                       : yes\r\nInstall prefix                                : /home/yam/audacity/b/lib-src/lv2/build\r\nC Flags                                       : -I/home/yam/audacity/b/lib-src/lv2/suil -DNDEBUG -fshow-column -std=c99\r\nC++ Flags                                     : -I/home/yam/audacity/b/lib-src/lv2/suil -DNDEBUG -fshow-column\r\nDebuggable                                    : no\r\nBuild documentation                           : no\r\nStatic library                                : yes\r\nShared library                                : no\r\nGtk2 Library Name                             : \"libgtk-x11-2.0.so.0\"\r\nGtk3 Library Name                             : \"libgtk-x11-3.0.so.0\"\r\nSupport for cocoa in gtk2                     : no\r\nSupport for gtk2 in qt4                       : yes\r\nSupport for gtk2 in qt5                       : yes\r\nSupport for qt4 in gtk2                       : yes\r\nSupport for qt5 in gtk2                       : yes\r\nSupport for win in gtk2                       : no\r\nSupport for x11 in gtk2                       : yes\r\nSupport for x11 in gtk3                       : yes\r\nSupport for qt5 in gtk3                       : yes\r\nSupport for x11 in qt4                        : yes\r\nSupport for x11 in qt5                        : yes\r\nSupport for cocoa in qt5                      : no\r\n'configure' finished successfully (0.294s)\r\n```\r\n =||= jack@b2:~ % fetch \"\nhttps://codeload.github.com/audacity/audacity/tar.gz/5a2eaf9?\n\n dummy=/audacity-audacity-5a2eaf9_GH0.tar.gz\"\nfetch:\nhttps://codeload.github.com/audacity/audacity/tar.gz/5a2eaf9?dummy=/audac\n\n         ity-audacity-5a2eaf9_GH0.tar.gz: size of remote file is not known\naudacity-audacity-5a2eaf9_GH0.tar.gz                    60 MB  809 kBps\n01m16s\njack@b2:~ % tar -xf audacity-audacity-5a2eaf9_GH0.tar.gz\njack@b2:~ % ls audacity-5a2eaf9/lib-src/lv2/build\nls: audacity-5a2eaf9/lib-src/lv2/build: No such file or directory\njack@b2:~ % ls -1 audacity-5a2eaf9/lib-src/lv2/build/lib/suil-0\nls: audacity-5a2eaf9/lib-src/lv2/build/lib/suil-0: No such file or directory\njack@b2:~ % ls -1 audacity-5a2eaf9/lib-src/lv2\nMakefile\nconfigure\nlilv\nlv2\nserd\nsord\nsratom\nsuil\nunpack-waf\nwindows\njack@b2:~ % ls -1 audacity-5a2eaf9/lib-src/\nFileDialog\nMakefile.am\nMakefile.in\naudacity-patches.txt\ndist-libsoxr.mk\ndist-libvamp.mk\ndist-portaudio.mk\nexpat\nffmpeg\nheader-substitutes\nlame\nlib-widget-extra\nlibflac\nlibid3tag\nlibmad\nlibmp3lame\nlibnyquist\nlibogg\nlibscorealign\nlibsndfile\nlibsoxr\nlibvamp\nlibvorbis\nlv2\nmod-null\nmod-nyq-bench\nmod-script-pipe\nmod-track-panel\nmpglib\nportaudio-v19\nportburn\nportmidi\nportmixer\nportsmf\nsbsms\nsoundtouch\ntwolame\n\nOn Tue, Feb 25, 2020 at 7:48 PM Leland Lucius <notifications@github.com>\nwrote:\n\n> Interesting. In your build directory do you not have a\n> lib-src/lv2/suil/build directory? It should have:\n>\n> [build]$ dir lib-src/lv2/build\n>\n> total 32\n>\n> drwxr-xr-x. 8 yam 4096 Feb 24 15:55 .\n>\n> drwxr-xr-x. 9 yam 4096 Feb 24 15:55 ..\n>\n> drwxr-xr-x. 2 yam 4096 Feb 24 15:55 bin\n>\n> drwxr-xr-x. 3 yam 4096 Feb 24 15:55 etc\n>\n> drwxr-xr-x. 8 yam 4096 Feb 24 15:55 include\n>\n> drwxr-xr-x. 5 yam 4096 Feb 24 15:55 lib\n>\n> drwxr-xr-x. 3 yam 4096 Feb 24 15:55 lib64\n>\n> drwxr-xr-x. 4 yam 4096 Feb 24 15:55 share\n>\n>\n> Here\u2019s where the suil libs should be:\n>\n> [build]$ dir lib-src/lv2/build/lib/suil-0\n>\n> total 256\n>\n> drwxr-xr-x. 2 yam  4096 Feb 24 15:55 .\n>\n> drwxr-xr-x. 5 yam  4096 Feb 24 15:55 ..\n>\n> -rwxr-xr-x. 1 yam 18296 Feb 24 15:55 libsuil_gtk2_in_qt4.so\n>\n> -rwxr-xr-x. 1 yam 23696 Feb 24 15:55 libsuil_gtk2_in_qt5.so\n>\n> -rwxr-xr-x. 1 yam 19160 Feb 24 15:55 libsuil_qt4_in_gtk2.so\n>\n> -rwxr-xr-x. 1 yam 24344 Feb 24 15:55 libsuil_qt5_in_gtk2.so\n>\n> -rwxr-xr-x. 1 yam 24368 Feb 24 15:55 libsuil_qt5_in_gtk3.so\n>\n> -rwxr-xr-x. 1 yam 16304 Feb 24 15:55 libsuil_x11.so\n>\n> -rwxr-xr-x. 1 yam 28184 Feb 24 15:55 libsuil_x11_in_gtk2.so\n>\n> -rwxr-xr-x. 1 yam 28360 Feb 24 15:55 libsuil_x11_in_gtk3.so\n>\n> -rwxr-xr-x. 1 yam 31080 Feb 24 15:55 libsuil_x11_in_qt4.so\n>\n> -rwxr-xr-x. 1 yam 31360 Feb 24 15:55 libsuil_x11_in_qt5.so\n>\n>\n> Ah wait\u2026just guessing here, but I bet when suil got configured it didn\u2019t\n> find any Qt, Gtk, or X11 devel files. Reconfigure and look for these lines.\n> I\u2019d wager that all of your \u201cSupport for\u201d lines say \u201cno\u201d. I\u2019m going to try\n> and simulate there here, but it\u2019d be good if you could confirm.\n>\n> Setting top to                                : /home/yam/audacity/b/lib-src/lv2/suil\n>\n> Setting out to                                : /home/yam/audacity/b/lib-src/lv2/suil/build\n>\n> Checking for 'gcc' (C compiler)               : /usr/bin/gcc\n>\n> Checking for 'g++' (C++ compiler)             : /usr/bin/g++\n>\n> Checking for flag '-std=c99'                  : yes\n>\n> Checking for link flags -Wl,-z,-nodelete      : yes\n>\n> Checking for program 'pkg-config'             : /usr/bin/pkg-config\n>\n> Checking for 'lv2 >= 1.16.0'                  : yes\n>\n> Checking for 'x11'                            : yes\n>\n> Checking for 'gtk+-2.0 >= 2.18.0'             : yes\n>\n> Checking for 'gtk+-x11-2.0'                   : yes\n>\n> Checking for 'gtk+-quartz-2.0'                : not found\n>\n> Checking for 'gtk+-3.0 >= 3.14.0'             : yes\n>\n> Checking for 'gtk+-x11-3.0 >= 3.14.0'         : yes\n>\n> Checking for 'QtGui >= 4.4.0'                 : yes\n>\n> Checking for 'Qt5Widgets >= 5.1.0'            : yes\n>\n> Checking for header QMacCocoaViewContainer    : not found\n>\n> Checking for library dl                       : yes\n>\n> Install prefix                                : /home/yam/audacity/b/lib-src/lv2/build\n>\n> C Flags                                       : -I/home/yam/audacity/b/lib-src/lv2/suil -DNDEBUG -fshow-column -std=c99\n>\n> C++ Flags                                     : -I/home/yam/audacity/b/lib-src/lv2/suil -DNDEBUG -fshow-column\n>\n> Debuggable                                    : no\n>\n> Build documentation                           : no\n>\n> Static library                                : yes\n>\n> Shared library                                : no\n>\n> Gtk2 Library Name                             : \"libgtk-x11-2.0.so.0\"\n>\n> Gtk3 Library Name                             : \"libgtk-x11-3.0.so.0\"\n>\n> Support for cocoa in gtk2                     : no\n>\n> Support for gtk2 in qt4                       : yes\n>\n> Support for gtk2 in qt5                       : yes\n>\n> Support for qt4 in gtk2                       : yes\n>\n> Support for qt5 in gtk2                       : yes\n>\n> Support for win in gtk2                       : no\n>\n> Support for x11 in gtk2                       : yes\n>\n> Support for x11 in gtk3                       : yes\n>\n> Support for qt5 in gtk3                       : yes\n>\n> Support for x11 in qt4                        : yes\n>\n> Support for x11 in qt5                        : yes\n>\n> Support for cocoa in qt5                      : no\n>\n> 'configure' finished successfully (0.294s)\n>\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/issues/425?email_source=notifications&email_token=ABONG54AZTEV5RNM7DG7GL3REXQ7BA5CNFSM4KYYWO42YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEM6V5HI#issuecomment-591224477>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ABONG53D22WVUUQG2JMWIJ3REXQ7BANCNFSM4KYYWO4Q>\n> .\n>\n =||= Thanks, but I was looking for what your build directory contained after you run configure and make.  And the output from configure when it does suil. =||= My log is getting rejected for being too large. I've uploaded the log to my\nserver with the find cmd after the build.\n\nhttps://www4.punkrockdemo.com/audacity.txt\n\nLet me know when you've got it so I can delete it.\n\nOn Tue, Feb 25, 2020 at 9:37 PM Leland Lucius <notifications@github.com>\nwrote:\n\n> Thanks, but I was looking for what your build directory contained after\n> you run configure and make. And the output from configure when it does suil.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/issues/425?email_source=notifications&email_token=ABONG54D64WFB5VFUVERF5DREX5ZDA5CNFSM4KYYWO42YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEM63W2Y#issuecomment-591248235>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ABONG55QLBFX27XDQIDLS4LREX5ZDANCNFSM4KYYWO4Q>\n> .\n>\n =||= I've got a copy.  And I do see the problem.  I made a bit of an assumption that the distro maintainers would be using the in-tree LV2 libs when it came to the installation step.\r\n\r\nI've committed a fix.\r\n\r\nBut, keep in mind, that if we do release Audacity 2.4.0 using the CMake build, we will not be maintaining the Makefile build process any longer.\r\n\r\n =||= ok will test that out and let you know, thanks!\n\nOn Wed, Feb 26, 2020 at 12:02 AM Leland Lucius <notifications@github.com>\nwrote:\n\n> I've got a copy. And I do see the problem. I made a bit of an assumption\n> that the distro maintainers would be using the in-tree LV2 libs when it\n> came to the installation step.\n>\n> I've committed a fix.\n>\n> But, keep in mind, that if we do release Audacity 2.4.0 using the CMake\n> build, we will not be maintaining the Makefile build process any longer.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/issues/425?email_source=notifications&email_token=ABONG57JL7HQCL4PJTIU2D3REYOZBA5CNFSM4KYYWO42YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEM7GINI#issuecomment-591291445>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ABONG56BAULPVQYDSDM7JIDREYOZBANCNFSM4KYYWO4Q>\n> .\n>\n =||= Looks like the fix worked. Thanks.\n\nOn Wed, Feb 26, 2020 at 12:02 AM Leland Lucius <notifications@github.com> wrote:\n>\n> I've got a copy. And I do see the problem. I made a bit of an assumption that the distro maintainers would be using the in-tree LV2 libs when it came to the installation step.\n>\n> I've committed a fix.\n>\n> But, keep in mind, that if we do release Audacity 2.4.0 using the CMake build, we will not be maintaining the Makefile build process any longer.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub, or unsubscribe.\n =||= Closing:\r\n>Looks like the fix worked. Thanks. =||= "], ["427", "Audacity 2.", null, "xxjack12xx", "02/20/20, 11:14:56 PM", "[0001-Fix-for-unbalanced-Push-and-Pop-Eventhandler.txt](https://github.com/audacity/audacity/files/4233465/0001-Fix-for-unbalanced-Push-and-Pop-Eventhandler.txt)\r", "NaN"], ["431", "Remote interface/command for integration to other software", "Amit Kapadi", "Amitkapadi", "05/13/21, 09:27:45 PM", "My suggestion is to set up a remote interface/command (Like VLC) so we can use Audacity with other software integration, for example, Audacity with Unity, when you play the animation in unity at that time audacity plays current audio.\r\n\r\nUsing this type of interface Artist can make music or SFX for their requirement/and test it quickly ", "Does scripting https://alphamanual.audacityteam.org/man/Scripting do what you need already? =||= This kind of automation is being done with python scripting to interoperate between Blender and Audacity.  Search the forum for details, if interested. =||= "], ["433", "Improve CMake *BSD compatibility", "Raphael Graf", "rrrapha", "02/25/20, 06:42:13 PM", "This is a problem for OpenBSD, NetBSD, etc.:\r\n`elseif( CMAKE_SYSTEM_NAME MATCHES \"Linux|FreeBSD\" )`", "NaN"], ["434", "Add commands to show export dialog with 24/32-bit WAV preselected", "Jakub Stasiak", "jstasiak", "02/25/20, 10:46:24 PM", "This is crucial when working with many 24-bit and 32-bit audio files.\r\nExporting them using the regular \"Export as WAV\" requires one to always\r\nchange the file type to 24-bit or 32-bit, which is annoying, takes time\r\nand can be omitted accidentally.", "Thanks Jatasiak.  However, there are so many preconfigured options we could add to that menu, we are not going to accept the pull-request as is.  We would just keep adding more and more other things like play at half and double speed and so on, and the menus would get very bloated.\r\n\r\nIf you can resubmit but add them as non-menu commands or as extra-menu commands that can then be bound to a keypress (preferences keyboard), that could work for us.  Later when we have user configurable menus you could move them to where in the menus you want them.  We also plan to extend the export scripting command to allow setting of export options, and then a user created macro could do what you want and set more options too.  But as-is, sorry, we won't be merging this. =||= Sure, I'll do them as either non-menu commands or extra-menu commands. =||= Perhaps before going further with this, it may be worth discussing with us on the developer's mailing list, why the feature is necessary. I frequently export as 32-bit float WAV, and right now I don't see the problem. \"Export > Audio\" (Ctrl+Shift+E) remembers the last format that I used. =||= Oh, fair enough, I'd swear I tested that before and I thought it didn't. I can confirm it's remembered, so no need for this patch after all. Cheers. =||= "], ["435", "Fix requirements for mad and lv2 in cmake-proxies/CMakeLists.txt", "Raphael Graf", "rrrapha", "02/27/20, 04:49:50 PM", "NaN", "Good catch on the missing the suil entirely and I have absolutely no idea where I pull that libmad version from.  :-) =||= "], ["436", "Fix audacity.desktop file generation (CMake)", "Raphael Graf", "rrrapha", "02/29/20, 03:54:43 PM", "Without the `file(GENERATE)` step, the _generator expressions_ end up in the output file:\r\n`MimeType=application/x-audacity-project;$<$<BOOL:ON>:audio/aac;...`\r", "Thanks again.  I'll add a comment that explains why the first item in each expression MUST be on the same line as the expression itself. =||= "], ["437", "Fixed many typos and errors", "\u0412\u044f\u0447\u0435\u0441\u043b\u0430\u0432 \u0414\u0438\u043a\u043e\u043d\u043e\u0432", "dikonov", "04/20/20, 03:21:23 PM", "Changed terms\r\n\u0442\u0440\u0435\u043a > \u0434\u043e\u0440\u043e\u0436\u043a\u0430\r\n\u043a\u043b\u0438\u043a > \u0449\u0435\u043b\u0447\u043e\u043a\r\n\u043f\u0430\u043d\u043e\u0440\u0430\u043c\u0430 > \u0431\u0430\u043b\u0430\u043d\u0441\r", "Thanks.  You opened a newer request for the same file, so closing this one. =||= "], ["438", "[CMAKE] Portaudio: fix support in Cygwin", "Carlo Bramini", "carlo-bramini", "03/03/20, 05:31:56 AM", "NaN", "Thanks Carlo. =||= "], ["439", "Fix manpage install path (CMake)", "Raphael Graf", "rrrapha", "03/03/20, 05:33:25 AM", "The _GNUInstallDirs_ module will set `CMAKE_INSTALL_MANDIR` to the correct path. \r\n\r\nOn OpenBSD for example, it should be like this:\r\n`/usr/local/man/man1/audacity.1`", "Thanks much! =||= "], ["440", "[CMAKE] Fix build outside of git repository", "Raphael Graf", "rrrapha", "03/03/20, 11:11:23 PM", "Instead of failing, print `Current Commit: unknown `when the current commit cannot be determined.\r\nThis is the case with archive files like, for example:\r\nhttps://github.com/audacity/audacity/archive/master.zip\r", "Looks good Raphael and thanks.  I'm going to one additional change to it to cover the case if the git package couldn't be found at all.  (Not a likely case, but might as well.) =||= "], ["441", "Invert the update boolean variable so that it checks for any differences, instead of checking to see if everything is the same.", "Deleted user", "ghost", "03/08/20, 05:45:18 PM", "# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r\n\r\nThe reason for this PR is that the resulting code is much less convoluted and more straightforward.", "@rrrapha do you know who could review this? =||= Reviewed.  Sorry, no we don't want this change.  If you'd like to do some code cleaning, come and talk with us on our devel mailing list. =||= "], ["442", "[CMAKE] Portmidi: add missing Unix files in Cygwin", "Carlo Bramini", "carlo-bramini", "03/03/20, 11:06:42 PM", "When doing the final link of Audacity executable on Cygwin, many errors similar to this one were printed on the console:\r\n\r\nld: ../lib/audacity/libportmidi.a(portmidi.c.o):portmidi.c:(.text+0x3f): undefined reference to `pm_alloc'\r\n\r\nThis happened because some files were missing since Cygwin name was not included together with other unix platforms.\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "Looks good.  Thanks again Carlo. =||= "], ["446", "Implementing 2347 and 2348 (Loop Play with Labels)", "Robert Haenggi", "Robert-J-H", "03/09/20, 01:56:00 PM", "\r\nThis enhances the usefulness of Previous/Next label because you can loop for instance sentences and jump ahead while loop play is still on. For point labels, it will begin at the label position and not the project start as it is currently the case.", "Already merged into Master. =||= "], ["448", "Add commands for muting/unmuting selected tracks", "Lukas Werling", "lluchs", "03/07/20, 10:49:53 PM", "There was no convenient way of muting or unmuting some, but not all\r\ntracks. With the new commands, it is possible to quickly select a subset\r\nof all tracks via Shift+click and then mute or unmute them.\r\n\r\n\r", "Thanks.  A very welcome addition. =||= I subsequently modified the flags for this block of four commands so that they can be used whilst playing audio too.  https://github.com/audacity/audacity/commit/9056eed9462f2fa3a7f235929f039cf513c08587\r\n\r\nWelcome to Audacity development. =||= "], ["449", "Call Invalidate() instead of calling SetFlip to set the flip to false and then back to true.", "Deleted user", "ghost", "03/09/20, 12:04:35 PM", "# Pull Requests\r\nIn the TimeTrackView, one of the comments notes that setting the Flip to false and then back to true causes the ruler to redraw.\r\n\r\nHowever, this is because the Invalidate method in the SetFlip method is called when the flip has changed. There is no need to set the flip at all. Just call Invalidate().\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "This moves the tick marks from the top to the bottom of the track (because flip is now not set).  \r\nAlso there are five commits in this pull request.  The ones done by mistake should have been squashed out before submitting a pull request.\r\n\r\nSo, pull request rejected, but I've used the idea to simplify the existing code very slightly and remove unneeded comments.  And I've credited p11024e in the commit message. https://github.com/audacity/audacity/commit/efc8f216b1ca416c69689e706e036bea2a55a77c =||= "], ["450", "[CMAKE] Set RUNTIME_OUTPUT_DIRECTORY on Linux/BSD", "Raphael Graf", "rrrapha", "03/11/20, 11:07:31 PM", "This fixes `make install` for me on OpenBSD.", "NaN"], ["451", "Update SpectrogramSettings.cpp so only one semicolon ends the line (avoiding warnings)", "Deleted user", "ghost", "03/09/20, 02:05:43 PM", "There is currently a macro that states if it is experimenting with something, it finishes the return statement. However, when that macro is false, there is no semicolon at the end, so I added and else clause to that macro.", "Rejected.\r\nThis change still leaves the line in question with awkward line splits.\r\nI've made a change that uses that idea instead, and given you/pi1024e credit in the commit message.  https://github.com/audacity/audacity/commit/a284f57e39b5a3d168522b8e8e4b2df85fad3a56\r\n\r\nThis kind of change is not actually that welcome, because the overhead to fix one tiny warning is huge relative to the benefit.  If you want to work on warnings, I'd far rather see a pull request with meatier warnings dealt with, or with many more small/similar warnings dealt with.  Then the overhead for reviewing, pulling, making the change and testing is a small proportion.  Taking them in dribbles costs me more time than is sensible.  It also costs QA time, as they have more tiny commits to deal with.\r\n =||= "], ["452", "Control de volumen", "Twikzer", "Twikzer", "05/13/21, 09:24:10 PM", "Cuando cambias el volumen dentro de audacity, te cambia el volumen del dispositivo en si, no dentro de audacity.", "This is a support request.\r\nThis is expected behaviour. =||= "], ["453", "Data folder placement", "Alberto Salvia Novella", "es20490446e", "05/14/21, 04:14:37 PM", "On Linux the Audacity data folder is on:\r\n~/.audacity-data\r\n\r\nMost likely it should be:\r\n~/.config/audacity", "Thanks for your feedback Alberto. We  are aware of this issue and it is\nlogged on our issue tracker.\n\nResolving the issue is a bit more complex than may first appear as we would\nwant to develop an upgrade path for existing users that avoids losing their\nPreference and plug-in settings, and avoids leaving debris in their home\nfolder. Currently our (very small) team of volunteers have their hands full\nwith higher priority issues.\n\nSteve\n\nOn Tue, 10 Mar 2020 at 12:18, Alberto Salvia Novella <\nnotifications@github.com> wrote:\n\n> On Linux the Audacity data folder is on:\n> ~/.audacity-data\n>\n> Most likely it should be:\n> ~/.config/audacity\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/issues/453?email_source=notifications&email_token=ACZD2SK7F6MIC3LS55LHWQ3RGYVZVA5CNFSM4LE5UOCKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4IT3ZYAA>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ACZD2SLUVJ2G23HQOATKINDRGYVZVANCNFSM4LE5UOCA>\n> .\n>\n =||= This is tracked in our bugzilla database at:\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2201\r\n\r\nClosing in favour of the bugzilla bug (which is more extensive)\r\nCross referenced to here, for completeness. =||= "], ["455", "[WIN32] Correct declaration of import/export modifiers.", "Carlo Bramini", "carlo-bramini", "05/25/20, 06:43:11 AM", "The `_declspec` modifier is deprecated since the migration from Win16 to Win32, the correct modifier to be used for modern code is `__declspec`, with two underscore characters as prefix.\r\nMSVC can recognize both modifiers and `_declspec` has the same effect of `__declspec`, depending on the presence of `/Za` option, which activates/deactivates the language extensions:\r\n\r\nhttps://docs.microsoft.com/it-it/cpp/cpp/declspec?view=vs-2019\r\n\r\nUnfortunately, GCC supports only `__declspec`, so I recommend this change for increasing portability. Since Audacity does not compile on anything less than GCC 4.9, it is not a big problem to use the same thing for _WIN32 in general, not only MSVC, and also Cygwin.\r\n\r", "NaN"], ["456", "[WIN32] Correctly read default value of wxRegKey entry.", "Carlo Bramini", "carlo-bramini", "05/25/20, 06:37:56 AM", "Fix this build error with GCC:\r\n\r\n../../audacity/src/AudacityApp.cpp:2347:62: error: call of overloaded 'wxString(wxRegKey&)' is ambiguous.\r", "NaN"], ["457", "Updated ga.po for Audacity", "Sean\u00e1n \u00d3 Coist\u00edn", "seananocoistin", "04/25/20, 01:04:33 PM", "I have 28% of the file translated to Irish. There is a lot still to do as it contains complicated technical terminology but it is achievable.\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "Thanks.  We've taken your more up to date pr #500 instead. =||= "], ["460", "[CMAKE] Add \"/MANIFEST:NO\" only to MSVC", "Carlo Bramini", "carlo-bramini", "03/21/20, 03:28:06 PM", "The option \"/MANIFEST:NO\" is recognized only by Microsoft C++ compiler, so its addition must be limited to this compiler rather than generic target for Windows.\r", "Good catch.  Thanks. =||= "], ["461", "x64 support", null, "exNTLDR", "05/25/20, 06:23:48 AM", "[+] x64 project configuration support\r\n[+] FFT analyzer sizes up to 1M\r", "If I can write my opinion, with the upcoming support of CMake, I would deprecate the update of Visual Studio Project files. Since Visual Studio 2017, it is possible to import directly CMakeLists.txt and this will generate automatically all project files for you. In addition, by using cmake tool, you can also generate project files for previous versions of Visual Studio and many other development tools. =||= Closing since we've deleted the old VS project files. =||= "], ["462", "[CMAKE] Allow linking system version of libexpat", "Raphael Graf", "rrrapha", "03/23/20, 01:12:43 PM", "NaN", "NaN"], ["464", "FileDialog compilation error with gtk+3", "Raphael Graf", "rrrapha", "03/24/20, 02:59:45 PM", "I get the following error on OpenBSD with gtk+3:\r\n```\r\n/tmp/audacity/lib-src/FileDialog/gtk/FileDialogPrivate.cpp:481:35: error: no matching function for call to 'gtk_file_chooser_get_current_name'\r\n    filename = wxString::FromUTF8(gtk_file_chooser_get_current_name(m_fc));\r\n                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/usr/local/include/gtk-3.0/gtk/gtkfilechooser.h:159:8: note: candidate function not viable: no known conversion from 'wxGtkFileChooser' to 'GtkFileChooser *' (aka '_GtkFi\r\nleChooser *') for 1st argument\r\ngchar *gtk_file_chooser_get_current_name (GtkFileChooser *chooser);\r\n```\r\n\r\nThe problem has been introduced in https://github.com/audacity/audacity/commit/38bf51afea4e9838544c515c5b1cd3b0b86f0f16\r", "NaN"], ["465", "Fix FileDialog compilation error (gtk+3)", "Raphael Graf", "rrrapha", "03/24/20, 02:59:45 PM", "Resolves #464\r", "Oops...sorry about that. =||= "], ["466", "[CMAKE] LAME: fix compilation error.", "Carlo Bramini", "carlo-bramini", "03/24/20, 06:54:22 PM", "If you try to build local LAME with CMake for i686, you get many error messages like this one:\r\n\r\n```\r\n/audacity/lib-src/libmp3lame/vector/xmm_quantize_sub.c: In function 'init_xrpow_core_sse':\r\n/audacity/lib-src/libmp3lame/vector/xmm_quantize_sub.c:72:18: warning: SSE vector return without SSE enabled changes the ABI [-Wpsabi]\r\n```\r\nThe solution is to add the option provided by SSE_FLAGS.\r\nSo, I replicated in this PR the same fix made for local soundtouch library.\r", "NaN"], ["467", "[CMAKE] SBSMS: fix compilation error.", "Carlo Bramini", "carlo-bramini", "06/03/20, 06:35:11 PM", "If you try to build local SBSMS with CMake for i686, you get many error messages like this one:\r\n\r\n`audacity/lib-src/sbsms/src/fft.h:346:29: warning: SSE vector return without SSE enabled changes the ABI [-Wpsabi]`\r\n\r\nThe solution is to add the option provided by SSE_FLAGS.\r\nSo, I replicated in this PR the same fix made for local Soundtouch and LAME libraries.\r\n\r", "NaN"], ["468", "[CMAKE] LV2: Fix conflict with main()", "Carlo Bramini", "carlo-bramini", "03/25/20, 03:58:29 AM", "After compiling Audacity with MinGW, a strange message appeared on the console after the executable was launched:\r\n\r\n```\r\n# ./Audacity.exe\r\nUsage: C:\\msys64\\home\\Carlo\\a\\bin\\Audacity.exe [OPTION]... INPUT...\r\nValidate RDF data\r\n\r\n  -h  Display this help and exit\r\n  -l  Print errors on a single line.\r\n  -v  Display version information and exit\r\nValidate RDF data.  This is a simple validator which checks\r\nthat all used properties are actually defined.  It does not do\r\nany fancy file retrieval, the files passed on the command line\r\nare the only data that is read.  In other words, you must pass\r\nthe definition of all vocabularies used on the command line.\r\n```\r\nThe problem happens because the file `lv2/sord/src/sord_validate.c` contains a `main()` function that was called by crt startup code instead of the one in the main sources of Audacity. The solution is to not include this unneeded file.\r", "Thanks again Carlo =||= "], ["469", "[WIN32] mod-script-pipe: fix compile error with GCC", "Carlo Bramini", "carlo-bramini", "03/25/20, 01:24:13 PM", "When compiling with CMake and MinGW, I got these two errors:\r\n\r\n```\r\naudacity/lib-src/mod-script-pipe/PipeServer.cpp:18:29: warning: ISO C++ forbids converting a string constant to 'LPTSTR' {aka 'char*'} [-Wwrite-strings]\r\n   18 |    LPTSTR pipeNameToSrv= _T(\"\\\\\\\\.\\\\pipe\\\\ToSrvPipe\");\r\n```\r\n\r\n```\r\naudacity/lib-src/mod-script-pipe/PipeServer.cpp:32:32: warning: ISO C++ forbids converting a string constant to 'LPTSTR' {aka 'char*'} [-Wwrite-strings]\r\n   32 |    LPTSTR pipeNameFromSrv= __T(\"\\\\\\\\.\\\\pipe\\\\FromSrvPipe\");\r\n```\r\n\r\nThe solution is to replace LPTSTR and convert these two pointers into two const objects.\r", "Carlo, could you use \"LPCTSTR\" instead of \"static const TCHAR\"? =||= > \r\n> \r\n> Carlo, could you use \"LPCTSTR\" instead of \"static const TCHAR\"?\r\n\r\nExcuse me, I can do it but is there a particular reason to have pointers to strings rather than having simply the strings? =||= > \r\n> \r\n> > Carlo, could you use \"LPCTSTR\" instead of \"static const TCHAR\"?\r\n> \r\n> Excuse me, I can do it but is there a particular reason to have pointers to strings rather than having simply the strings?\r\n\r\nHAHAHA, good point.  Total brain freeze on my part.  Merging... =||= "], ["470", "USB mic not working in Audacity 2.3.3", "Ryan", "CodeFunction", "05/13/21, 09:18:04 PM", "**Describe the bug**\r\nOpen Audacity. Cannot get the latest version of Audacity to record from mic using Focusrite Scarlett Solo USB.\r\n\r\nI originally thought it was PulseAudio since they've broken audio badly about 5 months or so and are having way too much trouble fixing those problems (as in, so far they managed to break it more).\r\n\r\nBut, using \"$ parecord ...\" does contain audio from the mic. Fedora control panel > sound > also shows the mic working once working around the current PulseAudio bugs.\r\n\r\nSo, currently, I'm not sure what is going on.\r\n\r\nI can build from source an older version of Audacity (distro doesn't have older version available) and check it that way. Of if there's some other way to look into this?\r\n\r\n**### Edit**: It used to work but I haven't used Audacity since 5-8 months ago maybe. It looks like I would have had Fedora 30 at that time and Audacity 2.3.2-1.\r\n\r\nI might as well start work on building from source...\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Start latest version of Audacity\r\n2. Never any sound coming in from the mic, visual indicator is dead.\r\n\r\n**Expected behavior**\r\nVisual indicator should show something when its enabled, recording should get audio from the mic.\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Fedora 31\r\n - Version Audacity 2.3.3\r\n - Focusrite Scarlett Solo USB", "Indeed, built 2.3.2, clicking monitoring of input shows sound activity and recording also has audio from the mic.\r\n\r\nThe latest version of Audacity did break the mic here ;-( =||= Have you tried building Audacity 2.3.3, or 2.4.0 alpha from source? =||= Apparently building and running 2.4.0 alpha also works.\r\n\r\nDistro package problem or 2.3.3? I probably don't need to build 2.3.3 when 2.4.0 works.\r\n\r\nEdit: I will keep this open for now (unless someone wants to close it) and see what happens in time. Will update it either way when I know its been fixed.\r\n\r\nIf anyone wants me to do more tests or whatever, just let me know. =||= Closing\r\n\r\n> Apparently building and running 2.4.0 alpha also works.\r\n> Distro package problem or 2.3.3? \r\n =||= "], ["471", "Playback cursor not moving on wayland", "Rodrigo", "rodrigoaguilera", "04/03/20, 06:31:55 AM", "**Description**\r\nThe cursor over the wave doesn't appear when playing\r\n\r\n\r\nSteps to reproduce the behavior:\r\n1. Record something\r\n2. Play it\r\n3. Click on the wave to see the cursor appear for a few milliseconds\r\n\r\n\r\n**Expected behavior**\r\nVertical line cursor moving\r\n\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: debian testing\r\n - Version 2.3.2\r\n - Window compositor: wayland (this bug does not appear on GNOME under Xorg)\r\n\r\n\r\n**Additional context**\r\nReported already in other trackers:\r\nhttps://forum.audacityteam.org/viewtopic.php?f=48&t=109707\r\nhttps://bugs.debian.org/cgi-bin/bugreport.cgi?bug=950150", "I've also had this issue (which I think is the same as #459) for a while. I built the current master branch from source, and it seems to be fixed there.  =||= I can reproduce this consistently with the Sway window manager (wlroots-based Wayland compositor) on Arch Linux. However, if I pin the playback, it seems to show the track position normally.\r\n\r\nAnother difference I see between X11 and Wayland is the refresh rate of the tracking indicator when recording. With X, it's very smooth (maybe every 5 milliseconds); yet with Wayland it lags (it refreshes about every 250 milliseconds).\r\n\r\nA workaround I have for now is to run Audacity in XWayland: `GDK_BACKEND=x11 audacity`. To run in native Wayland (which has the track position that doesn't play), I use `GDK_BACKEND=wayland audacity`.\r\n\r\nHere's some applicable package information that's in the Audacity package for Arch Linux:\r\n- wxgtk3-3.0.4-2\r\n- audacity-2.3.3-2 =||= Closing this in favor of #459  =||= "], ["474", "Allow use of wxPowerResource if wxWidgets is 3.1.x", "Carlo Bramini", "carlo-bramini", "04/02/20, 02:23:46 AM", "I got an error when compiling with wxWidgets 3.0.4, because wxPowerResource is undefined.\r\nIt seems to me that wxPowerResource has been introduced with wxWidgets 3.1.x branch:\r\n\r\nhttps://github.com/wxWidgets/wxWidgets/commit/51d715e46d3899f12161f8966db5b9f7f8050bf2#diff-93a9bace734a8065b203ebd2f670cbe8\r\n\r\nso, it would be worth to check if the feature is supported at compile time.\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "NaN"], ["475", "Internat: use _WIN32 instead of _MSC_VER for DebugBreak()", "Carlo Bramini", "carlo-bramini", "04/02/20, 04:44:31 PM", "For compiling with MinGW, it is required that it uses the same code of Visual Studio when `__WXDEBUG__` is defined.", "Carlo, can you try it with __WXMSW__ instead _WIN32?  I'm sort of thinking that's more appropriate. =||= "], ["476", "[CMAKE] Portaudio: x86_plain_converters is MSVC only", "Carlo Bramini", "carlo-bramini", "04/02/20, 02:34:29 PM", "As you can see from the original CMakeLists.txt into the sources of Portaudio, the file pa_x86_plain_converters.c can be compiled only with Visual C++, so it should not be include if there is not the Microsoft Compiler.", "Actually, we never call PaUtil_InitializeX86PlainConverters() so we could probably just remove the file entirely, but I want to look into maybe using the \"optimized\" versions. =||= "], ["477", "[CMAKE] Portaudio: do not activate OSS on Windows", "Carlo Bramini", "carlo-bramini", "04/02/20, 03:04:10 PM", "I had a strange error when building the local portaudio library with MinGW under msys2.\r\nThe error was caused by the file `sys/soundcard.h` that was found somewhere in the path, because `use_pa_oss` is always activated regardless the platform.\r\nSo, in my opinion it is better to not activate this option if the platform is Windows.\r\nAfterall, it is useless in this case.", "Good point.  Can you move this up there as well?\r\n\r\n`if( ${_OPT}use_pa_oss )\r\n   find_path( OSS_INCLUDE NAMES sys/soundcard.h )\r\n   mark_as_advanced( FORCE OSS_INCLUDE )\r\n\r\n   if( OSS_INCLUDE )\r\n      set( OSS_INCLUDE_DIRS ${OSS_INCLUDE} )\r\n   endif()\r\n\r\n   find_library( OSS_LIBRARY NAMES ossaudio )\r\n   mark_as_advanced( FORCE OSS_LIBRARY )\r\n\r\n   if( OSS_LIBRARY )\r\n      set( OSS_LIBRARIES ${OSS_LIBRARY} )\r\n   endif()\r\n\r\n   if( NOT OSS_INCLUDE_DIRS )\r\n      set_cache_value( ${_OPT}use_pa_oss NO )\r\n   endif()\r\nendif()\r\n` =||= Perfect...thanks =||= "], ["478", "Portaudio: bug in OSVERSIONINFO initialization", "Carlo Bramini", "carlo-bramini", "04/02/20, 02:47:10 PM", "I would like to report that there is a bug into the source code of local copy of Portaudio, which prevents the correct compilation when compiling for Windows with GNU C.\r\nI have signaled the bug to Portaudio team and the patch has been committed to their master.\r\nSo, in my opinion it would be worth to sync local copy of Portaudio with their master, by importing that small fix.\r\n\r\nhttps://app.assembla.com/spaces/portaudio/git/commits/799a6834a58592eadc5712cba73b35956dc51579\r", "Upstream fix applied... =||= "], ["481", "Can't build 008d8d8c branch with CMAKE", null, "screwt", "04/06/20, 03:12:09 PM", "**Describe the bug**\r\nCmake is stuck on the generation step.\r\n\r\n**To Reproduce**\r\n```\r\ngit checkout -b 008d8d8c\r\ngit pull origin 008d8d8c\r\ngit status\r\nOn branch 008d8d8c\r\nnothing to commit, working tree clean\r\n```\r\n\r\n**Expected behavior**\r\nSolution file is generated by cmake without errors\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: windows 7\r\n - Audacity branch 008d8d8c\r\n - cmake version 3.17\r\n - cmake \"visual studio 2017 | x64\" target\r\n\r\n**Additional context**\r\n error:\r\n\r\n```\r\nCMake Error at src/CMakeLists.txt:487 (add_executable):\r\n  Cannot find source file:\r\n\r\n    tracks/labeltrack/ui/LabelTrackUI.cpp\r\n```\r\n\r", "At that commit the CMake build was only in the preparation stage.  It was incomplete and not being maintained.  You'll need to use the Visual Studio solution in \"audacity/win\".\r\n\r\nHowever, if you want to try out the v2.4.0 (still being developed), the CMake build process is in good shape. =||= Ok.\r\nIn deed i want to build a plugin.\r\nIt would allow users to easily share the work.\r\nThat s why i'm targetting the last release.\r\n =||= @lllucius how can i checkout v2.4.0.\r\nI tried master, but it seems broken right now :\r\n\r\n\r\n```\r\nError\tC2248\t'TranslatableString::Request': cannot access private enum declared in class 'TranslatableString'\tAudacity\taudacity\\src\\Internat.cpp\t305\t\r\nError\tC2248\t'TranslatableString::NullContextName': cannot access private member declared in class 'TranslatableString'\tAudacity\t\\audacity\\src\\Internat.cpp\t306\t\r\nError\tC2248\t'TranslatableString::Request': cannot access private enum declared in class 'TranslatableString'\tAudacity\taudacity\\src\\Internat.cpp\t307\t\r\nError\tC2248\t'TranslatableString::Request': cannot access private enum declared in class 'TranslatableString'\tAudacity audacity\\src\\Internat.cpp\t308\t\r\n```\r\n =||= "], ["484", "French translation update for 2.4.0", "Olivier Humbert", "trebmuh", "04/14/20, 01:59:18 PM", "French translation update for 2.4.0 . Contains:\r\n- new translations\r\n- \"fuzzy\" fixes\r\n- a few typos\r\n- punctuation consistency\r\n\r\nHTH", "Thanks! =||= "], ["485", "kpbs to kbps", null, "scootergrisen", "04/20/20, 03:19:47 PM", "NaN", "Thanks.  This fix is now in source for 2.4.0 =||= "], ["486", "macOS external headphones problems", "Stefan A", "alfs", "04/11/20, 11:25:44 AM", "**Describe the bug**\r\n3,5 mm headset must be plugged in when Audacity starts. If removed during audacity execution they are not found and audacity must be restarted for the headset to be recognized.\r\n\r\nSame if headset is plugged in after Audacity is started.\r\n\r\n**To Reproduce**\r\n1. Plug in 3,5 mm headset\r\n2. Start audacity, open file, enjoy the audio\r\n3. * Have a co-worker call you. \r\n4. Stop the audio and unplug the headset\r\n5. * Plug the headset in your phone and carry out business\r\n6. Replug headset in computer\r\n7. Press play in Audacity\r\n8. \"Error opening sound device\"\r\n9. Change to internal speakers - OK, but audio disturbes co-coworkers\r\n10. Change to external speakers (=headset)\r\n11. Same error as in (9.)\r\n12. Quit audacity\r\n13. Goto (2.)\r\n\r\n* (not actually required ;) )\r\n\r\n**Expected behavior**\r\nI expect that unplugging and replugging headsets would work seamlessly, or inserting headset after application is started.\r\n\r\n**Screenshots**\r\n\r\n<img width=\"838\" alt=\"Screenshot 2020-04-11 at 00 24 21\" src=\"https://user-images.githubusercontent.com/1869479/79027051-14ed7b80-7b8b-11ea-8428-ca7b7ae1a48a.png\">\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: macOS Catalina 10.15.4\r\n - Audacity 2.3.2", "Audacity scans for audio devices on launch, and again when explicitly requested with \"Transport menu > Rescan Audio Devices\". If you attach or disconnect an external device while Audacity is open, use Transport > Rescan Audio Devices to update the device lists before playing or recording. \r\n\r\nThis is documented in multiple places in the manual, for example: https://manual.audacityteam.org/man/device_toolbar.html\r\n\r\nThank you for your interest in Audacity. If you require further help, we have a support forum here: https://forum.audacityteam.org =||= This worked, thanks. Sorry for not being observant and reading the manual. Just a last comment (which I think belongs to this report rather than the support forum)\r\n\r\n\r\nWould it be possible to do a single automatic rescan of audio devices is there is an error opening the sound device, or could this cause some problem? \r\n\r\nNot sure what happens underneath in macos, but the user exceptation of simply replugging 3,5 mm headsets would not be that the audio device would need rescanning.\r\n\r\nOr at least in the error message, prompt the user to do a transport->rescan devices (to complement the other suggestions?\r\n\r\nThanks,\r\n  Stefan =||= "], ["487", "Fix minor typos", "Yuri Chornoivan", "yurchor", "04/11/20, 09:06:25 AM", "Thanks in advance for reviewing.", "Thank you for all of these! =||= However did you find them all!\r\n =||= "], ["488", "PlaybackEmulatedVolume setting", "Danil Guskov", "guskovd", "04/12/20, 11:00:37 AM", "Now audacity does not save the sound level if the sound is adjusted as emulated. It is very uncomfortable", "Please resubmit this as a single commit (use git squash) and with a better commit comment, so that we can even review it.\r\n\r\nThis is unlikely to go into 2.4.0. the release we are currently working on.  =||= "], ["489", "provide PlaybackEmulatedVolume: option to save emulated playback volume", "Danil Guskov", "guskovd", "05/31/20, 05:19:01 PM", "Now audacity does not save the sound level if the sound is adjusted as emulated. It is very uncomfortable", "Thanks, we've reviewed this and decided we don't want to add this new feature (or not in this manner). =||= "], ["490", "Persistent crackling noise on Pa_Initialize() call", "Danil Guskov", "guskovd", "04/26/20, 08:04:07 AM", "When starting audacity or changing playback to my sound card, I hear a clicking noise.\r\nI managed to find out at what exact moment this is happening. It seems to be a matter of calling Pa_Initialize\r\n\r\nMy sound card: Focusrite Scralett 2i2 USB\r\nmy OS: Archlinux\r\n\r\nAs I understand it, this is a portaudio problem, not an audacity\r\n\r\n--\r\nDid you come across something similar? Do you have any idea how to solve this problem?", "Solved the problem by switching to jack =||= Hi, do you have a link to the portaudio problem?\r\n\r\nI found your issue looking for a reason to the harsh clicking sound when starting Audacity.\r\nI do not experience this issue with other software in Archlinux. This happens with the integrated sound card on a Fujitsu laptop.\r\n\r\nThe crackling sound is so strong that I think it can be damaging for ears or speakers.\r\nI always need to remember to remove my headphones before opening Audacity.\r\n\r\nI could provide a recording if it helps someone. It's not only one click, but many (maybe 8?).\r\nIn my imagination it happens when probing different audio configurations, but I have no idea about the actual reason. =||= "], ["491", "Update sk.po", "jozefM", "jozefM923", "04/14/20, 07:07:14 AM", "Update slovak translation for audacity version 2.4.0\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "@jozefM923 did you close this pull request on purpose or was it a mistake? =||= HI,\nI apologize, it was a mistake, I do not yet work properly with github\njozef\n\n<https://www.avast.com/sig-email?utm_medium=email&utm_source=link&utm_campaign=sig-email&utm_content=webmail>\nBez\nvir\u016f. www.avast.com\n<https://www.avast.com/sig-email?utm_medium=email&utm_source=link&utm_campaign=sig-email&utm_content=webmail>\n<#DAB4FAD8-2DD7-40BB-A1B8-4E2AA1F9FDF2>\n\nut 14. 4. 2020 o 14:14 Olivier Humbert <notifications@github.com>\nnap\u00edsal(a):\n\n> @jozefM923 <https://github.com/jozefM923> did you close this pull request\n> on purpose or was it a mistake?\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/491#issuecomment-613407200>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/APBAVLGBZJ2F3376X2KFWLLRMRHRVANCNFSM4MHP5FFQ>\n> .\n>\n =||= @JamesCrook just pinging you here to ensure that you've taken in this translation. =||= "], ["492", "Update Polish translation from Transifex", "Grzegorz Pruchniakowski", "Gootector", "04/20/20, 07:13:23 PM", "Update Polish translation from Transifex - 100% completed.\r\n\r\nGreetings,\r\nGootector\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "Thanks Gootector.  This is now merged. =||= "], ["493", "Updates Russian po file", "\u0412\u044f\u0447\u0435\u0441\u043b\u0430\u0432 \u0414\u0438\u043a\u043e\u043d\u043e\u0432", "dikonov", "04/20/20, 03:17:54 PM", "Contains many fixes for errors, typos and mis-translations\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r\n\r\nThis same file was posted to the translation mailing list on April 17. as ru24.po-rev2", "Thanks.  However we're using the recent Russian translation from Alexander Kovalenko.  If you want to get your translations/changes in, please coordinate with him.  Telling him that his translation is terrible is not the way.  \r\n\r\nYou need to work with him to produce a translation you are both happy with.  =||= Alexander Kovalenko proved himself to be an incompetent translator (I assume that he has a different professional background) and he refuses to enter any linguistic discussion. \r\n\r\nHis variant is 1) full of grave mistakes, some of which are just stupid. I have cited some of the errors in the forum and they can be found in the diff.  There are phrases distorted to the point of meaning the opposite in translation. 2) He uses jargon words (false friends and unnecessary borrowings from English) that are not comprehensible to normal Russian speakers outside of a small group. The translation supplied with Audacity 2.3.3 is so bad that I cannot use it even though I am able to \"reverse engineer\" the abracadabra because I am a linguist with professional background in translation and software localization.  Another former translator of Audacity Alexander Prokoudine (https://github.com/prokoudine) could be a mediator and confirm that  Alexander Kovalenko's style deviates from normal Russian and software localization standards. \r\n\r\nI started a project to translate Audacity user manual, but it has to be cancelled because it cannot be based on a such inadequate UI. Audacity looks amateurish in Russian. =||= Vyacheslav - Audacity is a collaborative enterprise, so we need people who can work together well.  Yuri showed the 'right' way to deal with poor translation, which is to start with the incontrovertible errors, the misspellings.  Alexander responded to those, and with good grace.  \r\n\r\nWe have competing Slovak translations, competing Basque translations and competing Gaelic translations.  The translators are often passionate about why their translation is 'right'.  Whilst I am linguistically challenged, that is I don't speak Russian, Basque or Gaelic, I know enough to know that some issues are sloppiness (sloppy translator vs conscientious one), regional (North vs South) and tradition/style (franglais vs Fran\u00e7aise).  \r\n\r\nHow do we resolve these?  By making the problem more complex and more human.  We in Audacity need people who can work together, and we need people who are not fly by nights but who are here for the longer term.  I believe your translation is better, based on the errors/typos that Yuri presented.  Nevertheless I chose to use Alexander's rather than 'dethrone' him.  He has been with us for many translation cycles, and that is evidence that he is not a fly-by-night.  For all that I know, so far, your personality could be to snipe at people and then move on - and that's not something I want for Audacity.\r\n\r\nI'd suggest that for 3.0.0, the next version of Audacity, you complete your translation of the one page Tour Guide.  If there are issues caused by poor translation needed in screenshots for that one page document that need correction, raise them in translation email list so they can be discussed and dealt with.\r\n\r\nThat gives me some evidence that you are not a fly-by contributor, and that it is worth working with you and Alexander to get a joint translation that is better than either would do on their own.\r\n\r\n =||= I understand your position, and I must give justice to Alexander Kovalenko, who implemented some of the proposed fixes. The unresolved problem here is the overall style. It is technicaly possible to have two alternatives: Ruglish \"jargon\" version for selected geeks vs a \"neutral\" one for everyone else.\r\n\r\nI got just two replies form Alexander. In the first letter he recommends me to use \"Racetrack\" (approximate reverse translation) instead of audio \"Track\" and \"||PECET\" (this nonsense should mimic the level of abracadabra for an English speaker) instead of \"Preset\". These wer the very words that shocked me in 2.3.3. A regular Russian, who does not know the corresponding English words may not understand it. I objected telling that the words are not technical terms and there are better native Russian equivalents.  The only response to my objections was \"Everyone has a right to an opinion\". I see it as a refusal to discuss and cooperate on Alexander's (and in a way Audacity Team's) side. \r\n\r\nAlexander is still welcome to use any proposed changes, but I would not like to be mentioned as an author of a translation that I deem defective and cannot control or fix.\r\n\r\n_The only proposal I can make here is to select a 3-rd party judge._ =||= By the way, the Russian version of the Tour Guide is complete and available online at  https://wiki.audacityteam.org/wiki/Audacity_Tour_Guide/ru. All UI reference terms are the same as in Audacity 2.3.3 (Alexander's) version except for the \"Track\". This sole change is the-right-thing-to-do linguistically and is completely transparent. =||= 1) About the tour guide.  Great!  I have had a look and am glad it's complete. Using 'Track' instead of 'Racetrack' is 'the right thing' :-) .  You could if you like mention the Tour Guide is complete on the translation email list and thereby (perhaps) encourage others to translate into their languages - which in turn encourages us to do the work of getting a pdf version made and distributed, as it becomes more worthwhile with more languages.\r\n\r\n2) Alexander Prokoudine could submit your translation as a pull request.  We'd almost certainly accept his translation over Alexander Kovalenko's, unless he was rude and ill mannered about it.  He has a longer history with the project than AK.  Once that has been done for three consecutive versions, with AP saying it's your translation, I'd say you are the clear incumbent, and you can submit directly.  Note - I actually prefer posting of translation .po files to translation list to pull requests so would prefer AP to do that to a pull request.  That is just one simple way it could all go.  I think between you you can find a good way, possibly better than that, that gets a good translation and that is seen to be 'fair'.\r\n\r\nThanks for showing some patience and understanding.  I am looking forward to us having better translation. =||= "], ["495", "Audacity crashes at startup (MinGW and OpenBSD)", "Carlo Bramini", "carlo-bramini", "05/13/21, 08:11:49 PM", "I successfully compiled Audacity for Windows by using CMake and MinGW.\r\nUnfortunately, I'm getting a crash after the application started.\r\nAfter running, the program shows the small splash dialog for about one\r\nsecond and then it appears a messagebox with this error:\r\n\r\n```\r\nAudacity:\r\n*** Caught unhandled unknown exception, terminating.\r\n```\r\n\r\nAfter some debugging, I discovered that the program crashes at this\r\nline, inside src/ProjectManager.cpp:\r\n\r\nhttps://github.com/audacity/audacity/blob/866edf88011b97bf4c2d5a6dda49374ccaa602e5/src/ProjectManager.cpp#L536\r\n\r\nThis error has been discussed a bit in the mailing list and it seems to happen also on OpenBSD.\r\nOn Windows, it seems that only GCC is affected, because I also configured for compiling with VisualStudio 2019 and the resulting executable was not crashing.\r", "For completeness, I'm also adding the backtrace generated from OpenBSD and posted by an user to  the mailing list.\r\n[openbsd-backtrace.txt](https://github.com/audacity/audacity/files/4559981/openbsd-backtrace.txt)\r\n =||= Some recent fixes made possible to build for Cygwin and the same issue happens on that environment. =||= Are you able to build a debug version?  Can you get a backtrace? =||= Please excuse my ignorance, how do I build and I do this backtrace? =||= Try adding a build type to the cmake command:\r\n\r\ncmake -DCMAKE_BUILD_TYPE=Debug <any other parameters>\r\n\r\nWhat that's going to do is turn of optimization.  If my guess is right, that will get you past the crash.\r\n\r\nOf course you don't want to run that way, so if it does get you past the crash, remove the build type and try inserting the following line at the very top of src/ProjectWindow.h, src/Project.h and src/menus/ViewMenus.cpp.\r\n\r\n#include <wx/wx.h>\r\n\r\nLet me know how you get along.  \r\n\r\n =||= BTW:  Do you have a full set of patches I could try here.  I'd also like to try recreating this crash.  I think it's very similar to another we're having and this might shed a bit more light on the cause.\r\n =||= Carlo, if your problem is the same as another that we've been working on, the I believe we have an answer for you.  This may or may not fix your problem, but it certainly fixed the other problem and I'm thinking that it should fix yours as well.\r\n\r\nWe tracked down the root cause of the problem to this wxWidgets bug:\r\n\r\nhttps://trac.wxwidgets.org/ticket/15884\r\nwxWidgets/wxWidgets@72aad0d\r\n\r\nI backported their fix to wxWidgets 3.0.5.1 so I could verify that it does indeed correct the issue on Linux.\r\n\r\nweakref.patch.gz\r\n\r\nI've also included the patched weakref.h so it should be easy for you to test as well. =||= > Try adding a build type to the cmake command:\r\n> \r\n> cmake -DCMAKE_BUILD_TYPE=Debug\r\n> \r\nI configured and I compiled the sources in the way you suggested me, but unfortunately nothing changed. =||= Thanks for trying, but did you happen to see my last post about the wxWidgets bug?  i think that may be the problem. =||= > BTW: Do you have a full set of patches I could try here. I'd also like to try recreating this crash. I think it's very similar to another we're having and this might shed a bit more light on the cause.\r\n\r\nI'm compiling Audacity in 4 ways:\r\n1) CYGWIN build, it uses wxGTK and POSIX layer.\r\n2) Native Windows build, it uses CYGWIN for shell and MinGW-w64 cross-compiler.\r\n3) Native Windows build, it uses MSYS2 for shell and MinGW-w64 cross-compiler.\r\n4) Native Windows build, it uses Visual Studio 2019 Community Edition.\r\n\r\nThe builds (1) and (2) use cmake with Unix Makefile generator.\r\nThe (1) requires PR #447, #467, #556 and #557 for compiling correctly everything.\r\nUnfortunately, something strange happens when doing the final link of Audacity, because you will see that an unknown error is printed on the console. In my opinion, this happens because there is a bug in CMake. As you can see here:\r\nhttps://gitlab.kitware.com/cmake/cmake/-/blob/master/Modules/Platform/CYGWIN-GNU.cmake#L44\r\nCMake adds `\"-Wl,--export-all-symbols\"` option when linking, which puts all symbols into the import library, but this is bad, at least for Audacity.\r\nThe Portable Executable format allows to export a maximum number of 65535 symbols.\r\nAudacity overflows this limit and GNU linker returns an error because of this.\r\nUsing all system libraries instead of local ones was not enough for recovering this error, so the only solution is to enter into the build directory, open `src/CMakeFiles/Audacity.dir/link.txt` and remove the above option. After that, you can launch `make` again and the compilation will complete successfully.\r\n\r\nThe builds (2) and (3) requires few, small fixes to lv2, portmixer and portsmf. The native builds for Windows also raises some strange messages when building the resource file. I have identified the problem and I collected the fixes in this branch:\r\nhttps://github.com/carlo-bramini/audacity/tree/rsrc_fixes_1\r\nBut I'm having some troubles to make a PR of this because GITHUB gave to me this message:\r\n> We\u2019ve detected the file encoding as ISO-8859-1. When you commit changes we will transcode it to UTF-8.\r\n\r\nAs you can see, in my branch some strings of win/audacity.rc were corrupted after the commit and I do not understand very well the reasons. The build (3) uses MSYS2 as shell and \"MSYS Makefiles\" as generator and, when linking, the problem is the opposite of the one I'm getting with \"Unix Makefiles\" under Cygwin. In other words, `set( CMAKE_ENABLE_EXPORTS ON )` does not seem to be respected by CMake because import library `libaudacity.dll.a` is not created. As result, the executable is created, but the modules fail to build since the library is missing. Here the only solution that I have found is to create `audacity.def` file with pexports or other similar tool, create `libaudacity.dll.a` with `dlltool` and then launch again `make` to complete the build.\r\n\r\nI hope that you will find this useful.\r\n\r\nEDIT: When you want to create the build (3), I forgot to write that you can also enter into the build directory, open the file `src/CMakeFiles/Audacity.dir/build.make` and add this option to the line that creates Audacity.exe:\r\n`-Wl,--out-implib,../lib/audacity/libAudacity.dll.a`\r\nAfter that, simply launch `make` to complete the build process, without doing other manual actions with external tools. =||= > Are you able to build a debug version? Can you get a backtrace?\r\n\r\nI have posted a backtrace on the mailing list:\r\nhttps://sourceforge.net/p/audacity/mailman/message/36969340/\r\n\r\nThe exception is thrown here:\r\nhttps://github.com/audacity/audacity/blob/ce07da936cf956c2d2226c356d287e32f4323aad/src/Project.cpp#L158\r\n\r\nIt looks like `project.GetFrame()` is called before `SetFrame()` has been called.\r\n\r\nInterestingly, reversing the order of this loop fixes the problem for me:\r\nhttps://github.com/audacity/audacity/blob/ce07da936cf956c2d2226c356d287e32f4323aad/src/ClientData.h#L401\r\n\r\nI hope this helps with finding the real problem..\r\n\r\n =||= Are you using the v3.0.x series of wxWidgets?  If so, then this is the root cause:\r\n\r\nhttps://trac.wxwidgets.org/ticket/15884\r\n\r\nIf not, then something else is amiss. =||= I've tried wxWidgets 3.0.4 and 3.1.3, .. so I don't think it is a wxWidgets issue. \r\n =||= It is not a wxWidgets issue.\n\nI fixed a similar thing at commit a085057b6616d99c6b19e48b5905e737dd636d7d\n\nBut from your stack trace, I see other work is needed.\n\nPRL\n\n\nOn Wed, Jun 10, 2020 at 1:39 PM Raphael Graf <notifications@github.com>\nwrote:\n\n> I've tried wxWidgets 3.0.4 and 3.1.3, .. so I don't think it is a wxWidget\n> issue.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/issues/495#issuecomment-642157480>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ACZBGYKLV7YDYLUKW5BJPBDRV7AM3ANCNFSM4MLL3HEQ>\n> .\n>\n =||= To explain more, and why I don't think it's related to wxWidgets issues.\n\nThe ClientData thing stores a table of factory functions and invokes all of\nthem in BuildAll().  There is more than one instantiation of the class\ntemplate ClientData.  The reason this exists is to break compilation and\nlinkage dependencies, so that the class AudacityProject can be low in the\ndependency graph but the various cooperating parts of the project can be\nhigher-level.\n\nThe several cooperating parts insert factory functions in the static table\nof factories traversed by BuildAll(), and that insertion happens at the\ntime of initialization of file-scope static objects.\n\nBut as you may know, in C++ the relative ordering of initialization of\nfile-scope static objects in different compilation units is not specified.\nI think it should be predictable with a given platform and build system,\nbut may vary between build systems.\n\nSo the sequence of the factories in ClientData may vary, and there may have\nbeen a hidden ordering dependency among them, which happened not be\nviolated on any other platform yet that we regularly build, but you managed\nto build in a way violating that ordering.\n\nThat's the sort of problem I discovered and fixed at\na085057b6616d99c6b19e48b5905e737dd636d7d, but there may be other\ndependencies.\n\nI mean to find and fix all such dependencies now.  There are 30 factories\nin the relevant table, and I only need to test 30 cyclic permutations of\nthe table (not all 30-factorial!) to make sure I test all pairs of\nfunctions each way.\n\nPRL\n\n\nOn Thu, Jun 11, 2020 at 6:43 PM Paul Licameli <paul.licameli@gmail.com>\nwrote:\n\n> It is not a wxWidgets issue.\n>\n> I fixed a similar thing at commit a085057b6616d99c6b19e48b5905e737dd636d7d\n>\n> But from your stack trace, I see other work is needed.\n>\n> PRL\n>\n>\n> On Wed, Jun 10, 2020 at 1:39 PM Raphael Graf <notifications@github.com>\n> wrote:\n>\n>> I've tried wxWidgets 3.0.4 and 3.1.3, .. so I don't think it is a\n>> wxWidget issue.\n>>\n>> \u2014\n>> You are receiving this because you are subscribed to this thread.\n>> Reply to this email directly, view it on GitHub\n>> <https://github.com/audacity/audacity/issues/495#issuecomment-642157480>,\n>> or unsubscribe\n>> <https://github.com/notifications/unsubscribe-auth/ACZBGYKLV7YDYLUKW5BJPBDRV7AM3ANCNFSM4MLL3HEQ>\n>> .\n>>\n>\n =||= Carlo, try the simple fix at commit 4ac96376bb6f5832e735e08314e930e9d8ae926d\n\nPaul\n\n\nOn Thu, Jun 11, 2020 at 8:16 PM Paul Licameli <paul.licameli@gmail.com>\nwrote:\n\n> To explain more, and why I don't think it's related to wxWidgets issues.\n>\n> The ClientData thing stores a table of factory functions and invokes all\n> of them in BuildAll().  There is more than one instantiation of the class\n> template ClientData.  The reason this exists is to break compilation and\n> linkage dependencies, so that the class AudacityProject can be low in the\n> dependency graph but the various cooperating parts of the project can be\n> higher-level.\n>\n> The several cooperating parts insert factory functions in the static table\n> of factories traversed by BuildAll(), and that insertion happens at the\n> time of initialization of file-scope static objects.\n>\n> But as you may know, in C++ the relative ordering of initialization of\n> file-scope static objects in different compilation units is not specified.\n> I think it should be predictable with a given platform and build system,\n> but may vary between build systems.\n>\n> So the sequence of the factories in ClientData may vary, and there may\n> have been a hidden ordering dependency among them, which happened not be\n> violated on any other platform yet that we regularly build, but you managed\n> to build in a way violating that ordering.\n>\n> That's the sort of problem I discovered and fixed at\n> a085057b6616d99c6b19e48b5905e737dd636d7d, but there may be other\n> dependencies.\n>\n> I mean to find and fix all such dependencies now.  There are 30 factories\n> in the relevant table, and I only need to test 30 cyclic permutations of\n> the table (not all 30-factorial!) to make sure I test all pairs of\n> functions each way.\n>\n> PRL\n>\n>\n> On Thu, Jun 11, 2020 at 6:43 PM Paul Licameli <paul.licameli@gmail.com>\n> wrote:\n>\n>> It is not a wxWidgets issue.\n>>\n>> I fixed a similar thing at commit a085057b6616d99c6b19e48b5905e737dd636d7d\n>>\n>> But from your stack trace, I see other work is needed.\n>>\n>> PRL\n>>\n>>\n>> On Wed, Jun 10, 2020 at 1:39 PM Raphael Graf <notifications@github.com>\n>> wrote:\n>>\n>>> I've tried wxWidgets 3.0.4 and 3.1.3, .. so I don't think it is a\n>>> wxWidget issue.\n>>>\n>>> \u2014\n>>> You are receiving this because you are subscribed to this thread.\n>>> Reply to this email directly, view it on GitHub\n>>> <https://github.com/audacity/audacity/issues/495#issuecomment-642157480>,\n>>> or unsubscribe\n>>> <https://github.com/notifications/unsubscribe-auth/ACZBGYKLV7YDYLUKW5BJPBDRV7AM3ANCNFSM4MLL3HEQ>\n>>> .\n>>>\n>>\n =||= I have now completed that testing I described, of 30 cyclic permutations of\nthe sequence of invocations of the factories, on one of the platforms\n(Mac), so I'm satisfied there are not other such surprises waiting with\nother variations of the build system.\n\nPRL\n\n\nOn Thu, Jun 11, 2020 at 9:33 PM Paul Licameli <paul.licameli@gmail.com>\nwrote:\n\n> Carlo, try the simple fix at\n> commit 4ac96376bb6f5832e735e08314e930e9d8ae926d\n>\n> Paul\n>\n>\n> On Thu, Jun 11, 2020 at 8:16 PM Paul Licameli <paul.licameli@gmail.com>\n> wrote:\n>\n>> To explain more, and why I don't think it's related to wxWidgets issues.\n>>\n>> The ClientData thing stores a table of factory functions and invokes all\n>> of them in BuildAll().  There is more than one instantiation of the class\n>> template ClientData.  The reason this exists is to break compilation and\n>> linkage dependencies, so that the class AudacityProject can be low in the\n>> dependency graph but the various cooperating parts of the project can be\n>> higher-level.\n>>\n>> The several cooperating parts insert factory functions in the static\n>> table of factories traversed by BuildAll(), and that insertion happens at\n>> the time of initialization of file-scope static objects.\n>>\n>> But as you may know, in C++ the relative ordering of initialization of\n>> file-scope static objects in different compilation units is not specified.\n>> I think it should be predictable with a given platform and build system,\n>> but may vary between build systems.\n>>\n>> So the sequence of the factories in ClientData may vary, and there may\n>> have been a hidden ordering dependency among them, which happened not be\n>> violated on any other platform yet that we regularly build, but you managed\n>> to build in a way violating that ordering.\n>>\n>> That's the sort of problem I discovered and fixed at\n>> a085057b6616d99c6b19e48b5905e737dd636d7d, but there may be other\n>> dependencies.\n>>\n>> I mean to find and fix all such dependencies now.  There are 30 factories\n>> in the relevant table, and I only need to test 30 cyclic permutations of\n>> the table (not all 30-factorial!) to make sure I test all pairs of\n>> functions each way.\n>>\n>> PRL\n>>\n>>\n>> On Thu, Jun 11, 2020 at 6:43 PM Paul Licameli <paul.licameli@gmail.com>\n>> wrote:\n>>\n>>> It is not a wxWidgets issue.\n>>>\n>>> I fixed a similar thing at\n>>> commit a085057b6616d99c6b19e48b5905e737dd636d7d\n>>>\n>>> But from your stack trace, I see other work is needed.\n>>>\n>>> PRL\n>>>\n>>>\n>>> On Wed, Jun 10, 2020 at 1:39 PM Raphael Graf <notifications@github.com>\n>>> wrote:\n>>>\n>>>> I've tried wxWidgets 3.0.4 and 3.1.3, .. so I don't think it is a\n>>>> wxWidget issue.\n>>>>\n>>>> \u2014\n>>>> You are receiving this because you are subscribed to this thread.\n>>>> Reply to this email directly, view it on GitHub\n>>>> <https://github.com/audacity/audacity/issues/495#issuecomment-642157480>,\n>>>> or unsubscribe\n>>>> <https://github.com/notifications/unsubscribe-auth/ACZBGYKLV7YDYLUKW5BJPBDRV7AM3ANCNFSM4MLL3HEQ>\n>>>> .\n>>>>\n>>>\n =||= https://github.com/audacity/audacity/commit/4ac96376bb6f5832e735e08314e930e9d8ae926d fixes the issue for me on OpenBSD ;) =||= > \r\n> Carlo, try the simple fix at commit [4ac9637](https://github.com/audacity/audacity/commit/4ac96376bb6f5832e735e08314e930e9d8ae926d)\r\n\r\nIT WORKS!\r\nThank you very much!\r\n\r\nBTW, me too, I have a little news for you: Audacity, if compiled with MinGW, works again on Windows XP and perhaps also on NT. And this is the target that I wanted to get ;)\r\n\r\n![Windows-XP](https://user-images.githubusercontent.com/30959007/84536946-28ce6e80-acef-11ea-8097-51e3300a4777.png)\r\n =||= Resolve fixed\r\n> IT WORKS! =||= "], ["496", "Bug1119 residuals...", "Paul Licameli", "Paul-Licameli", "04/21/20, 06:21:06 PM", "... Fix assertion violations when language isn't English\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "NaN"], ["497", "AUDACITY_PATH env variable doesn't work", null, "rempas", "04/22/20, 03:40:30 PM", "**Describe the bug**\r\nI'm setting the AUDACITY_PATH env variable but when I open audacity it still generates a new config directory in ~ and doesn't reads the env variable.\r\n\r\nI tried both:\r\nexport AUDACITY_PATH=\"$HOME/.config\"\r\nexport AUDACITY_PATH=\"$HOME/.config/.audacity-data\"\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Set AUDACITY_PATH env variable\r\n2. Open Audacity\r\n\r\n**Expected behavior**\r\nTo not generate new config files and read the path I'm setting up.\r\n\r\n**Screenshots**\r\nI think you don't need a screenshot in this case...\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Manjaro Linux\r\n - Version: v2.3.3\r\n - (if relevant) Sound Device: (Probably) ALSA\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r", "As far as I'm aware, the AUDACITY_PATH environmental variable has not been used in many years.\r\nIt is still included in Audacity's search path, as can be seen from the Nyquist command:\r\n`(print (get '*system-dir* 'plug-in))`\r\nbut as far as I'm aware, it is no longer used. =||= Oh ok! Thanks a lot for your answer! =||= "], ["498", "Issue #483: Add Keywords to .desktop file", "Derek Smith", "dcsmith1212", "04/28/20, 09:36:16 AM", "Add Keywords entry to .desktop file to improve searches for the software, and add GenericName, Comment, and Keyword fields to .po generation so translation occurs there instead.", "This is being discussed on audacity-devel now.  I've closed (rejected) the pull request as it removes translations from a file with no guarantee they will be replaced. =||= "], ["500", "Updated ga.po", "Sean\u00e1n \u00d3 Coist\u00edn", "seananocoistin", "04/25/20, 09:28:09 AM", "I have updated the Irish translation of Audacity and it now stands at being 41% translated. Most of the interface is translated which is the most important thing.\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "Thank you for this.  It has just squeaked in for Audacity 2.4.0.\r\nPlease join the audacity translators email list, as then you will know when we are doing updates and how translation is going generally. =||= When will Audacity 2.4.0 be released? I saw mention of it on here earlier but I have not seen any more information than that. How can I join the Audacity translators' e-mail list? =||= The link to the translator's email list (which is at sourceforge) is here:\r\nhttps://www.audacityteam.org/community/translators/\r\n\r\nIf you see anything no longer true or out of date on that page, let me know so I can fix it.\r\nCurrent plans for Audacity 2.4.0 release are May 11th.  We need to test the release candidates.\r\n\r\nRelease plans/dates are tracked here: https://wiki.audacityteam.org/wiki/Next_Release Usually the dates slip relative to the originally planned ones.  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n =||= "], ["502", "i18n: zh_TW: update translations for 2.4.0", "pan93412", "pan93412", "05/25/20, 09:14:11 PM", "# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "@JamesCrook  =||= @pan93412 2.4.0 is currently being tested, so this will be considered for the release after. =||= Committed.  Thanks for your work on this.  This will be in 2.4.2.\r\nhttps://github.com/audacity/audacity/commit/bdb5c78f585d1063758737c1b54d4425e3f60796\r\nThere will be some additional strings to translate for 2.4.2. which we hope will be available on 2nd Jun.\r\nthe audacity translators email list will get an email about it when we do. =||= "], ["504", "Bug2397: Reverb effect applied to multiple mono tracks", "Paul Licameli", "Paul-Licameli", "04/28/20, 04:24:15 PM", "# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "NaN"], ["505", "Audacity on MS Store", null, "Saijin-Naib", "05/04/20, 12:19:35 PM", "**Is your feature request related to a problem? Please describe.**\r\nNot really, though the MS Store version does alleviate some potential pain-points (auto-update, non-admin, vetted/tested distribution source).\r\n\r\n**Describe the solution you'd like**\r\nA possible paid repackage of the Audacity Windows distribution through the MS Store, with the ability to use FFMPEG and other plugins.\r\n\r\n**Describe alternatives you've considered**\r\nUsing the currently-provided binary distributions in both install and portable variants.\r\n\r\n**Additional context**\r\nI like to think of this as a way for you to get donations, and for users to get the convenience of store-distributed apps. For instance, I make use of Paint.NET and LibreOffice Vanilla in this way. I would certainly make use of Audacity this way.", "In a way, I agree with you. But I think it'll have many shortcomings by uploading it as an app to MS Store. Speaking of donations, it'll be a good idea to open an [OpenCollective](https://opencollective.com/) or [Patreon](https://patreon.com) account to engage users to donate in some way, not to force them. =||= What possible shortcomings have you concerned?\r\n\r\nStore distribution has come a long way since W8/early W10...\r\n =||= Here is a shortlist\r\n-Most of the time windows store apps need some kind of troubleshooting\r\n-They generate too much cache just from being an app\r\n-Apps remain in your app library without any possibility to remove it (a serious issue for me because of many bloatware was installed on my computer and I can't get rid of it from my account )\r\n-At any time(and believe me that time will come) there can be a major error in specific user app\r\n-Updating/installing of the apps takes too long or doesn't complete at all(I have Windows 10 Home, i5-8250U, 8GB RAM, Nvidia GeForce MX150, 50Mbp/s internet) =||= Most of those are honestly not platform issues due to the Store, but rather sound like issues with your setup.\r\n\r\nFor reference, I work for a major international retailer's tech support and I've encountered a few of those problems occasionally, but there was always an underlying issue to cause them unrelated to the Store/App itself.\r\n\r\n\r\n> -Most of the time windows store apps need some kind of troubleshooting\r\n\r\nI've never experienced this and I make heavy use of Store provided apps, from LibreOffice, Paint.NET, the entire Affinity Suite, Arduino, Slack, Python, to full Linux Distros. It just isn't a common problem \ud83e\udd37\u200d\u2642\ufe0f\r\n\r\n> -They generate too much cache just from being an app\r\n\r\nI'm not sure what you mean by this, but with MSIX, you can take a mostly unmodified MSI installer and repackage it for the Store. It doesn't \"cache\" any differently.\r\n\r\n> -Apps remain in your app library without any possibility to remove it (a serious issue for me because of many bloatware was installed on my computer and I can't get rid of it from my account )\r\n\r\nYou've been able to hide them for a few years now. If you contact Support, the can remove licenses, though they don't like to.\r\n\r\n> -At any time(and believe me that time will come) there can be a major error in specific user app\r\n\r\nNever had an issue, even on my personal machine that has been on Insider Fast Windows builds for the past 4.5 years \ud83e\udd37\u200d\u2642\ufe0f That isn't a platform issue.\r\n\r\n> -Updating/installing of the apps takes too long or doesn't complete at all(I have Windows 10 Home, i5-8250U, 8GB RAM, Nvidia GeForce MX150, 50Mbp/s internet)\r\n\r\nIntermittent issue, sometimes caused by Service issues on MS' end, but most often an underlying issue with BITS or the WU service. Again, not a platform issue/limitation.\r\n![image](https://user-images.githubusercontent.com/19295950/80916853-50faa300-8d29-11ea-9788-2f7c52286856.png)\r\nIf you want downloads to speed up, make use of Delivery Optimization. Makes a HUGE difference, especially if you have more than one machine on your local network. =||= In any way we **should count** the **minority** too, because maybe I'm not the only person who has this problem. =||= > In any way we should count the minority too, because maybe I'm not the only person who has this problem.\r\n\r\nThen continue to use the non-Store builds provided as MSI/EXE and Zip, no? This is an additional option for those who would prefer it through the Store, as well as a way to make a donation, as well. =||= The latest release version of Audacity is always available, free of charge, via the Audacity website: https://www.audacityteam.org/download/\r\nFor notification of new releases, follow us on facebook (https://www.facebook.com/AudacityTeamOfficial/) or twitter (https://twitter.com/getaudacity), or click \"Help menu > Check for updates\" in the Audacity app.\r\n\r\nDonations are gratefully accepted through the \"Donations\" page of the website. Currently we can only accept donations via PayPal. A donation is NOT required to use the software, but donations help us to cover costs.\r\n\r\nAudacity probably will eventually be available at minimal charge via the MS Store, but please note that at the present time there is no authorised distribution other than the downloads from FossHub (the download links on the Audacity website).\r\n\r\nWe strongly recommend NOT obtaining Audacity from unauthorised sites as we cannot guarantee that they are unmodified, genuine versions. There is at least one website that we know of (a \".de\" domain) that offers Audacity for free download, and also distributes malware. For more information about safely downloading Audacity, see: https://www.audacityteam.org/download/online-safety-when-downloading/\r\n\r\nAudacity will probably never be available via Apple Store due to Apple Store being incompatible with our GPL open source license. =||= @Saijin-Naib\r\n So you are telling to force people to donate, not to give them a good reason to donate!? =||= No-one is \"forced\" to donate. Donations are purely voluntary. We intend to keep Audacity available for free download regardless of whether we eventually put it into MS store.\r\n\r\nPlease do not use GitHub for trolling or flaming. Save that for your social media.\r\n\r\nI am closing this issue as my previous post covers Audacity's current position. =||= > \r\n> \r\n> No-one is \"forced\" to donate. Donations are purely voluntary. We intend to keep Audacity available for free download regardless of whether we eventually put it into MS store.\r\n> \r\n> Please do not use GitHub for trolling or flaming. Save that for your social media.\r\n> \r\n> I am closing this issue as my previous post covers Audacity's current position.\r\n\r\nAgree :) =||= > Audacity probably will eventually be available at minimal charge via the MS Store, but please note that at the present time there is no authorised distribution other than the downloads from FossHub (the download links on the Audacity website).\r\n\r\nLook forward to seeing it there, and recommending it to family, friends, and clients when this is so. Thanks for all you and your team have done over the years. =||= It doesn't need to be in the Microsoft Store, but at least consider using an MSIX installer rather an MSI one which reduces the change of machine rot. =||= "], ["506", "Bug 421 - Crash importing malformed MP3 file using libmad", "Leland Lucius", "lllucius", "05/25/20, 06:19:11 AM", "In addition to detecting bogus MP3s, it also detects a LAME\r\ntag to provide delay and padding correction (no more silence\r\nat beginning and end).\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "NaN"], ["507", "ASIO now seems to be GPL-compatible!", "Chris Et", "ChrisEt", "05/13/21, 07:59:14 PM", "Hi guys,\r\n\r\nI think the Steinberg license now allows to include the ASIO support in GPL projects! I also found other projects (e.g. https://github.com/monocasual/giada) already doing that!\r\n\r\nIf you look at the license agreement contained in https://www.steinberg.net/asiosdk, there is no section anymore that prohibits the inclusion of ASIO SDK code in GPL projects!\r\n\r\nAll that would be required is that someone from Audacity signs the agreement and sends it back to info [at] steinberg.de.\r\n\r\nWhat do you guys think?", "I'm not convinced.\nSection 2.3 from https://www.steinberg.net/asiosdk :\n\n\"The Licensee will not sell, license, give-away and/or distribute the\nLicensed Software\nDeveloper Kit or parts of it for the use as software developer kit in any\nway, for\nexample, integrated in any framework application, on any medium, including\nthe\nInternet, to any other person, including sub-licensors of the Licensee or\ncompanies\nwhere the Licensee has any involvement.\"\n\nSteve\n\nOn Fri, 1 May 2020 at 19:12, ChrisEt <notifications@github.com> wrote:\n\n> Hi guys,\n>\n> I think the Steinberg license now allows to include the ASIO support in\n> GPL projects! I also found other projects (e.g.\n> https://github.com/monocasual/giada) already doing that!\n>\n> If you look at the license agreement contained in\n> https://www.steinberg.net/asiosdk, there is no section anymore that\n> prohibits the inclusion of ASIO SDK code in GPL projects!\n>\n> All that would be required is that someone from Audacity signs the\n> agreement and sends it back to info [at] steinberg.de.\n>\n> What do you guys think?\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/issues/507>, or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ACZD2SNF5J3EE67AMICCZDLRPMGIHANCNFSM4MXIR7VQ>\n> .\n>\n =||= \"for the use as software developer kit\" and \"integrated in any framework application\" - this could be interpreted both ways.\r\n\r\nI volunteer to correspond with Steinberg to get a written statement, if you guys agree? =||= Closed.  Request involves packaging license incompatible software. =||= "], ["509", "UI: When pressing the record button it will slide the scroll down to the bottm in a multi track project", "Ovidiu Constantinescu", "ovidiucs", "05/05/20, 07:14:40 PM", "**Describe the bug**\r\nWhen pressing the record button (or hitting R) on a multi track project the vertical scrollbar will go to the last track, at the bottom of the window.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Make any project such that there are more tracks than the height of the window. Do not rearrange tracks.\r\n2. Scroll up and select a track from the first ones created (let's say track 2).\r\n3. Click on \"Record\".\r\n4. You will notice that this action starts recording and takes you to the last track at the bottom of the screen.\r\n\r\n**Expected behavior**\r\nIf a track is selected it should keep focus while recording on that track. \r\nIf there is a 50 track project then, every time a user is recording something he will be taken to the bottom of the window. I could not find any option which deals with this behavior in order to disable it.\r\n\r\n**Screenshots**\r\nPlease see this [video](https://www.reddit.com/link/fwovla/video/zfchlrj2nfr41/player?utm_source=reddit&utm_medium=usertext&utm_name=audacity&utm_content=t3_fwpyru) of the issue taken form a reddit topic, but which shows this odd behavior.\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: I'm on Arch. The video shown above looks to be on Windows. So I will assume ANY os.\r\n - Version 2.3.3.\r\n\r\n**Additional context**\r\nPlayback maintains the vertical scrollbar's position in place. It is only when recording that the vertical scrollbar position is placed at the bottom. According to this [reddit](https://www.reddit.com/r/audacity/comments/fwpyru/how_to_get_audacity_to_stop_auto_sliding_to_bottom/) post this seems to be expected behavior, however when doing 50 tracks it does not do well as you constantly have to go.", "Thank you for reporting this issue. I agree that this is a bug and shall transfer it to our bug tracker.\r\n\r\nUpdate: Logged as bug 2422. =||= This issue has now been closed \"resolved - fixed\" on the Audacity bug tracker.\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2422 =||= "], ["510", "[WIN32] Fix CONST redefinition error", "Carlo Bramini", "carlo-bramini", "05/25/20, 06:18:43 AM", "On Windows, the `CONST` macro is already defined by system include files.\r\nMSVC tolerates that, but this is fatal for GCC.\r\nThe `CONST` macro is unused in this source anyways, so it would be worth to remove it.\r", "NaN"], ["513", "Allow actions to use branches other than master", "Leland Lucius", "lllucius", "05/19/20, 09:32:14 AM", "# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "NaN"], ["514", "Audacity hangs on start in Ubuntu 20.04 due to missing libgail-gnome.so", "Fattire", "fat-tire", "05/13/21, 08:05:58 PM", "Started Audacity 2.3.3 in Ubuntu 20.04 (and before that in 19.04),and it it hangs.\r\n\r\nWhy is this?  it took me FOREVER to figure out.  The message `(Audacity:202976): Gnome-WARNING **: 00:29:28.351: Accessibility: failed to find module 'libgail-gnome' which is needed to make this application accessible` was a clue something was wrong here.  \r\n\r\nThen, in strace:\r\n\r\n```\r\n...\r\naccess(\"/usr/lib/x86_64-linux-gnu/gtk-2.0/modules/libgail-gnome.so\", F_OK) = -1 ENOENT (No such file or directory)\r\naccess(\"/usr/lib/x86_64-linux-gnu/../gtk-2.0/modules/libgail-gnome.so\", F_OK) = -1 ENOENT (No such file or directory)\r\naccess(\"/usr/lib/x86_64-linux-gnu/libgail-gnome.so\", F_OK) = -1 ENOENT (No such file or directory)\r\naccess(\"/usr/lib/x86_64-linux-gnu/../libgail-gnome.so\", F_OK) = -1 ENOENT (No such file or directory)\r\nioctl(2, TCGETS, {B38400 opost isig icanon echo ...}) = 0\r\n...\r\n```\r\nEventually several lines down was a `futex(0x7fc2973e8f38, FUTEX_WAIT_PRIVATE, 339, NULL)` and Audacity just hung/froze.\r\n\r\n`libgail-gnome` is not a package that is available for ubuntu any more, although `libgail-common` is, and I do have it installed.  But that wasn't enough to make Audacity happy.\r\n\r\nSearching for this issue lead me to [this very old thread](https://forum.audacityteam.org/viewtopic.php?f=48&t=90537&start=10), which discussed the problem:\r\n\r\n> monnerat wrote:\r\n> I found the solution:\r\n> Gnome2 accessibility is enabled and this requires libgail-gnome which is not available anymore :(\r\n> This occurs even if audacity is compiled with wxGTK3.\r\n> \r\n> To disable gnome2 accessibility, use the command:\r\n> \r\n> gconftool-2 --set /desktop/gnome/interface/accessibility --type bool false\r\n>\r\n> After that, audacity starts properly again\r\n\r\nFor what it's worth, I do have the package `libgail-common` installed, which provides these in `/usr/lib`:\r\n```\r\ni386-linux-gnu/libgailutil.so.18.0.1\r\ni386-linux-gnu/libgailutil.so.18\r\ni386-linux-gnu/gtk-2.0/modules/libgail.so\r\nx86_64-linux-gnu/libgailutil.so.18.0.1\r\nx86_64-linux-gnu/libgailutil.so.18\r\nx86_64-linux-gnu/gtk-2.0/modules/libgail.so\r\nx86_64-linux-gnu/libgailutil-3.so.0\r\nx86_64-linux-gnu/libgailutil-3.so.0.0.0\r\n```\r\nMaybe I could have symlinked them to one of the files Audacity was looking for, but no need, that `gconftool-2` command fixed the issue immediately.\r\n\r\nThe solution is probably to check for the `libgailutil.so` or `libgail.so`version (assuming they work) or fail more gracefully if `libgail-gnome.so` can't be found and is actually needed.\r\n\r\nThanks!  Love audacity- been using it forever.\r\n\r\nft", "(BTW this may not be an Audacity issue per se but wanted to put it here JIC) =||= Closing:\r\n\r\n> (BTW this may not be an Audacity issue per se but wanted to put it here JIC) =||= "], ["515", "Fix CMake build of modules", "Leland Lucius", "lllucius", "05/19/20, 09:32:48 AM", "They must not be linked against any libraries as build time.  The\r\nsymbols will be resovled at runtime.\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "Have you considered cmake's build-ins [ExternalProject](https://cmake.org/cmake/help/latest/module/ExternalProject.html) / [FetchContent](https://cmake.org/cmake/help/latest/module/FetchContent.html) for vendored dependencies? =||= Yepper, I did.  But, doing it the way we are now allows us to control the build requirements more carefully.  And some of the dependencies do not have a suitable Windows build.\r\n\r\nIt does seem to cause extra work for us doing the way we have, but the libs don't change that often and never very much. =||= > And some of the dependencies do not have a suitable Windows build.\r\n\r\nIf they run on Windows, they should compile there too, no?\r\n\r\n =||= But what extra \"tools\" are required on the users system to build them when using the dependency provided build process?  Right now, only git, cmake, and the chosen generator are required. \r\n\r\n> \r\n> \r\n> > And some of the dependencies do not have a suitable Windows build.\r\n> \r\n> If they run on Windows, they should compile there too, no?\r\nBut what extra \"tools\" are required on the users system to build them when using the dependency provided build process?  Right now, only git, cmake, and the chosen generator are required.\r\n\r\nOne of the goals for us we to completely jettison the \"AutoTools\" headaches we've had over the years and if we were to use something like ExternalProject, we'd still be open to those headaches as not all of the external dependencies provide a CMake project.\r\n =||= > One of the goals for us we to completely jettison the \"AutoTools\" headaches we've had over the years and if we were to use something like ExternalProject, we'd still be open to those headaches as not all of the external dependencies provide a CMake project.\r\n\r\nWhy not patch in the cmake support in those cases, like e.g. Krita does:\r\n\r\nhttps://invent.kde.org/kde/krita/-/tree/master/3rdparty/ext_libraw =||= > \r\n> \r\n> > One of the goals for us we to completely jettison the \"AutoTools\" headaches we've had over the years and if we were to use something like ExternalProject, we'd still be open to those headaches as not all of the external dependencies provide a CMake project.\r\n> \r\n> Why not patch in the cmake support in those cases, like e.g. Krita does:\r\n> \r\n> https://invent.kde.org/kde/krita/-/tree/master/3rdparty/ext_libraw\r\n\r\nIsn't that \"sort of\" what we are doing now (in a way)?  :-)\r\n\r\n =||= > Isn't that \"sort of\" what we are doing now (in a way)? :-)\r\n\r\nSure, but using cmake's build-ins would make you a good open source citizen, because it would make it more easily reusable by others. :smiley: =||= > \r\n> \r\n> > Isn't that \"sort of\" what we are doing now (in a way)? :-)\r\n> \r\n> Sure, but using cmake's build-ins would make you a good open source citizen, because it would make it more easily reusable by others. \ud83d\ude03\r\n\r\nHonestly (and this is my opinion, not the team's), if we had time to contribute to other projects, then we're doing something wrong as we have a ton of feature requests that we should be working on.  And, it takes extra time to put together something that another project might even consider accepting...if they accept it at all.  And if we don't have 100% acceptance from all of the other projects, then we wind up with a mishmash.\r\n\r\nAnd I think we've done pretty well on the \"good open source citizen\" front. =||= "], ["516", "wxWidgets 3.1.3 migration", "Leland Lucius", "lllucius", "05/23/20, 07:33:59 PM", "This will be where wx313 changes will accumulate until merged.  More changes to come...\r", "NaN"], ["517", "Consider removing non-release tags", "David Runge", "dvzrv", "05/24/20, 09:11:46 PM", "**Describe the bug**\r\nAs a downstream maintainer I would like to be able to track projects (e.g. git repositories) and their releases with helper tools such as [nvchecker](https://github.com/lilydjwg/nvchecker).\r\nFor less flexible tools it could get pretty tedious to deal with the current situation (many `build-*` and `x64-*` based tags, that order before the `Audacity-*` tags).\r\n\r\n**To Reproduce**\r\n\r\n```\r\n$ git ls-remote -t git://github.com/audacity/audacity\r\n\r\n8019be0b3f9282845f3c528de69b0f6afab8e6b9\trefs/tags/Audacity-1.3.14\r\n58674b2683874b70932071a60a822f6c118a3f6d\trefs/tags/Audacity-2.0.0\r\n6d9489c4758f95ab9bf0306d4adb0e91022235a7\trefs/tags/Audacity-2.0.6\r\n5d3e9ade95be3494eb860c014d7c799aded35464\trefs/tags/Audacity-2.1.0\r\n7d3e4a16d6a859c472eb671561f8088e22cf295f\trefs/tags/Audacity-2.1.1\r\n53b8fd534e2051a992f5a3db35feb02b8e516fa0\trefs/tags/Audacity-2.1.2\r\n2fef7f34b82e1a14af4c4b27f486ce9d13fe3086\trefs/tags/Audacity-2.1.3\r\nd6ee9bf9758977ca1fb9358401edc125c62bb1b2\trefs/tags/Audacity-2.2.0\r\nfd8b76dd80378908a380569f265a9493bb4a0429\trefs/tags/Audacity-2.2.0-beta-0\r\n5d4ddbc42412b72f13baac2defb6aeea35aa0692\trefs/tags/Audacity-2.2.0-beta-20170901\r\nce649cf851579992604ef81b40a1aaf904dbab1e\trefs/tags/Audacity-2.2.0-beta-20170924\r\n58f07d2021d239bb23cbf56afee24e2924ba58e1\trefs/tags/Audacity-2.2.0-rc1\r\n26d72bea9acacf8d4d2d18aaaa0831022480c8c9\trefs/tags/Audacity-2.2.1\r\n61f4284e106d2db14e894004c9da1530211ee4ea\trefs/tags/Audacity-2.2.1-rc1\r\nfaa603a0ebad99dc6fc32b2a11e999988e50e20d\trefs/tags/Audacity-2.2.1-rc2\r\n26d72bea9acacf8d4d2d18aaaa0831022480c8c9\trefs/tags/Audacity-2.2.1-rc3\r\nf665e6da2b0bf9d889f65ee59e8d507c4bca2de8\trefs/tags/Audacity-2.2.2\r\n2fea3473947251158cdfeb88bde48bb847c3963d\trefs/tags/Audacity-2.2.2-beta-20180128\r\nf665e6da2b0bf9d889f65ee59e8d507c4bca2de8\trefs/tags/Audacity-2.2.2-rc1\r\n9a45c02002b759e488426359a6a82bcda090b242\trefs/tags/Audacity-2.3.0\r\n1c21e9358b229b0a56542101963d1fbee3c2d2d0\trefs/tags/Audacity-2.3.1\r\nbd2956bb45e228241452483561af9450da06b908\trefs/tags/Audacity-2.3.2\r\n008d8d8c8cb6f6fac9c95f72513f6b0bc98af1dc\trefs/tags/Audacity-2.3.3\r\nb65f1ecf5c59562fa8cf74cda985ef35d07b1ca7\trefs/tags/Audacity-2.4.0\r\n00c465db17667deb8e3769c495efca8c71a80da8\trefs/tags/Audacity-2.4.0^{}\r\ndec9f714ae15c51de1f031dabe205036e3794b22\trefs/tags/DarkAudacity-2.1.3x\r\n4f185ae3ac6506e3f17b0bffb7ff3d67569b49f5\trefs/tags/DarkAudacity-2.1.3x^{}\r\nc3aee46a01afb8f8a1f4929f03616af5482e43dd\trefs/tags/DarkAudacity-2.3.2x\r\n47bed0f5d2566a6ab1b0a11b815a186eae8a0362\trefs/tags/arm64-2.2.2\r\n19b1702467eb2cfce995c03a4464ebc502e72e90\trefs/tags/arm64-2.2.2^{}\r\nb12197ea27f056fabc4a285bde8a6ef04ef90184\trefs/tags/build-20190328.10\r\nefc1fc81787a8341bb4335864128a4f0e6e30210\trefs/tags/build-20190328.10^{}\r\n2e3be2eb4ad4621a0d1a1fa18fd16ac53a1a1521\trefs/tags/build-20190405.7\r\n9ba80fec8fc9417f8a8fc85a551b20ee257b30a8\trefs/tags/build-20190405.7^{}\r\n6a8b22822b6d3dc3b0b68e98f96f7ae566edd75c\trefs/tags/build-20190522.2\r\n1693aa3c11844dfb8793059be3e89e2319aa4736\trefs/tags/build-20190522.2^{}\r\nb9a11d987f1ca60610bb6fe9edd4d8440c35c94f\trefs/tags/build-20190523.4\r\n65053a0f49df2394f5f9469ff9c3c419e5b69134\trefs/tags/build-20190523.4^{}\r\n8b03857f2c15eeedf9dbb783ac12144c809bf5e4\trefs/tags/build-20190610.3\r\nc5e6a532245d284e42796ee8ff680cd483d37a57\trefs/tags/build-20190610.3^{}\r\nbd5bdccbb503b7736b097b7478c50e90bd2fff47\trefs/tags/build-20190715.1\r\n857b42335023513e5b8a5695620e65a4a03aa57d\trefs/tags/build-20190715.1^{}\r\nece93f7e0f2ec8a6de64089a8e1bfe8c063bb5fb\trefs/tags/build-20190722.3\r\n11cc7427f7f8c07827ad22537833d7bf3a8f2fb5\trefs/tags/build-20190722.3^{}\r\n3ce5e3c226c6fceaea52f06f312674c189478f53\trefs/tags/build-20190731.1\r\na9dad303e00b65de0ec15917e75458be2ad22709\trefs/tags/build-20190731.1^{}\r\n9270736ebba1685f4a33f14fe18f53466526c62c\trefs/tags/build-20190814.1\r\nd29dd6547085839ea5068bba84406ce5ac1ca08f\trefs/tags/build-20190814.1^{}\r\nd0614a6a5e6e186dbc25458f6c5e0fd61261acc5\trefs/tags/build-20190818.3\r\ndfdd2bdda9edf03d2ded0d6617470acb8221fb9e\trefs/tags/build-20190818.3^{}\r\nc7424aef3ddd31766961719d172c976d03226268\trefs/tags/build-20190821.1\r\nc481069564c9bc1f743e3c7409729b99b874d212\trefs/tags/build-20190821.1^{}\r\n53f1d8fca72114a0e44e0a6581de74a1fce0bbb4\trefs/tags/build-20190821.3\r\nd510453600216c31b22a235441ceeb837085dbe2\trefs/tags/build-20190821.3^{}\r\n1552c342fcb7b3c36fccb2a4766a85b3786fdd5b\trefs/tags/build-20190823.1\r\n0192076678b8fc9b43668ec106688d5978afa384\trefs/tags/build-20190823.1^{}\r\n238efb3734c0abfc4d84ca0568115d38d7cecd8b\trefs/tags/build-20190902.1\r\n079de53695821197a75db5f2340370fd0e8aad28\trefs/tags/build-20190902.1^{}\r\n5f0ee9e84564f3d1ae525e43500898c196c0fc7b\trefs/tags/build-20190906.1\r\nf7f590d4c243c56d3253781f86279977a6d0c913\trefs/tags/build-20190906.1^{}\r\n6f053786e66ffea027eb42568b54a3a02ca8ae21\trefs/tags/build-20191001.1\r\n90a3d6c6b5b1226fc9242ef26929c527fe07afc3\trefs/tags/build-20191001.1^{}\r\n8b4728713b74e54f115a418ad28e19c6d899923e\trefs/tags/build-20191112.1\r\nafb1948133e03603a14dc1bb9be01bd1fb85fd8e\trefs/tags/build-20191112.1^{}\r\n83d8d82acfeaee4bfb5ad8dbc382b5edd1a8a108\trefs/tags/build-latest\r\n7d4d76b1d0a60de31272cb9c5cd9979b5cfde8c8\trefs/tags/build-latest^{}\r\nc1e7123fb9ec5c7f759a312cab97e95c84f44eea\trefs/tags/fix-midi-output-pre-major-merge\r\n6374c2b8b7922fb8465a6354cd64a2a12a72e253\trefs/tags/fix-midi-output-pre-major-merge^{}\r\nb8ab80a0f3a1afe2568f7d86ee3dd6d8bc91ada7\trefs/tags/midi-play-at-speed-1\r\n72da518785457a255e732978dfa11c4dcc9547b4\trefs/tags/midi-play-at-speed-1^{}\r\n629f4021cb2749ab86949afe69215a174203a47d\trefs/tags/working-arm64\r\n84dcb5db4f4c375c45f4bad2c6175cb2b2330785\trefs/tags/wx3-stable\r\n37168ebbf67ae869ab71a3b5cbbf1d2a48e824aa\trefs/tags/wx3-unstable\r\n88693e9761764889bd45be0d5222681e2825780d\trefs/tags/x64-2.2.2\r\ne9766c688c68538c5a124289f6802545cdc0fb8c\trefs/tags/x64-2.2.2^{}\r\na2b8bb0da7e3a961de245874166b1c8df820de83\trefs/tags/x64-20190328.11\r\n1ea8e1cd40e9ce937635ee33bc3ce614cbcf3f17\trefs/tags/x64-20190328.11^{}\r\nac155e876e1b19e1d43b30104cde9ee954029abc\trefs/tags/x64-20190405.5\r\n7a480734f5b230e8b96170ebe74637286efc3c1f\trefs/tags/x64-20190405.5^{}\r\n8fd63a27082d17cadf85da976b0502ba17350b1d\trefs/tags/x64-20190408.2\r\n8cc83e7e4b13dbe1967c83d16532cbdf3f6f7a73\trefs/tags/x64-20190408.2^{}\r\n31e1534653bb8e89b21304ca320b10e3e464958e\trefs/tags/x64-20190412.3\r\n6127c35b82fc69f02a071d4b42ff71f3d57a4790\trefs/tags/x64-20190412.3^{}\r\n0603b12a370f08957d09d836acab535cbe44b256\trefs/tags/x64-20190413.2\r\n4aa3596a11b4b2e2d504ddda9a30503d21950fb3\trefs/tags/x64-20190413.2^{}\r\n38c80823923853b8a197077b6f305da40e81fad6\trefs/tags/x64-20190414.2\r\naca827ea8c72f3d35ae36d6681eaf336b0f14251\trefs/tags/x64-20190414.2^{}\r\n36e00b8f48aac4bc12976304a33ecf8624f0f11c\trefs/tags/x64-20190415.2\r\n7fa5ea763ec1f473d1c6dba9443d73288adab68c\trefs/tags/x64-20190415.2^{}\r\n75f41575f512d947ad0e56ac5ba298bcd6e7de12\trefs/tags/x64-20190417.2\r\n894d8c8e130a766f7c9ba98fa7dda36a663d8032\trefs/tags/x64-20190417.2^{}\r\na1f05f42460570f460307595d8dc0234a00fc686\trefs/tags/x64-20190419.4\r\nb65264f9e80f9b5a64ca2030a11dcbc969ca2ae5\trefs/tags/x64-20190419.4^{}\r\ndb5e7853979d5035e0e667ba230eb036ed63c12c\trefs/tags/x64-20190420.2\r\n91805bf5c324e41a33abee33c9fdee9fc4edc0e3\trefs/tags/x64-20190420.2^{}\r\nbb3926598b54050f8189906be7126c1e1649fbd2\trefs/tags/x64-20190420.4\r\ncf7ec31b55d6f85633d10fb988502eedf413093f\trefs/tags/x64-20190420.4^{}\r\n46156b186036fa37287bea0d4d592bc1372b9856\trefs/tags/x64-20190427.4\r\n0151e599f3441b4f5935fb3f7e34237c15704409\trefs/tags/x64-20190427.4^{}\r\n562303e8e7d98d9d11a0393c199a433307c53286\trefs/tags/x64-20190429.2\r\n62ffb97570b4caab9b99e1f3d1d1ddb8f31a5dcd\trefs/tags/x64-20190429.2^{}\r\n0a653a15e058045a1d0ea990bdb808eeca5088b1\trefs/tags/x64-20190501.4\r\nbc97d86cbd1c210fc294868300ccb048b618b41b\trefs/tags/x64-20190501.4^{}\r\n665d17fde4f84f2f42bc97153fbd9358e8f9d456\trefs/tags/x64-20190521.15\r\n867c9732238db62bf54cfee9c2c0a96b03e21fab\trefs/tags/x64-20190521.15^{}\r\nd10342c6a29acd9ec2ffa78259cefad16d4dbf45\trefs/tags/x64-20190522.3\r\n8818120eec32c3029fd9cf8453b43db3da9b78bb\trefs/tags/x64-20190522.3^{}\r\n05783c089fcb8ca5ce0df714ba6ff48cba1487f3\trefs/tags/x64-20190523.5\r\n8a9b916a334cdb2b4736adc20c614a32174f0361\trefs/tags/x64-20190523.5^{}\r\n6a1643d12da331ae364caf08aa1f61e1052c598f\trefs/tags/x64-20190610.4\r\nb517c42034494d7d73aff0fedc91f52f64c7abdf\trefs/tags/x64-20190610.4^{}\r\nf6f5740932455c0c58dc796590d8c45508c503f5\trefs/tags/x64-20190715.2\r\nd467641fe776c3340b1b0066e642f169c484fdc5\trefs/tags/x64-20190715.2^{}\r\na69cb56b9ebcde827ffe1a2222757475aae525a9\trefs/tags/x64-20190722.4\r\nfdd0e705372b13f7bf22dc0053eab216d8ea14f8\trefs/tags/x64-20190722.4^{}\r\n30bd90f26f3f5e302c57fafa470085782dcd9890\trefs/tags/x64-20190731.2\r\n34cd3738d036afd642910cb4601575519cda8c08\trefs/tags/x64-20190731.2^{}\r\nf31c7d8a444c08e512bad0ad9ea3766cb9e052d4\trefs/tags/x64-20190814.2\r\nd53cb68193f6cde0d7c5b64f025c440e67bc9e40\trefs/tags/x64-20190814.2^{}\r\nd423ba83610bbe1a9eaca0672477aa2fa042b96c\trefs/tags/x64-20190818.4\r\n52b28900490865bdcd13380f1ad3e1afbb569f7a\trefs/tags/x64-20190818.4^{}\r\n9f0e84a301664f227284418a9d7dd7f365934aa5\trefs/tags/x64-20190821.2\r\n946a629e0e617ec314703dfb06573aa5bee365cb\trefs/tags/x64-20190821.2^{}\r\n5d9bc80b2f2bbdaab68f7c06be4262c4881ab56f\trefs/tags/x64-20190821.4\r\ne33c1394d86451a519c3c80b8bf6bbc8469a19a5\trefs/tags/x64-20190821.4^{}\r\nc26ca8bfc546502efb88f6a364ad9beb506d88bf\trefs/tags/x64-20190823.2\r\nf845cf62e29976ceeda037393c462f64a45fe693\trefs/tags/x64-20190823.2^{}\r\n990c7c7f16050e104cb4819f283df0be84c06775\trefs/tags/x64-20190902.2\r\nf02f9e0ee97bc202d18d6f57f9343a6c196d7d3c\trefs/tags/x64-20190902.2^{}\r\ndaafe276cb9e46b4518730d11f18341992a84431\trefs/tags/x64-20190906.2\r\n21c1ca38412c00b1dcd2d649060c2509cf7ce19e\trefs/tags/x64-20190906.2^{}\r\n4caa413b6510595678c2a72ddf7ded022468b3c0\trefs/tags/x64-20191001.2\r\nca312a9fb756de077b650ed270264d3fce84e07f\trefs/tags/x64-20191001.2^{}\r\ne044441a6f5526d51b0b71c37050a66851a0904d\trefs/tags/x64-20191024.2\r\nc19c1b7c3a904d2823094ba88a7ae5c7328751ad\trefs/tags/x64-20191024.2^{}\r\n8ba821bd54335bbd9e184ed87578076bf991d363\trefs/tags/x64-20191112.2\r\ncb426af1b479b2291f2b668b727655f684faa916\trefs/tags/x64-20191112.2^{}\r\n```\r\n\r\n**Expected behavior**\r\nA list of `Audacity-<version>` based tags\r\n\r\n**Screenshots**\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: any\r\n - Version any\r\n\r\n**Additional context**\r\nI'm maintaining audacity for Arch Linux", "It was my mistake pushing all those tags.\r\nFixed now.\r\nThe DarkAudacity tags are intended though (friendly fork). =||= "], ["518", "Help Wanted: Simple build for local development", "Filipe Oliveira", "oliveirafilipe", "05/17/20, 08:46:29 PM", "Hi Folks!\r\n\r\nMaybe this is not the best place for this question,  but any tips can help me to contribute.\r\n\r\nI want to code a really simple feature, that I think will improve the UX.\r\n\r\nI set up a Dockerfile, just for local development, in order to build the application without installing all the dependencies into my host.\r\n\r\nI followed [this guideline](https://wiki.audacityteam.org/wiki/Building_On_Linux#Detailed_Instructions), for build in linux (`debian:buster` to be more precise).\r\n\r\nThis is my first interaction in a big project written in C++, so I got a little bit surprised with the build time. I thinking is taking too long, more than 15 minutes.\r\n\r\nIs there any build tricks, or special/correct params to be used in `configure` and make executables in order to have a simple build, not release version, to accelerate the cycle \"code, build, test, fail\"?\r\n\r\nI can improve this question if I did not make myself clear. \r\n\r\nThank you all. \r", "As of Audacity 2.4.0, the old autotools build chain has been replaced by cmake. The wiki has yet to be updated, but there are brief notes in the source code: https://github.com/audacity/audacity/blob/master/linux/build.txt\r\nBuilding with cmake is likely to be a lot quicker. =||= Thank you @SteveDaulton I will give it a try right now =||= @SteveDaulton I think it built. \r\n\r\nIt took 17 minutes, is that an acceptable time? =||= Build times can vary tremendously, depending largely on the machine, the build options, and which libraries have to be built. When I first built Audacity I was using a Pentium II which took over 2 hours to complete. =||= I'm using a i7, but I didn't do any improvement in docker to get the best of host's hardware.\r\n\r\nYou said that the build time may also depends on  \"the build options, and which libraries have to be built\".\r\n\r\nI'm using the following commands:\r\n```\r\ncmake -DCMAKE_BUILD_TYPE=Release ..\r\ncmake --build .\r\nmake .\r\n```\r\n\r\nam I using the best parameters for a build that doesn't need to be for final release?\r\n =||= Please come and chat to us on the Help forum. We have a forum board specifically for discussing compile/build issues: https://forum.audacityteam.org/viewforum.php?f=19 =||= Oh that's great! Thank You! Closing the issue =||= "], ["520", "python2 is not a build requirement for lv2", "David Runge", "dvzrv", "05/17/20, 02:39:03 PM", "**Describe the bug**\r\nThe wiki currently states, that [python2 is required for building lv2 integration](https://wiki.audacityteam.org/wiki/Building_On_Linux), which is further assumed by the cmake setup. However, the waf setup of lv2, suil, sord, serd, sratom or lilv all do not require python2. In fact, python2 should be discouraged wherever  possible, as [it is now legacy](https://pythonclock.org/).\r\n\r\n**To Reproduce**\r\n```\r\ncmake -L -B build -S .\r\n```\r\nFor output see #519 \r\n\r\n**Expected behavior**\r\nPython3 is used all across.\r\n\r\n**Screenshots**\r\n-\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Arch Linux\r\n - Version: Audacity 2.4.0\r\n\r\n**Additional context**\r\nAll lv2 related waf setups support python3.", "I have updated the wiki so that it now says:\r\n\"In addition to the listed dependencies and standard build environment, Audacity also requires Python 2 to be installed.\"\r\nThis is correct at time of writing and will be updated to say Python3 when all of Audacity's Python scripts have been updated to Python 3. =||= @SteveDaulton thanks for the clarification!\r\nCould you be more specific as to what exact pieces of code actually require python2?\r\n\r\nI could not find [any reference in the code base](https://github.com/audacity/audacity/search?p=1&q=python2&unscoped_q=python2) that would warrant hard coding python2 to be required. =||= \"mw2html.py\" is one. =||= "], ["521", "lame not detected by cmake setup", "David Runge", "dvzrv", "07/30/21, 11:01:50 AM", "**Describe the bug**\r\nThe cmake setup for 2.4.0 does not detect a system version of lame.\r\nOn Arch Linux we currently offer 3.100, but it is not detected.\r\n\r\n**To Reproduce**\r\n```\r\ncmake -L -B build -S .\r\n```\r\n\r\n[audacity-2.4.0-cmake.log](https://github.com/audacity/audacity/files/4640339/audacity-2.4.0-cmake.log)\r\n\r\n**Expected behavior**\r\nA system version of lame is detected and used.\r\n\r\n**Screenshots**\r\n-\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Arch Linux\r\n - Version Audacity 2.4.0\r\n\r\n**Additional context**\r\nThe detection of the lame library works in the autotools setup (based on the header file).", "@lllucius Could this be looked into, please? We are still stuck on 2.4.1 on Arch Linux because of no recourse. =||= ping? =||= Fixed in #1030  =||= "], ["523", "Incorrect syntax in audacity.dox", null, "albert-github", "05/24/20, 08:28:29 PM", "**Describe the bug**\r\nIn the file audacity.dox we see he lines:\r\n```\r\nPREDEFINED             = AUDACITY_DLL_API \\\r\n                         = \\\r\n```\r\nthis is an incorrect syntax, most likely:\r\n```\r\nPREDEFINED             = AUDACITY_DLL_API= \\\r\n```\r\nis intended.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. run `doxygen audacity.dox`\r\n2. see the console output:\r\n    ```\r\n    error: Illegal PREDEFINED format '=', no define name specified\r\n    ```\r\n    at least with the current doxygen version\r\n\r\n**Expected behavior**\r\nNo warning regarding PREDEFINED in configuration\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: independent\r\n - Version 2.4.0 (audacity-minsrc-2.4.0.tar.xz)\r", "Thanks.  Fixed with https://github.com/audacity/audacity/commit/8a88881e43ca7e01983c4ffee50cca98735ac7c1 =||= "], ["524", "Bug2436: Cross-project paste should duplicate block files...", "Paul Licameli", "Paul-Licameli", "05/18/20, 02:57:24 PM", "... to avoid data loss!\r\n\r\nBug caused by commit c2feee6\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "Rebasing and merging it myself, as directed by release manager.\r\n =||= "], ["525", "Changing instrument one waveform color", null, "Reaper10", "05/19/20, 07:05:59 AM", "Changing the default instrument one color from the current blue to a darker blue or a bluish purple. This is the best way there is a difference between the instrument one color and the other GUI elements like sliders in the rest of the program.  For when you change theme in audacity the instrument one color changes with with it.  The other instrument color does not change with the theme.  Instrument one color should be just like the rest of the instrument colors they stay the same no matter what theme you have picked. This isn't the way it is right now.\r\n\r\ndark mode\r\n![dark mode](https://user-images.githubusercontent.com/8137561/82271398-44876480-993d-11ea-9301-bbe350abdede.jpg)\r\n\r\nlight mode\r\n<img width=\"842\" alt=\"light mode\" src=\"https://user-images.githubusercontent.com/8137561/82271437-6385f680-993d-11ea-92cd-6cfaa47c7051.PNG\">\r\n\r\nblue wave light\r\n![blue wave light](https://user-images.githubusercontent.com/8137561/82271524-9e882a00-993d-11ea-92ab-4f34bee7a0cc.png)\r\n\r\nblue wave dark\r\n![blue wave dark](https://user-images.githubusercontent.com/8137561/82271570-be1f5280-993d-11ea-9d0b-2c73df56778d.jpg)\r\n\r\nblue wave light\r\n![blue wave light](https://user-images.githubusercontent.com/8137561/82271632-f7f05900-993d-11ea-9eb0-4c1ca89258d0.png)\r\n\r\nred wave light\r\n![red wave light](https://user-images.githubusercontent.com/8137561/82271730-37b74080-993e-11ea-95ed-74c255a9a231.jpg)\r\n\r\nred wave dark\r\n![red wave dark](https://user-images.githubusercontent.com/8137561/82271792-66351b80-993e-11ea-93e5-0c7f2b92f2e2.jpg)\r", "Thank you for your suggestion. =||= "], ["527", "Typo fix in the French translation", "Olivier Humbert", "trebmuh", "05/22/20, 09:41:08 AM", "HTH", "Thanks! =||= "], ["528", "Add Nyquist \"power\" function (generalise s-sqrt to arbitrary powers)", null, "dlh-0492", "05/20/20, 03:41:16 PM", "So I see that _s-sqrt_ takes the square root of each positive sample and maps all negative samples to zero. Could this be generalised to something like _s-pow_ that raises every sample to a certain power? More precisely, something like this: \r\n\r\n(s-pow \\*track\\* p)\r\n\r\nequivalent to\r\n\r\ns => {s^p, if s is non-negative | -(-s)^p, if s is negative}\r\n\r\nTherefore, (s-sqrt \\*track\\*) would be equivalent to:\r\n\r\ns => {sqrt(s), if s is non-negative | -sqrt(-s), if s is negative}\r\n\r\nAnd it would be great if support for fractions could be added, so cube roots would go like (s-pow \\*track\\* (/ 1 3)) or something (you know, raising to the power of 1/3). Divide-by-zero exception handling would be a must as well.\r\n\r\nOr maybe this could be added as an effect in Distortion?", "For positive integer powers, you can simply use MULT.\r\nFor roots, you can create your own function. For example:\r\n```\r\n(defun root (sig n)\r\n  (let* ((delta (/ (power 2 31)))\r\n         (pos (s-max sig delta))\r\n         (neg (mult -1 (s-min sig (- delta)))))\r\n    (sim\r\n      (s-exp (mult (s-log pos) n))\r\n      (mult -1 (s-exp (mult (s-log neg) n))))))\r\n``` =||= If you have further questions about Nyquist in Audacity, we provide a forum here: https://forum.audacityteam.org/viewforum.php?f=39 =||= If you are interested in deforming waves (waveshaping), take a look at the [SHAPE](https://www.cs.cmu.edu/~rbd/doc/nyquist/part8.html#index452) function. =||= > For positive integer powers, you can simply use MULT.\r\n> For roots, you can create your own function. For example:\r\n> \r\n> ```\r\n> (defun root (sig n)\r\n>   (let* ((delta (/ (power 2 31)))\r\n>          (pos (s-max sig delta))\r\n>          (neg (mult -1 (s-min sig (- delta)))))\r\n>     (sim\r\n>       (s-exp (mult (s-log pos) n))\r\n>       (mult -1 (s-exp (mult (s-log neg) n))))))\r\n> ```\r\n\r\nThanks so much! =||= "], ["529", "Cmake requirement is too high for Debian \"Buster\" (actual stable) - 2.4.1", "Olivier Humbert", "trebmuh", "05/21/20, 10:59:40 PM", "Trying to compile audacity 2.4.1 on a Debian Buster (actual stable) doesn't work. The error message is:\r\n\r\n`CMake 3.15 or higher is required.  You are running version 3.13.4`\r\n\r\nSince the next Debian stable isn't going to be there before approximately 1 year, would that be possible to relax the CMake requirement to 3.13.4 since this would open the possibility to build on actual Debian stable, or is 3.15 is really needed?\r", "The easiest way to find out if it would work is to change the cmake_minimum_required() line at the top of audacity/CMakeLists.txt and see how far CMake gets.\r\n\r\nI'm (almost) certain it won't work though because of the use of multi-valued generated expressions.  \r\n\r\nThe CMake folks make it really easy to get the latest version though.  Their prebuilt binaries have always worked for me without having any dependency problems. =||= It stops almost at the beginning when tweaking the CMakeLists.txt.\r\n\r\nThanks for your answer, and no worries from my side. =||= "], ["530", "nyquist plugins (*.ny) not installed anymore since 2.4.0", "David Runge", "dvzrv", "05/22/20, 10:07:54 AM", "**Describe the bug**\r\nThe `*.ny` plug-ins are not installed by the autotools based build system anymore since 2.4.0. Are they obsolete?\r\nI'm packaging audacity for Arch Linux and received a [bug report](https://bugs.archlinux.org/task/66733) in regards to those plug-in files.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n```\r\nautoreconf -vfi\r\n./configure --prefix=\"/usr\" \\\r\n    --with-libsndfile=\"system\" \\\r\n    --with-ffmpeg=\"system\" \\\r\n    --with-expat=\"system\" \\\r\n    --with-lame=\"system\" \\\r\n    --with-libsoxr=\"system\" \\\r\n    --with-portaudio \\\r\n    --with-portmidi \\\r\n    --with-libflac \\\r\n    --with-libid3tag \\\r\n    --with-libsamplerate \\\r\n    --with-sbsms \\\r\n    --with-soundtouch \\\r\n    --with-libtwolame \\\r\n    --with-libvorbis \\\r\n    --with-lv2\r\n  make\r\n  make DESTDIR=\"${pkgdir}\" install\r\n```\r\n\r\n**Expected behavior**\r\nThe *.ny plug-in files are still installed to `/usr/share/audacity/plug-ins`.\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Arch Linux\r\n - Version Audacity >= 2.4.0\r\n\r\n**Additional context**\r", "Audacity 2.4.0 has now been replaced with 2.4.1 due to a critical bug in the former.\r\n\r\nFrom version 2.4.0, the build system has changed to cmake.\r\nThe autotools based build system is probably still usable, but may need a bit of manual tweaking.\r\nThe .ny files in the plug-ins directory are required and should be copied to Audacity's plug-ins folder. Assuming that Arch is the same as Debian based distros in this respect, then yes that should be\r\n`/usr/share/audacity/plug-ins`.\r\n =||= Thanks for the clarification! I'll copy it over manually for the time being then.\r\nI still have a few issues with the cmake setup, that prevent me from using it (#519, #521, #522).\r\nI guess this can be closed then. =||= It seems, that also only a subset of the `*.lsp` files is installed using autotools (see downstream bug report https://bugs.archlinux.org/task/66739). =||= "], ["531", "Fails to build 2.4.1 on Debian Buster (stable)", "Olivier Humbert", "trebmuh", "08/04/20, 01:51:15 AM", "I took the tarball [from fosshub](https://www.fosshub.com/Audacity.html).\r\nTrying to build from it with a cmake 3.16.3 (following #529), it fails with:\r\n\r\n```\r\n[ 57%] Building CXX object src/CMakeFiles/Audacity.dir/AudioIO.cpp.o\r\ncd /build/audacity-2.4.1/obj-x86_64-linux-gnu/src && /usr/bin/c++  -DAudacity_EXPORTS -DBUILDING_AUDACITY -DCMAKE -DHAVE_LRINT -DHAVE_LRINTF -DHAVE_MLOCK -DHAVE_SYS_SOUNDCARD_H=1 -DPA_USE_ALSA=1 -DPA_USE_JACK=1 -DPA_USE_OSS=1 -DWXINTL_NO_GETTEXT_MACRO -DWXUSINGDLL -D_FILE_OFFSET_BITS=64 -D__WXGTK__ -I/build/audacity-2.4.1/obj-x86_64-linux-gnu/src/private -I/build/audacity-2.4.1/lib-src/lib-widget-extra -I/build/audacity-2.4.1/include -I/build/audacity-2.4.1/src -I/usr/lib/x86_64-linux-gnu/wx/include/gtk2-unicode-3.0 -I/usr/include/wx-3.0 -I/build/audacity-2.4.1/lib-src/FileDialog -I/build/audacity-2.4.1/obj-x86_64-linux-gnu/cmake-proxies/lame/public -I/build/audacity-2.4.1/lib-src/portaudio-v19/include -I/build/audacity-2.4.1/lib-src/libid3tag -I/build/audacity-2.4.1/obj-x86_64-linux-gnu/cmake-proxies/libmad/public -I/build/audacity-2.4.1/lib-src/libmad -I/build/audacity-2.4.1/obj-x86_64-linux-gnu/cmake-proxies/lv2/public -I/build/audacity-2.4.1/lib-src/lv2/lv2 -I/build/audacity-2.4.1/lib-src/lv2/lilv -I/build/audacity-2.4.1/lib-src/lv2/serd -I/build/audacity-2.4.1/lib-src/lv2/sord -I/build/audacity-2.4.1/lib-src/lv2/sratom -I/build/audacity-2.4.1/lib-src/lv2/suil -I/build/audacity-2.4.1/lib-src/portsmf/include -I/build/audacity-2.4.1/lib-src/libnyquist -I/build/audacity-2.4.1/lib-src/portmixer/include -I/build/audacity-2.4.1/lib-src/sbsms/include -isystem /usr/include/gtk-2.0 -isystem /usr/lib/x86_64-linux-gnu/gtk-2.0/include -isystem /usr/include/gio-unix-2.0 -isystem /usr/include/cairo -isystem /usr/include/pango-1.0 -isystem /usr/include/atk-1.0 -isystem /usr/include/pixman-1 -isystem /usr/include/gdk-pixbuf-2.0 -isystem /usr/include/libmount -isystem /usr/include/blkid -isystem /usr/include/harfbuzz -isystem /usr/include/fribidi -isystem /usr/include/glib-2.0 -isystem /usr/lib/x86_64-linux-gnu/glib-2.0/include -isystem /usr/include/uuid -isystem /usr/include/freetype2 -isystem /usr/include/libpng16 -isystem /usr/include/soundtouch  -g -O2 -fdebug-prefix-map=/build/audacity-2.4.1=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -pthread -std=gnu++14 -Winvalid-pch -include /build/audacity-2.4.1/obj-x86_64-linux-gnu/src/CMakeFiles/Audacity.dir/cmake_pch.hxx -o CMakeFiles/Audacity.dir/AudioIO.cpp.o -c /build/audacity-2.4.1/src/AudioIO.cpp\r\n/build/audacity-2.4.1/src/AudioIO.cpp: In function 'PaTime PaUtil_GetTime()':\r\n/build/audacity-2.4.1/src/AudioIO.cpp:500:5: error: 'gettimeofday' was not declared in this scope\r\n     gettimeofday( &tv, NULL );\r\n     ^~~~~~~~~~~~\r\n/build/audacity-2.4.1/src/AudioIO.cpp:500:5: note: suggested alternative: 'wxGetTimeOfDay'\r\n     gettimeofday( &tv, NULL );\r\n     ^~~~~~~~~~~~\r\n     wxGetTimeOfDay\r\n[ 57%] Building CXX object src/CMakeFiles/Audacity.dir/AudioIOBase.cpp.o\r\ncd /build/audacity-2.4.1/obj-x86_64-linux-gnu/src && /usr/bin/c++  -DAudacity_EXPORTS -DBUILDING_AUDACITY -DCMAKE -DHAVE_LRINT -DHAVE_LRINTF -DHAVE_MLOCK -DHAVE_SYS_SOUNDCARD_H=1 -DPA_USE_ALSA=1 -DPA_USE_JACK=1 -DPA_USE_OSS=1 -DWXINTL_NO_GETTEXT_MACRO -DWXUSINGDLL -D_FILE_OFFSET_BITS=64 -D__WXGTK__ -I/build/audacity-2.4.1/obj-x86_64-linux-gnu/src/private -I/build/audacity-2.4.1/lib-src/lib-widget-extra -I/build/audacity-2.4.1/include -I/build/audacity-2.4.1/src -I/usr/lib/x86_64-linux-gnu/wx/include/gtk2-unicode-3.0 -I/usr/include/wx-3.0 -I/build/audacity-2.4.1/lib-src/FileDialog -I/build/audacity-2.4.1/obj-x86_64-linux-gnu/cmake-proxies/lame/public -I/build/audacity-2.4.1/lib-src/portaudio-v19/include -I/build/audacity-2.4.1/lib-src/libid3tag -I/build/audacity-2.4.1/obj-x86_64-linux-gnu/cmake-proxies/libmad/public -I/build/audacity-2.4.1/lib-src/libmad -I/build/audacity-2.4.1/obj-x86_64-linux-gnu/cmake-proxies/lv2/public -I/build/audacity-2.4.1/lib-src/lv2/lv2 -I/build/audacity-2.4.1/lib-src/lv2/lilv -I/build/audacity-2.4.1/lib-src/lv2/serd -I/build/audacity-2.4.1/lib-src/lv2/sord -I/build/audacity-2.4.1/lib-src/lv2/sratom -I/build/audacity-2.4.1/lib-src/lv2/suil -I/build/audacity-2.4.1/lib-src/portsmf/include -I/build/audacity-2.4.1/lib-src/libnyquist -I/build/audacity-2.4.1/lib-src/portmixer/include -I/build/audacity-2.4.1/lib-src/sbsms/include -isystem /usr/include/gtk-2.0 -isystem /usr/lib/x86_64-linux-gnu/gtk-2.0/include -isystem /usr/include/gio-unix-2.0 -isystem /usr/include/cairo -isystem /usr/include/pango-1.0 -isystem /usr/include/atk-1.0 -isystem /usr/include/pixman-1 -isystem /usr/include/gdk-pixbuf-2.0 -isystem /usr/include/libmount -isystem /usr/include/blkid -isystem /usr/include/harfbuzz -isystem /usr/include/fribidi -isystem /usr/include/glib-2.0 -isystem /usr/lib/x86_64-linux-gnu/glib-2.0/include -isystem /usr/include/uuid -isystem /usr/include/freetype2 -isystem /usr/include/libpng16 -isystem /usr/include/soundtouch  -g -O2 -fdebug-prefix-map=/build/audacity-2.4.1=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -pthread -std=gnu++14 -Winvalid-pch -include /build/audacity-2.4.1/obj-x86_64-linux-gnu/src/CMakeFiles/Audacity.dir/cmake_pch.hxx -o CMakeFiles/Audacity.dir/AudioIOBase.cpp.o -c /build/audacity-2.4.1/src/AudioIOBase.cpp\r\n[ 57%] Building CXX object src/CMakeFiles/Audacity.dir/AutoRecovery.cpp.o\r\ncd /build/audacity-2.4.1/obj-x86_64-linux-gnu/src && /usr/bin/c++  -DAudacity_EXPORTS -DBUILDING_AUDACITY -DCMAKE -DHAVE_LRINT -DHAVE_LRINTF -DHAVE_MLOCK -DHAVE_SYS_SOUNDCARD_H=1 -DPA_USE_ALSA=1 -DPA_USE_JACK=1 -DPA_USE_OSS=1 -DWXINTL_NO_GETTEXT_MACRO -DWXUSINGDLL -D_FILE_OFFSET_BITS=64 -D__WXGTK__ -I/build/audacity-2.4.1/obj-x86_64-linux-gnu/src/private -I/build/audacity-2.4.1/lib-src/lib-widget-extra -I/build/audacity-2.4.1/include -I/build/audacity-2.4.1/src -I/usr/lib/x86_64-linux-gnu/wx/include/gtk2-unicode-3.0 -I/usr/include/wx-3.0 -I/build/audacity-2.4.1/lib-src/FileDialog -I/build/audacity-2.4.1/obj-x86_64-linux-gnu/cmake-proxies/lame/public -I/build/audacity-2.4.1/lib-src/portaudio-v19/include -I/build/audacity-2.4.1/lib-src/libid3tag -I/build/audacity-2.4.1/obj-x86_64-linux-gnu/cmake-proxies/libmad/public -I/build/audacity-2.4.1/lib-src/libmad -I/build/audacity-2.4.1/obj-x86_64-linux-gnu/cmake-proxies/lv2/public -I/build/audacity-2.4.1/lib-src/lv2/lv2 -I/build/audacity-2.4.1/lib-src/lv2/lilv -I/build/audacity-2.4.1/lib-src/lv2/serd -I/build/audacity-2.4.1/lib-src/lv2/sord -I/build/audacity-2.4.1/lib-src/lv2/sratom -I/build/audacity-2.4.1/lib-src/lv2/suil -I/build/audacity-2.4.1/lib-src/portsmf/include -I/build/audacity-2.4.1/lib-src/libnyquist -I/build/audacity-2.4.1/lib-src/portmixer/include -I/build/audacity-2.4.1/lib-src/sbsms/include -isystem /usr/include/gtk-2.0 -isystem /usr/lib/x86_64-linux-gnu/gtk-2.0/include -isystem /usr/include/gio-unix-2.0 -isystem /usr/include/cairo -isystem /usr/include/pango-1.0 -isystem /usr/include/atk-1.0 -isystem /usr/include/pixman-1 -isystem /usr/include/gdk-pixbuf-2.0 -isystem /usr/include/libmount -isystem /usr/include/blkid -isystem /usr/include/harfbuzz -isystem /usr/include/fribidi -isystem /usr/include/glib-2.0 -isystem /usr/lib/x86_64-linux-gnu/glib-2.0/include -isystem /usr/include/uuid -isystem /usr/include/freetype2 -isystem /usr/include/libpng16 -isystem /usr/include/soundtouch  -g -O2 -fdebug-prefix-map=/build/audacity-2.4.1=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -pthread -std=gnu++14 -Winvalid-pch -include /build/audacity-2.4.1/obj-x86_64-linux-gnu/src/CMakeFiles/Audacity.dir/cmake_pch.hxx -o CMakeFiles/Audacity.dir/AutoRecovery.cpp.o -c /build/audacity-2.4.1/src/AutoRecovery.cpp\r\n[ 57%] Building CXX object src/CMakeFiles/Audacity.dir/AutoRecoveryDialog.cpp.o\r\ncd /build/audacity-2.4.1/obj-x86_64-linux-gnu/src && /usr/bin/c++  -DAudacity_EXPORTS -DBUILDING_AUDACITY -DCMAKE -DHAVE_LRINT -DHAVE_LRINTF -DHAVE_MLOCK -DHAVE_SYS_SOUNDCARD_H=1 -DPA_USE_ALSA=1 -DPA_USE_JACK=1 -DPA_USE_OSS=1 -DWXINTL_NO_GETTEXT_MACRO -DWXUSINGDLL -D_FILE_OFFSET_BITS=64 -D__WXGTK__ -I/build/audacity-2.4.1/obj-x86_64-linux-gnu/src/private -I/build/audacity-2.4.1/lib-src/lib-widget-extra -I/build/audacity-2.4.1/include -I/build/audacity-2.4.1/src -I/usr/lib/x86_64-linux-gnu/wx/include/gtk2-unicode-3.0 -I/usr/include/wx-3.0 -I/build/audacity-2.4.1/lib-src/FileDialog -I/build/audacity-2.4.1/obj-x86_64-linux-gnu/cmake-proxies/lame/public -I/build/audacity-2.4.1/lib-src/portaudio-v19/include -I/build/audacity-2.4.1/lib-src/libid3tag -I/build/audacity-2.4.1/obj-x86_64-linux-gnu/cmake-proxies/libmad/public -I/build/audacity-2.4.1/lib-src/libmad -I/build/audacity-2.4.1/obj-x86_64-linux-gnu/cmake-proxies/lv2/public -I/build/audacity-2.4.1/lib-src/lv2/lv2 -I/build/audacity-2.4.1/lib-src/lv2/lilv -I/build/audacity-2.4.1/lib-src/lv2/serd -I/build/audacity-2.4.1/lib-src/lv2/sord -I/build/audacity-2.4.1/lib-src/lv2/sratom -I/build/audacity-2.4.1/lib-src/lv2/suil -I/build/audacity-2.4.1/lib-src/portsmf/include -I/build/audacity-2.4.1/lib-src/libnyquist -I/build/audacity-2.4.1/lib-src/portmixer/include -I/build/audacity-2.4.1/lib-src/sbsms/include -isystem /usr/include/gtk-2.0 -isystem /usr/lib/x86_64-linux-gnu/gtk-2.0/include -isystem /usr/include/gio-unix-2.0 -isystem /usr/include/cairo -isystem /usr/include/pango-1.0 -isystem /usr/include/atk-1.0 -isystem /usr/include/pixman-1 -isystem /usr/include/gdk-pixbuf-2.0 -isystem /usr/include/libmount -isystem /usr/include/blkid -isystem /usr/include/harfbuzz -isystem /usr/include/fribidi -isystem /usr/include/glib-2.0 -isystem /usr/lib/x86_64-linux-gnu/glib-2.0/include -isystem /usr/include/uuid -isystem /usr/include/freetype2 -isystem /usr/include/libpng16 -isystem /usr/include/soundtouch  -g -O2 -fdebug-prefix-map=/build/audacity-2.4.1=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2   -pthread -std=gnu++14 -Winvalid-pch -include /build/audacity-2.4.1/obj-x86_64-linux-gnu/src/CMakeFiles/Audacity.dir/cmake_pch.hxx -o CMakeFiles/Audacity.dir/AutoRecoveryDialog.cpp.o -c /build/audacity-2.4.1/src/AutoRecoveryDialog.cpp\r\nmake[3]: *** [src/CMakeFiles/Audacity.dir/build.make:187: src/CMakeFiles/Audacity.dir/AudioIO.cpp.o] Error 1\r\nmake[3]: *** Waiting for unfinished jobs....\r\n```\r\n\r\nDoes that ring a bell for you?", "I believe you'll need to rework the \"0005-Fix-building-against-the-system-portaudio-library.patch\" Debian patch.  Maybe add an include of \"<sys/time.h>\".\r\n\r\nI'll actually be committing a change shortly that should allow you guys to get rid of this patch entirely, but that doesn't help you for the 2.4.1 release.\r\n =||= This one looks to be resolved with 2.4.2 .\r\nThank you! =||= "], ["532", "Can not exit full screen on Ubuntu 18.04.4", "Jack", "Honghe", "06/06/20, 06:38:31 PM", "**Describe the bug**\r\nCan not exit full screen on Ubuntu 18.04.\r\nAudacity can enter full screen mode through F11, but can not exit full screen mode through F11.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. `F11`, enter full screen mode.\r\n2. `F11`, can not exit full screen mode, nothing happen.\r\n\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Ubuntu 18.04.4\r\n - Audacity 2.4.x or Audacity 2.3.x\r\n\r", "What Desktop are you using? =||= Ubuntu 18.04 default Desktop. =||= Works for me on Ubuntu 18.04.4, with GNOME (default)\r\nWill close this issue presently, if no elaborations on steps to reproduce are given. =||= Where can I see the logs?\r\nAfter reinstall of Audacity, It still can not exit full screen via F11.\r\nBTW: I install Audacity from http://ppa.launchpad.net/ubuntuhandbook1/audacity/ubuntu =||= Logs for what?\r\nBuild information is in the about box, second tab.\r\nI am not using the ppa. =||= On the Audacity forum we have received multiple reports of packaging errors in Audacity 2.4.1 as supplied by that PPA. We do not know when those errors will be fixed as we have no involvement with that PPA.\r\nMy advice would be to either revert to the official Ubuntu deb package, or build Audacity yourself from the sourcecode. \r\nDetailed instructions for building Audacity 2.4.1 on Ubuntu are now available on the Audacity forum: https://forum.audacityteam.org/viewtopic.php?f=19&t=111043 =||= Audacity not built correctly by third party.  Closing issue.\r\nSee https://wiki.audacityteam.org/wiki/Ppa_and_Distro_Issues =||= "], ["533", "plugin folders are not recognized Audacity 2.4.x / Linux [Solved]", null, "ronsens", "05/24/20, 08:05:30 AM", "Hi,\r\nusing the latest version 2.4.0 / 2.41 on Linux (Arch)\r\n\r\nWith this version the given per-user plugin folders (for linux) aren't recognized:\r\n~/.audacity-files/plug-ins\r\n\r\nbut also the plugins in the  system-wide folders will not be shown in the \"Add Effects\"-window:\r\n/usr/share/audacity/plug-ins\r\n/usr/local/share/audacity/plug-ins\r\n\r\nLatest version showing the effects is 2.3.3", "This looks like it could be a documentation error. Where does it say that the per-user plug-in folder is\r\n`~/.audacity-files/plug-ins`\r\n(It should say: `~/.audacity-data/plug-ins`) =||= The location for system-wide plug-ins depends on where Audacity is installed.\r\nMost distributions install Audacity to `/usr/share/audacity/` but the default for \"self built\" Audacity is\r\n`/usr/local/share/audacity/` =||= I'm experiencing the same issue. I have plugins in /home/user/.audacity-data/Plug-Ins. They show up in Audacity's list of plugins but it won't let me enable them. =||= I just realised that the Nyquist Plug-in Installer isn't in the tools menu, something strange is happening... =||= Ok seems like a packaging issue. The solution here works - https://forum.audacityteam.org/viewtopic.php?f=48&t=110960&hilit=nyquist+there&start=10 =||= Solved with the latest update in Arch. (Version is 2.4.1.2) =||= "], ["534", "[CMAKE] WIN32: Fix error in LILV_DEFAULT_LV2_PATH", "Carlo Bramini", "carlo-bramini", "05/23/20, 07:31:38 PM", "NaN", "Good catch!  Thanks much. =||= "], ["535", "The label track ", null, "Reaper10", "05/23/20, 06:39:47 PM", "The label track wouldn't let me type anything.\r\n![Annotation 2020-05-23 123647](https://user-images.githubusercontent.com/8137561/82736939-e7036700-9cf2-11ea-9905-2677c2d5e9da.jpg)\r\n\r", "If you want to type directly into a label track (without creating a label first), you have to enable that in Preferences. See \"Type to create a label:\" in https://manual.audacityteam.org/man/tracks_behaviors_preferences.html\r\n\r\nFor user support, please post to: https://forum.audacityteam.org =||= "], ["536", "Cannot build anymore on Windows and MSYS2/MinGW", "Carlo Bramini", "carlo-bramini", "05/28/20, 09:22:51 PM", "I cannot build anymore on Windows by some days.\r\nThese are the errors raised by the process:\r\n\r\n```\r\n[ 56%] Building CXX object src/CMakeFiles/Audacity.dir/AboutDialog.cpp.obj\r\nIn file included from C:/msys64/mingw64/include/wx-3.0/wx/wx.h:20,\r\n                 from C:/cygwin64/home/Carlo/audacity/src/AudacityHeaders.h:20,\r\n                 from C:/msys64/home/Carlo/a64/src/CMakeFiles/Audacity.dir/cmake_pch.hxx:5,\r\n                 from <command-line>:\r\nC:/msys64/mingw64/include/wx-3.0/wx/filesys.h: In static member function 'static wxFSHandlerHash_wxImplementation_HashTable::Node* wxFSHandlerHash_wxImplementation_HashTable::CopyNode(wxFSHandlerHash_wxImplementation_HashTable::Node*)':\r\nC:/msys64/mingw64/include/wx-3.0/wx/filesys.h:176:1: error: no matching function for call to 'operator new(sizetype, int, const char [46], int)'\r\n  176 | WX_DECLARE_VOIDPTR_HASH_MAP_WITH_DECL(wxFileSystemHandler*, wxFSHandlerHash, class WXDLLIMPEXP_BASE);\r\n      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from C:/msys64/mingw64/include/c++/9.3.0/ext/new_allocator.h:33,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/x86_64-w64-mingw32/bits/c++allocator.h:33,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/bits/allocator.h:46,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/string:41,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/stringimpl.h:66,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/unichar.h:15,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/strvararg.h:22,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/string.h:46,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/memory.h:15,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/object.h:19,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/wx.h:15,\r\n                 from C:/cygwin64/home/Carlo/audacity/src/AudacityHeaders.h:20,\r\n                 from C:/msys64/home/Carlo/a64/src/CMakeFiles/Audacity.dir/cmake_pch.hxx:5,\r\n                 from <command-line>:\r\nC:/msys64/mingw64/include/c++/9.3.0/new:125:26: note: candidate: 'void* operator new(std::size_t)'\r\n  125 | _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)\r\n      |                          ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:125:26: note:   candidate expects 1 argument, 4 provided\r\nC:/msys64/mingw64/include/c++/9.3.0/new:139:26: note: candidate: 'void* operator new(std::size_t, const std::nothrow_t&)'\r\n  139 | _GLIBCXX_NODISCARD void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT\r\n      |                          ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:139:26: note:   candidate expects 2 arguments, 4 provided\r\nC:/msys64/mingw64/include/c++/9.3.0/new:173:33: note: candidate: 'void* operator new(std::size_t, void*)'\r\n  173 | _GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT\r\n      |                                 ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:173:33: note:   candidate expects 2 arguments, 4 provided\r\nIn file included from C:/msys64/mingw64/include/wx-3.0/wx/wx.h:20,\r\n                 from C:/cygwin64/home/Carlo/audacity/src/AudacityHeaders.h:20,\r\n                 from C:/msys64/home/Carlo/a64/src/CMakeFiles/Audacity.dir/cmake_pch.hxx:5,\r\n                 from <command-line>:\r\nC:/msys64/mingw64/include/wx-3.0/wx/filesys.h: In member function 'wxFSHandlerHash_wxImplementation_HashTable::Node* wxFSHandlerHash_wxImplementation_HashTable::CreateNode(const value_type&, size_t)':\r\nC:/msys64/mingw64/include/wx-3.0/wx/filesys.h:176:1: error: no matching function for call to 'operator new(sizetype, int, const char [46], int)'\r\n  176 | WX_DECLARE_VOIDPTR_HASH_MAP_WITH_DECL(wxFileSystemHandler*, wxFSHandlerHash, class WXDLLIMPEXP_BASE);\r\n      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from C:/msys64/mingw64/include/c++/9.3.0/ext/new_allocator.h:33,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/x86_64-w64-mingw32/bits/c++allocator.h:33,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/bits/allocator.h:46,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/string:41,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/stringimpl.h:66,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/unichar.h:15,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/strvararg.h:22,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/string.h:46,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/memory.h:15,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/object.h:19,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/wx.h:15,\r\n                 from C:/cygwin64/home/Carlo/audacity/src/AudacityHeaders.h:20,\r\n                 from C:/msys64/home/Carlo/a64/src/CMakeFiles/Audacity.dir/cmake_pch.hxx:5,\r\n                 from <command-line>:\r\nC:/msys64/mingw64/include/c++/9.3.0/new:125:26: note: candidate: 'void* operator new(std::size_t)'\r\n  125 | _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)\r\n      |                          ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:125:26: note:   candidate expects 1 argument, 4 provided\r\nC:/msys64/mingw64/include/c++/9.3.0/new:139:26: note: candidate: 'void* operator new(std::size_t, const std::nothrow_t&)'\r\n  139 | _GLIBCXX_NODISCARD void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT\r\n      |                          ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:139:26: note:   candidate expects 2 arguments, 4 provided\r\nC:/msys64/mingw64/include/c++/9.3.0/new:173:33: note: candidate: 'void* operator new(std::size_t, void*)'\r\n  173 | _GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT\r\n      |                                 ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:173:33: note:   candidate expects 2 arguments, 4 provided\r\nIn file included from C:/msys64/mingw64/include/wx-3.0/wx/wx.h:20,\r\n                 from C:/cygwin64/home/Carlo/audacity/src/AudacityHeaders.h:20,\r\n                 from C:/msys64/home/Carlo/a64/src/CMakeFiles/Audacity.dir/cmake_pch.hxx:5,\r\n                 from <command-line>:\r\nC:/msys64/mingw64/include/wx-3.0/wx/html/htmlpars.h: In static member function 'static wxHtmlTagHandlersSet_wxImplementation_HashTable::Node* wxHtmlTagHandlersSet_wxImplementation_HashTable::CopyNode(wxHtmlTagHandlersSet_wxImplementation_HashTable::Node*)':\r\nC:/msys64/mingw64/include/wx-3.0/wx/hashset.h:118:1: error: no matching function for call to 'operator new(sizetype, int, const char [52], int)'\r\n  118 | _WX_DECLARE_HASHTABLE( KEY_T, KEY_T, HASH_T,                                 \\\r\n      | ^~~~~~~~~~~~~~~~~~~~~\r\nC:/msys64/mingw64/include/wx-3.0/wx/hashset.h:182:5: note: in expansion of macro '_WX_DECLARE_HASH_SET'\r\n  182 |     _WX_DECLARE_HASH_SET( KEY_T, HASH_T, KEY_EQ_T, wxPTROP_NOP, CLASSNAME, DECL )\r\n      |     ^~~~~~~~~~~~~~~~~~~~\r\nC:/msys64/mingw64/include/wx-3.0/wx/html/htmlpars.h:30:1: note: in expansion of macro 'WX_DECLARE_HASH_SET_WITH_DECL_PTR'\r\n   30 | WX_DECLARE_HASH_SET_WITH_DECL_PTR(wxHtmlTagHandler*,\r\n      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from C:/msys64/mingw64/include/c++/9.3.0/ext/new_allocator.h:33,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/x86_64-w64-mingw32/bits/c++allocator.h:33,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/bits/allocator.h:46,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/string:41,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/stringimpl.h:66,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/unichar.h:15,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/strvararg.h:22,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/string.h:46,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/memory.h:15,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/object.h:19,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/wx.h:15,\r\n                 from C:/cygwin64/home/Carlo/audacity/src/AudacityHeaders.h:20,\r\n                 from C:/msys64/home/Carlo/a64/src/CMakeFiles/Audacity.dir/cmake_pch.hxx:5,\r\n                 from <command-line>:\r\nC:/msys64/mingw64/include/c++/9.3.0/new:125:26: note: candidate: 'void* operator new(std::size_t)'\r\n  125 | _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)\r\n      |                          ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:125:26: note:   candidate expects 1 argument, 4 provided\r\nC:/msys64/mingw64/include/c++/9.3.0/new:139:26: note: candidate: 'void* operator new(std::size_t, const std::nothrow_t&)'\r\n  139 | _GLIBCXX_NODISCARD void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT\r\n      |                          ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:139:26: note:   candidate expects 2 arguments, 4 provided\r\nC:/msys64/mingw64/include/c++/9.3.0/new:173:33: note: candidate: 'void* operator new(std::size_t, void*)'\r\n  173 | _GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT\r\n      |                                 ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:173:33: note:   candidate expects 2 arguments, 4 provided\r\nIn file included from C:/msys64/mingw64/include/wx-3.0/wx/wx.h:20,\r\n                 from C:/cygwin64/home/Carlo/audacity/src/AudacityHeaders.h:20,\r\n                 from C:/msys64/home/Carlo/a64/src/CMakeFiles/Audacity.dir/cmake_pch.hxx:5,\r\n                 from <command-line>:\r\nC:/msys64/mingw64/include/wx-3.0/wx/html/htmlpars.h: In member function 'wxHtmlTagHandlersSet_wxImplementation_HashTable::Node* wxHtmlTagHandlersSet_wxImplementation_HashTable::CreateNode(wxHtmlTagHandler* const&, size_t)':\r\nC:/msys64/mingw64/include/wx-3.0/wx/hashset.h:118:1: error: no matching function for call to 'operator new(sizetype, int, const char [52], int)'\r\n  118 | _WX_DECLARE_HASHTABLE( KEY_T, KEY_T, HASH_T,                                 \\\r\n      | ^~~~~~~~~~~~~~~~~~~~~\r\nC:/msys64/mingw64/include/wx-3.0/wx/hashset.h:182:5: note: in expansion of macro '_WX_DECLARE_HASH_SET'\r\n  182 |     _WX_DECLARE_HASH_SET( KEY_T, HASH_T, KEY_EQ_T, wxPTROP_NOP, CLASSNAME, DECL )\r\n      |     ^~~~~~~~~~~~~~~~~~~~\r\nC:/msys64/mingw64/include/wx-3.0/wx/html/htmlpars.h:30:1: note: in expansion of macro 'WX_DECLARE_HASH_SET_WITH_DECL_PTR'\r\n   30 | WX_DECLARE_HASH_SET_WITH_DECL_PTR(wxHtmlTagHandler*,\r\n      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from C:/msys64/mingw64/include/c++/9.3.0/ext/new_allocator.h:33,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/x86_64-w64-mingw32/bits/c++allocator.h:33,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/bits/allocator.h:46,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/string:41,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/stringimpl.h:66,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/unichar.h:15,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/strvararg.h:22,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/string.h:46,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/memory.h:15,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/object.h:19,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/wx.h:15,\r\n                 from C:/cygwin64/home/Carlo/audacity/src/AudacityHeaders.h:20,\r\n                 from C:/msys64/home/Carlo/a64/src/CMakeFiles/Audacity.dir/cmake_pch.hxx:5,\r\n                 from <command-line>:\r\nC:/msys64/mingw64/include/c++/9.3.0/new:125:26: note: candidate: 'void* operator new(std::size_t)'\r\n  125 | _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)\r\n      |                          ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:125:26: note:   candidate expects 1 argument, 4 provided\r\nC:/msys64/mingw64/include/c++/9.3.0/new:139:26: note: candidate: 'void* operator new(std::size_t, const std::nothrow_t&)'\r\n  139 | _GLIBCXX_NODISCARD void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT\r\n      |                          ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:139:26: note:   candidate expects 2 arguments, 4 provided\r\nC:/msys64/mingw64/include/c++/9.3.0/new:173:33: note: candidate: 'void* operator new(std::size_t, void*)'\r\n  173 | _GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT\r\n      |                                 ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:173:33: note:   candidate expects 2 arguments, 4 provided\r\nIn file included from C:/msys64/mingw64/include/wx-3.0/wx/wx.h:20,\r\n                 from C:/cygwin64/home/Carlo/audacity/src/AudacityHeaders.h:20,\r\n                 from C:/msys64/home/Carlo/a64/src/CMakeFiles/Audacity.dir/cmake_pch.hxx:5,\r\n                 from <command-line>:\r\nC:/msys64/mingw64/include/wx-3.0/wx/html/htmlpars.h: In static member function 'static wxHtmlTagHandlersHash_wxImplementation_HashTable::Node* wxHtmlTagHandlersHash_wxImplementation_HashTable::CopyNode(wxHtmlTagHandlersHash_wxImplementation_HashTable::Node*)':\r\nC:/msys64/mingw64/include/wx-3.0/wx/html/htmlpars.h:34:1: error: no matching function for call to 'operator new(sizetype, int, const char [52], int)'\r\n   34 | WX_DECLARE_STRING_HASH_MAP_WITH_DECL(wxHtmlTagHandler*,\r\n      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from C:/msys64/mingw64/include/c++/9.3.0/ext/new_allocator.h:33,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/x86_64-w64-mingw32/bits/c++allocator.h:33,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/bits/allocator.h:46,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/string:41,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/stringimpl.h:66,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/unichar.h:15,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/strvararg.h:22,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/string.h:46,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/memory.h:15,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/object.h:19,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/wx.h:15,\r\n                 from C:/cygwin64/home/Carlo/audacity/src/AudacityHeaders.h:20,\r\n                 from C:/msys64/home/Carlo/a64/src/CMakeFiles/Audacity.dir/cmake_pch.hxx:5,\r\n                 from <command-line>:\r\nC:/msys64/mingw64/include/c++/9.3.0/new:125:26: note: candidate: 'void* operator new(std::size_t)'\r\n  125 | _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)\r\n      |                          ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:125:26: note:   candidate expects 1 argument, 4 provided\r\nC:/msys64/mingw64/include/c++/9.3.0/new:139:26: note: candidate: 'void* operator new(std::size_t, const std::nothrow_t&)'\r\n  139 | _GLIBCXX_NODISCARD void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT\r\n      |                          ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:139:26: note:   candidate expects 2 arguments, 4 provided\r\nC:/msys64/mingw64/include/c++/9.3.0/new:173:33: note: candidate: 'void* operator new(std::size_t, void*)'\r\n  173 | _GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT\r\n      |                                 ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:173:33: note:   candidate expects 2 arguments, 4 provided\r\nIn file included from C:/msys64/mingw64/include/wx-3.0/wx/wx.h:20,\r\n                 from C:/cygwin64/home/Carlo/audacity/src/AudacityHeaders.h:20,\r\n                 from C:/msys64/home/Carlo/a64/src/CMakeFiles/Audacity.dir/cmake_pch.hxx:5,\r\n                 from <command-line>:\r\nC:/msys64/mingw64/include/wx-3.0/wx/html/htmlpars.h: In member function 'wxHtmlTagHandlersHash_wxImplementation_HashTable::Node* wxHtmlTagHandlersHash_wxImplementation_HashTable::CreateNode(const value_type&, size_t)':\r\nC:/msys64/mingw64/include/wx-3.0/wx/html/htmlpars.h:34:1: error: no matching function for call to 'operator new(sizetype, int, const char [52], int)'\r\n   34 | WX_DECLARE_STRING_HASH_MAP_WITH_DECL(wxHtmlTagHandler*,\r\n      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from C:/msys64/mingw64/include/c++/9.3.0/ext/new_allocator.h:33,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/x86_64-w64-mingw32/bits/c++allocator.h:33,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/bits/allocator.h:46,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/string:41,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/stringimpl.h:66,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/unichar.h:15,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/strvararg.h:22,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/string.h:46,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/memory.h:15,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/object.h:19,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/wx.h:15,\r\n                 from C:/cygwin64/home/Carlo/audacity/src/AudacityHeaders.h:20,\r\n                 from C:/msys64/home/Carlo/a64/src/CMakeFiles/Audacity.dir/cmake_pch.hxx:5,\r\n                 from <command-line>:\r\nC:/msys64/mingw64/include/c++/9.3.0/new:125:26: note: candidate: 'void* operator new(std::size_t)'\r\n  125 | _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)\r\n      |                          ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:125:26: note:   candidate expects 1 argument, 4 provided\r\nC:/msys64/mingw64/include/c++/9.3.0/new:139:26: note: candidate: 'void* operator new(std::size_t, const std::nothrow_t&)'\r\n  139 | _GLIBCXX_NODISCARD void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT\r\n      |                          ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:139:26: note:   candidate expects 2 arguments, 4 provided\r\nC:/msys64/mingw64/include/c++/9.3.0/new:173:33: note: candidate: 'void* operator new(std::size_t, void*)'\r\n  173 | _GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT\r\n      |                                 ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:173:33: note:   candidate expects 2 arguments, 4 provided\r\nIn file included from C:/msys64/mingw64/include/wx-3.0/wx/html/htmlwin.h:19,\r\n                 from C:/cygwin64/home/Carlo/audacity/src/AboutDialog.cpp:34:\r\nC:/msys64/mingw64/include/wx-3.0/wx/html/winpars.h: In member function 'void wxHtmlWinParser::AddWord(const wxString&)':\r\nC:/msys64/mingw64/include/wx-3.0/wx/html/winpars.h:176:54: error: no matching function for call to 'operator new(sizetype, int, const char [51], int)'\r\n  176 |         { AddWord(new wxHtmlWordCell(word, *(GetDC()))); }\r\n      |                                                      ^\r\nIn file included from C:/msys64/mingw64/include/c++/9.3.0/ext/new_allocator.h:33,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/x86_64-w64-mingw32/bits/c++allocator.h:33,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/bits/allocator.h:46,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/string:41,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/stringimpl.h:66,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/unichar.h:15,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/strvararg.h:22,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/string.h:46,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/memory.h:15,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/object.h:19,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/wx.h:15,\r\n                 from C:/cygwin64/home/Carlo/audacity/src/AudacityHeaders.h:20,\r\n                 from C:/msys64/home/Carlo/a64/src/CMakeFiles/Audacity.dir/cmake_pch.hxx:5,\r\n                 from <command-line>:\r\nC:/msys64/mingw64/include/c++/9.3.0/new:125:26: note: candidate: 'void* operator new(std::size_t)'\r\n  125 | _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)\r\n      |                          ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:125:26: note:   candidate expects 1 argument, 4 provided\r\nC:/msys64/mingw64/include/c++/9.3.0/new:139:26: note: candidate: 'void* operator new(std::size_t, const std::nothrow_t&)'\r\n  139 | _GLIBCXX_NODISCARD void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT\r\n      |                          ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:139:26: note:   candidate expects 2 arguments, 4 provided\r\nC:/msys64/mingw64/include/c++/9.3.0/new:173:33: note: candidate: 'void* operator new(std::size_t, void*)'\r\n  173 | _GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT\r\n      |                                 ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:173:33: note:   candidate expects 2 arguments, 4 provided\r\nIn file included from C:/cygwin64/home/Carlo/audacity/src/AboutDialog.cpp:34:\r\nC:/msys64/mingw64/include/wx-3.0/wx/html/htmlwin.h: In member function 'virtual wxHtmlFilter* wxHtmlWindow::GetDefaultFilter()':\r\nC:/msys64/mingw64/include/wx-3.0/wx/html/htmlwin.h:421:58: error: no matching function for call to 'operator new(sizetype, int, const char [51], int)'\r\n  421 |     virtual wxHtmlFilter *GetDefaultFilter() {return new wxHtmlFilterPlainText;}\r\n      |                                                          ^~~~~~~~~~~~~~~~~~~~~\r\nIn file included from C:/msys64/mingw64/include/c++/9.3.0/ext/new_allocator.h:33,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/x86_64-w64-mingw32/bits/c++allocator.h:33,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/bits/allocator.h:46,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/string:41,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/stringimpl.h:66,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/unichar.h:15,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/strvararg.h:22,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/string.h:46,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/memory.h:15,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/object.h:19,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/wx.h:15,\r\n                 from C:/cygwin64/home/Carlo/audacity/src/AudacityHeaders.h:20,\r\n                 from C:/msys64/home/Carlo/a64/src/CMakeFiles/Audacity.dir/cmake_pch.hxx:5,\r\n                 from <command-line>:\r\nC:/msys64/mingw64/include/c++/9.3.0/new:125:26: note: candidate: 'void* operator new(std::size_t)'\r\n  125 | _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)\r\n      |                          ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:125:26: note:   candidate expects 1 argument, 4 provided\r\nC:/msys64/mingw64/include/c++/9.3.0/new:139:26: note: candidate: 'void* operator new(std::size_t, const std::nothrow_t&)'\r\n  139 | _GLIBCXX_NODISCARD void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT\r\n      |                          ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:139:26: note:   candidate expects 2 arguments, 4 provided\r\nC:/msys64/mingw64/include/c++/9.3.0/new:173:33: note: candidate: 'void* operator new(std::size_t, void*)'\r\n  173 | _GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT\r\n      |                                 ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:173:33: note:   candidate expects 2 arguments, 4 provided\r\nIn file included from C:/cygwin64/home/Carlo/audacity/src/AboutDialog.cpp:34:\r\nC:/msys64/mingw64/include/wx-3.0/wx/html/htmlwin.h: In member function 'virtual wxEvent* wxHtmlCellEvent::Clone() const':\r\nC:/msys64/mingw64/include/wx-3.0/wx/html/htmlwin.h:594:70: error: no matching function for call to 'operator new(sizetype, int, const char [51], int)'\r\n  594 |     virtual wxEvent *Clone() const { return new wxHtmlCellEvent(*this); }\r\n      |                                                                      ^\r\nIn file included from C:/msys64/mingw64/include/c++/9.3.0/ext/new_allocator.h:33,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/x86_64-w64-mingw32/bits/c++allocator.h:33,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/bits/allocator.h:46,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/string:41,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/stringimpl.h:66,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/unichar.h:15,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/strvararg.h:22,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/string.h:46,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/memory.h:15,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/object.h:19,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/wx.h:15,\r\n                 from C:/cygwin64/home/Carlo/audacity/src/AudacityHeaders.h:20,\r\n                 from C:/msys64/home/Carlo/a64/src/CMakeFiles/Audacity.dir/cmake_pch.hxx:5,\r\n                 from <command-line>:\r\nC:/msys64/mingw64/include/c++/9.3.0/new:125:26: note: candidate: 'void* operator new(std::size_t)'\r\n  125 | _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)\r\n      |                          ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:125:26: note:   candidate expects 1 argument, 4 provided\r\nC:/msys64/mingw64/include/c++/9.3.0/new:139:26: note: candidate: 'void* operator new(std::size_t, const std::nothrow_t&)'\r\n  139 | _GLIBCXX_NODISCARD void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT\r\n      |                          ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:139:26: note:   candidate expects 2 arguments, 4 provided\r\nC:/msys64/mingw64/include/c++/9.3.0/new:173:33: note: candidate: 'void* operator new(std::size_t, void*)'\r\n  173 | _GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT\r\n      |                                 ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:173:33: note:   candidate expects 2 arguments, 4 provided\r\nIn file included from C:/cygwin64/home/Carlo/audacity/src/AboutDialog.cpp:34:\r\nC:/msys64/mingw64/include/wx-3.0/wx/html/htmlwin.h: In member function 'virtual wxEvent* wxHtmlLinkEvent::Clone() const':\r\nC:/msys64/mingw64/include/wx-3.0/wx/html/htmlwin.h:625:70: error: no matching function for call to 'operator new(sizetype, int, const char [51], int)'\r\n  625 |     virtual wxEvent *Clone() const { return new wxHtmlLinkEvent(*this); }\r\n      |                                                                      ^\r\nIn file included from C:/msys64/mingw64/include/c++/9.3.0/ext/new_allocator.h:33,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/x86_64-w64-mingw32/bits/c++allocator.h:33,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/bits/allocator.h:46,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/string:41,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/stringimpl.h:66,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/unichar.h:15,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/strvararg.h:22,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/string.h:46,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/memory.h:15,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/object.h:19,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/wx.h:15,\r\n                 from C:/cygwin64/home/Carlo/audacity/src/AudacityHeaders.h:20,\r\n                 from C:/msys64/home/Carlo/a64/src/CMakeFiles/Audacity.dir/cmake_pch.hxx:5,\r\n                 from <command-line>:\r\nC:/msys64/mingw64/include/c++/9.3.0/new:125:26: note: candidate: 'void* operator new(std::size_t)'\r\n  125 | _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)\r\n      |                          ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:125:26: note:   candidate expects 1 argument, 4 provided\r\nC:/msys64/mingw64/include/c++/9.3.0/new:139:26: note: candidate: 'void* operator new(std::size_t, const std::nothrow_t&)'\r\n  139 | _GLIBCXX_NODISCARD void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT\r\n      |                          ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:139:26: note:   candidate expects 2 arguments, 4 provided\r\nC:/msys64/mingw64/include/c++/9.3.0/new:173:33: note: candidate: 'void* operator new(std::size_t, void*)'\r\n  173 | _GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT\r\n      |                                 ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:173:33: note:   candidate expects 2 arguments, 4 provided\r\nIn file included from C:/cygwin64/home/Carlo/audacity/src/ShuttleGui.h:23,\r\n                 from C:/cygwin64/home/Carlo/audacity/src/AboutDialog.cpp:45:\r\nC:/msys64/mingw64/include/wx-3.0/wx/listbase.h: In copy constructor 'wxListItem::wxListItem(const wxListItem&)':\r\nC:/msys64/mingw64/include/wx-3.0/wx/listbase.h:239:62: error: no matching function for call to 'operator new(sizetype, int, const char [47], int)'\r\n  239 |             m_attr = new wxListItemAttr(*item.GetAttributes());\r\n      |                                                              ^\r\nIn file included from C:/msys64/mingw64/include/c++/9.3.0/ext/new_allocator.h:33,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/x86_64-w64-mingw32/bits/c++allocator.h:33,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/bits/allocator.h:46,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/string:41,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/stringimpl.h:66,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/unichar.h:15,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/strvararg.h:22,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/string.h:46,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/memory.h:15,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/object.h:19,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/wx.h:15,\r\n                 from C:/cygwin64/home/Carlo/audacity/src/AudacityHeaders.h:20,\r\n                 from C:/msys64/home/Carlo/a64/src/CMakeFiles/Audacity.dir/cmake_pch.hxx:5,\r\n                 from <command-line>:\r\nC:/msys64/mingw64/include/c++/9.3.0/new:125:26: note: candidate: 'void* operator new(std::size_t)'\r\n  125 | _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)\r\n      |                          ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:125:26: note:   candidate expects 1 argument, 4 provided\r\nC:/msys64/mingw64/include/c++/9.3.0/new:139:26: note: candidate: 'void* operator new(std::size_t, const std::nothrow_t&)'\r\n  139 | _GLIBCXX_NODISCARD void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT\r\n      |                          ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:139:26: note:   candidate expects 2 arguments, 4 provided\r\nC:/msys64/mingw64/include/c++/9.3.0/new:173:33: note: candidate: 'void* operator new(std::size_t, void*)'\r\n  173 | _GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT\r\n      |                                 ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:173:33: note:   candidate expects 2 arguments, 4 provided\r\nIn file included from C:/cygwin64/home/Carlo/audacity/src/ShuttleGui.h:23,\r\n                 from C:/cygwin64/home/Carlo/audacity/src/AboutDialog.cpp:45:\r\nC:/msys64/mingw64/include/wx-3.0/wx/listbase.h: In member function 'wxListItem& wxListItem::operator=(const wxListItem&)':\r\nC:/msys64/mingw64/include/wx-3.0/wx/listbase.h:256:67: error: no matching function for call to 'operator new(sizetype, int, const char [47], int)'\r\n  256 |             m_attr = item.m_attr ? new wxListItemAttr(*item.m_attr) : NULL;\r\n      |                                                                   ^\r\nIn file included from C:/msys64/mingw64/include/c++/9.3.0/ext/new_allocator.h:33,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/x86_64-w64-mingw32/bits/c++allocator.h:33,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/bits/allocator.h:46,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/string:41,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/stringimpl.h:66,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/unichar.h:15,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/strvararg.h:22,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/string.h:46,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/memory.h:15,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/object.h:19,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/wx.h:15,\r\n                 from C:/cygwin64/home/Carlo/audacity/src/AudacityHeaders.h:20,\r\n                 from C:/msys64/home/Carlo/a64/src/CMakeFiles/Audacity.dir/cmake_pch.hxx:5,\r\n                 from <command-line>:\r\nC:/msys64/mingw64/include/c++/9.3.0/new:125:26: note: candidate: 'void* operator new(std::size_t)'\r\n  125 | _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)\r\n      |                          ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:125:26: note:   candidate expects 1 argument, 4 provided\r\nC:/msys64/mingw64/include/c++/9.3.0/new:139:26: note: candidate: 'void* operator new(std::size_t, const std::nothrow_t&)'\r\n  139 | _GLIBCXX_NODISCARD void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT\r\n      |                          ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:139:26: note:   candidate expects 2 arguments, 4 provided\r\nC:/msys64/mingw64/include/c++/9.3.0/new:173:33: note: candidate: 'void* operator new(std::size_t, void*)'\r\n  173 | _GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT\r\n      |                                 ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:173:33: note:   candidate expects 2 arguments, 4 provided\r\nIn file included from C:/cygwin64/home/Carlo/audacity/src/ShuttleGui.h:23,\r\n                 from C:/cygwin64/home/Carlo/audacity/src/AboutDialog.cpp:45:\r\nC:/msys64/mingw64/include/wx-3.0/wx/listbase.h: In member function 'wxListItemAttr& wxListItem::Attributes()':\r\nC:/msys64/mingw64/include/wx-3.0/wx/listbase.h:351:26: error: no matching function for call to 'operator new(sizetype, int, const char [47], int)'\r\n  351 |             m_attr = new wxListItemAttr;\r\n      |                          ^~~~~~~~~~~~~~\r\nIn file included from C:/msys64/mingw64/include/c++/9.3.0/ext/new_allocator.h:33,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/x86_64-w64-mingw32/bits/c++allocator.h:33,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/bits/allocator.h:46,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/string:41,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/stringimpl.h:66,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/unichar.h:15,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/strvararg.h:22,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/string.h:46,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/memory.h:15,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/object.h:19,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/wx.h:15,\r\n                 from C:/cygwin64/home/Carlo/audacity/src/AudacityHeaders.h:20,\r\n                 from C:/msys64/home/Carlo/a64/src/CMakeFiles/Audacity.dir/cmake_pch.hxx:5,\r\n                 from <command-line>:\r\nC:/msys64/mingw64/include/c++/9.3.0/new:125:26: note: candidate: 'void* operator new(std::size_t)'\r\n  125 | _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)\r\n      |                          ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:125:26: note:   candidate expects 1 argument, 4 provided\r\nC:/msys64/mingw64/include/c++/9.3.0/new:139:26: note: candidate: 'void* operator new(std::size_t, const std::nothrow_t&)'\r\n  139 | _GLIBCXX_NODISCARD void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT\r\n      |                          ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:139:26: note:   candidate expects 2 arguments, 4 provided\r\nC:/msys64/mingw64/include/c++/9.3.0/new:173:33: note: candidate: 'void* operator new(std::size_t, void*)'\r\n  173 | _GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT\r\n      |                                 ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:173:33: note:   candidate expects 2 arguments, 4 provided\r\nIn file included from C:/cygwin64/home/Carlo/audacity/src/ShuttleGui.h:23,\r\n                 from C:/cygwin64/home/Carlo/audacity/src/AboutDialog.cpp:45:\r\nC:/msys64/mingw64/include/wx-3.0/wx/listbase.h: In member function 'virtual wxEvent* wxListEvent::Clone() const':\r\nC:/msys64/mingw64/include/wx-3.0/wx/listbase.h:533:66: error: no matching function for call to 'operator new(sizetype, int, const char [47], int)'\r\n  533 |     virtual wxEvent *Clone() const { return new wxListEvent(*this); }\r\n      |                                                                  ^\r\nIn file included from C:/msys64/mingw64/include/c++/9.3.0/ext/new_allocator.h:33,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/x86_64-w64-mingw32/bits/c++allocator.h:33,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/bits/allocator.h:46,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/string:41,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/stringimpl.h:66,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/unichar.h:15,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/strvararg.h:22,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/string.h:46,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/memory.h:15,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/object.h:19,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/wx.h:15,\r\n                 from C:/cygwin64/home/Carlo/audacity/src/AudacityHeaders.h:20,\r\n                 from C:/msys64/home/Carlo/a64/src/CMakeFiles/Audacity.dir/cmake_pch.hxx:5,\r\n                 from <command-line>:\r\nC:/msys64/mingw64/include/c++/9.3.0/new:125:26: note: candidate: 'void* operator new(std::size_t)'\r\n  125 | _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)\r\n      |                          ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:125:26: note:   candidate expects 1 argument, 4 provided\r\nC:/msys64/mingw64/include/c++/9.3.0/new:139:26: note: candidate: 'void* operator new(std::size_t, const std::nothrow_t&)'\r\n  139 | _GLIBCXX_NODISCARD void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT\r\n      |                          ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:139:26: note:   candidate expects 2 arguments, 4 provided\r\nC:/msys64/mingw64/include/c++/9.3.0/new:173:33: note: candidate: 'void* operator new(std::size_t, void*)'\r\n  173 | _GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT\r\n      |                                 ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:173:33: note:   candidate expects 2 arguments, 4 provided\r\nC:/cygwin64/home/Carlo/audacity/src/AboutDialog.cpp: In member function 'void AboutDialog::PopulateAudacityPage(ShuttleGui&)':\r\nC:/cygwin64/home/Carlo/audacity/src/AboutDialog.cpp:478:85: error: no matching function for call to 'operator new(sizetype, int, const char [52], int)'\r\n  478 |          wxSize((int)(LOGOWITHNAME_WIDTH*fScale), (int)(LOGOWITHNAME_HEIGHT*fScale)));\r\n      |                                                                                     ^\r\nIn file included from C:/msys64/mingw64/include/c++/9.3.0/ext/new_allocator.h:33,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/x86_64-w64-mingw32/bits/c++allocator.h:33,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/bits/allocator.h:46,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/string:41,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/stringimpl.h:66,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/unichar.h:15,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/strvararg.h:22,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/string.h:46,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/memory.h:15,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/object.h:19,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/wx.h:15,\r\n                 from C:/cygwin64/home/Carlo/audacity/src/AudacityHeaders.h:20,\r\n                 from C:/msys64/home/Carlo/a64/src/CMakeFiles/Audacity.dir/cmake_pch.hxx:5,\r\n                 from <command-line>:\r\nC:/msys64/mingw64/include/c++/9.3.0/new:125:26: note: candidate: 'void* operator new(std::size_t)'\r\n  125 | _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)\r\n      |                          ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:125:26: note:   candidate expects 1 argument, 4 provided\r\nC:/msys64/mingw64/include/c++/9.3.0/new:139:26: note: candidate: 'void* operator new(std::size_t, const std::nothrow_t&)'\r\n  139 | _GLIBCXX_NODISCARD void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT\r\n      |                          ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:139:26: note:   candidate expects 2 arguments, 4 provided\r\nC:/msys64/mingw64/include/c++/9.3.0/new:173:33: note: candidate: 'void* operator new(std::size_t, void*)'\r\n  173 | _GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT\r\n      |                                 ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:173:33: note:   candidate expects 2 arguments, 4 provided\r\nC:/cygwin64/home/Carlo/audacity/src/AboutDialog.cpp:485:79: error: no matching function for call to 'operator new(sizetype, int, const char [52], int)'\r\n  485 |                                          wxHW_SCROLLBAR_AUTO | wxSUNKEN_BORDER);\r\n      |                                                                               ^\r\nIn file included from C:/msys64/mingw64/include/c++/9.3.0/ext/new_allocator.h:33,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/x86_64-w64-mingw32/bits/c++allocator.h:33,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/bits/allocator.h:46,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/string:41,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/stringimpl.h:66,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/unichar.h:15,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/strvararg.h:22,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/string.h:46,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/memory.h:15,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/object.h:19,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/wx.h:15,\r\n                 from C:/cygwin64/home/Carlo/audacity/src/AudacityHeaders.h:20,\r\n                 from C:/msys64/home/Carlo/a64/src/CMakeFiles/Audacity.dir/cmake_pch.hxx:5,\r\n                 from <command-line>:\r\nC:/msys64/mingw64/include/c++/9.3.0/new:125:26: note: candidate: 'void* operator new(std::size_t)'\r\n  125 | _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)\r\n      |                          ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:125:26: note:   candidate expects 1 argument, 4 provided\r\nC:/msys64/mingw64/include/c++/9.3.0/new:139:26: note: candidate: 'void* operator new(std::size_t, const std::nothrow_t&)'\r\n  139 | _GLIBCXX_NODISCARD void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT\r\n      |                          ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:139:26: note:   candidate expects 2 arguments, 4 provided\r\nC:/msys64/mingw64/include/c++/9.3.0/new:173:33: note: candidate: 'void* operator new(std::size_t, void*)'\r\n  173 | _GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT\r\n      |                                 ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:173:33: note:   candidate expects 2 arguments, 4 provided\r\nC:/cygwin64/home/Carlo/audacity/src/AboutDialog.cpp: In member function 'void AboutDialog::PopulateInformationPage(ShuttleGui&)':\r\nC:/cygwin64/home/Carlo/audacity/src/AboutDialog.cpp:509:65: error: no matching function for call to 'operator new(sizetype, int, const char [52], int)'\r\n  509 |                            wxHW_SCROLLBAR_AUTO | wxSUNKEN_BORDER);\r\n      |                                                                 ^\r\nIn file included from C:/msys64/mingw64/include/c++/9.3.0/ext/new_allocator.h:33,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/x86_64-w64-mingw32/bits/c++allocator.h:33,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/bits/allocator.h:46,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/string:41,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/stringimpl.h:66,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/unichar.h:15,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/strvararg.h:22,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/string.h:46,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/memory.h:15,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/object.h:19,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/wx.h:15,\r\n                 from C:/cygwin64/home/Carlo/audacity/src/AudacityHeaders.h:20,\r\n                 from C:/msys64/home/Carlo/a64/src/CMakeFiles/Audacity.dir/cmake_pch.hxx:5,\r\n                 from <command-line>:\r\nC:/msys64/mingw64/include/c++/9.3.0/new:125:26: note: candidate: 'void* operator new(std::size_t)'\r\n  125 | _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)\r\n      |                          ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:125:26: note:   candidate expects 1 argument, 4 provided\r\nC:/msys64/mingw64/include/c++/9.3.0/new:139:26: note: candidate: 'void* operator new(std::size_t, const std::nothrow_t&)'\r\n  139 | _GLIBCXX_NODISCARD void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT\r\n      |                          ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:139:26: note:   candidate expects 2 arguments, 4 provided\r\nC:/msys64/mingw64/include/c++/9.3.0/new:173:33: note: candidate: 'void* operator new(std::size_t, void*)'\r\n  173 | _GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT\r\n      |                                 ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:173:33: note:   candidate expects 2 arguments, 4 provided\r\nC:/cygwin64/home/Carlo/audacity/src/AboutDialog.cpp: In member function 'void AboutDialog::PopulateLicensePage(ShuttleGui&)':\r\nC:/cygwin64/home/Carlo/audacity/src/AboutDialog.cpp:772:79: error: no matching function for call to 'operator new(sizetype, int, const char [52], int)'\r\n  772 |                                          wxHW_SCROLLBAR_AUTO | wxSUNKEN_BORDER);\r\n      |                                                                               ^\r\nIn file included from C:/msys64/mingw64/include/c++/9.3.0/ext/new_allocator.h:33,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/x86_64-w64-mingw32/bits/c++allocator.h:33,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/bits/allocator.h:46,\r\n                 from C:/msys64/mingw64/include/c++/9.3.0/string:41,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/stringimpl.h:66,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/unichar.h:15,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/strvararg.h:22,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/string.h:46,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/memory.h:15,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/object.h:19,\r\n                 from C:/msys64/mingw64/include/wx-3.0/wx/wx.h:15,\r\n                 from C:/cygwin64/home/Carlo/audacity/src/AudacityHeaders.h:20,\r\n                 from C:/msys64/home/Carlo/a64/src/CMakeFiles/Audacity.dir/cmake_pch.hxx:5,\r\n                 from <command-line>:\r\nC:/msys64/mingw64/include/c++/9.3.0/new:125:26: note: candidate: 'void* operator new(std::size_t)'\r\n  125 | _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)\r\n      |                          ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:125:26: note:   candidate expects 1 argument, 4 provided\r\nC:/msys64/mingw64/include/c++/9.3.0/new:139:26: note: candidate: 'void* operator new(std::size_t, const std::nothrow_t&)'\r\n  139 | _GLIBCXX_NODISCARD void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT\r\n      |                          ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:139:26: note:   candidate expects 2 arguments, 4 provided\r\nC:/msys64/mingw64/include/c++/9.3.0/new:173:33: note: candidate: 'void* operator new(std::size_t, void*)'\r\n  173 | _GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT\r\n      |                                 ^~~~~~~~\r\nC:/msys64/mingw64/include/c++/9.3.0/new:173:33: note:   candidate expects 2 arguments, 4 provided\r\nmake[2]: *** [src/CMakeFiles/Audacity.dir/build.make:111: src/CMakeFiles/Audacity.dir/AboutDialog.cpp.obj] Errore 1\r\nmake[2]: uscita dalla directory \u00ab/home/Carlo/a64\u00bb\r\nmake[1]: *** [CMakeFiles/Makefile2:1014: src/CMakeFiles/Audacity.dir/all] Errore 2\r\nmake[1]: uscita dalla directory \u00ab/home/Carlo/a64\u00bb\r\nmake: *** [Makefile:147: all] Errore 2\r\n```\r\nAt the moment I have no idea of the cause and from which commit the problem started to happen.", "Hi Carlo.\r\n\r\nWe no longer support wxWidgets 3.0.  Audacity 2.4.2 will be using wx3.1.3, https://github.com/audacity/wxWidgets our audacity-fixes-3.1.3 branch.\r\n\r\nAlso, on Windows, for Windows, we build with MSVC 2017, not mingw.\r\n =||= I see.\r\nPerhaps, if Audacity is not expected to work anymore with something less than 3.1.x branches, it would be worth to check version of wxWidgets at configure time and return an error if not supported.\r\n\r\nEDIT: the cause of this problem does not seem to be related to the version of wxWidgets. =||= > \r\n> \r\n> I see.\r\n> Perhaps, if Audacity is not expected to work anymore with something less than 3.1.x branches, it would be worth to check version of wxWidgets at configure time and return an error if not supported.\r\n> \r\nWe are having discussions along those lines actually.  Just not sure exactly how we're going to handle it yet. =||= One possible solution for you would be to pass the following to CMake.  This will download and build with our copy of wxWidgets:\r\n\r\n-Daudacity_use_wxwidgets=local\r\n\r\n =||= I think that I have found the cause of the issue.\r\nInside `src/AudacityHeaders.h` there is this piece of code:\r\n```\r\n#ifdef __WXMSW__\r\n#ifdef _DEBUG\r\n#define _CRTDBG_MAP_ALLOC\r\n#include <crtdbg.h>\r\n#undef new\r\n#define DEBUG_NEW new(_NORMAL_BLOCK, __FILE__, __LINE__)\r\n#define new DEBUG_NEW\r\n#endif\r\n#endif\r\n```\r\nI commented it and I could again compile all sources in MinGW+MSYS2.\r\nPerhaps, this code is tolerated by Visual Studio, but we cannot tell the same thing with GNU C++ library, and its usage should be limited to MSVC. I don't know... but I think that expert developers with wxWidgets will surely know better.\r\nAnother strange thing is that I already compiled Audacity with MinGW+MSYS2 in the past, but I don't remember that I have seen this piece of code changed. =||= AAAHHH.  Yes, I see your point.  Try changing that __WXMSW__ to _MSC_VER.  If it works, submit a pull request and I'll merge it. =||= After commit bf5cd11a435bc9520beffb4c37f7941414b1e37f, this issue seems fixed to me and it could be closed. Thank you. =||= "], ["537", "How to add same effect to rest or another audio? Is there a \"format painter\" to clone formatting/effect?", null, "nazar2sfive", "05/31/20, 08:44:20 PM", "i spent my 30 minutes to create a cool audio \"1\".\r\nnow i don't remember where i went and what settings i changed in that period.\r\ni again record second audio.\r\nhow can i apply the same settings to the new recorded audio \"2\"?\r\n\r\n![image](https://user-images.githubusercontent.com/12841320/82778560-79ca1000-9e71-11ea-91d5-261fea5d0ad2.png)\r", "For advice and assistance in using Audacity, please ask for help on the forum.   =||= "], ["538", "audacity crashes on resize (fit to height)", "David Runge", "dvzrv", "05/30/20, 05:10:38 AM", "**Describe the bug**\r\nIt seems that audacity 2.4.1 on Arch Linux suffers from a bug in regards to resizing to \"fit to height\" ([upstream report](https://bugs.archlinux.org/task/66771)).\r\n\r\n**To Reproduce**\r\nSteps to reproduce:\r\n* Create a track to work with (Generate > Tone, for example) or open an audio file.\r\n* Select Track Size > Fit to Height from the View menu.\r\n* App crashes without displaying the usual crash dialog.\r\n\r\n**Expected behavior**\r\nAudacity does not crash\r\n\r\n**Screenshots**\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Arch Linux\r\n - Version Audacity 2.4.1\r\n\r\n**Additional context**\r\nAccording to the forum post linked to in the downstream ticket @SteveDaulton mentions, that this is [a \"known problem\" due to autotools being used instead of cmake](https://forum.audacityteam.org/viewtopic.php?p=395731#p395731).\r\nWhile I generally welcome the switch to cmake, I find the above statement rather interesting as I can not find any information about this *known issue* on this issue tracker, [on the old issue tracker](https://bugzilla.audacityteam.org/buglist.cgi?bug_status=__all__&content=resize&no_redirect=1&order=Importance&product=&query_format=specific) or in the release notes of 2.4.0 or 2.4.1.\r\n\r\nGiven, that the cmake setup enforces the use of python2 (#520) (which the autotools setup does not) and has numerous other unresolved issues (#519, #521, #522) the new setup is currently not really a viable alternative.\r\n\r\nFrom a packaging perspective it would have been nice to have more transparency about the new cmake setup and a longer grace period in regards to it as this is a lot of additional work, that could have been avoided.", "Here is a stacktrace using coredumpctl of this crash:\r\n\r\n```\r\n           PID: 1785675 (audacity)\r\n           UID: 1000 (dave)\r\n           GID: 1000 (dave)\r\n        Signal: 11 (SEGV)\r\n     Timestamp: Mon 2020-05-25 20:08:23 CEST (4min 43s ago)\r\n  Command Line: audacity\r\n    Executable: /usr/bin/audacity\r\n Control Group: /user.slice/user-1000.slice/session-2.scope\r\n          Unit: session-2.scope\r\n         Slice: user-1000.slice\r\n       Session: 2\r\n     Owner UID: 1000 (dave)\r\n       Boot ID: 865656356fcb4728b4901fea125a8be3\r\n    Machine ID: c14dea973584408b98c4c1f443221ed8\r\n      Hostname: dvzrv\r\n       Storage: /var/lib/systemd/coredump/core.audacity.1000.865656356fcb4728b4901fea125a8be3.1785675.1590430103000000000000.lz4\r\n       Message: Process 1785675 (audacity) of user 1000 dumped core.\r\n                \r\n                Stack trace of thread 1785675:\r\n                #0  0x0000562126427e27 _ZN11ViewActions7Handler10OnZoomFitVERK14CommandContext (audacity + 0xa3ce27)\r\n                #1  0x000056212622dc85 _ZN14CommandManager18HandleCommandEntryER15AudacityProjectPK16CommandListEntrySt6bitsetILm64EEbPK7wxEvent (audacity + 0x842c85)\r\n                #2  0x0000562126232ac6 _ZN14CommandManager12HandleMenuIDER15AudacityProjectiSt6bitsetILm64EEb (audacity + 0x847ac6)\r\n                #3  0x00005621261689f0 _ZN13ProjectWindow6OnMenuER14wxCommandEvent (audacity + 0x77d9f0)\r\n                #4  0x00007f26fae64dee _ZN12wxEvtHandler23ProcessEventIfMatchesIdERK21wxEventTableEntryBasePS_R7wxEvent (libwx_baseu-3.0.so.0 + 0x1dedee)\r\n                #5  0x00007f26fae64eec _ZN16wxEventHashTable11HandleEventER7wxEventP12wxEvtHandler (libwx_baseu-3.0.so.0 + 0x1deeec)\r\n                #6  0x00007f26fae6522e _ZN12wxEvtHandler11TryHereOnlyER7wxEvent (libwx_baseu-3.0.so.0 + 0x1df22e)\r\n                #7  0x00007f26fae650a3 _ZN12wxEvtHandler10DoTryChainER7wxEvent (libwx_baseu-3.0.so.0 + 0x1df0a3)\r\n                #8  0x00007f26fae65392 _ZN12wxEvtHandler12ProcessEventER7wxEvent (libwx_baseu-3.0.so.0 + 0x1df392)\r\n                #9  0x00007f26fb3bbcba _ZN12wxWindowBase8TryAfterER7wxEvent (libwx_gtk3u_core-3.0.so.0 + 0x45ecba)\r\n                #10 0x00007f26fae650e7 _ZN12wxEvtHandler18SafelyProcessEventER7wxEvent (libwx_baseu-3.0.so.0 + 0x1df0e7)\r\n                #11 0x00007f26fb36d63f _ZN10wxMenuBase9SendEventEii (libwx_gtk3u_core-3.0.so.0 + 0x41063f)\r\n                #12 0x00007f26fb261c20 menuitem_activate (libwx_gtk3u_core-3.0.so.0 + 0x304c20)\r\n                #13 0x00007f26fa14a052 g_closure_invoke (libgobject-2.0.so.0 + 0x13052)\r\n                #14 0x00007f26fa172685 signal_emit_unlocked_R.isra.0 (libgobject-2.0.so.0 + 0x3b685)\r\n                #15 0x00007f26fa16641d g_signal_emit_valist (libgobject-2.0.so.0 + 0x2f41d)\r\n                #16 0x00007f26fa166980 g_signal_emit (libgobject-2.0.so.0 + 0x2f980)\r\n                #17 0x00007f26fa3ee0db gtk_widget_activate (libgtk-3.so.0 + 0x13f0db)\r\n                #18 0x00007f26fa52395d gtk_menu_shell_activate_item (libgtk-3.so.0 + 0x27495d)\r\n                #19 0x00007f26fa526494 gtk_menu_shell_button_release (libgtk-3.so.0 + 0x277494)\r\n                #20 0x00007f26fa686e1c _gtk_marshal_BOOLEAN__BOXEDv (libgtk-3.so.0 + 0x3d7e1c)\r\n                #21 0x00007f26fa16680a g_signal_emit_valist (libgobject-2.0.so.0 + 0x2f80a)\r\n                #22 0x00007f26fa166980 g_signal_emit (libgobject-2.0.so.0 + 0x2f980)\r\n                #23 0x00007f26fa3efc26 gtk_widget_event_internal (libgtk-3.so.0 + 0x140c26)\r\n                #24 0x00007f26fa536095 propagate_event_up (libgtk-3.so.0 + 0x287095)\r\n                #25 0x00007f26fa53962c gtk_main_do_event (libgtk-3.so.0 + 0x28a62c)\r\n                #26 0x00007f26fa24a234 _gdk_event_emit (libgdk-3.so.0 + 0x95234)\r\n                #27 0x00007f26fa2196f4 gdk_event_source_dispatch (libgdk-3.so.0 + 0x646f4)\r\n                #28 0x00007f26fa06043c g_main_context_dispatch (libglib-2.0.so.0 + 0x5243c)\r\n                #29 0x00007f26fa0adfa9 g_main_context_iterate.constprop.0 (libglib-2.0.so.0 + 0x9ffa9)\r\n                #30 0x00007f26fa05ec03 g_main_loop_run (libglib-2.0.so.0 + 0x50c03)\r\n                #31 0x00007f26fa532c0f gtk_main (libgtk-3.so.0 + 0x283c0f)\r\n                #32 0x00007f26fb1ddb26 _ZN14wxGUIEventLoop5DoRunEv (libwx_gtk3u_core-3.0.so.0 + 0x280b26)\r\n                #33 0x00007f26fad3d36e _ZN15wxEventLoopBase3RunEv (libwx_baseu-3.0.so.0 + 0xb736e)\r\n                #34 0x00007f26fad03756 _ZN16wxAppConsoleBase8MainLoopEv (libwx_baseu-3.0.so.0 + 0x7d756)\r\n                #35 0x00007f26fad82189 _Z7wxEntryRiPPw (libwx_baseu-3.0.so.0 + 0xfc189)\r\n                #36 0x0000562125f2cb93 main (audacity + 0x541b93)\r\n                #37 0x00007f26f99e5002 __libc_start_main (libc.so.6 + 0x27002)\r\n                #38 0x0000562125fa71ee _start (audacity + 0x5bc1ee)\r\n                \r\n                Stack trace of thread 1785942:\r\n                #0  0x00007f26f9ed0e32 pthread_cond_wait@@GLIBC_2.3.2 (libpthread.so.0 + 0xfe32)\r\n                #1  0x00007f26f9f105f0 n/a (libjack.so.0 + 0x2d5f0)\r\n                #2  0x00007f26f9f07e16 n/a (libjack.so.0 + 0x24e16)\r\n                #3  0x00007f26f9f0fb1d n/a (libjack.so.0 + 0x2cb1d)\r\n                #4  0x00007f26f9eca422 start_thread (libpthread.so.0 + 0x9422)\r\n                #5  0x00007f26f9abdbf3 __clone (libc.so.6 + 0xffbf3)\r\n                \r\n                Stack trace of thread 1785679:\r\n                #0  0x00007f26f9ab305f __poll (libc.so.6 + 0xf505f)\r\n                #1  0x00007f26fa0adf38 g_main_context_iterate.constprop.0 (libglib-2.0.so.0 + 0x9ff38)\r\n                #2  0x00007f26fa05f221 g_main_context_iteration (libglib-2.0.so.0 + 0x51221)\r\n                #3  0x00007f26fb9ffe5e n/a (libdconfsettings.so + 0x4e5e)\r\n                #4  0x00007f26fa088511 g_thread_proxy (libglib-2.0.so.0 + 0x7a511)\r\n                #5  0x00007f26f9eca422 start_thread (libpthread.so.0 + 0x9422)\r\n                #6  0x00007f26f9abdbf3 __clone (libc.so.6 + 0xffbf3)\r\n                \r\n                Stack trace of thread 1785946:\r\n                #0  0x00007f26f9a85571 clock_nanosleep@@GLIBC_2.17 (libc.so.6 + 0xc7571)\r\n                #1  0x00007f26f9a8ae87 __nanosleep (libc.so.6 + 0xcce87)\r\n                #2  0x00007f26fae3e61d _Z12wxMicroSleepm (libwx_baseu-3.0.so.0 + 0x1b861d)\r\n                #3  0x000056212601c500 _ZN11AudioThread5EntryEv (audacity + 0x631500)\r\n                #4  0x00007f26fae3136a _ZN8wxThread9CallEntryEv (libwx_baseu-3.0.so.0 + 0x1ab36a)\r\n                #5  0x00007f26fae39b69 _ZN16wxThreadInternal12PthreadStartEP8wxThread (libwx_baseu-3.0.so.0 + 0x1b3b69)\r\n                #6  0x00007f26f9eca422 start_thread (libpthread.so.0 + 0x9422)\r\n                #7  0x00007f26f9abdbf3 __clone (libc.so.6 + 0xffbf3)\r\n                \r\n                Stack trace of thread 1785676:\r\n                #0  0x00007f26f9ab305f __poll (libc.so.6 + 0xf505f)\r\n                #1  0x00007f26fa0adf38 g_main_context_iterate.constprop.0 (libglib-2.0.so.0 + 0x9ff38)\r\n                #2  0x00007f26fa05f221 g_main_context_iteration (libglib-2.0.so.0 + 0x51221)\r\n                #3  0x00007f26fa05f272 glib_worker_main (libglib-2.0.so.0 + 0x51272)\r\n                #4  0x00007f26fa088511 g_thread_proxy (libglib-2.0.so.0 + 0x7a511)\r\n                #5  0x00007f26f9eca422 start_thread (libpthread.so.0 + 0x9422)\r\n                #6  0x00007f26f9abdbf3 __clone (libc.so.6 + 0xffbf3)\r\n                \r\n                Stack trace of thread 1785943:\r\n                #0  0x00007f26f9ed487c read (libpthread.so.0 + 0x1387c)\r\n                #1  0x00007f26f9f10d6f n/a (libjack.so.0 + 0x2dd6f)\r\n                #2  0x00007f26f9f15c59 n/a (libjack.so.0 + 0x32c59)\r\n                #3  0x00007f26f9f0fb1d n/a (libjack.so.0 + 0x2cb1d)\r\n                #4  0x00007f26f9eca422 start_thread (libpthread.so.0 + 0x9422)\r\n                #5  0x00007f26f9abdbf3 __clone (libc.so.6 + 0xffbf3)\r\n                \r\n                Stack trace of thread 1785944:\r\n                #0  0x00007f26f9ab871d syscall (libc.so.6 + 0xfa71d)\r\n                #1  0x00007f26f9f1193b n/a (libjack.so.0 + 0x2e93b)\r\n                #2  0x00007f26f9ef80c5 n/a (libjack.so.0 + 0x150c5)\r\n                #3  0x00007f26f9ef71f7 n/a (libjack.so.0 + 0x141f7)\r\n                #4  0x00007f26f9ef6a08 n/a (libjack.so.0 + 0x13a08)\r\n                #5  0x00007f26f9f0fb1d n/a (libjack.so.0 + 0x2cb1d)\r\n                #6  0x00007f26f9eca422 start_thread (libpthread.so.0 + 0x9422)\r\n                #7  0x00007f26f9abdbf3 __clone (libc.so.6 + 0xffbf3)\r\n                \r\n                Stack trace of thread 1785945:\r\n                #0  0x00007f26f9a85571 clock_nanosleep@@GLIBC_2.17 (libc.so.6 + 0xc7571)\r\n                #1  0x00007f26f9a8ae87 __nanosleep (libc.so.6 + 0xcce87)\r\n                #2  0x00007f26fae3e61d _Z12wxMicroSleepm (libwx_baseu-3.0.so.0 + 0x1b861d)\r\n                #3  0x0000562126017d92 _ZN10MidiThread5EntryEv (audacity + 0x62cd92)\r\n                #4  0x00007f26fae3136a _ZN8wxThread9CallEntryEv (libwx_baseu-3.0.so.0 + 0x1ab36a)\r\n                #5  0x00007f26fae39b69 _ZN16wxThreadInternal12PthreadStartEP8wxThread (libwx_baseu-3.0.so.0 + 0x1b3b69)\r\n                #6  0x00007f26f9eca422 start_thread (libpthread.so.0 + 0x9422)\r\n                #7  0x00007f26f9abdbf3 __clone (libc.so.6 + 0xffbf3)\r\n                \r\n                Stack trace of thread 1785678:\r\n                #0  0x00007f26f9ab305f __poll (libc.so.6 + 0xf505f)\r\n                #1  0x00007f26fa0adf38 g_main_context_iterate.constprop.0 (libglib-2.0.so.0 + 0x9ff38)\r\n                #2  0x00007f26fa05ec03 g_main_loop_run (libglib-2.0.so.0 + 0x50c03)\r\n                #3  0x00007f26f940c1a8 gdbus_shared_thread_func (libgio-2.0.so.0 + 0x1001a8)\r\n                #4  0x00007f26fa088511 g_thread_proxy (libglib-2.0.so.0 + 0x7a511)\r\n                #5  0x00007f26f9eca422 start_thread (libpthread.so.0 + 0x9422)\r\n                #6  0x00007f26f9abdbf3 __clone (libc.so.6 + 0xffbf3)\r\n\r\n``` =||= The \"Track Size > Fit to Height -> Crash\" issue was discussed on the developer's mailing list.\r\nI did not log it on the Audacity bug tracker because I was told by the release manager that autotools build chain is no longer supported, and I could not reproduce the issue with a cmake build.\r\n\r\nPersonally I think the Linux build.txt could be clearer, an no doubt will be in future versions, but it does already say to use cmake for building Audacity rather than autotools.\r\n\r\nThe issue of the Python 2 requirement is logged on the Audacity bug tracker:\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2440\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2441\r\n\r\nThe move from autotools to cmake was discussed on multiple occasions on the public Audacity developers mailing list, for example, back in February: https://sourceforge.net/p/audacity/mailman/message/36921276/\r\n\r\nI assume that you are not subscribed to that list, so will not have been aware of the change. Where could we have mentioned the change from autotools to cmake where you would have seen it?\r\n =||= > I assume that you are not subscribed to that list, so will not have been aware of the change. Where could we have mentioned the change from autotools to cmake where you would have seen it?\r\n\r\nNo, I am on many many mailing lists though and this would probably fly right by me anyhow (depends on the traffic though ;-) ).\r\nA good place to document this is always the changelog (and just using the same information in the release information here on github or wherever you want to announce it). That being said, audacity has a `CHANGELOG.txt`, but it seems its use has ceased with 2.3.3.\r\n\r\nIdeally, one would do something of the sort to switch build systems:\r\n\r\n* Version a.b.c: With this version Audacity introduces cmake as an alternative build system\r\n* Version a.b.d: With this version Audacity has established cmake as a full alternative to the previously default autotools based build system\r\n* Version a.c.a: With this version Audacity makes cmake the default build system. The autotools build system is in maintenance mode only.\r\n* Version a.d.a: With this version Audacity deprecates and removes the autotools build system.\r\n\r\nAnything else is kind of unfair towards downstream as the current situation is now rather an \"all or nothing\" type of situation. =||= @SteveDaulton also, thanks for the clarification! =||= It is actually logged in our Bugzilla.  Steve did log it.\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2421\r\n\r\nI reduced it from P1 (blocks our release) to P2.  \r\n\r\nPatches for CMake are welcome, provided they do not break our builds.  (Windows 10, Mac 10.15, Ubuntu 18).  We too would like to be free of Python 2 dependency.  We are currently working to release a 2.4.2 that shifts us to wx3.1.3 (https://wiki.audacityteam.org/wiki/Next_Release) =||= > It is actually logged in our Bugzilla. Steve did log it.\r\n\r\nThe problem is, for some reason Audacitys' entire site is tainted by Cloudfare. That's an absolute no-go for a free software project, IMHO.\r\n\r\nAnyway, back to the issue. Is there any clues about what is causing this weird behaviour? Why it only happens in autotools build? Maybe it's not an autotools issue, but it just so happens to reveal itself there?\r\n\r\n =||= > It is actually logged in our Bugzilla. Steve did log it.\r\n> The problem is, for some reason Audacitys' entire site is tainted by Cloudfare.\r\n> That's an absolute no-go for a free software project, IMHO.\r\n\r\nYou mean that following good security practices to protect our sites from malicious actors goes against the tenants of free software?  I'd absolutely love to read that article...please share a link.\r\n\r\n> Anyway, back to the issue. Is there any clues about what is causing this weird\r\n> behaviour? Why it only happens in autotools build? Maybe it's not an\r\n> autotools issue, but it just so happens to reveal itself there?\r\n\r\nPrior to our removal of the autotools build, I'd tracked down the crash to somewhere between commits a465ce0046e1726b3d2d926091b91714e154a91e (no crash) and c1d129ec9863a877cdd678695fff54a5dab5a191 (crash).  I never did figure out why it happened with autotools and not with cmake.\r\n =||= > You mean that following good security practices to protect our sites from malicious actors goes against the tenants of free software? I'd absolutely love to read that article...please share a link.\r\n\r\nYour mean, injecting proven to be malicious third-party service, compromising your website by your own hands and depriving users of their freedom is now called \"good security practices\"? WOW, that's really a long stretch...\r\n\r\nIf you want some links, you can just search for something like \"Why Cloudflare is Bad\". Here's only a couple:\r\nhttps://lists.gnu.org/archive/html/gnu-system-discuss/2017-03/msg00126.html\r\nhttp://techrights.org/2019/02/17/the-cloudflare-trap/\r\nhttps://pixie.garden/~/ThufiesBlog/don%27t-trust-cloud-flare (beware, certificate expired, but site itself isn't dubious and the article is very worth reading)\r\n\r\n> Prior to our removal of the autotools build, I'd tracked down the crash to somewhere between commits [a465ce0](https://github.com/audacity/audacity/commit/a465ce0046e1726b3d2d926091b91714e154a91e) (no crash) and [c1d129e](https://github.com/audacity/audacity/commit/c1d129ec9863a877cdd678695fff54a5dab5a191) (crash). I never did figure out why it happened with autotools and not with cmake.\r\n\r\nThanks!\r\n\r\nI managed to figure our that's the actual problem is and how to bypass it, but I can't (and actually don't want to) dive too deep into the cause of it - it requires knowledge of the projects' source.\r\n\r\nThe problem isn't in any way related to the Autotools but probably to their usage in the project (which seems to be improper in some places). \r\n\r\nReal problem is that in https://github.com/audacity/audacity/blob/master/src/menus/ViewMenus.cpp `sizeof(wxFrame)` is 1016 bytes, whereas in https://github.com/audacity/audacity/blob/master/src/ProjectWindow.cpp same expression gives us only 1000 bytes. Wherefore all members of `ProjectWindow` class (which is indirect subclass of `wxFrame`) in `ViewMenus.cpp` got \"moved\" by 16 bytes and `GetVerticalScrollBar` at https://github.com/audacity/audacity/blob/master/src/menus/ViewMenus.cpp#L240 is returning reference into nowhere.\r\n\r\nI don't know which size is the correct one; I don't know what causes such behaviour, but I suspect a dark magic with a memory that happens in some header files. Maybe there's something that adds two pointers for bookkeeping. Or maybe it's just messed up inclusion order of wxWidgets headers. I don't know.\r\n\r\nTo \"fix\" the problem you just need to include `ProjectWindow.h` before `Project.h` in https://github.com/audacity/audacity/blob/master/src/menus/ViewMenus.cpp#L10. That causes `sizeof(wxFrame)` in both files to align. The only question is, how many files there are where this happens too.\r\n\r\nI've also checked on my machine; cmake build works either way (with the original code and wtih my \"fix\"), autotools build works only in the latter case. Probably it won't harm to make this \"fix\" permanent.\r\n\r\nI don't know why Autotools build crashes, whereas cmake one doesn't. Probably there's something wrong with autotools config. I can see that at least some parts of your dark memory magic is conditional depending on C++ standard used, and cmake build uses c++14, while autotools - c++11. I've tried to change this and also added -NDEBUG to autotooled options. That made some interesting change: Audacity successfully performed track resize, but after that it crashed with the usual error dialog. Well, I don't want to investigate much further, 'cause I've found a workaround and that's good enough for me. =||= As we no longer use autotools, and you have a workaround that you say is satisfactory, I'll now close this issue. =||= @SteveDaulton ehm, well I for one do not have a satisfactory solution yet!\r\n\r\nCan we at least link this issue to a proper pull request to *fix* this problem instead of just closing this and then forgetting about it?\r\nIf the \"fix\" is indeed so trivial, I can do a pull request later and test this. If there is no side-effect with the cmake setup I would really appreciate this being included!\r\n\r\n@Barracuda72 thanks for looking into this more deeply!  =||= > \r\n> \r\n> > You mean that following good security practices to protect our sites from malicious actors goes against the tenants of free software? I'd absolutely love to read that article...please share a link.\r\n> \r\n> Your mean, injecting proven to be malicious third-party service, compromising your website by your own hands and depriving users of their freedom is now called \"good security practices\"? WOW, that's really a long stretch...\r\n> \r\n> If you want some links, you can just search for something like \"Why Cloudflare is Bad\". Here's only a couple:\r\n> https://lists.gnu.org/archive/html/gnu-system-discuss/2017-03/msg00126.html\r\n> http://techrights.org/2019/02/17/the-cloudflare-trap/\r\n> https://pixie.garden/~/ThufiesBlog/don%27t-trust-cloud-flare (beware, certificate expired, but site itself isn't dubious and the article is very worth reading)\r\n> \r\nGreat articles!  But they still don't have anything to do with free software.\r\n\r\n> > Prior to our removal of the autotools build, I'd tracked down the crash to somewhere between commits [a465ce0](https://github.com/audacity/audacity/commit/a465ce0046e1726b3d2d926091b91714e154a91e) (no crash) and [c1d129e](https://github.com/audacity/audacity/commit/c1d129ec9863a877cdd678695fff54a5dab5a191) (crash). I never did figure out why it happened with autotools and not with cmake.\r\n> \r\n> Thanks!\r\n> \r\n> I managed to figure our that's the actual problem is and how to bypass it, but I can't (and actually don't want to) dive too deep into the cause of it - it requires knowledge of the projects' source.\r\n> \r\n> The problem isn't in any way related to the Autotools but probably to their usage in the project (which seems to be improper in some places).\r\n> \r\n> Real problem is that in https://github.com/audacity/audacity/blob/master/src/menus/ViewMenus.cpp `sizeof(wxFrame)` is 1016 bytes, whereas in https://github.com/audacity/audacity/blob/master/src/ProjectWindow.cpp same expression gives us only 1000 bytes. Wherefore all members of `ProjectWindow` class (which is indirect subclass of `wxFrame`) in `ViewMenus.cpp` got \"moved\" by 16 bytes and `GetVerticalScrollBar` at https://github.com/audacity/audacity/blob/master/src/menus/ViewMenus.cpp#L240 is returning reference into nowhere.\r\n> \r\n> I don't know which size is the correct one; I don't know what causes such behaviour, but I suspect a dark magic with a memory that happens in some header files. Maybe there's something that adds two pointers for bookkeeping. Or maybe it's just messed up inclusion order of wxWidgets headers. I don't know.\r\n> \r\nNot THIS is something I can work with!  How on earth did you find it?!?!  I would NEVER have though to look for a size change.  I definitely look into it since the cause \"may\" still be lurking in there waiting to bite us in the future.\r\n =||= @dvzrv OK, I've reopened this issue, though personally I've lost track of what \"this issue\" is. =||= @Barracuda72 Thank you for your work on this.  I have opened a separate issue for the Cloudflare points. =||= @SteveDaulton Thanks. I have just applied the fix suggested by @Barracuda72 and opened a pull request for this.\r\n\r\nThis little change indeed fixes the issue I am seeing and I will directly apply it also for the package on Arch Linux as well. =||= This can also happen with the cmake build if you build with:\r\n\r\ncmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -Daudacity_use_pch=no ..\r\n\r\nStill digging into the root cause... =||= We have tracked down the root cause of the problem to this wxWidgets bug:\r\n\r\n  https://trac.wxwidgets.org/ticket/15884\r\n  https://github.com/wxWidgets/wxWidgets/commit/72aad0d6ea0c11c7cbb722eefb6106a7f1bdd203\r\n\r\nI backported their fix to wxWidgets 3.0.5.1 so I could verify that it does indeed correct the issue:\r\n\r\n  [weakref.patch.gz](https://github.com/audacity/audacity/files/4705113/weakref.patch.gz)\r\n\r\nI've also included the patched weakref.h so it should be easy for you to test as well.\r\n =||= "], ["539", "cmake: check for system portsmf via correct pkg-config name", "Sebastian Ramacher", "sebastinas", "05/26/20, 11:58:03 PM", "Even if portsmf is installed system-wide, it is not found. pkg-config package name comparison is case-sensitive and portsmf installs portSMF.pc, so check for portSMF.\r", "NaN"], ["540", "Batch process", null, "875325155", "05/27/20, 11:44:42 AM", "How can I do batch process  using audacity?", "Audacity's support forum is here: https://forum.audacityteam.org =||= "], ["541", "Bug in Audacity 2.4.1", null, "Marco-Lugo", "05/29/20, 01:10:53 AM", "**Describe the bug**\r\nA crash.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to 'Tracks'.\r\n2. Click on 'Add New'.\r\n3. Click on 'Mono Track'.\r\n4. Double click the Gain slider on the left of the new audio track.\r\n5. In the open request named \"Gain\" cancel the zero value.\r\n6. Boom! A crash occurs.\r\n\r\n**Expected behavior**\r\nNot a crash! :D\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Windows 10\r\n - Version Audacity 2.4.1\r\n\r\nIn the zip file you can find an MP4 video that show the reproduction of the bug:\r\n[Audacity bug.zip](https://github.com/audacity/audacity/files/4689972/Audacity.bug.zip)\r\n\r", "Works for me (no crash)\r\nPlease check your steps to see if you missed out some crucial step.\r\n =||= [Audacity_dbgrpt-19260-20200528T161138.zip](https://github.com/audacity/audacity/files/4696186/Audacity_dbgrpt-19260-20200528T161138.zip)\r\nRe: [audacity/audacity] Bug in Audacity 2.4.1 (#541)\r\n\r\n\r\n--- Works for me (no crash)\r\n--- Please check your steps to see if you missed out some crucial step\r\n\r\nHi James,\r\nFor me is perfectly replicable.\r\nIn the zip file you can found the dump generated by audacity after the crash.\r\n\r\nKind Regards.\r\n\r\nMarco Lugo =||= Works for me on W10 - no crash =||= I see some extra steps in the video.  I'm guessing:\r\n\r\n1. Go to 'Tracks'.\r\n2. Click on 'Add New'.\r\n3. Click on 'Mono Track'.\r\n4. Double click the Gain slider on the left of the new audio track.\r\n5. Press right arrow key\r\n6. Press delete key\r\n7. Press Enter\r\n8. Boom! A crash occurs.\r\n\r\nHowever that works for me too.  Also works with Italian language selected.\r\nWas that the sequence of keys you pressed?\r\n =||= When the requester named \"Gain\" come up don't click in the edit gadget but leave the \"0\" high lighted and press the backspace key. Another effect I see sometimes is the \"-nan\" string in the Gain numeric edit request. =||= I've just tried that:\r\na) With the delete left key, followed by the enter key\r\nb) With the left arrow key, followed by the enter key\r\n\r\nIn both cases works fine for me. =||= James at this point, if you can, try it on a PC different from that you use.\r\nThere is a video of the crash, there is a report with a dump, there is a complete description of how to reproduce it.\r\nI think that an user can't make more. :) =||= Marco - Thanks you for the report and the details.\r\nMy/Audacity's problem is that we can't progress it until/unless we can reproduce it on our machines.  We DO believe you.  We can see it crashing in the video!\r\n\r\nWe have tried it on two machines, with no crash.  It looks like we will have trouble tracking it down.  If we make progress we'll report it here.\r\n =||= I've tried it here as well (and I'll give it a try again in a bit).  And like James, I can't reproduce it either. =||= I take that back!  I CAN reproduce it here.  Let me dig a bit and I'll comment more. =||= James, try it with a release build. =||= I am trying with 2.4.1 actual release (which is a release build :-) ).  What am I missing? =||= Great...no I can't get it to happen again.  :-(  Grrr.  Let me see if I can pin it down. =||= James, we may not be able to recreate the issue, but we do have a visual clue something isn't right.  Try the steps in a Debug build.  You'll see the slider in the dialog go all the way to the left.  In a Release build it doesn't move at all. =||= Good news Marco.  I'm pretty sure I've found the cause.  While I can't reproduce the crash directly, I am able to simulate it.  Your comment about the \"-nan\" above clued was the key to finding it.\r\n\r\nBut #2458 created to resolve it:\r\n\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2458 =||= Fix committed here:\r\n\r\nhttps://github.com/audacity/audacity/commit/8ae8e0f\r\n\r\nClosing this bug. Thanks Marco for reporting it (and being patient with us :-)). =||= Thanks Lucius and James. :)\r\nIf you want a quick test I'm disponible. =||= @Marco-Lugo  please try windows 'artifact' from here; (top right corner where it says 'Artifacts 4'\r\nhttps://github.com/audacity/audacity/runs/718875503 =||= I tested it and the bug is fixed!\r\nWhen there will be an official installer with this fix?\r\nThanks again :) =||= Great!\r\n\r\nWe plan to release 2.4.2 22nd June https://wiki.audacityteam.org/wiki/Next_Release\r\nHowever, our experience is that we usually find new bugs close to release and have to delay to fix them.  We will update that page with progress.\r\n\r\nFeel free to contact me or Leland (lllucius) directly about anything Audacity related, and thanks for your bug report and details, and testing confirmed fixed.\r\n =||= "], ["542", "Mw2html python3", "Jack Thomson", "zesoft23", "05/27/20, 06:45:26 PM", "Hey folks,\r\n\r\nThis moves the mw2html.py script and the accompanying htmldata.py library to python3. In the email list, there was talks about moving to BS4. I'm up to do that, but the current implemenation only uses default libraries and the htmldata.py library which is included in the folder. I think this makes it a bit easier to run in general. Let me know if my htmldata.py port is not welcome!\r\n\r\nThe majority of the changes focus on default python 2 -> ports like moving the url libraries to their python3 equivalents. The major non-default changes I made were in lines 764 of mwhtml.py to use utf8 encoding for text based files and 942 of mwhtml.py to remove improper \\t and \\n formatting.\r\n\r\nTo test:\r\n\r\nYou must have git, python, a web browser and Windows.\r\n\r\ngit clone https://github.com/zesoft23/audacity/\r\ncd audacity\r\ngit checkout mw2html_python3\r\ncd scripts\\mw2html_audacity\r\n.\\wiki2htm.bat\r\nUse your favorite browser to open up the file located at:\r\naudacity\\help\\manual\\index.html\r\n\r\n\r\nUnfortunately, this only seems to work on Windows due to the Cloudflare protection on the wiki. I get a 503 error when running on Debian 10 which I'm fairly sure is Cloudflare DDOS protecting from my computer.\r\n\r\nThanks for y'all's time!", "Thank you!  Very welcome. =||= Cool.  This was the last thing blocking me from changing to Python3 in the cmake build.  I'll get that changed shortly. =||= Ah, thanks for doing this!\n\nOn Wed, May 27, 2020, 16:05 Leland Lucius <notifications@github.com> wrote:\n\n> Cool. This was the last thing blocking me from changing to Python3 in the\n> cmake build. I'll get that changed shortly.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/542#issuecomment-634877213>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AB2A6NJNG2IMISIVB7FE3SLRTVQAHANCNFSM4NMMD2CQ>\n> .\n>\n =||= "], ["544", "[WIN32] PCH: DEBUG_NEW unsupported by GNU libstdc++", "Carlo Bramini", "carlo-bramini", "05/27/20, 08:45:04 PM", "See issue #536 for details.", "NaN"], ["545", "Fix crash on track resize", "David Runge", "dvzrv", "05/31/20, 05:17:39 PM", "As discussed in #538, there is an issue with the track resize option,\r\nwhere with audacity >= 2.4.0, compiled using the autotools setup leads\r\nto a hard crash.\r\n\r\nThe sizeof(wxFrame) in src/menus/ViewMenus.cpp and src/ProjectWindow.cpp\r\nis not aligned, leading to GetVerticalScrollBar in\r\nsrc/menus/ViewMenus.cpp accessing unallocated memory.\r\n\r\nBy ordering the include of ProjectWindow.h before the include of\r\nProject.h, this crash is prevented.\r\n\r\nCloses #538", "This does not fix the root cause.  The root cause which is a bug in wxWeakRef in wx3.0.x (which we don't use) and which leads to other crashes in Audacity.  You need to patch wxWidgets, or use a more up to date version of wxWidgets.  See discussion in #538 =||= "], ["546", "Dependencies", "Paul Licameli", "Paul-Licameli", "05/28/20, 08:34:28 AM", "Fix link dependencies that made cycles, which were not detected by scripts/graph.pl until more recent changes were made at commits\r\n6541e808be3b2dce55a9bd0d746fe9a5a4163f41,\r\n226a80140a12d1ad3b76959aa1d8884b01c6923c,\r\na57b63c63f4d76976960847ef95640d368f0250b.\r\n\r\nThe cycle-breaking moves that fix these problems are all of the lower-risk kind -- making new source files and cutting and pasting into them.  Some added and removed #includes and some\r\nrenaming of types.\r\n\r", "Rejected.\r\nConflicts with master, and with the kMyTimerInterval change corrected still fails to build on MSVC\r\n\r\n7>  C:\\OpenSourceGit\\Audacity\\src\\Menus.cpp(255): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int\r\n7>  C:\\OpenSourceGit\\Audacity\\src\\Menus.cpp(255): error C2143: syntax error: missing ',' before '&'\r\n7>  C:\\OpenSourceGit\\Audacity\\src\\Menus.cpp(256): error C2511: 'MenuTable::AttachedItem::AttachedItem(const int)': overloaded member function not found in 'MenuTable::AttachedItem'\r\n7>  c:\\opensourcegit\\audacity\\src\\commands/CommandManager.h(683): note: see declaration of 'MenuTable::AttachedItem'\r\n7>  C:\\OpenSourceGit\\Audacity\\src\\Menus.cpp(257): error C2065: 'placement': undeclared identifier\r\n7>  C:\\OpenSourceGit\\Audacity\\src\\Menus.cpp(257): error C2065: 'pItem': undeclared identifier\r\n =||= I have rebased the branch and resolved the conflict with commit 63b9b60542a5d22c707b37175c85c216bedaaf15\r\n\r\nPlease reconsider.\r\n =||= "], ["547", "Dependencies", "Paul Licameli", "Paul-Licameli", "05/28/20, 12:59:49 PM", "I rebased and fixed the conflict with commit 63b9b60542a5d22c707b37175c85c216bedaaf15\r\n\r\nPlease reconsider.\r", "Build still fails on MSVC 2017, exactly as before.  (I had already fixed the conflict)\r\n\r\n7>C:\\OpenSourceGit\\Audacity\\src\\Menus.cpp(255): error C4430: missing type specifier - int assumed. Note: C++ does not support default-int\r\n7>C:\\OpenSourceGit\\Audacity\\src\\Menus.cpp(255): error C2143: syntax error: missing ',' before '&'\r\n7>C:\\OpenSourceGit\\Audacity\\src\\Menus.cpp(256): error C2511: 'MenuTable::AttachedItem::AttachedItem(const int)': overloaded member function not found in 'MenuTable::AttachedItem'\r\n7>C:\\OpenSourceGit\\Audacity\\src\\Menus.cpp(257): error C2065: 'placement': undeclared identifier\r\n7>C:\\OpenSourceGit\\Audacity\\src\\Menus.cpp(257): error C2065: 'pItem': undeclared identifier\r\n\r\nSo again, rejected. =||= Thanks for this.  I added your namespace fix, and it compiles with that fix.  The updates look fine, so committed. =||= "], ["548", "[CMAKE] Fix build for Cygwin.", "Carlo Bramini", "carlo-bramini", "05/28/20, 09:21:22 PM", "NaN", "NaN"], ["549", "Module manager", "Paul Licameli", "Paul-Licameli", "05/29/20, 03:48:53 PM", "# Pull Requests\r\n\r\nTwo commits simplify things by deleting some code.\r\n\r\nLeland, please review, and reject if there was intended future use of RegisterModule that I didn't know about.\r\n\r", "> \r\n> # Pull Requests\r\n> \r\n> Two commits simplify things by deleting some code.\r\n> \r\n> Leland, please review, and reject if there was intended future use of RegisterModule that I didn't know about.\r\n\r\nNope, no problem here.  I haven't looked at how you have things working these days, but if this isn't needed any longer, then by all means jettison it. =||= "], ["550", "Crashing when using effects (Amplify in this case)", "James Auble", "james0r", "06/11/20, 02:00:18 AM", "Here is crash report:\r\n\r\nhttp://dpaste.com/2H3QNHV\r", "Hi James.\r\n\r\nI see you are running Audacity 2.3.3.\r\nIs the problem 100% reproducible or does it only happen sometimes?\r\n\r\nCould you also try our latest released Audacity, 2.4.1, and see if it happens with that too?  We don't get this crash with either 2.3.3 or 2.4.1.\r\n =||= don't have time to investigate. i'll try again with newest version soon. =||= "], ["551", "Document cmake options", null, "mikhailnov", "05/31/20, 10:42:37 PM", "Please document cmake options that would allow to switch betweeb system and bundled libraries\r", "Probably `cmake -Daudacity_use_xxx:STRING=system` ? =||= Here you go:\r\n\r\nhttps://wiki.audacityteam.org/wiki/CMake_Options\r\n\r\nIf you need more info, ask in this thread, and we can update that page. =||= "], ["552", "wxGTK is underlinked", null, "mikhailnov", "05/13/21, 08:02:52 PM", "Building with `-Wl,--no-undefined`:\r\n\r\n```\r\n/usr/bin/ld.default: CMakeFiles/mod-script-pipe.dir/ScripterCallback.cpp.o: in function `__static_initialization_and_destruction_0':\r\n/usr/src/RPM/BUILD/audacity-src-2.4.1/modules/mod-script-pipe/ScripterCallback.cpp:114: undefined reference to `wxArrayString::~wxArrayString()'\r\n/usr/bin/ld.default: CMakeFiles/mod-script-pipe.dir/ScripterCallback.cpp.o:(.data.rel.ro._ZTI20wxThreadHelperThread[_ZTI20wxThreadHelperThread]+0x10): undefined reference to `typeinfo for wxThread'\r\n<...>\r\n```\r\n\r\nProbably `wx-config --libs` have to be used.", "CMAKE_EXE_LINKER_FLAGS and CMAKE_MODULE_LINKER_FLAGS seem to be ignored =||= As the resulting binary cannot be underlinked, maybe here there is no sense in try to avoid underlinking =||= Please explain more clearly.\r\nWhat do you mean by 'underlinked'?\r\n\r\nIs your point about mod-script-pipe (only)?  \r\nIs it that mod-script-pipe requires wxWidgets libs?\r\n\r\n =||= when Audacity is being build with `-Wl,--no-undefined`, some middle stages of compilation fail because some wx libs are not linked =||= > \r\n> \r\n> when Audacity is being build with `-Wl,--no-undefined`, some middle stages of compilation fail because some wx libs are not linked\r\n\r\nInteresting...I do not see that here and we actually NEED --no-undefined so that the symbols are resolved at runtime, rather than build time.\r\n\r\nHow are you building?\r\n =||= --no-undefined is not needed, but it would be nice to be able to build correctly with it\r\nI actually realized that it is not obligatory to be able to be buildable with --no-undefined a bit after reporting this issue =||= Closing.\r\nBug report is unclear.  Also:\r\n\r\n>I actually realized that it is not obligatory to be able to be buildable with --no-undefined a bit after reporting this issue =||= "], ["553", "Fixed bug 2396. ", null, "binarywisdom", "05/31/20, 05:02:31 PM", "Set button now accounts for the existence of the legal shortcuts duplicates.\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "NaN"], ["554", "libmp3lame cannot be linked dynamically in new CMake build system", null, "mikhailnov", "08/02/21, 05:08:13 PM", "In the new cmake build system it is impossible to link libmp3lame dynamically. It was possible in autotools, and the code of Audacity is designed to allow to work without dlopening it.\r\n\r\ncmake-proxies/lame assumes it to be linked statically and src/CMakeLists.txt sets DISABLE_DYNAMIC_LOADING_LAME to YES only in Windows builds. src/audacity_config.in default to DISABLE_DYNAMIC_LOADING_LAME being YES.\r\n\r\nIn ffmpeg, audacity_use_ffmpeg:STRING=linked makes it be linked dynamically, but why do you use \"linked\" for ffmpeg, why not just link it dynamicaly if a system version is used? And why is lame not using the same config options?", "Seems that -DDISABLE_DYNAMIC_LOADING_LAME is set, but everything continues to work because some of dependencies of Audacity depend from libmp3lame, what makes it already loaded.\r\nlibmp3lame must be explicitly linked to Audacity. =||= > In the new cmake build system it is impossible to link libmp3lame dynamically.\r\n\r\nYes, currently no system version of lame is detected.\r\n`pkg_check_modules` doesn't work here because mp3lame doesn't provide a pkg-config file.\r\n\r\nhttps://github.com/audacity/audacity/blob/ce07da936cf956c2d2226c356d287e32f4323aad/cmake-proxies/CMakeLists.txt#L86 =||= This is a blocker for updating to 2.4.2 in openSUSE and most probably other distributions too. Looking at @rrrapha 's statement I'm led to believe that if I create a pkgconfig/mp3lame.pc in our llibmp3lame package that cmake will pick it up?\r\nIt's a pity that autotools was removed prematurely. =||= The actual library is called libmp3lame but audacity's cmake looks for lame.pc not libmp3lame.pc if this is changed I'll create a pkgconfig file in the lame package, meanwhile I'll make a workaround for the online build until either system lame is found like the old autotools did (preferable) or cmake looks for libmp3lame.pc =||= > \r\n> \r\n> This is a blocker for updating to 2.4.2 in openSUSE and most probably other distributions too. Looking at @rrrapha 's statement I'm led to believe that if I create a pkgconfig/mp3lame.pc in our llibmp3lame package that cmake will pick it up?\r\n> It's a pity that autotools was removed prematurely.\r\n\r\nIf this is blocker, then you're going to LOVE our next release.  We will be requiring use of our modified version of wxWidgets (https://github.com/audacity/wxWidgets)  This would have been in 2.4.2, but I didn't make the deadline.\r\n =||= We will love it! What are the reasons to require a modified version of wxWidgets?\r\n\r\nP.S. I hacked Audacity to use system libmp3lame with a patch bellow and by adding `-lmp3lame` to linker flags manually.\r\n\r\n```diff\r\nFrom f0c7f63e59c2db9183908be556836e77e4e0755b Mon Sep 17 00:00:00 2001\r\nFrom: Mikhail Novosyolov <mikhailnov@nixtux.ru>\r\nDate: Sun, 31 May 2020 02:36:51 +0300\r\nSubject: [PATCH] HACK: off bundled libmp3lame\r\n\r\nhttps://github.com/audacity/audacity/issues/554\r\nManually setting\r\n-DDISABLE_DYNAMIC_LOADING_LAME=1 -lmp3lame\r\n---\r\n cmake-proxies/lame/CMakeLists.txt | 26 +-------------------------\r\n lib-src/lame/empty.c              |  3 +++\r\n 2 files changed, 4 insertions(+), 25 deletions(-)\r\n create mode 100644 lib-src/lame/empty.c\r\ndiff --git a/cmake-proxies/lame/CMakeLists.txt b/cmake-proxies/lame/CMakeLists.txt\r\nindex ac405a6d5..f521fdddb 100644\r\n--- a/cmake-proxies/lame/CMakeLists.txt\r\n+++ b/cmake-proxies/lame/CMakeLists.txt\r\n@@ -6,26 +6,7 @@ def_vars()\r\n list( APPEND SOURCES\r\n    PRIVATE\r\n       # libmp3lame\r\n-      ${TARGET_ROOT}/libmp3lame/bitstream.c\r\n-      ${TARGET_ROOT}/libmp3lame/encoder.c\r\n-      ${TARGET_ROOT}/libmp3lame/fft.c\r\n-      ${TARGET_ROOT}/libmp3lame/gain_analysis.c\r\n-      ${TARGET_ROOT}/libmp3lame/id3tag.c\r\n-      ${TARGET_ROOT}/libmp3lame/lame.c\r\n-      ${TARGET_ROOT}/libmp3lame/newmdct.c\r\n-      ${TARGET_ROOT}/libmp3lame/presets.c\r\n-      ${TARGET_ROOT}/libmp3lame/psymodel.c\r\n-      ${TARGET_ROOT}/libmp3lame/quantize.c\r\n-      ${TARGET_ROOT}/libmp3lame/quantize_pvt.c\r\n-      ${TARGET_ROOT}/libmp3lame/reservoir.c\r\n-      ${TARGET_ROOT}/libmp3lame/set_get.c\r\n-      ${TARGET_ROOT}/libmp3lame/tables.c\r\n-      ${TARGET_ROOT}/libmp3lame/takehiro.c\r\n-      ${TARGET_ROOT}/libmp3lame/util.c\r\n-      ${TARGET_ROOT}/libmp3lame/vbrquantize.c\r\n-      ${TARGET_ROOT}/libmp3lame/VbrTag.c\r\n-      ${TARGET_ROOT}/libmp3lame/version.c\r\n-      ${TARGET_ROOT}/libmp3lame/vector/xmm_quantize_sub.c\r\n+      ${TARGET_ROOT}/empty.c\r\n )\r\n \r\n list( APPEND INCLUDES\r\n@@ -82,8 +63,3 @@ configure_file( config.h.in private/config.h )\r\n \r\n #organize_source( \"${TARGET_ROOT}\" \"\" \"${SOURCES}\" )\r\n target_sources( ${TARGET} PRIVATE ${SOURCES} )\r\n-target_compile_definitions( ${TARGET} PRIVATE ${DEFINES} )\r\n-target_include_directories( ${TARGET} PRIVATE ${INCLUDES} )\r\n-target_compile_options( ${TARGET} PRIVATE ${OPTIONS} )\r\n-target_link_libraries( ${TARGET} PRIVATE ${LIBRARIES} )\r\n-\r\ndiff --git a/lib-src/lame/empty.c b/lib-src/lame/empty.c\r\nnew file mode 100644\r\nindex 000000000..292aa3b34\r\n--- /dev/null\r\n+++ b/lib-src/lame/empty.c\r\n@@ -0,0 +1,3 @@\r\n+int main(){\r\n+\t//\r\n+} \r\n``` =||= Commits for our next version have been opened back up, so I'll look into fixing this for you guys.\r\n\r\nThe reason for forcing the custom version is just that, it's custom.  We have backported several important fixes from wxWidgets master that Audacity needs.  And we'll be adding Audacity specific accessibility to our wxWidgets version.  (Though I hope to make it generic enough to submit upstream.) =||= I've added a pkgconfig file to the lame package and added a generated pc file to audacity's spec file. If there's a patch available for the wxWidgets modification Audacity already has it's own widgets package in openSUSE. Which commit can I get the widgets patch from? =||= BTW a little off topic, audacity no longer builds for 32 bit. =||= > \r\n> \r\n> I've added a pkgconfig file to the lame package and added a generated pc file to audacity's spec file. If there's a patch available for the wxWidgets modification Audacity already has it's own widgets package in openSUSE. Which commit can I get the widgets patch from?\r\n\r\nWe keep our version at https://github.com/audacity/wxWidgets and the default branch is set to audacity-fixes-3.1.3.  We will always have our current version set as the default branch in Github, so just cloning will get you the most current. =||= > \r\n> \r\n> BTW a little off topic, audacity no longer builds for 32 bit.\r\n\r\nInteresting, it does on Windows.  What errors are you getting?  That's something we need to fix. =||= @lllucius So in general audacity's version of wxWidgets does not break compatibility with upstream wxWidgets and applications using it, does it? =||= I made a mistake with the generated pc file and hardcoded lib64, this is most probably the cause =||= The build failure for i586 linux has been reported in https://github.com/audacity/audacity/issues/594 =||= Closing per:\r\n> I made a mistake with the generated pc file and hardcoded lib64, this is most probably the cause =||= > > BTW a little off topic, audacity no longer builds for 32 bit.\r\n> \r\n> Interesting, it does on Windows. What errors are you getting? That's something we need to fix.\r\n\r\nSee https://github.com/audacity/audacity/issues/594#issuecomment-840788325 =||= I think this issue should be reopened =||= > I think this issue should be reopened\r\n\r\nDone. =||= Fixed in #1008  =||= "], ["555", "Failed to enable install and load Effect Plugins -Ubuntu 20.04 PPA Version.", "Charlie Ramirez Animation Studios de Mexico", "Charlie-Ramirez-Animation-Studios-de-MX", "05/13/21, 07:57:57 PM", "It is impossible to activate and install Effects Plugins. Both at startup and with an open project.\r\nThe Add / Remove dialog box. It does not save the enabled / disabled state of the plugins, it only shows the default plugins. When changing to activated and closing them they are unchecked again.\r\n\r\n**To Reproduce**\r\nDownload the PPA Version, via terminal (sudo apt install audacity) in Ubuntu 20.04.\r\n[error after updating version possibly]\r\n\r\n- open (a ghost icon will blink disappearing in the gnome bar) -Splash Screen is not shown [another bug?]\r\n-Audacity will open. Try to Install or enable a plugin in the Add option (Effects)\r\n-Enable and then check in the effects list (the plugin is not there, when you return to the add list, you will see that it is disabled) [See Image]\r\n\r\n-Go to the tools tab.\r\n-The tool to install Plugins automatically is not shown and has been replaced by another button that redirects to the  \"adding remove plugins\" from the effects function.\r\nFolder usr/share/Audacity/Plug-ins (doesn't Exist). [cannot be created, could be...manually with root permissions\r\n\r\n\r\nDisabled plugins should be enabled when changing Add / Remove Plugins.\r\n-The tool to import (install, new plugins should appear)\r\nIn some Tabs the Text exceeds the limits or is not centered (I'm not sure if it will be an audacity bug or if it is a secondary consequence of the system escalation)\r\n\r\n**Screenshots**\r\n![Captura de pantalla de 2020-05-30 20-18-34](https://user-images.githubusercontent.com/64709446/83342420-eea7aa80-a2b4-11ea-847e-f8e7aaad4e20.png)\r\n![Captura de pantalla de 2020-05-30 20-56-53](https://user-images.githubusercontent.com/64709446/83342706-28c67b80-a2b8-11ea-8469-93a53b5eec9c.png)\r\n\r\n[tools tab does not allow taking screenshots when active]\r\n\r\n**Additional information**\r\n - OS: Ubuntu 20.04 x64\r\n - Version Audacity 2.4.1 [Via PPA.]\r\nFecha de compilaci\u00f3n:\r\nJan 29 2016\r\nCommit Id:\r\nNo hay ning\u00fan identificador de revisi\u00f3n\r\nTipo de compilaci\u00f3n:\r\nDebug build (debug level 0), 64 bits\r\nCompilador:\r\nGCC 9.3.0\r\nPrefijo de instalaci\u00f3n:\r\n/usr\r\nCarpeta de configuraci\u00f3n:\r\n/home/charlie/.audacity-data\r\n\r\n**Additional context**\r\nLOG:\r\n20:17:07: Audacity 2.4.1\r\n20:17:07: Warning: Critical Nyquist files could not be found. Nyquist effects will not work.\r\n20:17:19: Retrieving FFmpeg library version numbers:\r\n20:17:19:    AVCodec version 0x3a3664 - 58.54.100 (built against 0x3a3664 - 58.54.100)\r\n20:17:19:    AVFormat version 0x3a1d64 - 58.29.100 (built against 0x3a1d64 - 58.29.100)\r\n20:17:19:    AVUtil version 0x381f64 - 56.31.100 (built against 0x381f64 - 56.31.100)\r\n20:18:26: Error: .so: no se puede abrir el archivo del objeto compartido: No existe el archivo o el directorio\r\n20:35:24: Error: .so: no se puede abrir el archivo del objeto compartido: No existe el archivo o el directorio\r\n20:39:01: Error: .so: no se puede abrir el archivo del objeto compartido: No existe el archivo o el directorio\r\n\r\n-Assist Report Data Genered:\r\n[Audacity_dbgrpt-23899-20200530T203956.zip](https://github.com/audacity/audacity/files/4706953/Audacity_dbgrpt-23899-20200530T203956.zip)\r", "Fecha de compilaci\u00f3n:\r\nJan 29 2016\r\nCommit Id:\r\nNo hay ning\u00fan identificador de revisi\u00f3n\r\nTipo de compilaci\u00f3n:\r\nDebug build (debug level 0), 64 bits\r\n\r\nThe source was created in 2020, so a compilation date of 2016 is way out of date.\r\nDistros should be building with a revision ident.  This ppa does not.\r\nCompilations should be release builds, not debug.\r\n\r\nPlease correct the 'additional information'.  If it is already correct, you have a bad ppa.  Ask whoever supplied it to fix it.  \r\n\r\n\r\n\r\n\r\n =||= Closing.  Bad ppa.  Not ours. =||= "], ["556", "[NYQUIST] Fix error build with MinGW and CYGWIN", "Carlo Bramini", "carlo-bramini", "06/03/20, 06:16:29 PM", "When compiling, I got this error:\r\n\r\n```\r\n/lib-src/libnyquist/nyquist/nyqsrc/sndread.c: In function 'snd_make_read':\r\n/lib-src/libnyquist/nyquist/nyqsrc/sndread.c:169:30: error: invalid operands to binary | (have 'int' and 'long int *')\r\n  169 |         susp->sf_info.format |= format;\r\n      |                              ^~\r\n```\r\nI would like to suggest this fix for this error.\r", "NaN"], ["557", " [NYQUIST] Fix build on CYGWIN. ", "Carlo Bramini", "carlo-bramini", "06/03/20, 06:13:41 PM", "NaN", "NaN"], ["558", "Fix translations", null, "mikhailnov", "05/31/20, 05:11:16 PM", "Some menu entries were not translated in Russian, some were not transalted in all languages. Fixed them.\r\nScreenshot bellow shows untranslated strings, now they are translated.\r\n![DeepinScreenshot_\u0432\u044b\u0431\u0435\u0440\u0438\u0442\u0435-\u043e\u0431\u043b\u0430\u0441\u0442\u044c_20200531044140](https://user-images.githubusercontent.com/15802528/83355634-56b7c880-a369-11ea-8d0f-b0e1dff11e75.png)\r\n\r", "Thanks.  \r\n\r\nBut \r\n(a) Please only change po files for the languages you offer to translate (even if via script).\r\n(b) Please do updated po files for your own language (Russian) via the translator's email list, where conflicts between different translators/translations can be resolved, and general issues with translatability that affect all translations can be discussed with all translators.\r\n\r\nI generally prefer to receive updated .po files via that list, rather than as pull requests.  \r\n\r\nPull request rejected.\r\n =||= a) as you see, I changed a string in the source code, so it was necessary to update all pot and po files, how do you suggest to handle this?\r\nb) ok, I will write there, but I would suggest that an updated po file is pull requested after it is accepted in the list =||= a) Just request the change in the source (pull request is fine).  If it is only a string change, maybe mention it is a 'Wording change'.  The script will be run at the start of translation freeze, and translators will then be asked for updated translations.\r\nb) That's not how we do it.  After end of translation freeze stage, and before making rcs, I diff the new .po against the old, and can sometimes pick up mistakes even though I don't speak the languages.  The order of strings is unchanged which makes the diffing actually useful.  =||= Thanks for explaining. So, I should first request a change of the string without changing anything in locale/. Send a PR with that change. Then wait for long and only then have a chance to suggest my translation of the new wording? =||= > Thanks for explaining. So, I should first request a change of the string without changing anything in locale/. Send a PR with that change. \r\n\r\nCorrect.\r\n\r\nYou don't need to suggest the new wording.  The existing translator will do it.\r\n\r\nIf you want to get involved in translating, then you really need to be subscribed to the translators list and work with existing translators there.   =||= "], ["559", "Audacity recorded audio is slightly shorter than real life", null, "VandalPaulius", "05/13/21, 07:56:51 PM", "**Describe the bug**\r\nAudacity recorded audio is slightly shorter than real life, noticable only when trying to sync audio with other record sources such as external camera footage (+ audio)\r\n\r\n**To Reproduce**\r\n1. Record audio (10+ minute clip to increase effect) with Audacity (and possibly via USB audio interface)\r\n2. Record same audio with OBS Studio or any other recording software or hardware (can be external camera, phone, etc)\r\n3. Export Audacity record to `wav` or `mp3` format\r\n4. Align audio from Audacity and other source in any software (in my case it was Davinci Resolve 16.2)\r\n5. Zoom in different locations in and notice what Audacity record is slightly shorter. This is especially noticable if you're trying to sync audio with Resolves \"Auto sync\" feature\r\n\r\n**Expected behavior**\r\nAudio to be it's real length\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Windows 10 Pro\r\n - Version: Audacity 2.4.1\r\n - Recording device: USB audio interface - Behringer U-Phoria UMC2020HD 192kHz\r\n\r\n**Additional context**\r\nI have tried different records with camera and OBS Studio, tried different sampling and bitrates in Audacity and same behaviour persists.", "There are many possible reasons why this could be happening. Please post to our support forum and we will be happy to try and help. The support forum is here: https://forum.audacityteam.org =||= I didn't realise it might be configuration issue.\r\nWill ask help on the forum. Thank you =||= Support issue moved to forum. =||= "], ["560", "Update french translation", "Oreonan", "Oreonan", "06/05/20, 08:20:40 PM", "# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "Thanks, \r\n\r\nPlease join the audacity-translators mailing list at sourceforge and work with the existing French translator there.  I'd rather get translations from a single source.\r\n\r\nI'm not going to merge this pull request.  For example translating \"33\u2153\" as \"331/3\" is wrong - over a 100 fold increase in speed vs a 3 fold reduction in speed.\r\n\r\n =||= Thanks for redirecting @Oreonan to the mailing list. @JamesCrook , you can merge #561 which is a typo which needs to be fixed. All the rest are either wrong, useless, or in needs of discussion.\r\n\r\n@Oreonan : nice finding for the fichier/filtre typo =||= "], ["561", "Fix a typo in the French translation", "Olivier Humbert", "trebmuh", "06/05/20, 08:55:46 PM", "From #560 .", ":+1: =||= "], ["562", "Fix duplicate keyboard-shortcuts in French translation", "Olivier Humbert", "trebmuh", "06/06/20, 12:16:43 PM", "Following the discussion with @Oreonan on the mailing list.\r", "NaN"], ["563", "[WIN32] This inline ASM is supported only by MSVC.", "Carlo Bramini", "carlo-bramini", "06/07/20, 05:49:34 PM", "NaN", "NaN"], ["565", "French translation update for 2.4.2", "Olivier Humbert", "trebmuh", "06/09/20, 09:22:47 PM", "NaN", "NaN"], ["566", "Update Italian translations for 2.4.4", "Michele Locati", "mlocati", "06/10/20, 09:31:30 AM", "NaN", "NaN"], ["567", "Create audacity-beginner-tutorial.txt", "Arjun Kahlon", "arjunkahlon", "06/11/20, 09:18:43 AM", "# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "Thanks.  Not suitable for our repo.\r\nIf you'd like to help users, ask on the forum about it. =||= "], ["570", "properly saved .aup considers all .au files as orphans", "Campbell Vertesi", "ohthehugemanatee", "05/13/21, 07:55:17 PM", "**Describe the bug**\r\nWhen loading a properly saved .aup project, audacity considers all .au files as orphans and does not include them. \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Save a project and quit Audacity\r\n2. Start audacity and Open the project.\r\n\r\nNote the \"orphaned files\" prompt. In the log it lists all of the files in the _data directory as orphans. The files are listed in the .aup file. \r\n\r\n**Expected behavior**\r\nThe project should load all the .au files.\r\n\r\n**More information**\r\nLogfile: [log.txt](https://github.com/audacity/audacity/files/4777368/log.txt)\r\nAUP: \r\n```\r\n<?xml version=\"1.0\" standalone=\"no\" ?>\r\n<!DOCTYPE project PUBLIC \"-//audacityproject-1.3.0//DTD//EN\" \"http://audacity.sourceforge.net/xml/audacityproject-1.3.0.dtd\" >\r\n<project xmlns=\"http://audacity.sourceforge.net/xml/\" projname=\"cast patreon audio take 3_data\" version=\"1.3.0\" audacityversion=\"2.4.1\" sel0=\"0,0000000000\" sel1=\"0,0000000000\" vpos=\"0\" h=\"106,5912018141\" zoom=\"86,1328125000\" rate=\"44100,000000\" snapto=\"off\" selectionformat=\"hh:mm:ss + milliseconds\" frequencyformat=\"Hz\" bandwidthformat=\"octaves\">\r\n\t<tags/>\r\n\t<wavetrack name=\"Audio Track\" isSelected=\"0\" height=\"150\" minimized=\"0\" channel=\"0\" linked=\"1\" mute=\"0\" solo=\"0\" rate=\"44100\" gain=\"1,000000\" pan=\"0,000000\" colorindex=\"0\">\r\n\t\t<waveclip offset=\"0,00000000\" colorindex=\"0\">\r\n\t\t\t<sequence maxsamples=\"262144\" sampleformat=\"262159\" numsamples=\"5420655\">\r\n\t\t\t\t<waveblock start=\"0\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1fc4b.au\" len=\"262144\" min=\"-0,141235\" max=\"0,174316\" rms=\"0,023137\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"262144\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1f1f1.au\" len=\"262144\" min=\"-0,294647\" max=\"0,300354\" rms=\"0,038767\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"524288\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1fc3f.au\" len=\"262144\" min=\"-0,359009\" max=\"0,387207\" rms=\"0,038174\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"786432\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1f669.au\" len=\"262144\" min=\"-0,581238\" max=\"0,531708\" rms=\"0,056935\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"1048576\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1f288.au\" len=\"262144\" min=\"-0,141327\" max=\"0,173340\" rms=\"0,019388\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"1310720\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1f3d2.au\" len=\"262144\" min=\"-0,125580\" max=\"0,142242\" rms=\"0,018127\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"1572864\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1f715.au\" len=\"262144\" min=\"-0,130737\" max=\"0,120819\" rms=\"0,013457\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"1835008\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1f55e.au\" len=\"262144\" min=\"-1,000000\" max=\"0,999969\" rms=\"0,028433\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"2097152\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1fe76.au\" len=\"262144\" min=\"-0,182770\" max=\"0,174225\" rms=\"0,024462\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"2359296\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1f972.au\" len=\"262144\" min=\"-0,185303\" max=\"0,164551\" rms=\"0,015298\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"2621440\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1fbfb.au\" len=\"262144\" min=\"-0,132172\" max=\"0,193817\" rms=\"0,014620\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"2883584\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1fe34.au\" len=\"262144\" min=\"-0,122681\" max=\"0,124084\" rms=\"0,014963\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"3145728\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1f050.au\" len=\"262144\" min=\"-0,184998\" max=\"0,205872\" rms=\"0,015848\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"3407872\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1fe8f.au\" len=\"262144\" min=\"-0,150726\" max=\"0,141083\" rms=\"0,018824\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"3670016\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1f2a5.au\" len=\"262144\" min=\"-0,113708\" max=\"0,098633\" rms=\"0,015807\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"3932160\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1feba.au\" len=\"262144\" min=\"-0,118225\" max=\"0,103729\" rms=\"0,014187\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"4194304\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1f8a2.au\" len=\"262144\" min=\"-0,215942\" max=\"0,205505\" rms=\"0,016703\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"4456448\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1fa3e.au\" len=\"262144\" min=\"-0,178528\" max=\"0,170898\" rms=\"0,020263\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"4718592\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1f8f9.au\" len=\"262144\" min=\"-0,158783\" max=\"0,193878\" rms=\"0,022704\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"4980736\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1f195.au\" len=\"262144\" min=\"-0,227173\" max=\"0,274475\" rms=\"0,022697\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"5242880\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1f5c3.au\" len=\"177775\" min=\"-0,512848\" max=\"0,398468\" rms=\"0,047987\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t</sequence>\r\n\t\t\t<envelope numpoints=\"0\"/>\r\n\t\t</waveclip>\r\n\t</wavetrack>\r\n\t<wavetrack name=\"Audio Track\" isSelected=\"0\" height=\"150\" minimized=\"0\" channel=\"1\" linked=\"0\" mute=\"0\" solo=\"0\" rate=\"44100\" gain=\"1,000000\" pan=\"0,000000\" colorindex=\"0\">\r\n\t\t<waveclip offset=\"0,00000000\" colorindex=\"0\">\r\n\t\t\t<sequence maxsamples=\"262144\" sampleformat=\"262159\" numsamples=\"5420655\">\r\n\t\t\t\t<waveblock start=\"0\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1feec.au\" len=\"262144\" min=\"-0,140991\" max=\"0,173981\" rms=\"0,023098\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"262144\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1f9e8.au\" len=\"262144\" min=\"-0,294098\" max=\"0,299835\" rms=\"0,038701\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"524288\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1f7b1.au\" len=\"262144\" min=\"-0,358398\" max=\"0,386536\" rms=\"0,038109\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"786432\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1fb29.au\" len=\"262144\" min=\"-0,580139\" max=\"0,530731\" rms=\"0,056838\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"1048576\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1fb2b.au\" len=\"262144\" min=\"-0,141083\" max=\"0,173004\" rms=\"0,019355\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"1310720\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1fefd.au\" len=\"262144\" min=\"-0,125397\" max=\"0,142029\" rms=\"0,018096\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"1572864\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1fac3.au\" len=\"262144\" min=\"-0,130493\" max=\"0,120605\" rms=\"0,013434\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"1835008\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1f089.au\" len=\"262144\" min=\"-1,000000\" max=\"0,999969\" rms=\"0,028389\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"2097152\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1fec5.au\" len=\"262144\" min=\"-0,182465\" max=\"0,174011\" rms=\"0,024420\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"2359296\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1f34e.au\" len=\"262144\" min=\"-0,184998\" max=\"0,164215\" rms=\"0,015272\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"2621440\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1fc83.au\" len=\"262144\" min=\"-0,131927\" max=\"0,193451\" rms=\"0,014595\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"2883584\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1f267.au\" len=\"262144\" min=\"-0,122467\" max=\"0,123932\" rms=\"0,014938\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"3145728\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1f94c.au\" len=\"262144\" min=\"-0,184631\" max=\"0,205444\" rms=\"0,015820\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"3407872\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1f26e.au\" len=\"262144\" min=\"-0,150421\" max=\"0,140808\" rms=\"0,018792\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"3670016\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1f09b.au\" len=\"262144\" min=\"-0,113525\" max=\"0,098480\" rms=\"0,015780\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"3932160\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1f191.au\" len=\"262144\" min=\"-0,118011\" max=\"0,103577\" rms=\"0,014163\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"4194304\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1fdd0.au\" len=\"262144\" min=\"-0,215546\" max=\"0,205200\" rms=\"0,016674\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"4456448\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1ff0c.au\" len=\"262144\" min=\"-0,178223\" max=\"0,170593\" rms=\"0,020229\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"4718592\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1f1f0.au\" len=\"262144\" min=\"-0,158447\" max=\"0,193604\" rms=\"0,022666\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"4980736\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1f425.au\" len=\"262144\" min=\"-0,226837\" max=\"0,273895\" rms=\"0,022658\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t\t<waveblock start=\"5242880\">\r\n\t\t\t\t\t<simpleblockfile filename=\"eff1f093.au\" len=\"177775\" min=\"-0,512115\" max=\"0,397736\" rms=\"0,047905\"/>\r\n\t\t\t\t</waveblock>\r\n\t\t\t</sequence>\r\n\t\t\t<envelope numpoints=\"0\"/>\r\n\t\t</waveclip>\r\n\t</wavetrack>\r\n</project>\r\n```\r\n\r\ndata dir looks like this:\r\n```\r\ncast patreon audio take 3_data\r\n\u2514\u2500\u2500 eff\r\n    \u2514\u2500\u2500 d1f\r\n        \u251c\u2500\u2500 eff1f050.au\r\n        \u251c\u2500\u2500 eff1f089.au\r\n        \u251c\u2500\u2500 eff1f093.au\r\n        \u251c\u2500\u2500 eff1f09b.au\r\n        \u251c\u2500\u2500 eff1f191.au\r\n        \u251c\u2500\u2500 eff1f195.au\r\n        \u251c\u2500\u2500 eff1f1f0.au\r\n        \u251c\u2500\u2500 eff1f1f1.au\r\n        \u251c\u2500\u2500 eff1f267.au\r\n        \u251c\u2500\u2500 eff1f26e.au\r\n        \u251c\u2500\u2500 eff1f288.au\r\n        \u251c\u2500\u2500 eff1f2a5.au\r\n        \u251c\u2500\u2500 eff1f34e.au\r\n        \u251c\u2500\u2500 eff1f3d2.au\r\n        \u251c\u2500\u2500 eff1f425.au\r\n        \u251c\u2500\u2500 eff1f55e.au\r\n        \u251c\u2500\u2500 eff1f5c3.au\r\n        \u251c\u2500\u2500 eff1f669.au\r\n        \u251c\u2500\u2500 eff1f715.au\r\n        \u251c\u2500\u2500 eff1f7b1.au\r\n        \u251c\u2500\u2500 eff1f8a2.au\r\n        \u251c\u2500\u2500 eff1f8f9.au\r\n        \u251c\u2500\u2500 eff1f94c.au\r\n        \u251c\u2500\u2500 eff1f972.au\r\n        \u251c\u2500\u2500 eff1f9e8.au\r\n        \u251c\u2500\u2500 eff1fa3e.au\r\n        \u251c\u2500\u2500 eff1fac3.au\r\n        \u251c\u2500\u2500 eff1fb29.au\r\n        \u251c\u2500\u2500 eff1fb2b.au\r\n        \u251c\u2500\u2500 eff1fbfb.au\r\n        \u251c\u2500\u2500 eff1fc3f.au\r\n        \u251c\u2500\u2500 eff1fc4b.au\r\n        \u251c\u2500\u2500 eff1fc83.au\r\n        \u251c\u2500\u2500 eff1fdd0.au\r\n        \u251c\u2500\u2500 eff1fe34.au\r\n        \u251c\u2500\u2500 eff1fe76.au\r\n        \u251c\u2500\u2500 eff1fe8f.au\r\n        \u251c\u2500\u2500 eff1feba.au\r\n        \u251c\u2500\u2500 eff1fec5.au\r\n        \u251c\u2500\u2500 eff1feec.au\r\n        \u251c\u2500\u2500 eff1fefd.au\r\n        \u2514\u2500\u2500 eff1ff0c.au\r\n```\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Manjaro linux-5.6.15-1\r\n - Version 2.4.1", "Hi Mr. Manatee. :-)\r\n\r\nCan you give me the \"Commit Id\" near the bottom of the Help -> About Audacity -> Build Information tab?\r\n\r\nAlso, what are the languages have you selected in Linux AND Audacity.\r\n\r\nIf you want to try a little something, after saving your project, edit the \".aup\" and change all the commas to periods.  See if loads then... =||= Closed as we have moved to .aup3 format. =||= "], ["571", "A couple improvements to the Effects workflow", null, "alexandervrs", "06/15/20, 12:52:03 PM", "When applying an audio Effect it always frustrates me to have to manually Ctrl+A to select the entire audio if I want to apply an effect to the entire audio duration, but I have nothing selected at the moment\r\n\r\nAudacity should be smart enough to realize that I need the effect applied to the entire audio track/file if I have nothing selected prior\r\n\r", "Audacity has an option in Preferences: \"Select all audio, if selection required:\"\r\nSee: https://manual.audacityteam.org/man/tracks_behaviors_preferences.html =||= This solves the selection issue, thanks. I added a separate issue for the OK/Apply button =||= "], ["573", "Unable to compile audacity", null, "zensubz", "06/19/20, 07:05:51 AM", "**Describe the bug**\r\nThe latest git master 456177a doesn't compile for me. I have used wxWidgets from audacity branch [https://github.com/audacity/wxWidgets/commit/9400704](url) and gcc 8.3.1. Almost towards the end, I get linking errors.\r\n\r\n**Expected behavior**\r\nThe release version 2.4.1 doesn't suffer from this issue, so out of curiosity, I wanted to check if the latest bug-fix git master of audacity compiles. \r\n\r\n**Additional information:**\r\n - OS: Linux\r\n - wxWidgets are linked as static libs\r\n\r\n**Additional context**\r\nThe compilation errors are given below:\r\n```\r\n[ 99%] Linking CXX executable ../bin/Release/audacity\r\n... ... ...\r\n/usr/lib64/libwx_gtk2u_qa-3.1.a(qalib_debugrpt.o): In function `wxDebugReport::AddContext(wxDebugReport::Context)':\r\ndebugrpt.cpp:(.text+0x11bf): undefined reference to `wxXmlDocument::wxXmlDocument()'\r\ndebugrpt.cpp:(.text+0x125b): undefined reference to `wxXmlNode::wxXmlNode(wxXmlNodeType, wxString const&, wxString const&, int)'\r\ndebugrpt.cpp:(.text+0x12b7): undefined reference to `wxXmlDocument::SetRoot(wxXmlNode*)'\r\ndebugrpt.cpp:(.text+0x14ef): undefined reference to `wxXmlNode::wxXmlNode(wxXmlNodeType, wxString const&, wxString const&, int)'\r\ndebugrpt.cpp:(.text+0x15f8): undefined reference to `wxXmlNode::wxXmlNode(wxXmlNodeType, wxString const&, wxString const&, int)'\r\ndebugrpt.cpp:(.text+0x170b): undefined reference to `wxXmlNode::wxXmlNode(wxXmlNodeType, wxString const&, wxString const&, int)'\r\ndebugrpt.cpp:(.text+0x1965): undefined reference to `wxXmlDocument::Save(wxString const&, int) const'\r\ndebugrpt.cpp:(.text+0x1b6c): undefined reference to `vtable for wxXmlDocument'\r\ndebugrpt.cpp:(.text+0x1d4c): undefined reference to `wxXmlNode::wxXmlNode(wxXmlNodeType, wxString const&, wxString const&, int)'\r\n/usr/lib64/libwx_gtk2u_qa-3.1.a(qalib_debugrpt.o): In function `wxDebugReport::DoAddLoadedModules(wxXmlNode*)':\r\ndebugrpt.cpp:(.text+0x294e): undefined reference to `wxXmlNode::wxXmlNode(wxXmlNodeType, wxString const&, wxString const&, int)'\r\n/usr/lib64/libwx_gtk2u_qa-3.1.a(qalib_debugrpt.o): In function `XmlStackWalker::OnStackFrame(wxStackFrame const&)':\r\ndebugrpt.cpp:(.text+0x5119): undefined reference to `wxXmlNode::wxXmlNode(wxXmlNodeType, wxString const&, wxString const&, int)'\r\ndebugrpt.cpp:(.text+0x5e1a): undefined reference to `wxXmlNode::wxXmlNode(wxXmlNodeType, wxString const&, wxString const&, int)'\r\ndebugrpt.cpp:(.text+0x5f90): undefined reference to `wxXmlNode::wxXmlNode(wxXmlNodeType, wxString const&, wxString const&, int)'\r\n/usr/lib64/libwx_gtk2u_qa-3.1.a(qalib_debugrpt.o):debugrpt.cpp:(.text+0x6355): more undefined references to `wxXmlNode::wxXmlNode(wxXmlNodeType, wxString const&, wxString const&, int)' follow\r\n/usr/lib64/libwx_gtk2u_qa-3.1.a(qalib_debugrpt.o): In function `wxXmlDocument::~wxXmlDocument()':\r\ndebugrpt.cpp:(.text._ZN13wxXmlDocumentD2Ev[_ZN13wxXmlDocumentD5Ev]+0xb): undefined reference to `vtable for wxXmlDocument'\r\n/usr/lib64/libwx_gtk2u_qa-3.1.a(qalib_debugrpt.o): In function `wxXmlDocument::~wxXmlDocument()':\r\ndebugrpt.cpp:(.text._ZN13wxXmlDocumentD0Ev[_ZN13wxXmlDocumentD5Ev]+0xb): undefined reference to `vtable for wxXmlDocument'\r\ncollect2: error: ld returned 1 exit status\r\nmake[2]: *** [bin/Release/audacity] Error 1\r\n```\r", "Audacity (git 24f1a2c) does compile if wxWidgets are dynamically linked (instead of static one as I did in case of v2.4.1), so I believe there is something in the build system that I need to look into. It will be great if I could compile audacity with static-wxWidgets as I don't want libwx* (installed for audacity) to compete with other variants/versions of wxGTK. I hope the devs would look into this and help me with a fix. Thanks. =||= This is actually in the works.  The \"custom\" wxWidgets libraries will end up in <lib prefix>/audacity, e.g., \"/usr/lib/audacity/...\".   =||= Thanks. I managed to compile wxWidgets with a different libname, and linked it with audacity. For now, this seems to work, and of course, I will wait for an official solution by the devs. =||= "], ["575", "Update cs.po", null, "pafri", "06/16/20, 03:21:17 PM", "Update of the Czech localization file to version 2.4.2. Greetings.", "Thank you. =||= "], ["576", "Update Polish Translation", "Grzegorz Pruchniakowski", "Gootector", "06/17/20, 11:39:24 AM", "Update Polish Translation from Transifex\r\n\r\nGreetings,\r\nGootector\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "NaN"], ["578", "Update Polish Translation (fixes)", "Grzegorz Pruchniakowski", "Gootector", "06/18/20, 02:15:20 PM", "Hi,\r\nI must update the translation file. 2 strings need fixes. Update from Transifex.\r\n\r\nThank you and greetings,\r\nGootector\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "NaN"], ["579", "Better Scrolling  Better Shortcuts", null, "stephanhhhh", "06/18/20, 06:36:24 PM", "When selecting an audio track, it would be nice to use the mouse wheel to scroll left/right.\r\n\r\nWhen editing/cutting the audio, it would be nice to have 1 key to play/pause/continue the audio, instead of doing play then pause/stop then cutting then select place to play audio  then play audio.\r\nAfter cutting, it should not automatically revert to stop.", "The mouse wheel scrolls projects up / down (when you have multiple tracks)\r\nShift + Mouse wheel scrolls left / right.\r\nYou  can preview what cutting a selection will sound like with the \"C\" key.\r\nThe full list of keyboard shortcuts can be found in the manual: https://manual.audacityteam.org/man/keyboard_shortcut_reference.html\r\n\r\nFor help using Audacity, and sharing tips, we have a help forum here: https://forum.audacityteam.org =||= "], ["580", "Bug 2488 - Windows: Change Pitch effect with high quality stetching m\u2026", "Leland Lucius", "lllucius", "06/19/20, 08:54:17 AM", "\u2026uch slower in 2.4.1 than 2.3.1\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "NaN"], ["581", "Horizontal scrolling not working with horizontal scroll wheel", null, "Mrxx99", "05/21/21, 01:17:46 PM", "**Describe the bug**\r\nI have a mouse that has a horizontal scroll wheel (Logitech MX master 3). Scrolling horizontally with it works fine in other applications. In Audacity however it only moves the (horizontal) scroll bar but it does not actually scroll.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\nScroll horizontally with a horizontal scroll wheel.\r\nI guess it is only reproducible with such a mouse... \r\n\r\n**Expected behavior**\r\nThe tracks should scroll horizontally together with the scroll bar. Like it is when using shift + normal scroll wheel\r\n\r\n**Screenshots**\r\nSee here how the scroll bar moves but the tracks don't:\r\n![audacity_scroll](https://user-images.githubusercontent.com/33566379/85157436-c5e35700-b25b-11ea-950e-8a7751b57946.gif)\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Windows 10\r\n - Version Audacity 2.4.1\r\n - Mouse: Logitech MX Master 3\r", "try uninstalling Logitech Options and see if that fixes it. =||= Horizontal scrolling works fine on my Big Sur Macbook Pro when using left/right gestures on my Magic-Mouse.\r\n\r\nI can't test on W10 as my mouse there only has a vertical sroll-wheel =||= @ahmadalli is this still the case with the latest Audacity version ? =||= Tested again with 3.02 on Windows.\r\nStill same behavior, the srcrollbar moves but the tack does not. =||= I logged this on our Bugzilla bugtracker as P3 Bug #2795\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2795\r\nBug 2795 - Windows: horizontal scrolling with mouse with horizontal scroll wheel fails to scroll\r\n\r\nAccordingly I will close this GitHub Issue in favor of the tracked Bugzilla entry.\r\n\r\nThanks for the update re 3.0.2 @Mrxx99  =||= "], ["582", "Reorganize tree", "Paul Licameli", "Paul-Licameli", "06/30/20, 02:41:56 AM", "Intended for 3.0.0 development.\r\n\r\nNOW PASSING git hub actions, after the merge of pull request 7 into our wxWidgets fork.  But there were reports of Windows Debug builds failing, which should have an easy fix in AudacityHeaders.h.\r\n\r\nThis commit makes a CMakeList.txt file in each sub-directory of src (with a few minor exceptions) which allows easy specification of that directory's allowed compilation dependencies, so that later we can work on further restriction of dependencies and other improvements of the graph.\r\n\r\nSee comments in the branch tip commit for more detailed explanation.\r\n\r\n=======\r\n\r\nUpdate: macro do_directory takes another keyword OBJCPP_SOURCES and some CMakeLists.txt are simplified using it\r\n\r\nUpdate for branch tip d8e9feaafa2bef5a15e0c18c0327cbecc567350e: fixed build with precompiled headers\r\n\r\nUpdate for branch tip fde4c24466293543985fd01280cbed100c2a560c: fixed Windows debug build with precompiled headers\r\n\r\nUpdate for branch tip 04326739b2c9c75a0812d6fa568580c45d78cc98: fixed absent effect, generator, analyzer menu items\r\n\r\nUpdate for branch tip 26934474e0a7cc11fcfbdebd1164423ab9d90d2c: Keywords INCLUDE_PRIVATE, INCLUDE_PUBLIC, PRIVATE, and PUBLIC for do_directory macro, and more thorough comments about their usage\r\n\r\nUpdate form branch tip 5bc09090990f1c1561935018b8427e00710b3f83: rebased onto 9acabbbed3a1063a18aa7df2314116edf37d3813 after merging https://github.com/audacity/wxWidgets/pull/7, so I expect it to pass Windows builds too\r\n\r\nUpdate for branch top 7c9b60e2ca409f0f8ee6a7333cc700130c0e4dce: no longer making separate precompiled headers for each subdirectory, which should make the clean build faster.  But the common precompiled headers can contain only a few of Audacity's headers.  The benefit is mostly from precompilation of the wx/ headers.\r\n\r\nUpdate for 75ce2935c3f3b539adddcf678bb3f046f60cd903: just rebasing.\r", "I recloned your tree and tried this branch again.  The Debug build on Windows still fails and the Release build times \"seem\" to have gotten a bit longer than previous tests.\r\n\r\nCurrent Audacity master builds in \"0m57.680s\" and your branch builds in \"2m14.121s\".\r\n\r\nI think a lot of that time is spent generating the precompiled header for each of the subdirectories.  Maybe a separate target that does nothing but generate the PCH and then all of the subdirectory targets would use that single PCH.  Basically, tossing the CMake PCH support and doing it manually.\r\n\r\nThe generated PCH would have only \"external\" headers, like WX and system includes and maybe one or two Audacity specific headers.  With your prior include detangling efforts, I'd think that would be good enough.\r\n =||= On Sunday, June 28, 2020, Leland Lucius <notifications@github.com> wrote:\n\n> I recloned your tree and tried this branch again. The Debug build on\n> Windows still fails\n>\n>\n> Same errors as before in any and vector?\n\n> and the Release build times \"seem\" to have gotten a bit longer than\n> previous tests.\n>\n> Current Audacity master builds in \"0m57.680s\" and your branch builds in\n> \"2m14.121s\".\n>\n> I think a lot of that time is spent generating the precompiled header for\n> each of the subdirectories. Maybe a separate target that does nothing but\n> generate the PCH and then all of the subdirectory targets would use that\n> single PCH. Basically, tossing the CMake PCH support and doing it manually.\n>\n\nI will need to rethink what I did for PCH.  Maybe keep just one, but it\nmust include fewer of Audacity\u2019s own headers.  The list of them may not be\nwell chosen anyway after so much else has changed in those headers.\n\nThere need not be just one precompiled header for an object.  Maybe I can\nadd more precompiled headers in subdirectories and figure out how to share\nthem among some subdirectories so that there is not repeated compilation.\n\nPRL\n\n> The generated PCH would have only \"external\" headers, like WX and system\n> includes and maybe one or two Audacity specific headers. With your prior\n> include detangling efforts, I'd think that would be good enough.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/582#issuecomment-650802958>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ACZBGYN45PWV42YLD4PPMDTRY6CTJANCNFSM4ODAUFQA>\n> .\n>\n =||= On Sun, Jun 28, 2020 at 4:43 PM Paul Licameli <paul.licameli@gmail.com>\nwrote:\n\n>\n>\n> On Sunday, June 28, 2020, Leland Lucius <notifications@github.com> wrote:\n>\n>> I recloned your tree and tried this branch again. The Debug build on\n>> Windows still fails\n>>\n>>\n>> Same errors as before in any and vector?\n>\n\nLeland, is there a change I can make to .github/workflows/cmake_build.yml\nso that I build debug in GitHub?\n\nPRL\n\n\n> and the Release build times \"seem\" to have gotten a bit longer than\n>> previous tests.\n>>\n>> Current Audacity master builds in \"0m57.680s\" and your branch builds in\n>> \"2m14.121s\".\n>>\n>> I think a lot of that time is spent generating the precompiled header for\n>> each of the subdirectories. Maybe a separate target that does nothing but\n>> generate the PCH and then all of the subdirectory targets would use that\n>> single PCH. Basically, tossing the CMake PCH support and doing it manually.\n>>\n>\n> I will need to rethink what I did for PCH.  Maybe keep just one, but it\n> must include fewer of Audacity\u2019s own headers.  The list of them may not be\n> well chosen anyway after so much else has changed in those headers.\n>\n> There need not be just one precompiled header for an object.  Maybe I can\n> add more precompiled headers in subdirectories and figure out how to share\n> them among some subdirectories so that there is not repeated compilation.\n>\n> PRL\n>\n>> The generated PCH would have only \"external\" headers, like WX and system\n>> includes and maybe one or two Audacity specific headers. With your prior\n>> include detangling efforts, I'd think that would be good enough.\n>>\n>> \u2014\n>> You are receiving this because you authored the thread.\n>> Reply to this email directly, view it on GitHub\n>> <https://github.com/audacity/audacity/pull/582#issuecomment-650802958>,\n>> or unsubscribe\n>> <https://github.com/notifications/unsubscribe-auth/ACZBGYN45PWV42YLD4PPMDTRY6CTJANCNFSM4ODAUFQA>\n>> .\n>>\n>\n =||= Add \u201c-D CMAKE_BUILD_TYPE=Debug\u201d.  If you want to get a good link, you'll need to do it for the wxWidgets step too. =||= Well I tried that but I haven't yet reproduced a build failure.\n\nWhat are the compilation errors that you still see for Windows Debug?\n\nPRL\n\n\nOn Sun, Jun 28, 2020 at 7:13 PM Leland Lucius <notifications@github.com>\nwrote:\n\n> Add \u201c-D CMAKE_BUILD_TYPE=Debug\u201d. If you want to get a good link, you'll\n> need to do it for the wxWidgets step too.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/582#issuecomment-650835342>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ACZBGYJFGP5TL7ZWCZGQD3LRY7FDFANCNFSM4ODAUFQA>\n> .\n>\n =||= Really sorry Paul.  I completely spaced out that it was MSVC.  the -DCMAKE_BUILD_TYPE doesn't work with MSVC or Xcode.  In the Actions case, look for the lines like this:\r\n\r\ncmake --build \"wxroot\" --config Release --verbose\r\n\r\nChange the \"Release\" to \"Debug\". =||= "], ["583", "Update audacity.desktop.in", "Antonio P", "antpaniagua", "06/29/20, 03:32:44 PM", "Spanish (es) traslation added\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "Thanks for this.  Committed now. =||= "], ["585", "kr => ko in Korean", "Grzegorz Pruchniakowski", "Gootector", "06/29/20, 03:30:49 PM", "kr => ko in Korean\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "Thanks for this.  Merged now. =||= "], ["587", "Failed to open the scripting pipe file on Windows 10", "Mehdi Abjadpour", "MAbjadpour", "06/22/20, 03:16:42 PM", "**Test environment**\r\n- Python 3.6\r\n- Windows 10 Version 1803 (OS Build 17134.1550)\r\n- Audacity Version 2.3.2 build information: \r\n-- Date: May 4 2019\r\n-- Commit Id: bd2956 of Sat May 4 11:38:57 2019 +0100\r\n-- Build type: Release build\r\n-- Compiler: MSVC 19.16.27027.01\r\n\r\nApparently, checking for the existence of Audacity temporary files for reading from and writing into ([here ](https://github.com/audacity/audacity/blob/16d52f63a4183bba77ef7305d14622958dc0d1d5/scripts/piped-work/recording_test.py#L71)and [here](https://github.com/audacity/audacity/blob/16d52f63a4183bba77ef7305d14622958dc0d1d5/scripts/piped-work/recording_test.py#L77)), causes those files to be removed somehow. \r\n\r\nBoth `if` statements turn out to be `True`, however, the following error raises as we try to `open()` the files:\r\n`OSError: [Errno 22] Invalid argument: '\\\\\\\\.\\\\pipe\\\\ToSrvPipe'`\r\n\r\n----\r\n\r\n**Fix**\r\n\r\nRemoving both `if` statements causes both `TOFILE = open(TONAME, 'w')` and `FROMFILE = open(FROMNAME, 'rt')` to be executed successfully. ", "Please include the exact version number of the Audacity build that you are using.\r\nIf you are using a pre-release version of Audacity, please include the Git commit number. =||= I just edited the issue. =||= Audacity 2.3.2 is an old version. \r\nrecordingtest.py was updated and tested to work with Audacity 2.4.1 / 2.4.2. =||= "], ["588", "Audacity crashes after calling \"Stop\" from the Python script.", "Mehdi Abjadpour", "MAbjadpour", "12/18/20, 02:39:54 PM", "**Test environment**\r\n- Python 3.7\r\n- macOS Catalina Version 10.15.4\r\n- Audacity Version 2.4.1 (CMake Release build (debug level 0), 64 bits)\r\n\r\n**Bug description**\r\nThe following snippet works perfectly fine on Windows 10, however, it causes the Audacity on macOS to crash.\r\n\r\n```\r\ndo_command(\"Record2ndChoice\")\r\ntime.sleep(5)\r\ndo_command(\"Stop\")\r\n```\r\n\r\nDoes anybody happen to have a solution for this problem?", "NaN"], ["589", "Be more careful when handling grid keyboard navigation.", "Henric Jungheim", "henricj", "06/29/20, 03:34:51 PM", "If the grid is empty or does not have a selected cell, the current\r\nrow and column must still maintain these class invariants:\r\n   -1 <= current_row < rows\r\n   -1 <= current_column < columns\r\n    if either current_row or current_column is -1, then the other\r\n       shall also be -1\r\n\r\nwxGrid uses wxGridNoCellCoords to test for current_row == -1 &&\r\ncurrent_column == -1.  We treat the case where only one\r\nof the coordinates is -1 as if both are -1.\r\n\r\nThis should resolve the problem described by  \"David Engebretson Jr.\" <accessible.engineering@gmail.com> in the devel thread \"extended import in properties dialog still crashes\" (was it on Bugzilla? I didn't see it).  It has not been tested with a screen reader.\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "Thank you. =||= "], ["590", "Fix built-in suil build on Linux", "Hubert Figui\u00e8re", "hfiguiere", "07/28/21, 01:49:57 PM", "- separator is needed\r\n- prefix for libs is lib so the build must do the same\r\n\r\nSome more info:\r\n\r\n- This was found when adding LV2 support to the flatpak build:\r\nhttps://github.com/flathub/org.audacityteam.Audacity/pull/48\r\n- This is when building without suil available on the system.\r\n- This make the built-in build closer to upstream (and Linux distros).\r\n- Without this loading UI for LV2 plugins fail.\r\n\r\nIt is Linux specific in the CMake files. I can't test on macOS or Windows, but I don't think it will have an impact.\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "This patch has rotten. I have an update as things are broken differently, on top of current master.\r\n\r\n@lllucius you seem to be the one that maintain this. This patch is updated for 3.0.0, without that LV2 plugins UI do not work. =||= Closing this. It won't be merge, it's rotting, and the CLA requirement is showstopper for me. =||= "], ["591", "Experimental cmake", "Paul Licameli", "Paul-Licameli", "06/29/20, 03:26:30 PM", "Replace Experimental.h with Experimental.cmake, so that all objects are guaranteed to compile with the same EXPERIMENTAL flags, which are given on the compile command-line option, and not dependent on inclusion of \"Experimental.h\" which might be mistakenly omitted.\r\n\r\nAll #include \"Experimental.h\" directives are deleted.  There are some other less trivial source code changes separated into earlier commits.\r\n\r\nThis pull request is based on pull request 582 which is not yet merged.\r", "Something is a little bit off.  It might not be related to #591 but what I tried was (on Windows):\r\n\r\n1) Ran cmake configure/generate\r\n2) Opened the solution in Visual Studio\r\n3) Built the Release version (using CTRL+B, Build -> Build Audacity)\r\n4) Added an new \"TESTING123\" define in Experimental.cmake\r\n5) Retried the Release build again\r\n\r\nThe following error was produced:\r\n\r\n`\r\n5>LINK : fatal error LNK1181: cannot open input file 'C:\\Users\\Yam\\paul\\bld\\src\\effect-classes\\VST\\effect-classes_VST.dir\\Release\\cmake_pch.obj'\r\n5>Done building project \"Audacity.vcxproj\" -- FAILED.\r\n`\r\n =||= Has link errors, slower to build than before, and not wanted for 3.0.0 (not a bug fix, nor helping progress UP).  So rejected for 3.0.0 and closed. =||= "], ["592", "Added display of cents to the Plot Spectrum tool.", null, "blaisegassend", "06/29/20, 03:29:43 PM", "Also had to tweak the dialog box layout to account for longer strings.\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "I have reservations about adding cents to Plot Spectrum. With the default settings, the cents figure will just be a \"random\" number because the accuracy of the frequency estimate is only around +/- 3 Hz. =||= Thanks for offering this @blaisegassend, but it won't be going into the 3.0.0 release, so I am closing it.  See https://wiki.audacityteam.org/wiki/Next_Release for what the 3.0.0 release is about. =||= "], ["596", "Internal portaudio error", "Ephraim Becker", "EphraimB", "05/21/21, 01:25:24 PM", "**Describe the bug**\r\nInternal portaudio error\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\nOpen Audacity\r\n\r\n**Expected behavior**\r\nRecording and playback to just work\r\n\r\n**Screenshots**\r\n<img width=\"551\" alt=\"screenshot41\" src=\"https://user-images.githubusercontent.com/10489639/86178202-f47fee00-baf5-11ea-8fb8-3728ad463594.png\">\r\n<img width=\"1920\" alt=\"screenshot42\" src=\"https://user-images.githubusercontent.com/10489639/86178203-f47fee00-baf5-11ea-9b5c-d12cefa2be30.png\">\r\n\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Windows 10\r\n - Version: Audacity 2.4.2\r\n - (if relevant) Sound Device: All\r\n\r\n**Additional context**\r\nWorks perfectly in Audacity 2.3 but won't work in any 2.4 versions\r", "@EphraimB   can you please provide more information?\r\n\r\na) the latest release is now 3.0.2 - is this still happening for you on 3.0.2?\r\n\r\nb) Please provide more detailed steps, in particularly what if any external input/output devices do you have plugged in ?\r\n\r\nc) In Windows Sound control - are any of your devices visible to Windows - and are they enabled?  If Windows can't see them then certainly Audacity won't see them. =||= Due to lack of response from the OP (after our request for updated information) -  and as the original issue was logged a year ago on an older version of Audacity I shall close this issue. =||= "], ["597", "Hotkey for Import RAW Data", null, "rayman3003", "07/02/20, 01:22:12 AM", "As the title said: A Hotkey for Import RAW Data. \r\n\r\nBcuz so many times I import raw data sounds & it would save me a lot of time to have a hotkey for it.", "It's already possible to set custom hotkeys; see [Keyboard Preferences](https://alphamanual.audacityteam.org/man/Keyboard_Preferences). =||= > \r\n> \r\n> It's already possible to set custom hotkeys; see [Keyboard Preferences](https://alphamanual.audacityteam.org/man/Keyboard_Preferences).\r\n\r\nOh, I didn't know it has key bindings. Thank u.\r\n\r\nPlease close this Issue. =||= "], ["598", "Unitary fixes", "Paul Licameli", "Paul-Licameli", "07/02/20, 04:42:26 PM", "Leland, please review these proposed small fixes, and merge them or just cherry-pick what you approve.\r", "Looks good to me.  Thanks for the cleanup.  Never looked to see if the non-wave tracks even used the DirManager.  I just changed it from DirManager to AudacityProject. =||= Leland, I leave it to you to enact the final decision to rebase and merge my pull requests for unitary, or not.  I am still agreeing to be hands-off if my changes impinge on unitary at all.\r\n =||= "], ["599", "Unitary changes", "Paul Licameli", "Paul-Licameli", "07/02/20, 11:11:39 PM", "Leland, this is a more ambitious branch.  Take your time reviewing the stepwise transformation of the code and the commit comments.\r\n\r\nThese changes achieve these things:\r\n\r\n1) Break static dependency cycles in what I think is a proper way, using abstract base classes for SampleBlock and for a factory of SampleBlocks, separated from the concrete implementations in the new file SqliteSampleBlock.cpp.  Only WaveTrack and WaveClip are left in the dependency cycle, as they were at the start of 3.0.0.  ProjectFileIO and SampleBlock are freed from it.\r\n\r\n2) Perhaps enable easier reimplementation of the abstract classes against some other database in future.  But maybe further work on ProjectFileIO would be needed first, similarly separating an abstract base class from it.\r\n\r\n3) The LAST commit, only, contains a fix of the dangling reference crashes in case of cross-document cut and paste.  But I am uncertain whether this is the proper fix.  It does not create a separate database for the clipboard.  Instead it prolongs the life of the database connection so long as the clipboard is not cleared or replaced with other data.  It would be acceptable to merge this branch excluding the last commit.\r\n\r\nUpdate at 95fb426b2e0db0db35ec192631f243afdb6b6787: improved commit comments, no changes of source files\r", "Looks dandy and, as you've pointed out, abstracting it as you've done will give us freedom to try out other storage methods. =||= Really, all of it, so soon?\n\nI had doubt about the last commit.  I wanted to start a conversation.\n\nOn Thursday, July 2, 2020, Leland Lucius <notifications@github.com> wrote:\n\n> Merged #599 <https://github.com/audacity/audacity/pull/599> into master.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/599#event-3509010436>, or\n> unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ACZBGYMVHIJK7XNZQXYZVBDRZUH3RANCNFSM4OPGC3FQ>\n> .\n>\n =||= "], ["601", "Sqlite errors", "Paul Licameli", "Paul-Licameli", "07/05/20, 07:13:31 PM", "Add throw statements where needed in SqliteSampleBlock when database operations fail; necessary but maybe not sufficient to handle, once again, failures to record or edit because of limited space on the drive.\r\n\r\n(What remains to do is confirm that restoration of the project to its state as of the last push of the undo stack, or last successful appending of recorded samples, works correctly after the exceptions are caught.)\r\n\r\nRestore the logic in Sequence that ignores some read-only exceptions from SampleBlock when only attempting to draw the project.\r\n\r\nMake it safe again for Sequence to assume, as it has, that calls to create new blocks either succeed with a non-null block or don't return (throw).\r\n\r\nAll return values from sqlite functions in SqliteSampleBlock are now correctly accounted for.  (But other calls must yet be examined elsewhere in ProjectFileIO.)\r\n\r\nUpdate at 357650c1519fd76a715d510c8c3b037c29ca5f32: Also restore the try/catch in AutoSaveFile::Decode\r\n\r", "NaN"], ["602", "Sqlite resources", "Paul Licameli", "Paul-Licameli", "07/07/20, 10:01:46 AM", "Note that this pull request is failing Linux builds for reasons unrelated to these changes.\r\n\r\nUse C++ style smart pointers to hold resources allocated by sqlite3 and guarantee their cleanup.\r\n\r\nThis simplifies some usage.\r\n\r\nUpdate at 8c8aed092923b868a12303c1bbbc7c178a350ca7: rebased onto pull request #603 which should be merged first, and now waiting to pass make builds\r\n\r", "Jesus dude!  How about if I just step out of the way and let you rewrite the whole damned thing!  Not everything has to following the damned C++ bible!\r\n\r\nShould I even bother writing the AUP importer since you're just going to rewrite it anyway?\r\n\r\nHave fun.\r\n =||= In C++ it's best to invoke resource-freeing functions only within destructors, and this is what is done here for the objects allocated by functions of the sqlite3 library.\r\n\r\nThe new header file does a little bit of work with templates, but as often in C++, once you do the tricky parts at a library level, the usages become much simplified.  I think you will agree that the first of these commits results in brevity in many places.  Maybe you can merge just that one and wait to review the rest.\r\n\r\nThese rewrites are all really low-level details, not major design changes.\r\n\r\nFiguring these details out for myself is a way of doing code review, and I uncovered some bugs as I did it, which are now separately fixed in pull request 603 which should be merged before this one.\r\n =||= Does this still need merging?\r\n =||= I think this RAII style is better C++, and eliminating all those finallys to clean up prepared statements is nice.\r\n\r\nI made this separate from the real bug fixes that are already merged.  It does not now contain any actual bug fixes, though it might make it easier to avoid introducing resource leaks, if any of the functions grow to become more complicated.\r\n\r\nI will withdraw the pull request for now, but I will keep the branch around in my own repo.\r\n =||= "], ["603", "Sqlite open bugs", "Paul Licameli", "Paul-Licameli", "07/06/20, 08:42:19 PM", "If pull request #602 isn't yet reviewed and accepted, please review and merge this smaller one first.\r\n\r\nFix possible memory leaks and crashes when opening of sqlite database fails.\r\n\r\nThere are now exceptions thrown in some new places with messages for the user that might be improved.\r", "NaN"], ["604", "Cross project copy data loss", "Paul Licameli", "Paul-Licameli", "07/07/20, 08:41:51 PM", "Fixes for known cases of data loss when copying wave tracks between projects.\r\n\r\nRestore logic analogous to what was done with block files, when source and destination of paste were not under the same DirManager.\r\n\r\nCopy contents of a SampleBlock into a new block when pasting to a different database; rather than just making a shared_ptr to an existing SampleBlock.\r\n\r", "NaN"], ["605", "White Text on White BG in welcome dialog ", "ligi", "ligi", "05/13/21, 07:36:01 PM", "with a dark theme activated it looks like this:\r\n\r\n![Selection_074](https://user-images.githubusercontent.com/111600/86780640-3f9d8200-c05d-11ea-9d03-598bcc9b76b7.png)\r", "For me with 2.4.2 on W10 it looks kike this with dark text on white at the bottom of the dialog window.\r\n![image](https://user-images.githubusercontent.com/50205984/87290527-61d04d80-c4fe-11ea-95c6-98138d1a4b3e.png)\r\n =||= Closing, NOT-A-BUG\r\nThe OP is expecting system theming dark + Dark theme to theme everything.  It doesn't.\r\n\r\nOP will get results closer to what they want/expect if they disable blending of system and audacity theme in preferences.\r\n\r\nhttps://alphamanual.audacityteam.org/man/Interface_Preferences =||= "], ["606", "Fail safe save as", "Paul Licameli", "Paul-Licameli", "07/07/20, 08:41:34 PM", "When saving-as or saving-copy, open and close databases fewer times.  Open the destination database once at most.  Close the source database for save-as at most once, after success.  (Do not close it, always, then try to reopen it in case of failure -- which would itself risk another failure.)\r\n\r\nAlso supplied some more checks of formerly ignored error codes, from DeleteAutoSave, binding of query parameters, and initializing SQLite.\r\n\r\nThis completes my review of error returns in Unitary, until there are more changes in it.\r", "NaN"], ["607", "Fix exception handling, as when trying to edit read-only database...", "Paul Licameli", "Paul-Licameli", "07/08/20, 05:44:42 AM", "[Leland, push this if it proves to be a sufficient fix for the problem we discussed.  If not, we'll discuss it some more.]\r\n\r\n... Problem is that the delayed undo handling (in the lambda in AudacityApp ::\r\nOnExceptionInMainLoop) should itself have only non-throwing steps.\r\n\r\nBut there was a redundant attempt at autosaving in ProjectHistory ::\r\nRollbackState, which itself requires another data base write.\r\n\r\nBut when \"rolling back\" the in-memory structures to whatever the current state\r\nof undo history is, we can assume that any required autosave was completed\r\nbefore the current state of undo history was set.\r\n\r\nSo for rollback only, do not autosave again when discarding changes and\r\nrestoring the state.  (But do it still, throwing on failure, when moving around\r\nin the undo history, among saved states.  We do want to keep the last autosave\r\nconsistent with the in-memory state.)\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "NaN"], ["608", "Update ffmpeg headers to 4.2.3", null, "Zapeth", "03/29/21, 09:37:44 AM", "Addresses https://github.com/audacity/audacity/issues/398\r\n\r\nHeader files were taken from https://ffmpeg.zeranoe.com/builds/ version 4.2.3 (the various architecture and license versions of these header files have equivalent content)", "\r\n\r\nI am not sure how much attention do the audacity developers put into the conversation here. \r\nAccording to [this audacity forum post](https://forum.audacityteam.org/viewtopic.php?f=20&t=68196&sid=15fe1125d989d5155cfcd9b6b47c4cf7), feature request should be sent on the forum. \r\nJoin [this forum discussion](https://forum.audacityteam.org/viewtopic.php?f=20&t=116912). Your voice will be helpful! =||= @AvrahamTsaban We do pay some attention to conversations here and requests here.  Updating ffmpeg, portaudio and enabling new options in wxWidgets are all in our plans.  However Unitary Project (3.0.0) and follow up (3.0.1) take precedence.  When we change libs it usually introduces new problems.  We do not want that for those two releases. =||= This pull request is obsoleted by #741 (update to ffmpeg v4.3.1) =||= "], ["609", "Also remove orphan blocks when an editing operation rolls back...", "Paul Licameli", "Paul-Licameli", "07/09/20, 04:38:22 PM", "... and that might happen when hitting ESC during a modifying drag operation\r\n(like sample editing), or when recovering from an exception (such as from\r\nfailure to add a sample block because of limited space).\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "I got persuaded in an email thread that this is unnecessary after all, because destruction of wave tracks that are not yet in Undo history is enough to be sure the blocks are cleaned up.\r\n =||= "], ["610", "Fix the reading of autosave files...", "Paul Licameli", "Paul-Licameli", "07/11/20, 05:49:37 AM", "... problem was in recreating strings from buffers, but copying too many because\r\nnull terminators were lacking.\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "NaN"], ["611", "German translation of \"signed\" file formats inappropriate", null, "Kadabash", "05/14/21, 01:21:53 PM", "**Describe the bug**\r\nThe German version of Audacity translates \"signed\" as \"signiert\" in the names of file formats.\r\nFor example, \"Signed 8 bit PCM\" is translated as \"Signiertes 8-bit PCM\".\r\n\r\nThe problem is that \"signiert\" usually means something like \"including a signature\" or, in the context of files, \"signed using a certificate\". As a native German speaker, I have never heard the word \"signiert\" used to mean \"contains (mathematical) sign information\" for integers.\r\n\r\n**To Reproduce**\r\n1. Open Audacity, record some audio\r\n2. Click \"File\", \"Export\", \"Export audio\" (German: \"Datei\", \"Exportieren\", \"Audio exportieren\")\r\n3. In the dialogue for saving the file, the inappropriate translations appear in the file type selection combo box\r\n\r\n**Expected behavior**\r\nAlthough I'm not an audio expert, I would probably translate \"signed\" as something like \"vorzeichenbehaftet\" (literally meaning \"sign-marked\" as in \"marked with a sign\").\r\n\"Signed 8 bit PCM\" would then be \"Vorzeichenbehaftetes 8-bit PCM\".\r\nCould someone from the audio community please voice their opinion?\r\n\r\n*EDIT*: It appears that the Ardour DAW, for example, does not translate \"signed\" at all, see its [translation file](https://github.com/Ardour/ardour/blob/master/libs/ardour/po/de.po#L3571).\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Debian 10\r\n - Version: Audacity 2.2.2, although judging from `locale/de.po` in `master`, the translations have not been changed yet.", "Yes, I agree. It's drawn out in German and that's why the English term is preferred in most places.\r\nI would suggest either the adjective version or the one with preposition and noun:\r\n\r\n8-bit integer (signed)\r\n-> 8 Bit Ganzzahl (vorzeichenbehaftet)\r\n-> 8 Bit Ganzzahl (mit Vorzeichen)\r\n\r\n8-bit (unsigned)\r\n-> 8 Bit Ganzzahl (vorzeichenlos)\r\n-> 8 Bit Ganzzahl (ohne Vorzeichen)\r\n\r\nhttps://de.pons.com/%C3%BCbersetzung/deutsch-englisch/signed+integer?bidir=1\r\n\r\n =||= My \"Mystery-Shopper\" who is a native German speaker and has a Masters in Linguistics agrees with Robert - and prefers\r\n\r\n8-bit integer (signed)\r\n-> 8 Bit Ganzzahl (mit Vorzeichen)\r\n\r\n8-bit (unsigned)\r\n-> 8 Bit Ganzzahl (ohne Vorzeichen)\r\n\r\nBased on the fact that this is more elegant linguistically (not based on computer literacy auf Deutsch) =||= Oops can't remember what it is right now, perhaps\n8 Bit Ganzzahl (vorzeichenbehaftet)?\nThat would of course not really work for the second case.\n8 Bit Ganzzahl (vorzeichenunbehaftet)\nAnyway, fine as suggested and glad that your M-S agrees with me.\nCheers\nRobert\n\nOn 14/05/2021, Peter Sampson ***@***.***> wrote:\n> My \"Mystery-Shopper\" who is a native German speaker and has a Masters in\n> Linguistics agrees with Robert - and prefers\n>\n> 8-bit integer (signed)\n> -> 8 Bit Ganzzahl (mit Vorzeichen)\n>\n> 8-bit (unsigned)\n> -> 8 Bit Ganzzahl (ohne Vorzeichen)\n>\n> Based on the fact that this is more elegant linguistically (not based on\n> computer literacy auf Deutsch)\n>\n> --\n> You are receiving this because you commented.\n> Reply to this email directly or view it on GitHub:\n> https://github.com/audacity/audacity/issues/611#issuecomment-841188480\n =||= I logged this on Bugzilla as new P3 Bug #2779\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2779\r\nBug 2779 - German translation of \"signed\" file formats inappropriate\r\n\r\nAccordingly I shall close this GitHub Issue in favour of the Bugzilla log =||= If only all bugs were as simple to fix...\nRobert\n\nOn 14/05/2021, Peter Sampson ***@***.***> wrote:\n> Closed #611.\n>\n> --\n> You are receiving this because you commented.\n> Reply to this email directly or view it on GitHub:\n> https://github.com/audacity/audacity/issues/611#event-4746989407\n =||= "], ["613", "Char width info goes in the unique data dictionary only once per run", "Paul Licameli", "Paul-Licameli", "07/11/20, 06:10:58 PM", "# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "NaN"], ["615", "fix asio build on windows", null, "micsthepick", "07/17/20, 06:52:25 AM", "ASIO was not getting included in the Windows build, even though the appropriate environment variable was defined, This PR will fix the check for if ASIOSDK_DIR is defined in  cmake-proxies/portaudio-v19/CMakeLists.txt, according to https://cmake.org/cmake/help/latest/variable/ENV.html", "NaN"], ["616", "Canonicalize integers in binary blob format, BREAKING COMPATIBILITY...", "Paul Licameli", "Paul-Licameli", "07/18/20, 04:59:27 AM", "... with .aup3 projects saved earlier in 3.0.0 development, except for 32 bit\r\nWindows builds.\r\n\r\nUse fixed-width integer types when writing the binary format blobs, not\r\nbool, short, int, size_t, ..., which might vary among machines and so make\r\n.aup3 files non-portable.\r\n\r\nChoose the widths to write whatever is narrowest among the four builds; this\r\nmakes a difference only for long and size_t which are 32 bits in the 32 bit\r\nWindows build.  (long is also 32 bits on the 64 bit Windows build.)\r\n\r\nAlso normalize the endianness to little, in case that ever matters on other\r\nfuture processors.\r\n\r\nDidn't attempt the same for the floating point types.\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "I really don't think we have to worry about endianness anymore.  I think all major platforms that we support are little and I'd wager that the upcoming ARM Macs are little as well.\r\n\r\nBut, while it looks complicated, it's pretty spiffy the way you handled it.\r\n =||= "], ["617", "Build instructions for Mac are outdated on wiki", "Mr Speaker", "mrspeaker", "05/13/21, 07:30:01 PM", "**Describe the bug**\r\nThe project structure seems to have diverged from the [build instructions](https://wiki.audacityteam.org/wiki/Building_On_Mac) for Mac. \r\n\r\nThe initial link at the top of the page points to [a 404 in this repo](https://github.com/audacity/audacity/blob/master/mac/build.txt), and the instructions on the page fail at the building step ` xcodebuild -configuration Release64 install`, as there is no xcode project in the repo anymore.\r\n\r\nAdditionally, if I try to instead follow the `cmake` instructions below the xcode instruction, it will fail as it can not find the `wxWidgets` libraries (that are successfully built in the previous steps).\r\n\r\n```-- ========== Configuring wxwidgets ==========\r\nCMake Error at /usr/local/Cellar/cmake/3.15.1/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:137 (message):\r\n  Could NOT find wxWidgets (missing: wxWidgets_LIBRARIES\r\n  wxWidgets_INCLUDE_DIRS)\r\n```\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to [build instructions](https://wiki.audacityteam.org/wiki/Building_On_Mac)\r\n2. Follow the instructions for steps 1-4 (it correctly builds wxWidgets)\r\n3. Follow instructions for 5 (xcodebuild) - fails with \"no xcode project\"\r\n\r\n**Expected behavior**\r\nBuild instructions should apply to current state of the code base.\r\n\r\nI think the `xcode` section needs to be removed, and some instuctions added (or linked) to explain how to use the built wxWidgets libraries as part of the cmake build.\r", "I was able to link the local wxWidgets library. In the documentation under `CMake Build` and `4) Configure and generate the Xcode project` I changed:\r\nbefore: ```cmake -G Xcode ..``` \r\nafter: ```cmake -Daudacity_use_wxwidgets=local -G Xcode ..```\r\nAnd the compilation with `xcodebuild` was successful.\r\n\r\nSorry if this is not the place for issues about the wiki - feel free to close this issue if not, though it would be great to get the information updated. =||= Closing as Wiki now has this text:\r\n\r\n```\r\n4) Configure and generate the Xcode project:\r\n\r\n      cmake -G Xcode ..\r\n\r\n5) Build Audacity using the CMake command or xcodebuild:\r\n\r\n      cmake --build . --config Release\r\n\r\n      xcodebuild --configuration Release\r\n\r\n   The \"Audacity.app\" bundle will be in the \"bin/Release\" subdirectory of your\r\n   \"build\" folder, so you can start it via Finder or:\r\n\r\n      open bin/Release/Audacity.app\r\n``` =||= "], ["618", "Translation: Update zh_CN.po", "WhiredPlanck", "WhiredPlanck", "02/04/21, 08:03:57 PM", "Update the Simplified Chinese translation.", "P.S. This .po file has been uploaded to transifex.com, too. =||= This has now been applied.  Thanks. =||= "], ["620", "Silence finder settings not working in macros", null, "Gibbz", "07/20/20, 03:30:26 AM", "**Describe the bug**\r\nWhen using the silence finder in a macro, it is not applying the settings. Instead it uses the default settings each time.\r\nSee attached macro:\r\n[Label Parts.txt](https://github.com/audacity/audacity/files/4945328/Label.Parts.txt)\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to 'tools>apply macro> Label Parts'\r\nNotice the label before duration setting, silence levels do not work from a macro.\r\n\r\n**Expected behavior**\r\nThe setting should be applied from the macro.\r\nThis worked fine in version 2.3.x and was broken in the 2.4.x series\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Windows 10\r\n - 2.4.2\r", "I see the problem! The settings in the macro have changed since 2.4.x! Ive update my macro, and its working fine! :) =||= "], ["621", "Multi-view not selectable as a default view in settings", null, "Gibbz", "07/20/20, 06:57:31 AM", "**Describe the bug**\r\nIn the preferences-> track -> Default view mode are the options for the tracks default display mode. The multi-view option is missing from the list\r\n\r\n**Expected behavior**\r\nAn option for multi-view to be default.\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Windows 10\r\n - Version 2.4.2\r", "Also it would be nice to be able to specify the default split ratio between the views. Eg, 1 wavform : 3 spectogram =||= Thanks for the suggestion. \r\nIt's already logged on our bug tracker here: https://bugzilla.audacityteam.org/show_bug.cgi?id=2460\r\nPrevious mailing list discussions ruled out an option for \"the default split\" as unnecessary \"preference bloat\". =||= "], ["622", "Various unitary fixes", "Paul Licameli", "Paul-Licameli", "07/20/20, 10:11:44 PM", "Some comments, and a combined bit of exception safety (eliminating some intermediate vector allocations) and efficiency in the callbacks passed to sqlite3_exec.\r", "Looks good.  It was what I was wanting, but couldn't figure out how to do it.  Will merge as soon as the build finish. =||= "], ["623", "Unitary thread review", "Paul Licameli", "Paul-Licameli", "07/21/20, 01:17:46 AM", "I reviewed the recent addition of a worker thread.  I correct some errors.  I don't know if more changes we in store for this.  Take selected commits that don't conflict with plans.\r\n\r", "Write you are.  Sorry about that.  I went through so many iterations of that thing and I was confusing it with a previous version.  I finally realize that SQLite didn't care if I processed every single hook call.  All he cares about is the last one.  So rather than a queue of requests, I would up simplifying it to a simple trigger.\r\n\r\nAnd apparently I left a lot of leavin's behind.  Thanks for catching it. =||= "], ["624", "Fix save project", "Paul Licameli", "Paul-Licameli", "07/21/20, 05:44:28 AM", "Made sure failure paths through SaveProject will do the right thing -- not close the original database connection unnecessarily.\r\n\r\nAnd correct some comments.\r", "Thanks for reviewing that Paul.  This was what I was talking about needing more eyeballs looking at things.  Never hurts!!! =||= "], ["627", "Dependency cleanup", "Paul Licameli", "Paul-Licameli", "07/23/20, 06:04:47 AM", "I was glad to see the new separate class DBConnection.  I was feeling the need too, to define such a class.  Now it lets me do some other cleanups.  I would like to do them first before proceeding with the harder problems of deleting sample blocks and putting transactions in the right places.\r\n\r\nThis cleanup removes some friend declarations from ProjectFileIO, moves class DBConnection into its own separate file, and makes SqliteSampleBlock depend only on DBConnection, not on ProjectFileIO.\r\n\r\nAnd some ugly stuff I introduced before, making the back-reference from ProjectFileIO to AudacityProject weak -- that is no longer needed for safety.  Just a reference will do.  So I want to remove the related null pointer checking complications.\r\n\r", "Looks dandy.  Don't understand some of it, but the bits that I do are goodness. =||= "], ["628", "Preliminaries for grouped block deletion", "Paul Licameli", "Paul-Licameli", "07/23/20, 04:17:30 PM", "Not yet grouping the deletion of blocks into single SQL commands, but these are various simplifications that will support that.\r", "NaN"], ["629", "Win: assertions on project close shouldn't crash displaying the dialog", "Paul Licameli", "Paul-Licameli", "07/23/20, 04:16:02 PM", "# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "NaN"], ["631", "Audacity's ffmpeg plugin automatically scales the volume when importing lossy audio files", null, "Kratos291", "05/22/21, 10:44:31 AM", "When you import lossy audio files in audacity (ac3 etc.) and export them, the export has a lower volume than the source. This is not an expected behaviour when you want to edit audio losslessly. This is because the ffmpeg plugin automatically scales the volume during the import process. Pure ffmpeg does this also. In ffmpeg you can fix it with \"-drc_scale 0\". \r\n\r\nMy suggestion is to make Audacity automatically use \"-drc_scale 0\" when importing a lossy audio source.\r\n\r\n- Windows 10\r\n- Happens in all audacity versions", "Believed fixed, but the bugzilla item and/or commit needs tracking down. =||= Tracked down to https://github.com/audacity/audacity/issues/398#issuecomment-835825236 \r\nhttps://ffmpeg.org/pipermail/ffmpeg-devel/2015-March/170985.html\r\n#741 has been merged, so closing. =||= I tested this on my W10 PC with Audacity 3.0.2  and I can hear no difference when playing - but measurement shows slightly otherwise\r\n\r\n1) Generate default Tone\r\n2) Effect Amplify\r\n3) Observe: amplification factor **1.938 dB**\r\n4) Cancel - i.e. don't apply the Amplification\r\n5) Export as AC3 - say tone.ac3\r\n6) Close Audacity\r\n7) Relaunch Audactity\r\n8) import tone.ac3\r\n9) Export the audio as say tone-exported.ac3\r\n10) Import tone-exported.ac3\r\n11) select top track, labelled \"tone\"\r\n12) Effect > Amplify\r\n13) Observe: amplification factor **1.901 dB**\r\n14) Cancel\r\n15) select bottom track, labelled \"tone-exported\"\r\n16) Effect > Amplify\r\n17) Observe: amplification factor **1.872 dB**\r\n18) Cancel\r\n\r\nSo this looks to meas though Audacity is scaling  when importing lossy AC3 audio files - but  from the measurements it looks like Audacity is slightly scaling up rather than down.\r\n\r\nBut this begs the question:\r\nare the two amplitudes close enough - or does this remain an issue\r\n\r\n@JamesCrook  - your thoughts please ?\r\n\r\n@Kratos291 can you please reconduct my experiment with:\r\na) your original Audacity version from July 2020,\r\nb) the latest release 3.0.2 ?\r\n\r\n\r\n =||= Dmitry reminded me that #741 had been reverted, so reopening. =||= > \r\n> \r\n> Dmitry reminded me that #741 had been reverted, so reopening.\r\n\r\nIt was reverted as we were unsure how to handle\r\na) backwards compatibility issues\r\nb) hosting two versions of FFmpeg for each platform\r\nc) managing users' FFmpeg upgrades =||= Logged on our bugtracker Bugzilla as Bug #2796\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2796\r\nFFmpeg automatically scales the volume when importing lossy audio files\r\n\r\nSo closing this GitHub Issue in favor of the tracked Bugzilla entry. =||= > https://ffmpeg.org/pipermail/ffmpeg-devel/2015-March/170985.html\r\n\r\nThat is the correct behaviour. Anyway, much later https://patchwork.ffmpeg.org/project/ffmpeg/patch/20200201193443.22419-1-rcombs@rcombs.me/ =||= "], ["632", "Use XDG-compliant dirs by default on Unix platforms", "Campbell Jones", "serebit", "05/03/21, 06:06:36 PM", "This addresses [issue 2201](https://bugzilla.audacityteam.org/show_bug.cgi?id=2201) on the Bugzilla tracker.\r\n\r\nThe new behavior is only applicable to Unix platforms. If the `~/.audacity-data` folder doesn't exist (i.e. on a new installation of Audacity) the proper XDG-compliant directories will be used for saving data (configuration files go in `~/.config/audacity`, data files go in `~/.local/share/audacity`). On existing installations of Audacity where `~/.audacity-data` already exists, that directory will continue to be used. This allows for potential downgrade compatibility should Audacity drop the legacy behavior in the future, and doesn't disrupt existing installations.", "Any update on this? =||= FWIW, we're applying this patch on NixOS and so far there has been no complaints. =||= That sounds good, so may be it can be upstreamed? =||= There are some merge conflicts that need to be sorted and it's obviously up to the maintainers here, but otherwise I'd say yes. In all fairness, it's currently in NixOS unstable and thus not in a released version yet.\n =||= I can fix the merge conflicts, but I can't speak to this actually being merged anytime soon. =||= > I can fix the merge conflicts, but I can't speak to this actually being merged anytime soon.\r\n\r\nIs there any reason not to merge it if conflicts are resolved? =||= > Is there any reason not to merge it if conflicts are resolved?\r\n\r\nI mean, there are legitimate concerns with this, namely the fact that it's changing the default for a lot of users. If the version of Audacity is downgraded, for example, it'll be unable to see the data in the new config/storage locations. I think it's worth it, but Audacity's maintainers may not agree, or they just don't feel like reviewing this yet. =||= I think it's better to enable it than to be stuck on those concerns and never enable it, but I'd like to hear what audacity maintainers have to say. =||= Looks like it didn't make it in 3.0? =||= @serebit  - any chance you will find the time to fix the merge conflicts? =||= @peterhoeg Oh right, you need this for Nix. Yeah I can fix the merge conflicts. =||= So is there any plan to upstream it after all? I'd like to see Debian version having that. If it's not going upstream any time soon, I'd propose Debian maintainers to support this as a patch.\r\n\r\nWould be good if anyone who makes the decision to upstream could comment on it. =||= Closing in favor of #831, because I can't update this PR due to having deleted the source branch by accident a while back. =||= "], ["633", "Filter curve tool help link is broken", "Jack Pearson", "jrpear", "07/28/20, 11:34:06 AM", "**Describe the bug**\r\nThe link to the online manual for filter curve eq tool is broken.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Record some short audio clip\r\n2. Select it\r\n3. Open Effect -> Filter Curve...\r\n4. Click on the question mark on the bottom of the new window\r\n5. Click on the link with the text \"view the Manual online\"\r\n6. The link leads to a 404 page\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Windows 10\r\n - Version Audacity 2.4.2\r", "Thanks for the report. I can confirm that this also happens on Linux, so I assume it is the same on all platforms.\r\nI'll log it on our bug tracker.\r\nI think I know what the problem is, so hopefully it will be fixed in the next Audacity release. =||= This has been fixed for  the next release. =||= "], ["640", "export to raw is wrong", "Gabor", "iddq", "08/12/20, 01:03:00 PM", "reproduce:\r\n\r\nrecord\r\nsplit stereo to mono\r\ndelete track 2\r\ntracks/resample to 8000Hz\r\nexport as uncompressed raw, signed 16 bit\r\nfile/new/import/raw: signed 16 bit, little endian (?), 1 channel mono, sample rate 8000Hz\r\n\r\nI think the exported file's sample rate is 44100 instead of 8000.\r", "Use the \"Project Rate\" (lower left corner of the main Audacity window) to set the sample rate of exported files.\r\nSee also: https://manual.audacityteam.org/man/selection_toolbar.html#rate\r\n\r\nIf you require more help, please ask on the Audacity help forum: https://forum.audacityteam.org =||= thank you =||= "], ["641", "Update French translation", "Olivier Humbert", "trebmuh", "08/10/20, 01:56:28 PM", "Following the discussion on the translation mailing list.", ":+1:  =||= "], ["645", "Fix bug/enhancement 266. Added progress dialog when changing sample format.", null, "binarywisdom", "08/20/20, 11:57:50 PM", "Here is a fix/enhancement for the Bug 266.\r\nTo introduce a progress dialog, CovertToSampleFormat-methods were overloaded in classes WaveTrack, WaveClip, and Sequence.\r\nClass WaveTrack got a small new GetNumSamples method, that helps to estimate the total amount of samples for correct progress display.\r\n\r", "NaN"], ["646", "Track factory cleanup", "Paul Licameli", "Paul-Licameli", "08/22/20, 11:44:50 PM", "   Simplify obsolete complications related to TrackFactory...\r\n    \r\n    ... There were there only because DirManager was in the base Track object\r\n    (which was unnecessary even before the Unitary project) and had to be set\r\n    properly for the destination project.\r\n    \r\n    Use a factory now only for Wave tracks, not other subclasses.\r\n\r", "NaN"], ["647", "fixed bug/enh 266", null, "binarywisdom", "09/04/20, 03:44:31 PM", "Here is a fix/enhancement for the Bug 266.\r\n\r\nTo introduce a progress dialog, CovertToSampleFormat-methods were overloaded in classes WaveTrack, WaveClip, and Sequence.\r\n\r\nClass WaveTrack got a small new GetNumSamples method, that helps to estimate the total amount of samples for correct progress display.\r", "I would improve this a few ways:\r\n\r\n1) Don't make new overloads\r\n2) Instead just add one argument, a callback with type std::function< void(size_t) >, which can default to {} (a null function), and comment it\r\n3) Pass a lambda as the function in WaveTrackControls.cpp, which can update the progress indicator\r\n4) Sequence passes len into the function when it is not null\r\n5) Don't make WaveTrack.cpp and lower levels depend on ProgressDialog.h\r\n6) It should be safe to throw UserException out of the lambda in case the progress is cancelled to abort the resampling (please test that)\r\n =||= This looks better now.  Did you test the exceptional path?\r\n\r\nI suggest you squash the two commits into one.\r\n\r\nIt's not my decision whether to merge this though, I'm not the release manager.\r\n =||= > This looks better now. Did you test the exceptional path?\r\n> \r\n> I suggest you squash the two commits into one.\r\n> \r\n> It's not my decision whether to merge this though, I'm not the release manager.\r\n\r\nPaul, thank you for suggestions. Really liked your solution. It is way smaller and doesn't use pointers.\r\nThe cancel button works. The UserException handling on app level resets Audacity to the last saved state. When format changing, the state is saved once the whole work is done. So, cancelling during the process places the program in the pre-format-change state. I'll squash the commits too. =||= I have rebased your commit, resolving some conflicts, and merged it.\r\n\r\nThank you.\r\n =||= "], ["648", "Dont delete sample blocks prematurely", "Paul Licameli", "Paul-Licameli", "08/28/20, 08:38:38 PM", "Re-fixes an old problem more simply.\r\n\r\nAlso restores AutoCommitTransaction as I think it should be, consistent with these principles: https://doxy.audacityteam.org/exception-safety.html#Strong-guarantee-compound\r\n\r\nMAY have relation to the disk exhaustion troubles -- I'm not certain of that yet.\r\n\r\nBut I believe this is also a right thing to do on its own merits.\r", "If you're really certain that the in memory objects will no longer reference the blocks created during the effect, then doing a rollback should be fine.\r\n\r\nBut, why not just leave the AutoCommitTransaction as-is and simply call trans.Rollback() in the cleanup finally block?  Seems a lot clearer to me.\r\n\r\nActually, maybe I should rename AutoCommitTransaction to something more like what it was intended to do.  Maybe, PerformanceWrapper or IOReducer or some such.\r\n\r\nAnd we should probably get rid of using SAVEPOINTs.  Just makes things more complicated due to the nesting.  It's a remnant of some of the initial tinkering I was doing.\r\n =||= > If you're really certain that the in memory objects will no longer reference the blocks created during the effect, then doing a rollback should be fine.\r\n> \r\n> But, why not just leave the AutoCommitTransaction as-is and simply call trans.Rollback() in the cleanup finally block? Seems a lot clearer to me.\r\n\r\nBut the rollback was never done.   The code before my reversion commits by default and requires rollback to be explicit but didn't use it.   Commit of the savepoint was always done.  That's questionable.  Maybe that could leave orphan blocks committed in the SeqBlock table if there is an exception thrown in the scope of AutoCommitTransaction for any reason.\r\n\r\nNo, see the guideline document I cited about why I think this really is better this way.\r\n\r\nThe point of a destructor and RAII is to guarantee a cleanup no matter what might go wrong and cause early abnormal exit.  Better to setup for recovery from failure as the default, and require an explicit call to indicate success and cancel cleanup, which is only done at the point when success is certain.\r\n\r\nIf you do the reverse, requiring rollback to be explicit overriding the commit -- how can you be so sure you correctly cover all the paths of failure?  It's easier to cover just the path of success in stead, which, while most probable, is only one path, not many.\r\n\r\n> \r\n> Actually, maybe I should rename AutoCommitTransaction to something more like what it was intended to do. Maybe, PerformanceWrapper or IOReducer or some such.\r\n> \r\n> And we should probably get rid of using SAVEPOINTs. Just makes things more complicated due to the nesting. It's a remnant of some of the initial tinkering I was doing.\r\n\r\nDo you mean you would reimplement the class to use BEGIN, COMMIT, and ROLLBACK commands instead?\r\n =||= > \r\n> \r\n> > If you're really certain that the in memory objects will no longer reference the blocks created during the effect, then doing a rollback should be fine.\r\n> > But, why not just leave the AutoCommitTransaction as-is and simply call trans.Rollback() in the cleanup finally block? Seems a lot clearer to me.\r\n> \r\n> But the rollback was never done.\r\n\r\nThat's because rollbacks were NEVER intended to be done.  This was strictly supposed to be used for performance not database management.  (I could kick myself for putting that method in there in the first place.)\r\n\r\nIf you want to change it to be more than that, then rename it because it won't be Auto\"Commit\"Transaction anymore.\r\n\r\n> > And we should probably get rid of using SAVEPOINTs. Just makes things more complicated due to the nesting. It's a remnant of some of the initial tinkering I was doing.\r\n> \r\n> Do you mean you would reimplement the class to use BEGIN, COMMIT, and ROLLBACK commands instead?\r\n\r\nYes. =||= > > > If you're really certain that the in memory objects will no longer reference the blocks created during the effect, then doing a rollback should be fine.\r\n> > > But, why not just leave the AutoCommitTransaction as-is and simply call trans.Rollback() in the cleanup finally block? Seems a lot clearer to me.\r\n> > \r\n> > \r\n> > But the rollback was never done.\r\n> \r\n> That's because rollbacks were NEVER intended to be done. This was strictly supposed to be used for performance not database management. (I could kick myself for putting that method in there in the first place.)\r\n\r\nBut should not rollbacks be done as error recovery, if there is any exception propagating out, for whatever other reason (maybe other than exceptions related to the database), to make sure things are left in a clean state? \r\n\r\nWe need to consider the exceptional flows of control too, which might quit anywhere in the middle of the scope of AutoCommitTransaction, and not just the usual success path.\r\n\r\nI was led to this while debugging the problems Steve reported with exhaustion of the thumb drive.\r\n\r\nIt got to the point that these AutoCommitTransaction blocks were being entered, and applying effects was failing, and yet commits of savepoints were also being attempted in these destructors.  And these database operations were failing, but there was no other way to propagate the error out.  And I don't understand what compounded corruption to the database might be happening.\r\n\r\nAnother reason I think it's far better to set up for rollback in the destructor by default, in case anything else wants to blow up for whatever reason.\r\n\r\n> \r\n> If you want to change it to be more than that, then rename it because it won't be Auto\"Commit\"Transaction anymore.\r\n\r\nIndeed, the name might be reconsidered, if it's really the rollback that is \"auto\" unless you tell it otherwise.  Say, \"TransactionScope\".\r\n\r\n> \r\n> > > And we should probably get rid of using SAVEPOINTs. Just makes things more complicated due to the nesting. It's a remnant of some of the initial tinkering I was doing.\r\n> > \r\n> > \r\n> > Do you mean you would reimplement the class to use BEGIN, COMMIT, and ROLLBACK commands instead?\r\n> \r\n> Yes.\r\n\r\n =||= > > > > If you're really certain that the in memory objects will no longer reference the blocks created during the effect, then doing a rollback should be fine.\r\n> > > > But, why not just leave the AutoCommitTransaction as-is and simply call trans.Rollback() in the cleanup finally block? Seems a lot clearer to me.\r\n> > > \r\n> > > \r\n> > > But the rollback was never done.\r\n> > \r\n> > \r\n> > That's because rollbacks were NEVER intended to be done. This was strictly supposed to be used for performance not database management. (I could kick myself for putting that method in there in the first place.)\r\n\r\nAre you suggesting it may be best simply to remove that class and its uses, because it has not demonstrated its value with performance improvements?\r\n\r\nIf you decide that then I will close this request.\r\n\r\n> \r\n> But should not rollbacks be done as error recovery, if there is any exception propagating out, for whatever other reason (maybe other than exceptions related to the database), to make sure things are left in a clean state?\r\n> \r\n> We need to consider the exceptional flows of control too, which might quit anywhere in the middle of the scope of AutoCommitTransaction, and not just the usual success path.\r\n> \r\n> I was led to this while debugging the problems Steve reported with exhaustion of the thumb drive.\r\n> \r\n> It got to the point that these AutoCommitTransaction blocks were being entered, and applying effects was failing, and yet commits of savepoints were also being attempted in these destructors. And these database operations were failing, but there was no other way to propagate the error out. And I don't understand what compounded corruption to the database might be happening.\r\n> \r\n> Another reason I think it's far better to set up for rollback in the destructor by default, in case anything else wants to blow up for whatever reason.\r\n> \r\n> > If you want to change it to be more than that, then rename it because it won't be Auto\"Commit\"Transaction anymore.\r\n> \r\n> Indeed, the name might be reconsidered, if it's really the rollback that is \"auto\" unless you tell it otherwise. Say, \"TransactionScope\".\r\n> \r\n> > > > And we should probably get rid of using SAVEPOINTs. Just makes things more complicated due to the nesting. It's a remnant of some of the initial tinkering I was doing.\r\n> > > \r\n> > > \r\n> > > Do you mean you would reimplement the class to use BEGIN, COMMIT, and ROLLBACK commands instead?\r\n> > \r\n> > \r\n> > Yes.\r\n\r\n =||= Let me restate the problem very briefly:\r\n\r\nCommitting automatically in the destructor may seem convenient, but then it will happen not only with normal flow control, but also when doing exceptional stack unwinding.\r\n\r\nIt is doubtful that this is right.\r\n\r\nI saw it happening while debugging drive exhaustion.\r\n\r\nSo I propose this slightly less convenient class which may be more correct in the unusual cases too.\r\n =||= \r\n> > > That's because rollbacks were NEVER intended to be done. This was strictly supposed to be used for performance not database management. (I could kick myself for putting that method in there in the first place.)\r\n> \r\n> Are you suggesting it may be best simply to remove that class and its uses, because it has not demonstrated its value with performance improvements?\r\n> \r\n\r\nOh, no, it is absolutely required for performance purposes.\r\n =||= I have renamed the class to TransactionScope.\r\n\r\nI'm not sure you sound convinced yet.  It is true haven't yet demonstrated a bug that is fixed with this rewrite.  I would still prefer this style on principle.\r\n =||= Thanks for merging!\r\n =||= "], ["649", "Graceful failure saving to thumb drive...", "Paul Licameli", "Paul-Licameli", "08/28/20, 04:19:37 PM", "... If renaming of the file (to a place on a different device) fails,\r\nrecover correctly before giving the warning message\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "NaN"], ["650", "Bug2529: don't lose data when closing without saving on small drive", "Paul Licameli", "Paul-Licameli", "08/28/20, 06:03:36 PM", "# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "NaN"], ["651", "Bug2532: should preserve sharing of sample blocks when importing AUP", "Paul Licameli", "Paul-Licameli", "08/30/20, 10:18:18 PM", "Bug2532: should preserve sharing of sample blocks when importing AUP\r", "NaN"], ["652", "Bug2537: graph of sharing of block objects needs recreation on open", "Paul Licameli", "Paul-Licameli", "09/01/20, 12:30:47 AM", "# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "We really need to get true reference counting on blocks and get rid of the whole CloseLock()/LastSaveTracks stuff.  Fixes like this wouldn't be needed. =||= "], ["653", "bug2537 addendum: XML block attributes are redundant...", "Paul Licameli", "Paul-Licameli", "09/01/20, 01:31:00 AM", "Bug2532: should preserve sharing of sample blocks when importing AUP\r", "NaN"], ["654", "Aup import review", "Paul Licameli", "Paul-Licameli", "09/01/20, 02:26:24 PM", "Various fixes for .aup import\r\n\r", "NaN"], ["655", "Do orphan block checking differently...", "Paul Licameli", "Paul-Licameli", "09/01/20, 03:54:37 PM", "... Don't have special knowledge of \"blockid\" in ProjectSerializer, which should\r\nbe very low-level.\r\n\r\nInstead, we can deserialize the project first, and use the block ids collected\r\nby the sample block factory since f137a1e.\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "NaN"], ["656", "More aup import review", "Paul Licameli", "Paul-Licameli", "09/02/20, 05:36:49 AM", "# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "NaN"], ["657", "Sample block cleanups", "Paul Licameli", "Paul-Licameli", "09/02/20, 06:11:31 PM", "Various simplifications in SqliteSampleBlock.cpp, which may be peparatory for other bug fixes.\r", "Thank you\r\n =||= "], ["658", "Mac: avoid assertion violations from KeyboardCapture.cpp...", "Paul Licameli", "Paul-Licameli", "09/03/20, 05:34:00 PM", "Please do review this.  It's not related to UP but it came to my attention trying to debug 2526.\r\n\r\nI wonder if all the unusual stuff manipulating NSEvent, which I don't fully understand, is made unnecessary by changes in more recent versions of wxWidgets.\r\n\r\nSee source of wxWidgetCocoaImpl::SetupKeyEvent to understand just how the unicode character in the wxKeyEvent is set up.  In some paths to our function GetUnicodeString, it's all the data we have.\r\n\r\nThe assertion that is removed is a bothersome one that I have been seeing sometimes in debug builds for quite some time, but I don't know for sure what to do about it.\r", "I probably understand it less than you do Paul, but as RM are fine with it going through, if phenomenologically it looks OK/better.  Do try with IME/Kanji, just to check we are not creating a new problem for foreign locales.  (I'd expect we actually end up better). =||= Definitely some complicated stuff.  Merging so we can give others an opportunity to test it as well. =||= "], ["662", "Would it be extremely difficult to get the option to have absolute times on the x-axis?", "RIN67630", "rin67630", "09/11/20, 05:26:59 AM", "I would really love to be able to get the possibility to choose absolute time (hh:mm:ss) from the system time of recording on the x-axis of a track.\r\nWould that be a huge issue, breaking a lot of other things, or would it be easily doable?\r\nIMHO storing the time of starting the recording in the metadata and doing a bit if time math on the axis ribbon?", "Yes, it would be extremely difficult if not impossible. If you import a file, Audacity has no idea which decade it was recorded, let alone the time. Even if Audacity did know the start time, as soon as you start editing, the times will be wrong.\r\nThere is however a plug-in that may fit your purpose. See this post on the forum: https://forum.audacityteam.org/viewtopic.php?p=337348#p337348\r\nIf you have further questions, please ask on the forum. =||= Thank you, that helped. =||= "], ["663", "\"Issue opening record device, Code of Issue -9999. issue -9999 Unanticipated host error\"", "Aka86", "kalinushkin", "05/14/21, 02:50:01 PM", "**Describe the bug**\r\nA clear and concise description of what the bug is.\r\nThen u change an ears with microphone to just ears( without microphone) *and u still not have either input devices - system warn you a text that use in the title.  \r\n\r\nI start audacity with my ears audiotechnica ATH-SR30BT with microphone, after that, then audacity was open i change  my ears on sennheiser HDR 180 without micro and back to Audacity. \r\n\r\nSo i get an error modal window \r\n \r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to 'Audacity'\r\n2. Change one of your input devices (i think - this is problem) to device without an input, only output(like usual ears)  \r\n3. Go back to 'Audacity'\r\n4. See error\r\n\r\n**Expected behavior**\r\nA system warn you what \"You have no input devices now\"\r\n\r\n**Screenshots**\r\n\r\n![\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435](https://user-images.githubusercontent.com/8788849/92506575-518ed300-f20e-11ea-8f13-14cfa9357bec.png)\r\n\r\n\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: [Windows 10]\r\n - Version [Audacity 2.4.2]\r\n - (if relevant) Sound Device [Windows HDAD]\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r", "Audacity does not expect you to change you input devices (unplug one and plug in a different one) while it active, or even while it is just open and inactive.   In particular Audacity does not dynamically re-scan periodically for changed devices (you can do this manaully by using Transport > Rescan Audio Devices.\r\n\r\nYes the message could be clearer as to what the issue is - but that message IIRC comes from Portaudio and not Audacity.\r\n\r\nIt is explained clearly in the Audacity Manual on this page:\r\nhttps://manual.audacityteam.org/man/error_opening_sound_device.html\r\nwhere it says at the bottom of the page:\r\n\r\n-9999 Unanticipated host error: this means means \"something is wrong\". And appears to most often be due to either:\r\n    A lost connection to a USB audio device.\r\n    Recent Windows / Mac update requiring that user gives permission for Audacity to access the microphone. =||= "], ["664", "fixed bug 2109", null, "binarywisdom", "09/09/20, 04:43:42 PM", "Hello,\r\nHere is a fix for the bug 2109. The fix preserves the original behavior when the newly imported tracks are muted if something was soloed before. But now, the mute button is down. In the bug discussion thread, this behavior is the first one suggested by Steve Daulton.\r\nWhen determining if something is soloed, the fix scans the existing playable tracks. I haven't found any \"HasSolo\" method, but if it exists, I can amend the pull  request.\r\nPavel.\r", "NaN"], ["666", "Snap manager", "Paul Licameli", "Paul-Licameli", "09/19/20, 05:25:49 PM", "A preliminary for improvements in Time Shift (which will eliminate track type switches in it) is first to eliminate type switches in Snap.cpp.\r", "> I like the dependence in Snap being on Track rather than multiple other classes.\r\n> \r\n> The use of const to distinguish Intervals with IntervalData and without looks 'tricksy' to me.\r\n> \r\n\r\nThink of STL containers with overloaded const and non-const begin() and end(), returning different types of iterators, that don't or do allow mutation of the container.  An analogy is intended.\r\n\r\n> > I get (or think I do) that IntervalData (aka TrackIntervalData) is arbitrary attached data, but am not getting why you're not using different named functions for with-data and without-data, which seems to be the real distinction.\r\n\r\nThe important distinction is not with or without data, but rather allowing or not allowing mutation.  Overloading by constness of this is idiomatic.\r\n\r\n> \r\n> The const/non-const distinction is also confusing, because I'd expect to be able to modify actual start and end with the non-const version, and have that modify the underlying objects, and that's not the case. Would separate names for the two versions that indicates one has data and one doesn't be clearer?\r\n\r\n\r\n> \r\n> If we're expecting to 'do operation' on the attached IntervalData, such as actually modify start and end, or to query the data to find out whether there is quantization on start and end and whether there is a constraint, such as 'length must be preserved', is the intention that one would add virtual functions to IntervalData to achieve that?\r\n\r\nNo, the IntervalData is a cookie to be passed back to the appropriate Track or TrackShifter class (next pull request) to interpret.  It only offers a readout of start and end, not modification.  Which is enough for SnapManager. \r\n\r\n> \r\n> I understand, now, why SnapManager needed changing too, since it (of courses) cares about clips and indeed other things one might snap to.\r\n> \r\n> > I am interested in whether the eventual method for filtering Tracks and Intervals to snap to will be adequate or fragile.\r\n\r\nThere is a constructor of SnapManager that collects all intervals from the TrackList in a default way.  But it can also be given a predefined list of points built in a nondefault way.  Which is what TimeShift needs to do, to exclude the moving parts of the tracks from the list of snap candidates.  I did not like the special purpose constructor that existed and rewrote it.\r\n\r\n\r\n\r\n =||= Allow me a redraft.\r\n =||= Of course you're 'allowed a redraft'.  I'm taking it to mean; 'I'm redrafting to address some points'. =||= I have reworked this.\r\n\r\nAs I said, I follow the convention of stl container methods like \"begin\" which have const and non-const overloads, returning results of different kinds, allowing non-mutative or mutative access to the special extra data in the interval.\r\n\r\nYou must static_cast or dynamic_cast the extra to the expected type, but those casts can't throw away const.\r\n\r\nSo long as you don't use const_cast (which is always a questionable thing) or C-style pointer casts (bad C++ style), you won't subvert the system.\r\n\r\n\r\n =||= These look like improvements on the previous version; including NoteTrack in the changes and making the exclusions a passed in parameter. =||= What do you mean about NoteTrack?  I thought I had changes for it too in the previous version.  It is necessary to preserve behavior.\r\n\r\n =||= Then perhaps I had not picked up on it last time.  I noticed it this time, and thought it was one of the new changes. =||= Rebased onto more recent master, no changes\r\n =||= "], ["668", "Track shifters", "Paul Licameli", "Paul-Licameli", "09/19/20, 05:25:09 PM", "Act II of the TimeShift restructuring eliminates two TypeSwitches and one Visit, and makes the clip-shifting menu items also work for Note tracks.\r\n\r", "> I see this is in draft, but wanted to ask:\r\n> \r\n> Is the fixed/movable distinction too much of a special case and too geared to clips? That clips won't move out the way and are non overlapping is a specific choice for wave clips.\r\n\r\nBut the non-overlapping constraint will be special to WaveTrackShifter and need not impemented in LabelTrackShifter and will not be in any way enforced by the base class.\r\n\r\nThe purpose is that the shifter can select only certain of the intervals as moving, then the TimeShift code can iterate only over moving or over fixed intervals as needed -- such as to make fewer snap positions.\r\n\r\n> \r\n> > The actual algorithm when moving something is to (a) to determine where it lands if it attempts to move to a new position (b) to determine what else changes when it moves to a new position.  Shouldn't TrackShifter itself be more agnostic of the algorithms, otherwise it's already specialised for clips?\r\n\r\nWhat do you mean?\r\n\r\nTrackShifter, the abstract base class, and the TimeShiftHandle that uses it, are \"agnostic,\" not committed to any particular policy for checking whether moving would succeed.  TimeShiftHandle just checks whether an error is reported.  Derived classes do that as appropriate to the type of track.  LabelTrackShifter need impose no constraint on movement.\r\n\r\n> \r\n> Please replace wxASSERT( false ) in TimeShiftHandle.cpp with wxFAIL_MSG (\"Slide amount is in opposite direction or larger than requested\"). The comment 'didn't honor post condition!' is too vague,\r\n\r\nI do not consider it vague when I used the @post Doxygen command in the documentation of TrackShifter to formalize a postcondition.\r\n\r\nIt means a derived class failed to keep its contract.\r\n\r\n>even in combination with the actual condition (above), but this would fix that by clarifying the intent of the post condition. >[One's first thought on seeing a multiply is that an area is involved; the next that integer overflow might be a concern].\r\n\r\n =||= Where is the @post condition?  I didn't see it.\r\n\r\n> TrackShifter, the abstract base class, and the TimeShiftHandle that uses it, are \"agnostic,\" not committed to any particular policy\r\n\r\nThe detail I'd missed is that mFixed is potentially used by LabelTrackShifter, not in deciding whether a move is allowed at all - for that no mFixed is needed, and constructing mFixed is pointless.  Rather mFixed may play a role in snapping of moving Labels.\r\n\r\nBecause I'd missed that use, mFixed looked like a WaveTrackShifter implementation detail that had crept into TrackShifter.  Hence my comment. =||= There are some changes now.\r\n\r\nNone of the actual moving of clips is managed by TrackShifters yet.\r\n\r\nEnough of the rest is managed by them, so that the snapping code in TimeShiftHandle makes no direct use of WaveTrack and\r\nWaveClip classes, and the function in ClipMenus.cpp is generalized enough to shift NoteTracks too.\r\n =||= I see this isn't draft anymore.  Is it ready for review, or might it change further as next stage is done?\r\nCan you say more about the switch on hitTest introduced in f00128d please? =||= See the TypeSwitch in TimeShiftHandle.cpp that is eliminated.\r\n\r\nWe decide whether nothing can be done for that click (and that was never the case but for WaveTrack).\r\n\r\nIf you can do something, then either we shift parts of the track and also try to shift parts of other tracks when the click is in the selection.  Or, we shift the clicked track only.\r\n\r\nOld behavior is that the label track always shifts as a whole and takes nothing else with it when you click in it.  NoteTrack shifts as a whole but may take other tracks with it.  Wave track moves only certain clips but may take other clicks with it.\r\n\r\n =||= Rebased onto more recent master, no changes\r\n =||= "], ["669", "Migrate clips", "Paul Licameli", "Paul-Licameli", "09/19/20, 05:24:29 PM", "Next act, the reparenting of clips in Time shift is done by the WaveTrackShifter class.\r", "Were we previously failing to resample clips on moving them between tracks? =||= On Wed, 16 Sep 2020 at 17:44, James Crook <notifications@github.com> wrote:\n\n> Were we previously failing to resample clips on moving them between tracks?\n>\n\nIn Audacity 2.4.2 (and earlier), if we move a clip to a track with a\ndifferent sample rate, the audio is resampled.\nHowever, a stereo track may have different sample rates in each channel\n(which can produce surprising behaviour for the unwary).\n\nSteve\n\n\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/669#issuecomment-693527337>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ACZD2SJBRQKSP6N3IIIHXBDSGDTNFANCNFSM4RO4XF2A>\n> .\n>\n =||= > Were we previously failing to resample clips on moving them between tracks?\r\n\r\nWe were not failing to do that.  I only moved the code that does it.\r\n =||= This pull request looks incomplete to me now.  I will add a commit.\r\n =||= Rebased onto more recent master, no other changes.\r\n\r\nThe other thing I thought necessary will be in the next pull request.\r\n =||= "], ["670", "8-bit FLAC samples are not imported correctly", "Saga Musix", "sagamusix", "05/14/21, 03:54:28 PM", "**Describe the bug**\r\nIt seems like 8-bit FLAC samples are imported with a wrong amplification factor - to me it looks like the raw 8-bit values are interpreted as if they are from a 16-bit sample, so only the low 8 of 16 bits are ever used.\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Add https://sagagames.de/stuff/eeeeeeee.flac or any other 8-bit FLAC file to your Audacity project\r\n2. Notice that it's practically silent\r\n3. Normalize to see that there is actually data being imported\r\n\r\n**Expected behavior**\r\nThe example file should peak at 0dB. You can use e.g. VLC to verify that this is correct.\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Windows 10 x64\r\n - Version 2.4.2\r", "I have logged this on Bugzilla our Audacity bugtracker\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2782\r\nBug 2782 - 8-bit FLAC samples are not imported correctly\r\n\r\nAccordingly I will close this GitHub Issue in favor of that tracked bug.\r\n =||= "], ["671", "Trying to enter digit 8 or 9 into project sample rates opens a dialog instead", "Saga Musix", "sagamusix", "05/14/21, 02:35:03 PM", "**Describe the bug**\r\nTrying to enter either the digits 8 or 9 into the project sample rate box pops up a dialog to either adjust the left or right border of the selection instead.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Focus the project sample rate field\r\n2. Type digit 8 into sample rate field\r\n3. Close the dialog for adjusting the left selection border that just opened\r\n4. Type digit 9 into sample rate field\r\n5. Close the dialog for adjusting the right selection border that just opened\r\n\r\n**Expected behavior**\r\nI should be able to enter digits 8 and 9 for my project sample rate.\r\n\r\n**Screenshots**\r\n\r\n![record](https://user-images.githubusercontent.com/875883/93643275-fb851100-f9ff-11ea-86ed-0e10ee83d3a9.gif)\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Windows 10 x64\r\n - Version Audacity 2.4.2\r\n- German keyboard layout\r\n- Fresh Audacity install on this system\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r", "Works fine for me on W10 Home 64-bit with 2.4.2 English keyboard and the latest 3.0.0 alpha builds that I have =||= According to [this forum thread](https://forum.audacityteam.org/viewtopic.php?t=111403) it also happens with Norwegian keyboard layouts so maybe you could try to install a second keyboard layout? Maybe any ISO layout will do? =||= I can confirm this bug using the german keyboard layout, and it will also\naffect the norwegian layout.\nThere's a workaround. The keyboard shortcuts for left at playback position\nand right at playback position are [ and ] respectively. If you either\nclear them or set them to g and h, for example, that will fix the problem.\n\nDavid.\n\nOn Fri, 18 Sep 2020 at 21:41, Saga Musix <notifications@github.com> wrote:\n\n> *Describe the bug*\n> Trying to enter either the digits 8 or 9 into the project sample rate box\n> pops up a dialog to either adjust the left or right border of the selection\n> instead.\n>\n> *To Reproduce*\n> Steps to reproduce the behavior:\n>\n>    1. Focus the project sample rate field\n>    2. Type digit 8 into sample rate field\n>    3. Close the dialog for adjusting the left selection border that just\n>    opened\n>    4. Type digit 9 into sample rate field\n>    5. Close the dialog for adjusting the right selection border that just\n>    opened\n>\n> *Expected behavior*\n> I should be able to enter digits 8 and 9 for my project sample rate.\n>\n> *Screenshots*\n>\n> [image: record]\n> <https://user-images.githubusercontent.com/875883/93643275-fb851100-f9ff-11ea-86ed-0e10ee83d3a9.gif>\n>\n> *Additional information (please complete the following information):*\n>\n>    - OS: Windows 10 x64\n>    - Version Audacity 2.4.2\n>    - German keyboard layout\n>\n> *Additional context*\n> Add any other context about the problem here.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/issues/671>, or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AC2WDLJ4GHLFQP5BCLLAGXDSGPAWRANCNFSM4RSPZKVA>\n> .\n>\n =||= @petersampsonaudacity is there a bugfix for this issue or why was it closed? =||= Sorry, I got confused with 2 other locale issues that we had - and that got fixed for 3,0.0 - so I reopened this =||= I have logged this as P3 Locale Bug #2781   in Bugzilla our bugtracker\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2781\r\nBug 2781 - German keyboard: Trying to enter digit 8 or 9 into project sample rates opens a dialog instead\r\n\r\nAccordingly I shall close this GitHub Issue in favor of the Bugzilla entry =||= "], ["672", "Time shift rewrite bug2464 preliminaries", "Paul Licameli", "Paul-Licameli", "09/20/20, 11:49:38 AM", "Combining previous material with new work.\r\n\r\nSufficient to make TimeShiftHandle.cpp independent of all Track subclasses, defining a sufficient interface in TrackShifter.\r\n\r\nAt commit 2eab9879a57659d6d94bed363ace5067ae924dd2 the postcondition is better stated.  Otherwise commits up to e2353f3146a47678b3c19f8f403c9c46758b6326 have been reviewed before and are unchanged.\r\n\r\n\r", "Some changes in d7d1644380d2383a35a8174edb58b28957bac86c\r\n\"Another TrackShifter method eliminates a use of capturedClipArray\"\r\n =||= Better default behavior for TrackShifter::MayMigrateTo (always false except for WaveTrack) and TrackShifter::AdjustFit (ditto)\r\n =||= Better default behavior for TrackShifter::SelectInterval\r\n =||= Fix definition of TrackShifter::AllFixed\r\n =||= Fix a bug in track correspondence; added new commits for some last cleanup of general TrackShiftHandle logic.\r\n\r\nThis finishes the redrafting.\r\n =||= "], ["673", "Bug2464", "Paul Licameli", "Paul-Licameli", "09/20/20, 11:49:37 AM", "Bug 2464 fix\r", "Thanks.  This is mostly seen/reviewed before.  The additional code looks fine, and works fine in preliminary testing.  I'm a little wary of the additional repetition of 'OnLabelPermuted' code, but it's OK.  I think there's some future work to do on redefining what 'HitTest' really is, since it is becoming more general, and we're seeing a new type switch that follows on from it.\r\n\r\nOverall though, delighted to have this bug fixed, with care taken over details such as quantization of position and dragging to other tracks.  If it has also made the code cleaner and easier to work with, that's a good outcome too.  Thank you! =||= "], ["674", "SCAM Website Audacity", null, "eleminer", "05/12/21, 01:12:32 PM", "Hello guys,\r\nYesterday I wanted to download audacity.\r\nWhen entering \"audacity\" on Google, the following website is the first suggestion: https://www [dot] audacity [dot] de/.\r\nAfter downloading it from this website, Windows Defender raised the alarm: undesirable behavior.\r\nHere, via Github, I found out that the \"correct\" homepage has the following URL:\r\nhttps://www.audacityteam.org/\r\n\r\nAfter downloading it from this website, everything went smoothly and I was able to edit my audio files.\r\n\r\nI assume that the first website is a fake?\r\nIs this really the case?\r\n\r\n\r\nBest regards\r\nMarc\r\n\r\n\r", "Yes, \"audacity.de\" is a malware site. We would dearly love to see that site permanently shut down, or at least blocked by Google.\r\n\r\nThe genuine Audacity website is https://www.audacityteam.org/\r\nOur official downloads are served by https://www.fosshub.com (follow the links from the Audacity website for download /installation instructions and the name of the file that you require). Note that the Audacity download links on FossHub are text links. =||= Reported the malicious site to Google at this link: https://safebrowsing.google.com/safebrowsing/report_badware/?hl=en\r\n\r\nMore places to report malicious sites are itemized here: https://security.stackexchange.com/questions/1728/where-to-report-malicious-urls-phishing-and-malicious-web-sites =||= okay, this is very bad....\r\n =||= \r\nI'm actually always very careful when downloading files, but this time they got me... =||= The bad news is that the malicious website https://www [dot] audacity [dot] de/ is still listed on the first (!) place when I search for \"audacity\" at Google. We just detected that we had installed a bundle of new notebooks with malware coming from that site. Today I could confirm that the downloaded Audacity for Windows comes from https://www [dot] audacityorg [dot] de/ and is not identical to the official one, but significantly larger.\r\n\r\nI now wrote to Host Europe GmbH (part of the @hosteurope group) who host the scam website and hope they will shut it down and prosecute their client which claims to come from Malta.\r\n\r\nI also reported it at @Google using the link above.\r\n\r\nAs Audacity is a trade mark, it could also be possible to go against domains which misuse that name. =||= I have modified the direct links to the scam site. We really don't want to be helping their SEO ;-) =||= Symantec just told me that they detect the malicious Windows installer. Windows Defender does not detect it ...\r\n\r\n    audacity2-4-2.exe | 7125d68e319e44fe0fe0b6c2412e4ea3 | Already Detected | Trojan.Gen.2 | 209933\r\n =||= I think they change the payload periodically. Much of the time it is a \"pup\" installer. =||= The owner of the scam website is listed in the [Paradise Papers](https://en.wikipedia.org/wiki/Paradise_Papers): https://offshoreleaks.icij.org/nodes/56039455. =||= I've reported the website to https://www.quad9.net/ =||= Host Europe answered today. They ask for evidence that the site is really malicious. =||= Clicking on the \"Download starten\" link on this page: https://www [dot] audacity [dot] de/download-de/\r\ndownloads this file: https://www.virustotal.com/gui/file/128f53140b13a899bf6304ec2d5db4ebce33df7d3cf5e3386b97a9701a922fed/detection\r\nTested at 16:54 GMT 16 Feb 2021 =||= It might be worthwhile to try to get their code signing certificate revoked.  It will be simple enough for them to get another one, but at least executables that have already been downloaded should get flagged.\r\n\r\nhttps://web.entrust.com/ev-misuse/\r\n\r\nI have no idea how responsive Entrust is to these kinds of problems. =||= > Symantec just told me that they detect the malicious Windows installer. Windows Defender does not detect it ...\r\n\r\nSubmit it to https://www.microsoft.com/en-us/wdsi/filesubmission for MS to analyse it. =||= okay, I was happy a few days ago that the page is down, now it's back online ... =||= Currently they deliver an unmodified audacity-win-3.0.0.exe. But of course one never knows whether they always do that in the future. =||= ![audacityScam](https://user-images.githubusercontent.com/46229930/114696334-d3069080-9d1c-11eb-91d4-85b2699a0ee6.png)\r\n\r\nmaybe you should write here that there is a fake page online. As information! =||= That website has no rights to use the domain name \"audacity\" without permission. So legal means would be most effective. =||= "], ["675", "Bug2464", "Paul Licameli", "Paul-Licameli", "09/21/20, 04:31:49 PM", "Implement the dragging of labels between tracks with TimeShift.\r\n\r\nAlso move the new TrackShifter subclasses into three new source files, separating them from the rest of TrackView subclass code.  They may have dependency on the views, but not the reverse.\r\n\r", "Now there are two enhancements:\r\nDragging of labels from track to track (up to the first merge commit), and\r\nDragging of labels from track to track can carry clips with it, and dragging of clips can carry labels\r\n =||= I'm not keen on the greater use of events, rather than calls, but that's a philosophical difference, and doer-decides trumps that in this case.  I understand how it helps 'untangling'.  Similarly for what looks like more near-duplicated code in d508b8.  We're seeing a lot of similar code for renumbering label index things.\r\n\r\nOverall goal though makes this well worth having.  So added to master. =||= Some implementation of the \"observer\" (or call it \"publisher/subscriber\" pattern) is a necessity so that LabelTrack is not statically dependent on the code that receives the notifications, here and in other already existing places.\r\n\r\nWhether wxEventHandler implements it or not is an implementation detail.  I would like to reimplement many such cases of the observer pattern without it.\r\n\r\n =||= Would the planned reimplementation be easier to step through? =||= Surely there would be far fewer levels of stack between the sending of the message and the entering of the callback function.\r\n\r\nBecause LabelTrack is broadcasting a message to multiple listeners, the single stepping might have you entering and exiting LabelTrackView::OnLabelPermuted() before you reach LabelTrackShifter::OnLabelPermuted().  But this would be a simple traversal of a list or array of observers, and not the complicated and more generalized business inside wxEvtHandler().\r\n\r\nThe implementation of those callbacks would be a little simpler and less error prone because event.Skip(); would not be needed to prevent an observer from consuming the message and blocking the broadast from later observers.\r\n\r\n\r\n =||= "], ["676", "Compressor v2 effect", "Max Maisel", "mmmaisel", "06/04/21, 09:30:33 AM", "The Compressor v2 effect is a downward compressor that, in\r\nconstrast to the existing compressor (see below), behaves\r\nas someone would expect. It is implemented in a new effect to not break\r\nexisting legacy chains.\r\n\r\nThe new effect has two envelope detectors, a new one which is based on\r\nan analog PT1 compressor and the legacy envelope detector from the old\r\ncompressor effect. Additionally, you can chose between RMS and peak\r\ndetection.\r\n\r\nSliders in the GUI with a very high dynamic range (e.g. attack and\r\nrelease time) use a logarithmic scale to improve usability.\r\n\r\nAs mentioned earlier on the audacity-devel list, I extracted the plot and\r\nslider-with-textbox widgets into separate classes. They are both\r\nintegrated into ShuttleGUI so they can be used elsewhere as well.\r\n\r\nEnvelope detectors and sample preprocessors (RMS and sliding-max)\r\nare separate classes to keep the code modular and extensible.\r\nInternally, the effect uses a four stage pipeline to buffer audio data.\r\nThis might be over-complicated for offline processing but allows unified\r\noffline and realtime code-paths.\r\n\r\nWhen using the new PT1 envelope detector, all parameters expect the\r\nlookahead time are realtime capable. In case of the legacy envelope\r\ndetector, attack time is not realtime capable as an additional\r\nlimitation because it is implemented with lookahead.", "I'll never sign a CLA on Google docs. =||= > I'll never sign a CLA on Google docs.\r\n\r\nTo be clear, you won't sign a CLA regardless of how it is presented to you, correct?\r\n\r\nIt's not merely an issue with a Google form, I assume?\r\n\r\nIf so, I'm very sorry you've decided to retract the PR but of course, I respect the decision =||= > > I'll never sign a CLA on Google docs.\r\n> \r\n> To be clear, you won't sign a CLA regardless of how it is presented to you, correct?\r\n> \r\n> It's not merely an issue with a Google form, I assume?\r\n> \r\n> If so, I'm very sorry you've decided to retract the PR but of course, I respect the decision\r\n\r\nWhy should I sign a contract the gives nothing back to me?\r\nInstead it demands lots of additional personal information beyond those in a git commit and sends them to google(forms). =||= I understand. The CLA itself is a fundamental problem for you. Apologies that it doesn't work for you. Unfortunately, this is not something I have the ability to change. =||= "], ["677", "Update Polish Translation from Transifex - fixes", "Grzegorz Pruchniakowski", "Gootector", "09/24/20, 10:10:48 AM", "Update Polish Translation from Transifex - fixes\r\n\r\nGreetings,\r\nGootector\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "NaN"], ["679", "Improve 'Import Raw Data' dialog", "Myungchul Keum", "dofuuz", "09/27/20, 01:03:38 PM", "![image](https://user-images.githubusercontent.com/8174871/94364525-da5da800-0104-11eb-90af-f697d9aec082.png)\r\n\r\nSample rate text box is replaced by combo box with preset.\r\n\r\nDialog's default rate is received from Project Rate(instead of fixed 44100Hz).", "Thank you!  Merged now, and intended for 3.0.0.\r\nWe're working on 3.0.0 currently and other changes to features are likely to be held over to 3.0.1.  If you have other changes you are working on too, please join the audacity-devel mailing list and discuss there. =||= "], ["682", "Artist tag missing on M4A exports", null, "timg7", "05/14/21, 11:14:22 AM", "Whenever exporting as M4A the Artist tag is missing from the exported file.\r\nOther file formats are unaffected (MP3, OGG, FLAC...).\r\nTested with Audacity 2.4.1 and 2.4.2 on Windows 10 and MacOS 10.15.7.\r", "Yes you are right - I tested on W10 with 2.4.2 and the latest alpha build I have for the upcoming 3.0.0 - I will be logging this on our Bugzilla bug-tracker =||= Hi Peter, Thanks for the confirmation. -Tim =||= Logged as P3 Bug 2564\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2564\r\n\r\nAnd note the Year tag is also not exported.\r\n\r\nBut this looks like an old bug:\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=1146\r\nArtist and Year metadata is not exported or imported in FFmpeg 2.2.2\r\nwhich we closed 2 year ago as WONTFIX (actually CANTFIX as it's an FFmpeg bug) =||= P3 Bug 2564  https://bugzilla.audacityteam.org/show_bug.cgi?id=2564\r\n\r\nWas marked as RESOLVED FIXED on 27Jan21\r\n\r\nLeland made the fix and I did the QA testing. =||= "], ["683", "Audio device list not refreshing without restart", "rahulserver", "rahulserver", "10/11/20, 09:33:17 AM", "**Describe the bug**\r\nWhen I add a new device (bluetooth headphones) to my system(OSX catalina) while audacity is running(even in background), it does not appear in list of the available audio output dropdown.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Start audacity. \r\n2. Then connect bluetooth headphones\r\n3. Try to record a track\r\n4. On audio output dropdown, the device does not appear. \r\n5. If we even disconnect and reconnect the output device(while audacity is running), on trying to play through it, it shows the error \"Error opening sound device. Try changing audio host, playback device and the project sample rate\"\r\n6. The device is able to play only after restarting audacity.(quit and start again)\r\n\r\n\r\n\r\n**Expected behavior**\r\nIt should either have a button to manually refresh audio output devices or should refresh properly automatically. (Atleast a button can do if auto refresh is too complicated to implement)\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/5101740/95668289-baf85d80-0b8f-11eb-8afa-8d432aba5648.png)\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: MAC Catalina\r\n - Version Audacity 2.4.2\r\n - (if relevant) Sound Device Samsung Level U (bluetooth headphone)\r\n\r\n\r", "Just tested. Same issue with wired headphones too. =||= \"Rescan Audio Devices\" (in the \"Transport\" menu)\r\nhttps://manual.audacityteam.org/man/transport_menu.html\r\n\r\nFor future issues, please write to the help forum in the first instance: https://forum.audacityteam.org =||= "], ["684", "Apple Silicon Support", "Sam Carlton", "ThatGuySam", "11/11/20, 01:40:18 PM", "With Apple possibly dropping the first Apple Silicon powered Mac as early as November what's the status of Audacity support for ARM-based Macs?\r\n\r\nFrom what I've seen on other OSS projects they are basically ready to go and there's not much work needed to support it: \r\n[Handbrake Support](https://doesitarm.com/app/handbrake/)\r\n[OBS Support](https://doesitarm.com/app/obs/)\r\n[Blender Support](https://doesitarm.com/app/blender/) (Was directly mentioned in the Apple presentation)\r\n\r\n\r\n**Additional context**\r\nI'm putting together a list of reported support for Apple Silicon so people can quickly see if their favorite apps are supported yet. \r", "It is known that Audacity can be built on Raspberry Pi.\r\nYou are welcome to try building Audacity on an ARM-based Mac if you have access to one - let us know how you get on. =||= That's good news. I usually work in Node JS environments but I can try doing a build. \r\n\r\nAre there any recommended resources/wiki articles for correctly running builds? =||= Here: https://github.com/audacity/audacity/blob/master/mac/cmake_build.txt =||= I've got the build environment setup after some troubleshooting and I'm trying to get Xcode's Universal Build working (Hopefully, that's an appropriate approach)\r\n\r\nI can, however, confirm that the public 2.4.2 build works out of the box (because of Rosetta 2) on macOS Big Sur running on physical Apple Silicon with seemingly no issues.  =||= Thanks for that useful feedback ThatGuySam - I'll close this off on the basis of your report =||= [CMake 3.19](https://cmake.org/cmake/help/v3.19/release/3.19.html) combined with [Xcode 12.2](https://developer.apple.com/documentation/xcode-release-notes/xcode-12_2-release-notes) should make universal binaries pretty easy. Both will be included soon in the macOS environment of GitHub Actions, CMake on the next release and Xcode 12.2 is already included, but will be the default on [November 30th](https://github.com/actions/virtual-environments/issues/2056).\r\n\r\n**Edit:** In the meantime you can checkout [this build with Xcode 12.2](https://github.com/EwoutH/audacity/actions/runs/377330086) to see if it works and how it performs.\r\n\r\nAlso [Xcode 12.3 beta](https://github.com/EwoutH/audacity/actions/runs/377335398) just for fun! =||= Thanks for the update EwoutH =||= Looks like GitHub Actions is updated with the lastest XCode to allow this to be built! Exciting. =||= Unblocked the Xcode version in this PR: #814 =||= "], ["685", "Auto-select all when selecting an effect", "Johan Kotlinski", "jkotlinski", "10/14/20, 09:07:53 AM", "**Is your feature request related to a problem? Please describe.**\r\nI often open an audio file to apply some effect to it, e.g. normalize. When I select \"normalize\", I am met by the dialog \"Select the audio for Normalize to use (for example, Ctrl + A to Select All) then try again.\" To me this seems like an unnecessary annoyance.\r\n\r\n**Describe the solution you'd like**\r\nWhen selecting an effect and no selection is made, automatically select all instead of showing a dialog.", "Enable the \"Select all audio, if selection required:\" option in Preferences:\r\nhttps://manual.audacityteam.org/man/tracks_behaviors_preferences.html =||= "], ["686", "Let users update audacity.pot only", "Michele Locati", "mlocati", "11/01/20, 06:56:40 PM", "Commit 748aa05495819660384998ecc182c207c97de7a6 allows people to easily update the `audacity.pot` file, without touching the `.po` files.\r\n\r\nThis can be done by calling\r\n```sh\r\nAUDACITY_ONLY_POT=y ./update_po_files.sh\r\n```\r\n\r\nIf the `AUDACITY_ONLY_POT` environment variable is not set, or if its value is not `y`, nothing changes.\r\n\r\nI also added commit 9e8618dd880455ece8b1e62295415ace61a9d99f: with that change the script exits as soon as an error occurs (for example, if the gettext tools are not available).", "Thank you. =||= "], ["687", "Update ProjectHistory.cpp", "Thomas De Rocker", "RockyTDR", "11/02/20, 12:12:36 PM", "Fix typo - \"Warning\" instead of \"Warining\"\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "Thanks. =||= "], ["688", "\u201c\u5173\u4e8e\u201d\u754c\u9762\u7684copyright\u8fd8\u505c\u7559\u57282018\u5e74", null, "tasty0tomato", "11/10/20, 03:18:04 PM", "**Describe the bug**\r\n\u201c\u5173\u4e8e\u201d\u754c\u9762\u7684copyright\u8fd8\u505c\u7559\u57282018\u5e74\u3002\r\n\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. \u5e2e\u52a9\r\n1. \u5173\u4e8eAudacity\r\n1. Audicity\r\n\r\n**Expected behavior**\r\n\u5e94\u8be5\u662f2020\u5e74\r\n\r\n**Screenshots**\r\n<img width=\"394\" alt=\"Snipaste_2020-11-10_22-45-18\" src=\"https://user-images.githubusercontent.com/48764449/98689161-9c5fcf00-23a6-11eb-860b-09250b4043e0.png\">\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Windows 10\r\n - Version Audacity 2.4.2\r", "Thanks.\r\nFixed. =||= > Fixed.\r\n\r\n<img width=\"694\" alt=\"Snipaste_2020-11-10_23-44-13\" src=\"https://user-images.githubusercontent.com/48764449/98696672-0b412600-23af-11eb-834b-ccd5f3155436.png\">\r\n\r\n\u91cd\u65b0\u4e0b\u8f7d\u5e76\u6362\u4e3a\u4e86\u82f1\u6587\u754c\u9762 =||= \u95ee\u9898\u5e76\u6ca1\u6709\u89e3\u51b3\uff01\uff01\uff01\u8bf7\u4e0d\u8981close issue\uff01\uff01\uff01 =||= I fixed it here: https://github.com/audacity/audacity/commit/0836ab12b4fc9771af017da1f506e6cadab6b043 =||= > I fixed it here: [0836ab1](https://github.com/audacity/audacity/commit/0836ab12b4fc9771af017da1f506e6cadab6b043)\r\n\r\n\u8c22\u8c22\u60a8\uff01\u867d\u7136\u53ea\u662f\u4e00\u4e2a\u5fae\u4e0d\u8db3\u9053\u7684\u5c0f\u95ee\u9898\uff0c\u751a\u81f3\u5bf9\u8f6f\u4ef6\u903b\u8f91\u6ca1\u6709\u5e2e\u52a9\uff0c\u4e0d\u8fc7\u5e0c\u671b\u8fd8\u662f\u80fd\u5c3d\u91cf\u5448\u73b0\u51fa\u4e00\u4e2a\u5b8c\u7f8e\u7684\u8f6f\u4ef6\u3002 =||= "], ["690", "404-errored link", "Avraham Tsaban", "AvrahamTsaban", "11/17/20, 04:57:10 PM", "When opening any help content on audacity (clicking on the ? button on the egde of function window, for example), if I do not have the manual offline, I get:\r\n\r\n \r\n> The Manual does not appear to be installed. Please view the Manual online or download the Manual.\r\n> To always view the Manual online, change \"Location of Manual\" in Interface Preferences to \"From Internet\".\r\n\r\n\"the manual online\" links to open the corresponding wiki page.\r\n\r\nBut on the Loudness Normalization function, it refers to \r\n[error 404](https://manual.audacityteam.org/man/loudness.html)\r\ninstead of\r\n[this manual page](https://manual.audacityteam.org/man/loudness_normalization.html)\r\n\r\n - OS: Windows 10 20H2\r\n - Version: 2.4.2\r", "Thanks. I've logged this on the bug tracker and hopefully it will be fixed in the next release. =||= Just a quick update. This has now been fixed for the next Audacity release. =||= "], ["692", "Loudness meter/analyzer", null, "RiseT", "03/16/21, 05:21:34 PM", "I'll make this very short (and potentially sweet):\r\n\r\nSince Audacity now has loudness normalization, wouldn't it make sense to integrate a loudness meter/analyzer?\r\n\r\nFeel free to close this if it doesn't make any sense to you.\r", "I believe the playback level indicator in Audacity already does that job. =||= The playback meters already have an option to show RMS level (See: https://manual.audacityteam.org/man/meter_toolbar.html#recording)\r\nIt is not possible for the meters to show the same measurement as Loudness Normalization because that measures the average loudness over the entire duration of the selection.\r\nIt would be possible for the meters to show the \"short term\" or \"momentary\" loudness measurement, or any number of other measurements and scales, should someone choose to develop new meters. =||= I would love this feature either as a meter showing short term, momentrary, and integrated loudness (similar to Shotcut), or the ability to select a section and output its integrated loudness. =||= "], ["694", "Jenkins integration", null, "ajaypatel24", "11/29/20, 06:52:40 AM", "# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "NaN"], ["695", "Please create Appimage", null, "hinkali", "12/22/20, 08:57:47 AM", "Please create Appimage? once every six months or a year at least\r", "Perhaps this is not helpful but it's worth noting: Audacity has a [flatpak](https://www.flathub.org/apps/details/org.audacityteam.Audacity) available for your installation. =||= On the [Audacity forum ](https://forum.audacityteam.org) we have received multiple reports of problems with the flatpak and Snap builds. At this time I would not recommend either.\r\n\r\nI agree that an official Appimage would be good, but we currently do not have the developer resources to produce and test. If anyone would like to help with this, please get in touch via the [developer's mailing list](https://sourceforge.net/projects/audacity/lists/audacity-devel). =||= Related #172  =||= > If anyone would like to help with this, please get in touch via the developer's mailing list.\r\n\r\nHello @SteveDaulton, I had [tried](https://sourceforge.net/p/audacity/mailman/audacity-devel/thread/CAADtZXBFD=B2MjHwBA-LMiXmffQvMknMenfW1zJfwU6KYJq_uQ@mail.gmail.com/?page=1) this back in 2017 but it seemed that the project did not want to publish an AppImage at that time. I am happy to help if someone from the Audacity project wants to pick this topic up again. =||= Hello @probonopd , I recently posted some issues on your Audacity AppImage branch because it was the most promising AppImage fork that I could find. I had hoped that my comments would help others to see what else still needs to be done to produce a fully functional Audacity AppImage. Unfortunately my comments appear to have disappeared.\r\n\r\nI'm hoping that there will eventually be an official AppImage, though due to the demands of end user support, testing of the official branch,  plus my own development work, I don't have much free time left to work on an AppImage myself. =||= Hi @SteveDaulton thanks for your interest in getting an AppImage published. Your issues are still [there](https://github.com/probonopd/audacity/issues?q=is%3Aissue+author%3ASteveDaulton) for reference however I did archive that repository. It was my working repository [back in 2017 when I was trying to work with the Audacity project to produce and support official AppImages](https://sourceforge.net/p/audacity/mailman/audacity-devel/thread/CABp83eDwVYC1HXNL8ejSYm%2BF%2B_a3ntSjKSiaagm3%2BHWQjZi6iQ%40mail.gmail.com/#msg36139126), but since this never materialized I am no longer working on it.\r\n\r\nShould you or anyone from the Audacity team have real interest in producing and supporting official AppImages as part of the Audacity build pipeline, then I'd be more than happy to help. =||= "], ["696", "Time test", "Paul Attara", "PaulAttara", "11/30/20, 02:53:03 AM", "# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "NaN"], ["699", "Can't find CVE-2020-11867 fix", "Dave Plater", "plater", "05/10/21, 05:53:34 PM", "I apologise for using a bug report but the last email I can see on the devel list is from June.\r\nThis was fixed between 2.3.3 and 2.4.0 but I've searched the git log, these issues and the devel mailing list and I can't find anything relating to the commit where this was fixed.\r\nThe CVE relates to audacity's temp directory having 0777 permissions instead of 0700 which would prevent other users seeing the files.", "closing as fixed =||= @plater The PR has not been merged yet and it seems to have been forgotten about, why is this closed as fixed? =||= It is correct for this issue to be closed as it has been superseded by a pull request. =||= That's not typical Git Etiquette. Its closed, when its closed. That PR has been sat there for 6 months with no indication that anyone is interested in merging it. This matter is ongoing so calling the issue \"closed\" is untrue. \r\n\r\nAnd before you complain about a bunch of newbs running amock telling you how to run your ship, get used to it, we're here cos its become evident the last week that the Audacity devs are asleep at the helm. We're here to fix that. Wake up, merge the PR. Then you can pat yourself on the back and close the issue. =||= I think that my reason for closing was https://bugzilla.opensuse.org/show_bug.cgi?id=1179449 I made a work around patch that created the temp file in the users home directory. I should have mentioned that in this patch =||= @plater I'm glad you fixed that for openSUSE but that should not be packagers' responsibility. Someone already submitted a pull request (#700) with a fix 6 months ago and @SteveDaulton's strange comment above is the first that it has even been acknowledged by an Audacity maintainer. =||= "], ["700", "Fix CVE-2020-11867", "Dennis Braun", "snd1", "05/10/21, 05:53:34 PM", "This fixes CVE-2020-11867 by setting the permissions for the user tmp folder to 700. Closes #699 \r", "Soft bump on this. Is there an ETA? =||= I am very concerned about the maintenance of an application used by millions of people in which there is no response from a maintainer to a one line fix for a security vulnerability in six months. =||= Ping can someone review this please? =||= Thank you @crsib. =||= "], ["701", "Closing file with CTRL-W leads to Audacity crash", "Germano Massullo", "Germano0", "12/09/20, 12:49:49 PM", "Closing file with CTRL-W leads to Audacity crash\r\nFedora 33\r\naudacity-freeworld-2.3.3-5.fc33.x86_64 from RPM Fusion repository\r\n[audacity_crash_report.zip](https://github.com/audacity/audacity/files/5665460/audacity_crash_report.zip)\r\n\r\n\r\n\r\n\r", "Thanks for the report.\r\nIf you are the package maintainer, please contact us via the [developer's mailing list](https://www.audacityteam.org/contact/mailing-lists/).\r\nWe are not able to do anything about this as Audacity 2.3.3 is an old version and we have no reports of this problem with the current version. The current release version is 2.4.2 and the development version is 3.0.0 alpha. =||= "], ["702", "Native support of MSU1 format PCM files", null, "edale2", "12/21/20, 04:15:54 PM", "**Is your feature request related to a problem? Please describe.**\r\n\r\nI do a lot of audio work with PCM files (.pcm; not pcm encoded .wav) that use a non-standard 8-byte header. As a result of this, I am unable to drag and drop them into Audacity, and have to import them as raw data instead.\r\n\r\n**Describe the solution you'd like**\r\n\r\nI would like Audacity to support automated importing of these PCM files. Whether natively or through a plugin.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nATM, my only option is to manually import the files as raw data.\r\n\r\n**Additional context**\r\n\r\nThe non-standard 8-byte header used by the PCMs, when viewed in a hex editor, is \"MSU1####\" (the #### is a pointer to the file's loop point, and can be ignored)\r\n\r\nThe audio settings for these files is:\r\nEncoding: Signed 16-bit PCM\r\nByte Order: Little-endian\r\nChannels: 2-Channels (Stereo)\r\nStart Offset: 8 bytes\r\nAmount to Import: 100%\r\nSample Rate: 44100 Hz\r\n\r\nAny and all PCM files with the MSU1 header will have these settings.\r\n\r\n![Untitled](https://user-images.githubusercontent.com/20962345/102021458-ef35f900-3d4d-11eb-97af-f5c5c37b7c83.png)\r\n\r\nFor context MSU1 format PCM files are used for MSU-1 mods to SNES games. An MSU-1 mod allows SNES games to play CD quality audio in such a way that the CD quality sound will even play on an original unmodded SNES system.\r\nYou can see an example of a MSU-1 mod in action here: https://www.youtube.com/watch?v=v788KslHvbU", "Thought I'd provide some more info, in case it helps this get added:\r\n\r\nHere's a MSU1 format PCM as viewed in a hex editor, with the 8 byte header highlighted:\r\n![image](https://user-images.githubusercontent.com/20962345/102788737-1b1a3580-4371-11eb-8321-7dc9b57ed6c7.png)\r\nThat track is a non-looping track which is why the 4 byte loop value is all zeros (but like I said, Audacity can ignore that part of the header anyways).\r\n\r\nAnd here's a short MSU1 format PCM that can be used for testing purposes:\r\n[alttp_msu-1.zip](https://github.com/audacity/audacity/files/5724906/alttp_msu-1.zip)\r\n\r\n =||= I think this can be done  by writing a Nyquist Plug-in (https://wiki.audacityteam.org/wiki/Nyquist_Plug-ins_Reference)\r\nusing the \"S-READ\" command (https://www.cs.cmu.edu/~rbd/doc/nyquist/part8.html#index663).\r\n\r\nIf you require help writing a suitable plug-in, support is available via this board in the Audacity support forum:\r\nhttps://forum.audacityteam.org/viewforum.php?f=39\r\n\r\nAs MSU1 files are very much a niche interest, I doubt that support will ever be incorporated into the main program, though a successful plug-in could be distributed via the Audacity wiki (https://wiki.audacityteam.org/wiki/Download_Nyquist_Plug-ins).\r\nI shall therefore close this issue for now, but we can reopen it if it proves impossible to implement with Nyquist. =||= Probably the right place to implement something like this would be in FFmpeg; they already implement a large number of esoteric audio formats.  (Though, Audacity also doesn't have the latest version of FFmpeg IIRC). =||= "], ["704", "Multi-tool not \"sticking\" when selected before closing Audacity", null, "raichea", "12/15/20, 07:33:38 PM", "**Describe the bug**\r\nAccording to the manual, if the multi-tool is selected prior to Audacity beings closed, it should be active when Audacity is next opened. In v2.4.2, it isn't, the Select tool is always selected.\r\n\r\n**To Reproduce**\r\n1. Open Audacity\r\n2. Select the multi-tool\r\n3. Do some editing\r\n4. Close Audacity\r\n5. Open Audacity again to find the Select tool is active\r\n\r\n**Expected behavior**\r\nAs per the description, the Multi-tool should be selected when Audacity is reopened\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Windows 10\r\n - Version Audacity 2.4.2\r\n\r\n\r\n**Additional context**\r\nI hadn't used Audacity for a while, so updated to latest version and noticed I had to keep selecting the multi-tool, which I didn't have to for the previous version (didn't notice the version, sorry).", "Thanks for the report. This was discussed recently but as far as I can see it was not logged, so I'll log it on the issue tracker. =||= Ignore  my previous comment - it was logged, I just failed to find it until I started logging it again.\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2503\r\n\r\nAdditional information: you can select the multi-tool with the F6 key. =||= Thanks - I was aware of F6.\r\n\r\nI just took a look at the logged issue and see that it was closed leaving this behaviour as it is. I think that's a pity. As someone who does use multi-tool, it's irritating to have to click it each time I start the program. As I'm used to it sticking, it's usually after a moment of puzzlement as to why it's not working. \r\n\r\nI understand the problem of someone being \"locked\" in multi-tool mode, but it doesn't take long to figure that out. With things as they are, we multi-tool users are left having to remember to do that click every time we start the program. Making the behaviour an option would be the best solution, I guess, as noted in the bug, but even restoring the older behaviour would be better (in my, admittedly, biased opinion). =||= You would be surprised at the number of times we see this problem: https://forum.audacityteam.org/viewtopic.php?p=410597#p410597 (and no doubt there are many more that don't come to the help forum). =||= I'm sure you're right... IIRC, I ran into the issue myself when I first started using Audacity. Making it an option would be ideal, but no doubt I'll get used to the way things are now. It doesn't diminish Audacity in any way - still a nice bit of software. =||= "], ["712", "MacOS: Cannot open wav file from right click menu if Audacity is already open", "rmri", "intonarumori", "12/29/20, 04:21:28 PM", "**Describe the bug**\r\nOn Mac Catalina right click on a file and selecting open with Audacity doesn't open the file if Audacity is already open.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Open any file in Audacity\r\n1. Find a wav file in Finder\r\n2. Right click on the file and go to Open With\r\n3. Select Audacity\r\n4. Audacity does not Open the file selected\r\n\r\n**Expected behavior**\r\nFile is opened in a new Audacity window.\r\n\r\n**Screenshots**\r\n-\r\n**Additional information (please complete the following information):**\r\n - OS: MacOS Catalina 10.15.6\r\n - Version Audacity: 2.4.2\r", "Thanks for the report. This is already on the Audacity bug tracker. =||= "], ["713", "MacOS: Cannot open wav by dropping file on Audacity icon if Audacity is already open", "rmri", "intonarumori", "02/23/21, 05:53:18 PM", "**Describe the bug**\r\nIf Audacity is already open dropping a wav file on the app icon does not open the file in Audacity.\r\n\r\n**To Reproduce**\r\n1. Open any file in Audacity\r\n2. Leave the app open and drop another wav file on the application icon\r\n3. Audacity doesn't open a new window with the wav file, a new Audacity instance seems to be getting opened and immediately closed, the the first Audacity icon \"jumps\" one time\r\n4. File is not opened\r\n\r\n**Expected behavior**\r\nA new Audacity window should be opened with the wav file.\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: MacOS Catalina 10.15.6\r\n - Version Audacity 2.4.2\r", "Thanks, this is already a known bug in or bug-tracker:  http://bugzilla.audacityteam.org/show_bug.cgi?id=2510 =||= It has been fixed for the upcoming 3.0.0 release of Audacity =||= "], ["714", "New Logo", "Akhilesh Balaji", "akhilesh-balaji", "02/28/21, 05:44:33 PM", "**Is your feature request related to a problem? Please describe.**\r\nThe current Audacity logo looks really outdated, and doesn't look that great on the start menu.\r\n\r\n**Describe the solution you'd like**\r\nI'd like to suggest a new logo for Audacity. I've actually redesigned the icon; have a look in the \"Additional Context\" section if you're interested. I've retained the headphones, as that's what makes the logo stand out. Other ideas are also welcome. I just want a redesigned icon that looks good.\r\n\r\n**Describe alternatives you've considered**\r\nN/A\r\n\r\n**Additional context**\r\n![1](https://user-images.githubusercontent.com/69246693/103435997-07a67e80-4c3d-11eb-980d-18d9acd272d9.png)\r\n![2](https://user-images.githubusercontent.com/69246693/103435998-0a08d880-4c3d-11eb-80c5-16a7b9a82dbc.png)\r\n![3](https://user-images.githubusercontent.com/69246693/103435999-0aa16f00-4c3d-11eb-85f7-01ab0006e81f.png)\r\n![4](https://user-images.githubusercontent.com/69246693/103436000-0b3a0580-4c3d-11eb-8310-1a601e9b5485.png)\r\n![5](https://user-images.githubusercontent.com/69246693/103436001-0bd29c00-4c3d-11eb-8601-99dfdefd22df.png)\r\n![6](https://user-images.githubusercontent.com/69246693/103436002-0bd29c00-4c3d-11eb-941f-098a1087af19.png)\r\n![7](https://user-images.githubusercontent.com/69246693/103436003-0c6b3280-4c3d-11eb-86bf-e72a38221a49.png)\r\n![8](https://user-images.githubusercontent.com/69246693/103436004-0d03c900-4c3d-11eb-956a-cac2e0d67e95.png)\r\n![9](https://user-images.githubusercontent.com/69246693/103436005-0d9c5f80-4c3d-11eb-82e9-1ad27da17c13.png)\r\n![10](https://user-images.githubusercontent.com/69246693/103436006-0e34f600-4c3d-11eb-907a-0eab60577b41.png)\r\n![11](https://user-images.githubusercontent.com/69246693/103436007-0e34f600-4c3d-11eb-9279-5f0ac03c43b3.png)\r", "See the Audacity Forum:  https://forum.audacityteam.org/viewtopic.php?f=67&t=83108 =||= please close ticket as the forum is where this should be discussed.  =||= "], ["715", "Add a setting and documentation for character encoding of ID3 tags", "Krzysztof Maczy\u0144ski", "ByteEater-pl", "05/14/21, 02:10:52 PM", "**Is your feature request related to a problem? Please describe.**\r\nThe problem is I don't know what the encoding is and I see no way to set it in Audacity, so the resulting metadata is sometimes displayed wrong and sometimes doesn't even roundtrip, resulting in replacement characters instead of diacritical letters (mostly Polish, but sometimes I also add something else, even from Unicode astral planes, cf. The Pile of Poo Test\u2122).\r\n\r\n**Describe the solution you'd like**\r\nFirst, document the status quo: what encoding is used. Here in a comment first \u2013 would be helpful to me and others searching for it and probably much sooner than in a future release of Audacity.\r\nSecond, implement a setting for it.\r\n\r\n**Describe alternatives you've considered**\r\nFor the documentation issue, I tried asking on #audacity on IRC but got no reply. For setting the tags, I used other software, either from the start or upon noticing a problem in an MP3 file with tags inserted by Audacity.", "Since Audacity allows even characters from astral planes to be entered in the metadata dialog, they're displayed correctly there, and there's no warning before proceeding, I'd assume the used encoding can represent them, so it's probably some form of Unicode. But the observed effects make me doubt it. =||= Logged as P4 ENH #2780 in Bugzilla (our bug tracker)\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2780\r\nBug 2780 - ENH: Add a setting and documentation for character encoding of ID3 tags \r\n\r\nAccordingly I shall close this GitHub Issue in favor of the Bugzilla ENH entry =||= "], ["717", "fixed wrong spelled words", null, "freddii", "01/12/21, 10:02:18 AM", "# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "Thank you.\r\nI have merged these in, but not the corrections in lib-src since those are from 3rd party libraries. =||= "], ["719", "Fix minor typo", "Yuri Chornoivan", "yurchor", "01/12/21, 10:36:44 AM", "Thanks in advance for reviewing.", "Thanks. =||= "], ["720", "Fix minor typo", null, "freddii", "01/12/21, 11:56:10 AM", "# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "Thanks. =||= "], ["721", "\"High Quality\" mode in Change Pitch effect segfaults?", "Andrew Randrianasulu", "Randrianasulu", "01/12/21, 05:00:38 PM", "**Describe the bug**\r\nI tried to follow instructions at https://www.computerhope.com/issues/ch001956.htm in Audacity 2.4.2 (self-compiled on 32-bit Slackware) and on few first tries I was getting segfault. Unchecking 'High quality' checkbox at least provided me with some way to see how effect works (in spectrogram/waveform)\r\n\r\n**To Reproduce**\r\nOpen any audio file\r\nSelect small region\r\nTry to apply this 'Change Pitch' effect WITH High Quality checkbox ON\r\nObserve crash at the end of conversion.\r\n\r\n**Expected behavior**\r\nEffect should work in both modes\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Slackware 32-bit (gcc 5.5.0)\r\n - Version Audacity 2.4.2\r\n\r\n\r\n**Additional context**\r\nMay be 32-bit problem!\r\n\r\nBacktrace looks like this:\r\n\r\nThread 1 \"audacity\" received signal SIGSEGV, Segmentation fault.\r\n0xf7f404c9 in __pthread_timedjoin_ex () from /lib/libpthread.so.0\r\n(gdb) bt full\r\n#0  0xffffffff in __pthread_timedjoin_ex () at /lib/libpthread.so.0\r\n#1  0xffffffff in pthread_join () at /lib/libpthread.so.0\r\n#2  0x0933dd51 in _sbsms_::ThreadInterface::~ThreadInterface() ()\r\n#3  0x0933eca4 in _sbsms_::SBSMSImp::~SBSMSImp() ()\r\n#4  0x0933ec69 in _sbsms_::SBSMS::~SBSMS() ()\r\n#5  0x08e4abc5 in std::default_delete<_sbsms_::SBSMS>::operator()(_sbsms_::SBSMS*) const ()\r\n#6  0x08e49489 in std::unique_ptr<_sbsms_::SBSMS, std::default_delete<_sbsms_::SBSMS> >::~unique_ptr() ()\r\n#7  0x08e49197 in ResampleBuf::~ResampleBuf() ()\r\n#8  0x08e47e6a in EffectSBSMS::Process()::{lambda(WaveTrack*, std::function<void ()> const&)#2}::operator()(WaveTrack*, std::function<void ()> const&) const ()\r\n#9  0x08e4865b in Track::Dispatcher::applicable2<void, WaveTrack, WaveTrack, EffectSBSMS::Process()::{lambda(WaveTrack*, std::function<void ()> const&)#2}, EffectSBSMS::Process()::{lambda(Track*)#3}>::operator()(Track const*, {lambda(WaveTrack*, std::function<void ()> const&)#2} const&, Track* const&) ()\r\n#10 0x08e48520 in Track::Dispatcher::inapplicable<void, WaveTrack, EffectSBSMS::Process()::{lambda(LabelTrack*, std::function<void ()> const&)#1}, EffectSBSMS::Process()::{lambda(WaveTrack*, std::function<void ()> const&)#2}, EffectSBSMS::Process()::{lambda(Track*)#3}>::operator()(Track const*, {lambda(LabelTrack*, std::function<void ()> const&)#1} const&, WaveTrack* const&, EffectSBSMS::Process()::{lambda(WaveTrack*, std::function<void ()> const&)#2} const&) ()\r\n#11 0x08e48497 in void Track::TypeSwitch<void, EffectSBSMS::Process()::{lambda(LabelTrack*, std::function<void ()> const&)#1}, EffectSBSMS::Process()::{lambda(WaveTrack*, std::function<void ()> const&)#2}, EffectSBSMS::Process()::{lambda(Track*)#3}>(EffectSBSMS::Process()::{lambda(LabelTrack*, std::function<void ()> const&)#1} const&, EffectSBSMS::Process()::{lambda(WaveTrack*, std::function<void ()> const&)#2} const&, EffectSBSMS::Process()::{lambda(Track*)#3} const&) ()\r\n#12 0x08e48396 in void TrackIterRange<Track>::VisitWhile<bool, EffectSBSMS::Process()::{lambda(LabelTrack*, std::function<void ()> const&)#1}, EffectSBSMS::Process()::{lambda(WaveTrack*, std::function<void ()> const&)#2}, EffectSBSMS::Process()::{lambda(Track*)#3}>(bool&, EffectSBSMS::Process()::{lambda(LabelTrack*, std::function<void ()> const&)#1} const&, EffectSBSMS::Process()::{lambda(WaveTrack*, std::function<void ()> const&)#2} const&, EffectSBSMS::Process()::{lambda(Track*)#3} const&) ()\r\n#13 0x08e481e7 in EffectSBSMS::Process() ()\r\n#14 0x08dd37a9 in Effect::DoEffect(double, TrackList*, TrackFactory*, NotifyingSelectedRegion&, wxWindow*, std::function<wxDialog* (wxWindow&, EffectHostInterface*, EffectUIClientInterface*)> const&) ()\r\n#15 0x08dd3a75 in Effect::Delegate(Effect&, wxWindow&, std::function<wxDialog* (wxWindow&, EffectHostInterface*, EffectUIClientInterface*)> const&) ()\r\n#16 0x08d97e69 in EffectChangePitch::Process() ()\r\n#17 0x08dd37a9 in Effect::DoEffect(double, TrackList*, TrackFactory*, NotifyingSelectedRegion&, wxWindow*, std::function<wxDialog* (wxWindow&, EffectHostInterface*, EffectUIClientInterface*)> const&) ()\r\n#18 0x08decd99 in EffectUI::DoEffect(wxString const&, CommandContext const&, unsigned int) ()\r\n#19 0x08fb0e10 in PluginActions::Handler::OnEffect(CommandContext const&) ()\r\n#20 0x08d3d633 in CommandManager::HandleCommandEntry(AudacityProject&, CommandListEntry const*, std::bitset<64u>, bool, wxEvent const*) ()\r\n#21 0x08d3d724 in CommandManager::HandleMenuID(AudacityProject&, int, std::bitset<64u>, bool) ()\r\n#22 0x08c3d6c3 in ProjectWindow::OnMenu(wxCommandEvent&) ()\r\n#23 0xffffffff in wxAppConsoleBase::HandleEvent(wxEvtHandler*, void (wxEvtHandler::*)(wxEvent&), wxEvent&) const () at /usr/lib/libwx_baseu-3.0.so.0\r\n#24 0xffffffff in wxAppConsoleBase::CallEventHandler(wxEvtHandler*, wxEventFunctor&, wxEvent&) const () at /usr/lib/libwx_baseu-3.0.so.0\r\n#25 0xffffffff in wxEvtHandler::ProcessEventIfMatchesId(wxEventTableEntryBase const&, wxEvtHandler*, wxEvent&) () at /usr/lib/libwx_baseu-3.0.so.0\r\n#26 0xffffffff in wxEventHashTable::HandleEvent(wxEvent&, wxEvtHandler*) () at /usr/lib/libwx_baseu-3.0.so.0\r\n#27 0xffffffff in wxEvtHandler::TryHereOnly(wxEvent&) () at /usr/lib/libwx_baseu-3.0.so.0\r\n#28 0xffffffff in wxEvtHandler::ProcessEvent(wxEvent&) () at /usr/lib/libwx_baseu-3.0.so.0\r\n#29 0xffffffff in wxEvtHandler::DoTryChain(wxEvent&) () at /usr/lib/libwx_baseu-3.0.so.0\r\n#30 0xffffffff in wxEvtHandler::ProcessEventLocally(wxEvent&) () at /usr/lib/libwx_baseu-3.0.so.0\r\n#31 0xffffffff in wxEvtHandler::ProcessEvent(wxEvent&) () at /usr/lib/libwx_baseu-3.0.so.0\r\n#32 0xffffffff in wxWindowBase::TryAfter(wxEvent&) () at /usr/lib/libwx_gtk2u_core-3.0.so.0\r\n#33 0xffffffff in wxEvtHandler::ProcessEvent(wxEvent&) () at /usr/lib/libwx_baseu-3.0.so.0\r\n#34 0xffffffff in wxEvtHandler::SafelyProcessEvent(wxEvent&) () at /usr/lib/libwx_baseu-3.0.so.0\r\n#35 0xffffffff in wxWindowBase::HandleWindowEvent(wxEvent&) const () at /usr/lib/libwx_gtk2u_core-3.0.so.0\r\n#36 0xffffffff in wxMenuBase::SendEvent(int, int) () at /usr/lib/libwx_gtk2u_core-3.0.so.0\r\n#37 0xffffffff in  () at /usr/lib/libwx_gtk2u_core-3.0.so.0\r\n#38 0xffffffff in g_cclosure_marshal_VOID__VOID () at /usr/lib/libgtk-x11-2.0.so.0\r\n#39 0xffffffff in g_closure_invoke () at /usr/lib/libgobject-2.0.so.0\r\n#40 0xffffffff in  () at /usr/lib/libgobject-2.0.so.0\r\n#41 0xffffffff in g_signal_emit_valist () at /usr/lib/libgobject-2.0.so.0\r\n#42 0xffffffff in g_signal_emit () at /usr/lib/libgobject-2.0.so.0\r\n#43 0xffffffff in gtk_widget_activate () at /usr/lib/libgtk-x11-2.0.so.0\r\n#44 0xffffffff in gtk_menu_shell_activate_item () at /usr/lib/libgtk-x11-2.0.so.0\r\n#45 0xffffffff in  () at /usr/lib/libgtk-x11-2.0.so.0\r\n---Type <return> to continue, or q <return> to quit---\r\n#46 0xffffffff in  () at /usr/lib/libgtk-x11-2.0.so.0\r\n#47 0xffffffff in  () at /usr/lib/libgtk-x11-2.0.so.0\r\n#48 0xffffffff in  () at /usr/lib/libgobject-2.0.so.0\r\n#49 0xffffffff in g_closure_invoke () at /usr/lib/libgobject-2.0.so.0\r\n#50 0xffffffff in  () at /usr/lib/libgobject-2.0.so.0\r\n#51 0xffffffff in g_signal_emit_valist () at /usr/lib/libgobject-2.0.so.0\r\n#52 0xffffffff in g_signal_emit () at /usr/lib/libgobject-2.0.so.0\r\n#53 0xffffffff in  () at /usr/lib/libgtk-x11-2.0.so.0\r\n#54 0xffffffff in gtk_propagate_event () at /usr/lib/libgtk-x11-2.0.so.0\r\n#55 0xffffffff in gtk_main_do_event () at /usr/lib/libgtk-x11-2.0.so.0\r\n#56 0xffffffff in  () at /usr/lib/libgdk-x11-2.0.so.0\r\n#57 0xffffffff in g_main_context_dispatch () at /usr/lib/libglib-2.0.so.0\r\n#58 0xffffffff in  () at /usr/lib/libglib-2.0.so.0\r\n#59 0xffffffff in g_main_loop_run () at /usr/lib/libglib-2.0.so.0\r\n#60 0xffffffff in gtk_main () at /usr/lib/libgtk-x11-2.0.so.0\r\n#61 0xffffffff in wxGUIEventLoop::DoRun() () at /usr/lib/libwx_gtk2u_core-3.0.so.0\r\n#62 0xffffffff in wxEventLoopBase::Run() () at /usr/lib/libwx_baseu-3.0.so.0\r\n#63 0xffffffff in wxAppConsoleBase::MainLoop() () at /usr/lib/libwx_baseu-3.0.so.0\r\n#64 0xffffffff in wxAppConsoleBase::OnRun() () at /usr/lib/libwx_baseu-3.0.so.0\r\n#65 0xffffffff in wxAppBase::OnRun() () at /usr/lib/libwx_gtk2u_core-3.0.so.0\r\n#66 0xffffffff in wxEntry(int&, wchar_t**) () at /usr/lib/libwx_baseu-3.0.so.0\r\n#67 0xffffffff in wxEntry(int&, char**) () at /usr/lib/libwx_baseu-3.0.so.0\r\n#68 0x08aa71c5 in main ()\r", "Thank you for the bug report.\r\nThis has been fixed for the next Audacity release.\r\nThe fix is here: https://github.com/audacity/audacity/commit/72032d6a2afdafc1e0d811a85fabfd25780bba91\r\n\r\nAs a workaround, since the crash  only occurs on stereo tracks, you can split the track, apply the effect, then join back to a stereo  track (see: https://manual.audacityteam.org/man/splitting_and_joining_stereo_tracks.html) =||= Thanks A LOT! Recompiled 2.4.2 with patch, it works :} =||= "], ["722", "2582 enh repeat last process", null, "JohnColket", "01/15/21, 02:22:39 PM", "# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "Thank you! =||= Not at all.  My pleasure.\n\nOn Fri, Jan 15, 2021 at 9:23 AM James Crook <notifications@github.com>\nwrote:\n\n> Thank you!\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/722#issuecomment-760970664>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ASKE4NKH4XIPS5EK64ZFCTLS2BFUTANCNFSM4WECELIQ>\n> .\n>\n =||= "], ["723", "VSTs behaving differently between \"Apply\" and \"Play\"", "Reed A. Cartwright", "reedacartwright", "05/21/21, 01:26:41 PM", "**Describe the bug**\r\nI'm experimenting with monitoring loudness via VSTs in Audacity and I'm getting inconsistent results. I'm using the LinVST wrapper to run the Youlean Loudness Meter 2 for Windows on Linux. When I load up the VST and click \"apply\", the loudness is correctly measured at -16 LUFS. When I use \"play\" instead, the loudness is measured at -13 LUFS. This effect also happens with several other loudness measuring VSTs. \r\n\r\nI assume this has to do with something about stereo and mono signals because of the +3 gain, but I'm not sure.\r\n\r\n**To Reproduce**\r\n1. Download reference audio file. https://developers.google.com/assistant/downloads/loudness/tts-reference.wav\r\n2. Download https://youlean.co/download-youlean-loudness-meter/ for Windows\r\n3. Install LinVST https://github.com/osxmidi/LinVst/\r\n4. Convert Loudness meter to a Linux VST.\r\n5. Enable Youlean loudness meter in Audacity\r\n6. Open the reference in Audacity, select the entire file, and activate the Youlean VST\r\n7. Click apply several times, and see that the integrated loudness is -16 LUFS.\r\n8. Clear the graph. Click the play button several times and see that the integrated loudness is -13 LUFS.\r\n\r\nThe following Meters all show the same difference between play and apply.\r\n\r\n- https://youlean.co/download-youlean-loudness-meter/ (Windows+LinVST)\r\n- https://www.tb-software.com/TBProAudio/dpmeter5.html (Windows+LinVST)\r\n- https://www.klangfreund.com/lufsmeter/ (Windows+LinVST)\r\n- https://www.klangfreund.com/multimeter/ (Windows+LinVST)\r\n\r\nLUFSMeter and Multimeter have linux VSTs, but there is a font problem with them. I think they are also affected by this, but I am not 100% sure.\r\n\r\n**Expected behavior**\r\nLoudness should be the same regardless of \"play\" vs \"Apply\"\r\n\r\n**Screenshots**\r\nAfter Clicking \"Play\" a few times:\r\n![Screenshot from 2021-01-16 16-51-35](https://user-images.githubusercontent.com/101918/104827462-29962880-581b-11eb-8beb-8511f8cb3439.png)\r\n\r\nAfter Clicking \"Apply\" a few times:\r\n![Screenshot from 2021-01-16 16-50-58](https://user-images.githubusercontent.com/101918/104827467-30bd3680-581b-11eb-993e-ab29fb0f40fb.png)\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Linux memnon 5.10.7-arch1-1 #1 SMP PREEMPT Wed, 13 Jan 2021 12:02:01 +0000 x86_64 GNU/Linux\r\n - Version: Audacity 2.4.1\r\n - Sound Device: Pulse Audio sound system.\r", "I have transferred this issue to ou Bugzilla bugtracke and will alter close this GitHub Issue in favor of that.\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2791\r\nBug 2791 - Linux: VSTs behaving differently between \"Apply\" and \"Play\" \r\n\r\n@reedacartwright you logged this as an issue with 2.4.1 - is this still an issue  with 3.0.0 or the latest release  3.0.2 ? =||= Closing this in favor of the Bugzilla entry =||= "], ["724", "Building audacity with VS 2019 ", "Jefferson Hudson", "l4cr0ss", "01/20/21, 01:58:41 PM", "**Describe the bug**\r\nBuilding master with VS 2019 results in a working exe but the cmake script doesn't copy out to the release directory correctly and as a result of that failure never builds the modules.\r\n\r\nThe problem appears to be with cmake.exe not receiving either the source or destination argument(s) to `COPY/INSTALL`.\r\n\r\n1. First this happens: the executable fails to get copied into the Release directory.\r\n\r\n```\r\n[1079/1082] cmd.exe /C \"cd . \r\n&& \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\...\\bin\\cmake.exe\" \r\n   -E vs_link_exe \r\n   --intdir=src\\CMakeFiles\\Audacity.dir \r\n   --rc=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100183~1.0\\x64\\rc.exe \r\n   --mt=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100183~1.0\\x64\\mt.exe \r\n   --manifests  \r\n   -- C:\\PROGRA~2\\MICROS~2\\2019\\COMMUN~1\\VC\\Tools\\MSVC\\1428~1.293\\bin\\Hostx64\\x86\\link.exe \r\n      /nologo @CMakeFiles\\Audacity.rsp  \r\n      /out:bin\\Audacity.exe \r\n      /implib:src\\Audacity.lib \r\n      /pdb:bin\\Audacity.pdb \r\n      /version:0.0 \r\n      /machine:X86 \r\n      /INCREMENTAL:NO \r\n      /subsystem:windows   \r\n      /MANIFEST:NO  \r\n&& cmd.exe /C \"cd /D C:\\audacity\\out\\build\\x86_Release\\src \r\n&& \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\...\\bin\\cmake.exe\" \r\n   -D SRC=\"C:/audacity/out/build/x86_Release/bin/Release/Audacity.exe\" \r\n   -D DST=\"C:/audacity/out/build/x86_Release/bin/Release\" \r\n   -D WXWIN=\"C:\\wxWidgets\\lib\\vc_dll\" \r\n   -P C:/audacity/cmake-proxies/cmake-modules/CopyLibs.cmake \r\n&& cd /D C:\\audacity\\out\\build\\x86_Release\\src \r\n&& \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\...\\bin\\cmake.exe\" \r\n   -E copy C:/audacity/out/build/x86_Release/bin/Release\"\"`\r\n  FAILED: bin/Audacity.exe src/Audacity.lib\r\n     Creating library src\\Audacity.lib and object src\\Audacity.exp\r\n  ==================================================================\r\n  Copying wxWidgets libraries:\r\n  ==================================================================\r\n```\r\n```\r\n$ ls bin/\r\nAudacity.exe*  Release/\r\n$ ls bin/Release/\r\nLanguages/  modules/  nyquist/  plug-ins/\r\n```\r\n\r\nOk so if you manually fix that by doing `cp bin/Audacity.exe bin/Release/`, then it still fails again in the same way, but manages to copy the dependencies, like this.\r\n\r\n```\r\n  [2/5] cmd.exe /C \"cd . && \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.exe\" -E vs_link_exe --intdir=src\\CMakeFiles\\Audacity.dir --rc=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100183~1.0\\x64\\rc.exe --mt=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100183~1.0\\x64\\mt.exe --manifests  -- C:\\PROGRA~2\\MICROS~2\\2019\\COMMUN~1\\VC\\Tools\\MSVC\\1428~1.293\\bin\\Hostx64\\x86\\link.exe /nologo @CMakeFiles\\Audacity.rsp  /out:bin\\Audacity.exe /implib:src\\Audacity.lib /pdb:bin\\Audacity.pdb /version:0.0 /machine:X86 /INCREMENTAL:NO /subsystem:windows   /MANIFEST:NO  && cmd.exe /C \"cd /D C:\\audacity\\out\\build\\x86_Release\\src && \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.exe\" -D SRC=\"C:/audacity/out/build/x86_Release/bin/Release/Audacity.exe\" -D DST=\"C:/audacity/out/build/x86_Release/bin/Release\" -D WXWIN=\"C:\\wxWidgets\\lib\\vc_dll\" -P C:/audacity/cmake-proxies/cmake-modules/CopyLibs.cmake && cd /D C:\\audacity\\out\\build\\x86_Release\\src && \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.exe\" -E copy C:/audacity/out/build/x86_Release/bin/Release\"\"\r\n  FAILED: bin/Audacity.exe src/Audacity.lib \r\n  cmd.exe /C \"cd . && \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.exe\" -E vs_link_exe --intdir=src\\CMakeFiles\\Audacity.dir --rc=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100183~1.0\\x64\\rc.exe --mt=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100183~1.0\\x64\\mt.exe --manifests  -- C:\\PROGRA~2\\MICROS~2\\2019\\COMMUN~1\\VC\\Tools\\MSVC\\1428~1.293\\bin\\Hostx64\\x86\\link.exe /nologo @CMakeFiles\\Audacity.rsp  /out:bin\\Audacity.exe /implib:src\\Audacity.lib /pdb:bin\\Audacity.pdb /version:0.0 /machine:X86 /INCREMENTAL:NO /subsystem:windows   /MANIFEST:NO  && cmd.exe /C \"cd /D C:\\audacity\\out\\build\\x86_Release\\src && \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.exe\" -D SRC=\"C:/audacity/out/build/x86_Release/bin/Release/Audacity.exe\" -D DST=\"C:/audacity/out/build/x86_Release/bin/Release\" -D WXWIN=\"C:\\wxWidgets\\lib\\vc_dll\" -P C:/audacity/cmake-proxies/cmake-modules/CopyLibs.cmake && cd /D C:\\audacity\\out\\build\\x86_Release\\src && \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.exe\" -E copy C:/audacity/out/build/x86_Release/bin/Release\"\"\r\n     Creating library src\\Audacity.lib and object src\\Audacity.exp\r\n  ==================================================================\r\n  Copying wxWidgets libraries:\r\n  ==================================================================\r\n  -- Installing: C:/audacity/out/build/x86_Release/bin/Release/wxbase313u_vc_custom.dll\r\n  -- Installing: C:/audacity/out/build/x86_Release/bin/Release/wxmsw313u_core_vc_custom.dll\r\n  -- Installing: C:/audacity/out/build/x86_Release/bin/Release/wxmsw313u_html_vc_custom.dll\r\n  -- Installing: C:/audacity/out/build/x86_Release/bin/Release/wxmsw313u_qa_vc_custom.dll\r\n  -- Installing: C:/audacity/out/build/x86_Release/bin/Release/wxbase313u_xml_vc_custom.dll\r\nC:\\audacity\\out\\build\\x86_Release\\EXEC : CMake error : cmake version 3.18.20081302-MSVC_2\r\n```\r\n\r\nWhat ends up happening is that audacity runs and works as expected, and is compiled with ASIO support as desired. Plugins are there, but then modules are not.\r\n\r\n**To Reproduce**\r\n1. Clone audacity or checkout master\r\n2. open the project using the VS 2019 Cmake gui\r\n3. change the toolset to msvc_x86\r\n4. change `wxWidgets_LIB_DIR` value to `C:/wxWidgets/lib/vc_dll`\r\n5. set the asio_sdk env var\r\n6. build\r\n\r\n**Expected behavior**\r\nExpecting to be able to open up the Edit > Preferences > Modules menu and enable mod-script-pipe\r\n\r\n**Screenshots**\r\nBuild failing, unable to copy deps because Audacity.exe not available for CopyLibs.cmake to process dependencies:\r\n![image](https://user-images.githubusercontent.com/3689038/104851098-dd9dbf00-58c0-11eb-9720-3b2ce152d871.png)\r\n\r\nBuild failing after manually copying Audacity.exe into release folder and dependencies successfully copied by cmake:\r\n![image](https://user-images.githubusercontent.com/3689038/104851145-3705ee00-58c1-11eb-82b7-78d4e936d5e9.png)\r\n\r\nPicture of build folders: audacity.exe present (manual copy), dependencies present (CopyLibs.cmake), plugins present, modules missing.\r\n![image](https://user-images.githubusercontent.com/3689038/104851183-7b918980-58c1-11eb-85eb-52acc1c379f7.png)\r\n\r\nAudacity.exe running, compiled with ASIO using VS 2019, but no modules:\r\n![image](https://user-images.githubusercontent.com/3689038/104851262-05d9ed80-58c2-11eb-8806-83f5fe9ccd54.png)\r\n![image](https://user-images.githubusercontent.com/3689038/104851432-f7400600-58c2-11eb-854b-124a2a5a2fda.png)\r\n\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Windows 10\r\n - Audacity 3.0.0-alpha-Jan 16 2021\r\n - cmake version 3.18.20081302-MSVC_2\r\n\r\n**Additional context**\r\nIt seems like an issue with the `COPY|INSTALL` step of cmake that prevents one of the remaining 3 steps that would take care of building the modules, but I am not so sure. The modules don't seem to be being built which is why I say that. I can't just copy them myself because they don't exist. Please help!\r\n\r\nI will happily use my setup to test further, provide more info, experiment, etc. I am not sure where to go next w.r.t. debugging the issue.\r\n\r\nP.S. I tried to post to the forums about this first since the guidelines make it out to be the appropriate first step but when I tried doing so the forum filter blocked me from posting, I suppose due to the build logs tripping CF's 'exploit detection' robot.\r", "I think this is the ninja rule that is failing. Is it the link step that is failing ? That seems strange because the .exe ultimately gets generated and it runs and I think that wouldn't happen if linking was failing. Then again it is strange to see the x64 version of tools referenced here (and reflected in the corresponding screenshots above).\r\n\r\n```\r\n#############################################\r\n# Rule for linking CXX executable.\r\nrule CXX_EXECUTABLE_LINKER__Audacity_Release\r\n  command = cmd.exe /C \"$PRE_LINK && \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.exe\" -E vs_link_exe --intdir=$OBJECT_DIR --rc=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100183~1.0\\x64\\rc.exe --mt=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100183~1.0\\x64\\mt.exe --manifests $MANIFESTS -- C:\\PROGRA~2\\MICROS~2\\2019\\COMMUN~1\\VC\\Tools\\MSVC\\1428~1.293\\bin\\Hostx64\\x86\\link.exe /nologo @$RSP_FILE  /out:$TARGET_FILE /implib:$TARGET_IMPLIB /pdb:$TARGET_PDB /version:0.0 $LINK_FLAGS  && $POST_BUILD\"\r\n  description = Linking CXX executable $TARGET_FILE\r\n  rspfile = $RSP_FILE\r\n  rspfile_content = $in_newline $LINK_PATH $LINK_LIBRARIES\r\n  restat = $RESTAT\r\n``` =||= Here's some good news! By changing the CMake generator to use VS 16 2019 instead of ninja, the build runs without any problems.\r\n\r\n![image](https://user-images.githubusercontent.com/3689038/104853958-3f1a5980-58d2-11eb-911e-ae5a3d543aab.png)\r\n\r\nI have no idea why but if someone does I'd like to understand what's going wrong when ninja is used.\r\n =||= We've never tried to get ninja working since we use VS directly.  I doubt any of use have even ninja installed. =||= Thank you, that would explain it. I assumed since VS was defaulting to ninja build system that it was supposed to be that way.\r\n =||= Can I open a pull updating the win/build.txt documentation to include the steps I took in the CMake GUI in VS 2019? Right now it explicitly mentions VS 2017 and doesn't mention anything about the build system. =||= That'd be great.  I think 2019 has been out long enough that we need to start thinking about supporting it. =||= "], ["725", "Update windows build instructions", "Jefferson Hudson", "l4cr0ss", "01/20/21, 07:12:13 AM", "Update documentation for building on Windows using VS 2019. See #724 \r\n\r\nI confirmed these steps through a fresh clone and rebuild.\r\n\r\nProofreading welcome.\r\n\r\nThank you.", "Thanks Jefferson. =||= "], ["726", "Fix awful Polish translation for zero-padding.", "Marek Materzok", "tilk", "02/04/21, 08:03:15 PM", "I found a very bad Polish translation for the zero padding factor. The translation in the locale file is \"zerowe dope\u0142nienie czynnika\", which means in English something like \"zero-ish complement of a factor\". I replaced it with \"wsp\u00f3\u0142czynnik uzupe\u0142nienia zerami\". \"Uzupe\u0142nianie zerami\" is the Polish term for \"zero padding\", used in the literature.", "This has now been applied.  Thanks. =||= "], ["727", "Fix typos (user facing and non-user facing)", null, "luzpaz", "01/24/21, 09:46:08 AM", "Found via `codespell v2.1.dev0`  \n`codespell -q 3 -S *.po,./lib-src -L parm,parms,toke`", "Thank you. =||= "], ["728", "mpd -> BlackHole 2ch -> Audacity creates Choppy Audio", "Devin Roth", "devinroth", "01/24/21, 05:25:53 PM", "**Describe the bug**\r\n\r\nBlackHole dev here. This is a super specific bug that I'm pretty sure is coming from Audacity.\r\n\r\nhttps://github.com/ExistentialAudio/BlackHole/issues/273\r\n\r\nmpd -> BlackHole 2ch -> Audacity creates choppy audio. What I found interesting about this bug is that if I change anything in the chain there are no issues. \r\n\r\nI've attached an image for reference. Top track is mpd -> BlackHole 2ch -> Audacity. Bottom track is mpd -> BlackHole 16ch -> Audacity. There are no differences between BlackHole 2ch and BlackHole 16ch except for the number of channels. mpd -> BlackHole 2ch ->  Logic Pro X works normally. iTunes -> BlackHole 2ch -> Audacity works normally. \r\n\r\n<img width=\"1552\" alt=\"Screen Shot 2021-01-24 at 12 18 39 AM\" src=\"https://user-images.githubusercontent.com/13010961/105625239-7a3df080-5ddc-11eb-88a9-bba6a0e3747f.png\">\r\n\r\nThe audio drop outs happen every 4096 samples. The length of the drop out varies but I've recorded them at ~920 and ~1430 samples.\r\n\r\nWhat I suspect is happening (may be completely wrong) is the audio thread is not getting priority and audio is being dropped. \r\n\r\nI'm happy to run additional tests as needed. \r\n\r\n**Additional information (please complete the following information):**\r\n - OS: macOS 11.1 \r\n - Version: Audacity 2.4.2\r\n\r", "This also happens with mpd -> BlackHole 2ch -> CamillaDSP. Again BlackHole 16ch fixes the problem. Like I said above the code is exactly the same but the number of channels changes. So what does CamillaDSP and Audacity have in common? =||= I figured it out. Check out the issue on BlackHole if you're interested. https://github.com/ExistentialAudio/BlackHole/issues/273 =||= "], ["730", "noice suppression doesnt work", null, "promic1", "01/27/21, 02:52:53 PM", "why is the noice suppression is not even working it doesnt alter at all any noice in the back i got the step from\r\nhttps://www.techsmith.fr/blog/il-nest-pas-trop-tard-comment-reduire-le-bruit-de-fond-dans-vos-enregistrements-gratuitement/\r\no dam i believe i posted on the wrong section it should be in issues i think but i cant seems to be able to move it there or delete it so hopefully someone can help me\r", "Post was meant to be to issues.\r\nPull request closed. =||= "], ["731", "noice suppression", null, "promic1", "05/12/21, 12:54:30 PM", "**Describe the bug**\r\n\r\nafter selecting the part where i want the noice fix i go in effects and noice suppression but none of the option available there does alter the background noice i want to remove\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. select the part\r\n2. go on effects\r\n3. noice suppression\r\n4. none of these options does alter the noice \r\n\r\n**Expected behavior**\r\ni am expecting to be able to alter and remove the background noice\r\n\r\n\r\n\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: [e.g. Mac High Sierra, Ubuntu 18.04, Windows 10]\r\n - Version any version\r\n - (if relevant) Sound Device [e.g. Windows WASAPI, USB Sound card]\r\n\r\n**Additional context**\r\n\r", "I'm guessing the OP did not select a suitable section of noise.  For example they selected silence.\r\nAnyway, Closing: WORKS-FOR-ME. =||= "], ["732", "Fix source typos", null, "luzpaz", "01/28/21, 12:35:24 PM", "Coefficents->Coefficients", "NaN"], ["733", "Fix typos (user facing and non-user facing)", null, "luzpaz", "01/28/21, 12:36:42 PM", "Found via `codespell`", "NaN"], ["734", "Bug 2582 - Enh: Repeat last Process, Part 2", null, "JohnColket", "02/03/21, 11:02:49 AM", "Bug 2582 - Enh: Repeat last Process, Part 2\r\n\r\nThis commit implementsl features suggested by Peter And Steve and fixes Repeat NyQuist Command Tool.\r\n\r\nIt should close:\r\nBug 2582 - Enh: Repeat last Generator, Analyzer or Tool\r\nBug 2640 - Plot Spectrum and Contrast analyzers are not \"Repeatable\"\r\nBug 1019 - Plot Spectrum and Contrast analyzers are not \"Repeatable\"\r\n\r\n(although it does not address the original issue reported in\r\nBug 1019 - Enh: Contrast and Plot Spectrum cannot be disabled in Plug-In Manager.)\r\n\r\nThis commit adds Plot Spectrum and Contrast Anaylyzer to the list of repeatable Analyzers;\r\nThis commit adds Macros, Palette, Screenshot, Run Benchmark, and Nyquist Prompt to the list of repeatable tools.\r", "Cool, thank you, James.  - John\n\nOn Wed, Feb 3, 2021 at 6:03 AM James Crook <notifications@github.com> wrote:\n\n> Merged #734 <https://github.com/audacity/audacity/pull/734> into master.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/734#event-4284602616>, or\n> unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ASKE4NIPQKTA4LFQDAMDBSTS5EUOZANCNFSM4W2KQB2Q>\n> .\n>\n =||= You'll see in https://github.com/audacity/audacity/commit/67dff35a123297152b67bcc6bcb46787a80b05d4 I removed them from the menus, so they are just in the keyboard bindings - which is right.  They are for power users.  Let's not confuse new users.  See comment in that commit. =||= James,\n\n  Good plan. Personally, I thought these menus were looking a little top\nheavy myself, what with both Add/Remove... and Repeat...  It was a good\nidea to set them aside.\n\n  I had another idea that could be considered at some future time.  Add the\nRepeat Last Process, which would be the umbrella.  That should prove to be\nfairly straightforward to implement.  Later....\n\n  And thanks for the time you spent on this as well.\n\n- John\n\nOn Wed, Feb 3, 2021 at 10:42 AM James Crook <notifications@github.com>\nwrote:\n\n> You'll see in 67dff35\n> <https://github.com/audacity/audacity/commit/67dff35a123297152b67bcc6bcb46787a80b05d4>\n> I removed them from the menus, so they are just in the keyboard bindings -\n> which is right. They are for power users. Let's not confuse new users. See\n> comment in that commit.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/734#issuecomment-772604500>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ASKE4NIDHZJBYW6DVYGXSIDS5FVGLANCNFSM4W2KQB2Q>\n> .\n>\n =||= On Wed, 3 Feb 2021 at 17:01, JohnColket <notifications@github.com> wrote:\n\n> James,\n>\n> Good plan. Personally, I thought these menus were looking a little top\n> heavy myself, what with both Add/Remove... and Repeat... It was a good\n> idea to set them aside.\n>\n> I had another idea that could be considered at some future time. Add the\n> Repeat Last Process, which would be the umbrella. That should prove to be\n> fairly straightforward to implement. Later....\n>\n\nNice idea.\n\nPerhaps the umbrella version could replace the individual \"Repeat\" commands\nwith a Preference to select which menus it works with? Perhaps that's too\nmuch? Perhaps we could try out alternatives early in the 3.1.0 release\ncycle and see what works best.\n\nSteve\n\n\n>\n> And thanks for the time you spent on this as well.\n>\n> - John\n>\n> On Wed, Feb 3, 2021 at 10:42 AM James Crook <notifications@github.com>\n> wrote:\n>\n> > You'll see in 67dff35\n> > <\n> https://github.com/audacity/audacity/commit/67dff35a123297152b67bcc6bcb46787a80b05d4\n> >\n> > I removed them from the menus, so they are just in the keyboard bindings\n> -\n> > which is right. They are for power users. Let's not confuse new users.\n> See\n> > comment in that commit.\n> >\n> > \u2014\n> > You are receiving this because you authored the thread.\n> > Reply to this email directly, view it on GitHub\n> > <https://github.com/audacity/audacity/pull/734#issuecomment-772604500>,\n> > or unsubscribe\n> > <\n> https://github.com/notifications/unsubscribe-auth/ASKE4NIDHZJBYW6DVYGXSIDS5FVGLANCNFSM4W2KQB2Q\n> >\n> > .\n> >\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/734#issuecomment-772664316>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ACZD2SJDVSMF2XV2GU26OTLS5F6QDANCNFSM4W2KQB2Q>\n> .\n>\n =||= I regret this merge.\r\n\r\nMuch done here that creates problems for rebasing of my many-more-modules branch onto latest master.\r\n\r\nChanging CommandManager and Menus and EffectManager as done here just to support these things is a sign that something is wrong with the design.\r\n\r\nI must look closer and consider how it ought to be rewritten.\r\n =||= The growing switch statement in EffectUI::DoEffect is a sign that something is wrong with the design.  The testing for the special string \"Nyquist Prompt\" assumed to be identical to another string elsewhere in the program is a fragility.  Adding state variables to MenuManager just to support this isn't good either.\r\n\r\nBut my branch did rebase and build.  Still I'm bothered by some things in here and would look for another implementation in future consistent with a more decoupled plug-in architecture.\r\n\r\n =||= Thank you, Paul. - John\n\nOn Wed, Feb 3, 2021 at 3:39 PM Paul Licameli <notifications@github.com>\nwrote:\n\n> I regret this merge.\n>\n> Much done here that creates problems for rebasing of my many-more-modules\n> branch onto latest master.\n>\n> Changing CommandManager and Menus and EffectManager as done here just to\n> support these things is a sign that something is wrong with the design.\n>\n> I must look closer and consider how it ought to be rewritten.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/734#issuecomment-772807176>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ASKE4NJ4UMGYBI3CFZJA7GTS5GX7TANCNFSM4W2KQB2Q>\n> .\n>\n =||= I'm not saying redo it.  These points aren't obvious.\r\n\r\nIt's more for me to think about as I try to bring better structure to the whole.\r\n =||= This may be a real problem.  Why was it necessary to delete these lines from CommandManager.cpp?  Did you make an error in rebasing?\r\n\r\n\r\n-#if defined(BE_CAREFUL)\r\n-      // Don't be tempted to do this unless you're willing to change how\r\n-      // HandleMenuID() decides if a menu action should be performed.\r\n-      // (see comments 6-9 in bug #2642 for symptoms)\r\n-      else if (name == wxT(\"Copy\"))\r\n-         entry->id = wxID_COPY;\r\n-      else if (name == wxT(\"Cut\"))\r\n-         entry->id = wxID_CUT;\r\n-      else if (name == wxT(\"Delete\"))\r\n-         entry->id = wxID_CLEAR;\r\n-      else if (name == wxT(\"Paste\"))\r\n-         entry->id = wxID_PASTE;\r\n-      else if (name == wxT(\"SelectAll\"))\r\n-         entry->id = wxID_SELECTALL;\r\n-#endif =||= Paul, are you OK with it going through to 3.0.0 release in the current form\n[and then perhaps a tidy up in 3.1.0]?\n\nThe reason I ask is because if you are not, then I feel we do not have time\nto refactor it AND test that refactoring for 3.0.0.  So in that case it\nshould be reverted and held over to 3.1.0.\n\n\nOn Wed, 3 Feb 2021 at 23:00, Paul Licameli <notifications@github.com> wrote:\n\n> I'm not saying redo it. These points aren't obvious.\n>\n> It's more for me to think about as I try to bring better structure to the\n> whole.\n>\n> \u2014\n> You are receiving this because you modified the open/close state.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/734#issuecomment-772885491>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAML4FPLFNC7QOYYTIKGYO3S5HISVANCNFSM4W2KQB2Q>\n> .\n>\n =||= BE_CAREFUL is not defined.  This is unused code.\n\nThe value of that code is the comment, the link to bug #2642 for\nbackground, and I put that link back in.\n\nOn Wed, 3 Feb 2021 at 23:36, James Crook <james.k.crook@gmail.com> wrote:\n\n> Paul, are you OK with it going through to 3.0.0 release in the current\n> form [and then perhaps a tidy up in 3.1.0]?\n>\n> The reason I ask is because if you are not, then I feel we do not have\n> time to refactor it AND test that refactoring for 3.0.0.  So in that case\n> it should be reverted and held over to 3.1.0.\n>\n>\n> On Wed, 3 Feb 2021 at 23:00, Paul Licameli <notifications@github.com>\n> wrote:\n>\n>> I'm not saying redo it. These points aren't obvious.\n>>\n>> It's more for me to think about as I try to bring better structure to the\n>> whole.\n>>\n>> \u2014\n>> You are receiving this because you modified the open/close state.\n>> Reply to this email directly, view it on GitHub\n>> <https://github.com/audacity/audacity/pull/734#issuecomment-772885491>,\n>> or unsubscribe\n>> <https://github.com/notifications/unsubscribe-auth/AAML4FPLFNC7QOYYTIKGYO3S5HISVANCNFSM4W2KQB2Q>\n>> .\n>>\n>\n =||= I do not mean my objections to be blocking for 3.0.0.\r\n =||= OK.  Then let's tidy it up in 3.1.0. =||=   Paul, yes, I think you are exactly correct.  - John\n\nOn Wed, Feb 3, 2021 at 6:34 PM Paul Licameli <notifications@github.com>\nwrote:\n\n> This may be a real problem. Why was it necessary to delete these lines\n> from CommandManager.cpp? Did you make an error in rebasing?\n>\n> -#if defined(BE_CAREFUL)\n>\n>    -\n>\n>     // Don't be tempted to do this unless you're willing to change how\n>\n>    -\n>\n>     // HandleMenuID() decides if a menu action should be performed.\n>\n>    -\n>\n>     // (see comments 6-9 in bug #2642 for symptoms)\n>\n>    -\n>\n>     else if (name == wxT(\"Copy\"))\n>\n>    -\n>\n>        entry->id = wxID_COPY;\n>\n>    -\n>\n>     else if (name == wxT(\"Cut\"))\n>\n>    -\n>\n>        entry->id = wxID_CUT;\n>\n>    -\n>\n>     else if (name == wxT(\"Delete\"))\n>\n>    -\n>\n>        entry->id = wxID_CLEAR;\n>\n>    -\n>\n>     else if (name == wxT(\"Paste\"))\n>\n>    -\n>\n>        entry->id = wxID_PASTE;\n>\n>    -\n>\n>     else if (name == wxT(\"SelectAll\"))\n>\n>    -\n>\n>        entry->id = wxID_SELECTALL;\n>\n>\n> -#endif\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/734#issuecomment-772901196>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ASKE4NN7JGRVR7KM2JY4CADS5HMRTANCNFSM4W2KQB2Q>\n> .\n>\n =||= "], ["736", "Fix minor typo: coninue -> continue", "Yuri Chornoivan", "yurchor", "02/01/21, 11:49:27 AM", "Thanks in advance for reviewing.", "NaN"], ["737", "Project edition time tracker", null, "Nozalys", "05/22/21, 12:48:05 PM", "**Is your feature request related to a problem? Please describe.**\r\nAfter working several hours spread out over several days on a project I wonder how many time I spent on it. Audacity doesn't provide such work-log tracker. Some software tracks the time spent on the edition of a document and keep this data in the document file itself.\r\n\r\n**Describe the solution you'd like**\r\nA _quick and dirty_  solution could be to start a second counter as soon as Audacity is launched, or when a project is opened or even when the first audio data is added/imported in the first audio track. The _`current_elapsed_second`_ counter is then saved in the `.aup` file, as a new attribute in the `project` XML node.\r\nHaving the edition time stored in seconds (or in `hh:mm:ss` format) in the XML file would be enough in a first step.\r\nThis implementation have benefits to be very fast to implement.\r\n\r\n**Describe alternatives you've considered**\r\n- We could also imagine that this edition time could be displayed in a small pop-up by an clicking item in the Extra menu.\r\n- To be more accurate, the _`current_elapsed_second`_ counter could be paused when Audacity is no more in foreground, and resumed when it comes back as the front application. This would avoid increasing time if we reduce Audacity instead of closing it when we've done.\r\n- To be even more accurate, the _`current_elapsed_second`_ counter could be paused after an arbitrary delay (i.e. 30 s) of inactivity. _\"Inactivity\"_ detection could be : no audio edition, no audio playback, no display events, no menu navigation. Or maybe no mouse move and no key pressed. This option is probably the most difficult to implement because it requires to collect a lot of various events.\r\n\r\n**Additional context**\r\nThe goal of knowing the edition time, in addition of satisfying my curiosity (I don't see the time running when I'm editing music) is to be able to estimate the workload required for few minutes of final result.\r", "Sounds interesting and more useful to professional users.  We would not show the feature by default since most of our users are beginners, but having it there/available for more professional users would be worthwhile.\r\n\r\nAre you a programmer as well?   =||= > Are you a programmer as well?\r\n\r\nYes, but maybe not enough familiar with neither C/C++ nor Github to start implementing by myself. I don't know.. =||= Closing.  Can done with a third party app that is designed for work tracking.  On that you could also record time spent on client work writing emails, on the phone, etc. =||= "], ["738", "Update pl.po from Transifex", "Grzegorz Pruchniakowski", "Gootector", "02/04/21, 10:32:45 PM", "Update pl.po from Transifex\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "Thanks.  Merged. =||= "], ["739", "Update Polish from Transifex - fix PR #726", "Grzegorz Pruchniakowski", "Gootector", "02/05/21, 08:05:35 AM", "Update Polish from Transifex.\r\nThis is updated pl.po file from Transifex with this PR: https://github.com/audacity/audacity/pull/726.\r\nGreetings,\r\nGootector\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "NaN"], ["740", "Update Polish from Transifex - fix PR #726", "Grzegorz Pruchniakowski", "Gootector", "02/05/21, 12:44:38 PM", "Update Polish from Transifex.\r\nThis is updated pl.po file from Transifex with this PR: https://github.com/audacity/audacity/pull/726.\r\nGreetings,\r\nGootector\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "Thanks! =||= "], ["741", "Cleanup and update FFmpeg support to v4.3.1", "Leland Lucius", "lllucius", "05/05/21, 03:54:37 PM", "This upgrades FFmpeg support to version 4.3.1 and cleans up the initialization code a bit.  Attached to this request is updated FFmpeg libs for Windows and Mac.  Updated library  build scripts as well.\r\n\r\n[FFmpeg_v4.3.1_for_Audacity_on_Windows_32bit.exe.zip](https://github.com/audacity/audacity/files/5941948/FFmpeg_v4.3.1_for_Audacity_on_Windows_32bit.exe.zip)\r\n[FFmpeg_v4.3.1_for_Audacity_on_Windows_32bit.zip](https://github.com/audacity/audacity/files/5941949/FFmpeg_v4.3.1_for_Audacity_on_Windows_32bit.zip)\r\n[FFmpeg_v4.3.1_for_Audacity_on_Windows_64bit.exe.zip](https://github.com/audacity/audacity/files/5941952/FFmpeg_v4.3.1_for_Audacity_on_Windows_64bit.exe.zip)\r\n[FFmpeg_v4.3.1_for_Audacity_on_Windows_64bit.zip](https://github.com/audacity/audacity/files/5941959/FFmpeg_v4.3.1_for_Audacity_on_Windows_64bit.zip)\r\n[FFmpeg_v4.3.1_for_Audacity_on_Windows_Build.zip](https://github.com/audacity/audacity/files/5941960/FFmpeg_v4.3.1_for_Audacity_on_Windows_Build.zip)\r\n\r\n[FFmpeg_v4.3.1_for_Audacity_on_OSX.dmg.zip](https://github.com/audacity/audacity/files/5941942/FFmpeg_v4.3.1_for_Audacity_on_OSX.dmg.zip)\r\n[FFmpeg_v4.3.1_for_Audacity_on_OSX.pkg.zip](https://github.com/audacity/audacity/files/5941943/FFmpeg_v4.3.1_for_Audacity_on_OSX.pkg.zip)\r\n[FFmpeg_v4.3.1_for_Audacity_on_OSX.zip](https://github.com/audacity/audacity/files/5941945/FFmpeg_v4.3.1_for_Audacity_on_OSX.zip)\r\n[FFmpeg_v4.3.1_for_Audacity_on_OSX_Build.zip](https://github.com/audacity/audacity/files/5941947/FFmpeg_v4.3.1_for_Audacity_on_OSX_Build.zip)\r", "NaN"], ["742", "Wrong French translation commit", "Olivier Humbert", "trebmuh", "02/09/21, 12:45:42 AM", "While updating the French translation for the next version, I looked at the fr.po file history. I then noted [this commit](https://github.com/audacity/audacity/commit/215abfb5a81e246ad06a34180bea948599d93ab8#diff-7492bbb6f390fea02fc9436169b1642bc06b1990cf3cf6354b6002264bcde3f2).\r\n\r\nI'm very surprised because it didn't go through the ML or a PR on github if I'm not wrong, so I wouldn't have seen it without thinking to check the file history (which I don't usually do). That would have been unfortunate because everything this commit does is wrong:\r\n- the \"param\u00e8trer\" changes (3 times) are grammatically incorrect\r\n- removing a mnemonic that works is also an error\r\n- last thing, it move the header from `\"PO-Revision-Date: 2020-08-10 15:00+0100\\n\"` to `\"PO-Revision-Date: 2020-06-09 22:59+0100\\n\"` which seems to be a regression\r\n\r\n@JamesCrook can you please ping me next time?\r\nThank you.\r", "Thanks.  Will fix.  See explanation on audacity-translations list. =||= "], ["743", "l10n: zh_TW: update audacity translation", "pan93412", "pan93412", "02/13/21, 05:21:17 PM", "NaN", "@JamesCrook thanks! =||= "], ["744", "Update Polish Translation", "Grzegorz Pruchniakowski", "Gootector", "02/13/21, 05:16:36 PM", "Update pl.po from Transifex - 2 fixes.\r\n\r\nGreetings,\r\nGootector\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "NaN"], ["745", "Windows build instructions fail", null, "JohnColket", "03/17/21, 04:55:34 PM", "Windows build instructions fail:\r\n\r\n1) CMake requires Python 3 NOT 2.7\r\n2) Ninja, Windows default builder fails.\r\n3) git commands clone to wrong directory\r\n4) (2017 not 2019) solution file specified for wxWidgets build\r\n5) CMake GUI instructions are confusing and incorrect\r\n6) Incorrect CMake toolset specified\r\n7) Jack program name is case-sensitive (portaudio-v19\\CMakeLists.txt)\r\n8) These instructions overcome inconsistencies and timing issues with CMake\r", "James, thanks for looking into this.  See comments inline below.\n\nOn Sun, Feb 21, 2021 at 9:07 AM James Crook <notifications@github.com>\nwrote:\n\n> *@JamesCrook* commented on this pull request.\n>\n> I'm building just fine John on Windows 10.  Are you perhaps building in a\n> VM?\n>\nNo. I am sure the existing instructions work just fine for someone who\nalready has all of the tools downloaded and who has previously done the\nbuild on the same machine, and knows what they are doing.  I am not doing\nthis on VM, but I deliberately started on a new (32-bit) machine my wife\nhad been using with none of the tools installed.  I also verified that the\ninstructions worked on my 64-bit machine.\n\nI am not saying my instructions are perfect, that there are no typos, or\nthat they will work on the next update to VS, for example.  Lord knows I\nhave made my share of mistakes.  I am just hoping it is an improvement.\n\n\n> We had:\n>\n>     Then in system variables, for variable and value,  add (for example)\n>\n>         WXWIN         C:\\wxWidgets-3.1.3\n>\n> You changed that to:\n>\n>     Then in system variables, for variable and value,  add (for example)\n>\n>     ==> WXWIN         C:\\aud300\\wxWidgets\n>\n> That's maybe an improvement.  However it's just a different name that\n> makes it clearer it is specifically for audacity.  The example name we give\n> works too.\n>\nThe reason for the change here is solely for consistency.  The build is\ncomplicated enough.  See later on where the instructions specify:\nC:/wxWidgets/lib/vc_dll; also, it wouldn't hurt to git bash clone into this\ndirectory.\n\n> You added:\n>\n>  When the build completed, you will get the message:\n> ========= Build: 24 succeeded, 0 failed, 0 up-to-date, 0 skipped\n> ============\n> Close Visuual Studio.\n>\n> We don't want that in the instructions, as the number of items built may\n> change with future updates.\n>\nOK, but it would help the noob builder immensely, just to have *some* kind\nof assurance that he was on the right track, and could safely proceed to\nthe next step. What do you suggest ?\n\n> The changes sound basically good, especially the Python 3 one, I am using\n> Python 3, but I want more than just me to review these changes. I don't\n> want to just take them as is, because a change that works for me may not\n> work for someone else.\n>\n> I am deciding your changes should wait. I know you must think it really\n> valuable to get them done in 3.0.0. The current instructions work for me,\n> and I would rather make changes when work starts on 3.0.1.\n>\nThat's fine.  Being Release Manager is stressful enough.  Thanks for the\ntime you have taken to review this.  \ud83d\ude42\n\n- John\n\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/745#pullrequestreview-594844702>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ASKE4NMI5475PEI5GB4DH2DTAEHTVANCNFSM4XTLAWZQ>\n> .\n>\n =||= Thanks John.  Especially for the understanding.\nI think I will actually be making all the changes after 3.0.0.  They are\nhelpful.\nI do want to get them reviewed, not just by me.\nThanks for your work on this.  When I/we follow up on it, it should make it\neasier for more people to get involved in coding on Audacity.\n\n--James.\n\n\nOn Sun, 21 Feb 2021 at 15:45, John Colket <jcolket@gmail.com> wrote:\n\n> James, thanks for looking into this.  See comments inline below.\n>\n> On Sun, Feb 21, 2021 at 9:07 AM James Crook <notifications@github.com>\n> wrote:\n>\n>> *@JamesCrook* commented on this pull request.\n>>\n>> I'm building just fine John on Windows 10.  Are you perhaps building in a\n>> VM?\n>>\n> No. I am sure the existing instructions work just fine for someone who\n> already has all of the tools downloaded and who has previously done the\n> build on the same machine, and knows what they are doing.  I am not doing\n> this on VM, but I deliberately started on a new (32-bit) machine my wife\n> had been using with none of the tools installed.  I also verified that the\n> instructions worked on my 64-bit machine.\n>\n> I am not saying my instructions are perfect, that there are no typos, or\n> that they will work on the next update to VS, for example.  Lord knows I\n> have made my share of mistakes.  I am just hoping it is an improvement.\n>\n>\n>> We had:\n>>\n>>     Then in system variables, for variable and value,  add (for example)\n>>\n>>         WXWIN         C:\\wxWidgets-3.1.3\n>>\n>> You changed that to:\n>>\n>>     Then in system variables, for variable and value,  add (for example)\n>>\n>>     ==> WXWIN         C:\\aud300\\wxWidgets\n>>\n>> That's maybe an improvement.  However it's just a different name that\n>> makes it clearer it is specifically for audacity.  The example name we give\n>> works too.\n>>\n> The reason for the change here is solely for consistency.  The build is\n> complicated enough.  See later on where the instructions specify:\n> C:/wxWidgets/lib/vc_dll; also, it wouldn't hurt to git bash clone into\n> this directory.\n>\n>> You added:\n>>\n>>  When the build completed, you will get the message:\n>> ========= Build: 24 succeeded, 0 failed, 0 up-to-date, 0 skipped\n>> ============\n>> Close Visuual Studio.\n>>\n>> We don't want that in the instructions, as the number of items built may\n>> change with future updates.\n>>\n> OK, but it would help the noob builder immensely, just to have *some* kind\n> of assurance that he was on the right track, and could safely proceed to\n> the next step. What do you suggest ?\n>\n>> The changes sound basically good, especially the Python 3 one, I am using\n>> Python 3, but I want more than just me to review these changes. I don't\n>> want to just take them as is, because a change that works for me may not\n>> work for someone else.\n>>\n>> I am deciding your changes should wait. I know you must think it really\n>> valuable to get them done in 3.0.0. The current instructions work for me,\n>> and I would rather make changes when work starts on 3.0.1.\n>>\n> That's fine.  Being Release Manager is stressful enough.  Thanks for the\n> time you have taken to review this.  \ud83d\ude42\n>\n> - John\n>\n>> \u2014\n>> You are receiving this because you authored the thread.\n>> Reply to this email directly, view it on GitHub\n>> <https://github.com/audacity/audacity/pull/745#pullrequestreview-594844702>,\n>> or unsubscribe\n>> <https://github.com/notifications/unsubscribe-auth/ASKE4NMI5475PEI5GB4DH2DTAEHTVANCNFSM4XTLAWZQ>\n>> .\n>>\n> _______________________________________________\n> audacity-devel mailing list\n> audacity-devel@lists.sourceforge.net\n> https://lists.sourceforge.net/lists/listinfo/audacity-devel\n>\n =||= Thank you.  Merged now.\r\n\r\nThis was really helpful. =||= Thanks, James. - Now I can get off my butt and consider other things.  \ud83d\ude09\n\nOn Wed, Mar 17, 2021 at 12:55 PM James Crook ***@***.***>\nwrote:\n\n> Closed #745 <https://github.com/audacity/audacity/pull/745>.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/745#event-4471463865>, or\n> unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ASKE4NKPVSZR56LS35VB5WTTEDNJZANCNFSM4XTLAWZQ>\n> .\n>\n =||= HI @JohnColket, I tried following your instructions 'to the letter' and it all worked pretty well (never knew you could 'drive' VS from the cmake file, that was interesting). At least until the final build step, where VS spat out this error:\r\n\r\n```\r\n    Generating ../bin/Release/Languages/af/audacity.mo\r\n    The system cannot find the path specified.\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\MSBuild\\Microsoft\\VC\\v160\\Microsoft.CppCommon.targets(231,5): error MSB6006: \"cmd.exe\" exited with code 3. \r\n```\r\nThe error message points to an unhelpful generic template bit of code, so you can't tell what the real problem was.\r\n\r\nThe bit about `audacity.mo` makes me wonder if there's some prerequisite software missing to do with gettext or so. =||= @gregsskyles \r\nSo these errors are always a puzzle...\r\n\r\nI'm thinking for this particular error perhaps you are using the Ninja builder instead of VS 16 2019; see: \"==> Change CMake generator: VS 16 2019 (was Ninja)\" in the instructions.\r\n\r\nAlso note,  these instructions have been copied (and perhaps updated and improved) here: https://wiki.audacityteam.org/wiki/Building_On_Windows\r\n\r\nAlso, check here: https://github.com/audacity/audacity/pull/826/files\r\n\r\nAnd there is an ongoing discussion about COMPILING AUDACITY: #windows here: https://discord.gg/KWMbsbVh =||= No, I was using the VS builder, not Ninja, I had changed that as per the instructions.\r\nAfter checking through things, I found that there were updates to VS 2019 I hadn't yet applied, and after doing that, re-running the CMake config, and dealing with a python issue CMake complained about with my Miniconda install, it all worked. Got an executable that ran on my Windows box just fine - \r\n```\r\nProgram build date: May 20 2021\r\nCommit Id: 77f8e6 of Mon May 17 08:46:54 2021 -0400\r\nCompiler: MSVC 19.28.29915.00\r\n```\r\nSo a thumbs-up to your new build instructions! =||= "], ["746", "Cannot Open A VST Effect Plugin", "MrTeeXD", "MrTeeXD", "03/16/21, 05:11:43 PM", "**Describe the bug**\r\nFor some reason and I dont know why but Audacity fails to open my EQ VST. The effect is not broken and it works in other programs\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to the plugins folder\r\n2. Drop your EQ VST of Choice\r\n3. Open Audacity and click add new plugins\r\n4. Set the filter to New and try to enable that VST\r\n\r\n**Expected behavior**\r\nI remember clearly that in previous versions, this worked perfectly\r\n\r\n**Screenshots**\r\nThis is the error I got when attempting to load the effect:\r\n![audacity_jIE9Ums4cT](https://user-images.githubusercontent.com/37266538/107966710-ec0cf280-6fb4-11eb-8586-9dd287df2ea0.jpg)\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Windows 10 64bit Home Edition\r\n - Version: Audacity 2.4.1\r\n - (if relevant) Sound Device: Windows WASAPI\r\n\r\n**Additional context**\r\nI am using the Zipped Version of Audacity", "Audacity on Windows is currently a 32-bit app, so it only supports 32-bit VSTs.\r\nEnd user support for Audacity is available via the Audacity forum: https://forum.audacityteam.org =||= "], ["748", "Fix LGTM 'Testing equality to None' alerts", null, "luzpaz", "02/28/21, 06:18:38 PM", "ref: https://lgtm.com/projects/g/audacity/audacity/?mode=tree&ruleFocus=7900090", "Rejected.\r\n\r\nWe generally try not to change 3rd party code in lib-src since we then have to check and reapply fixes when we upgrade. =||= @JamesCrook apologies. is this where I should submit the patch to ? https://gitlab.com/ita1024/waf/ =||= @luzpaz I'm not too sure!  Try them, and they will at least redirect you if you are in the wrong place. =||= "], ["749", "Sliding Stretch / Sliding Time Scale and Pitch Shift crashes on multiple tracks", null, "dlh-0492", "03/03/21, 06:32:45 PM", "**Describe the bug**\r\nHi, I've noticed that the Sliding Stretch utility keeps crashing when I apply it to more than one track. So, for example, when I apply Sliding Stretch to both channels of a stereo track at once, or to more than one mono track at once, it will go through the shifting but then Audacity will crash at the end.\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Linux (Ubuntu)\r\n - Version 2.4.2\r\n - Sound Device: ALSA\r\n\r\nThis wasn't an issue in the 2.3.x versions.\r", "Thanks for the report.\r\nIt is a known bug and has been fixed for the next Audacity release (Audacity 3.0.0). =||= Thanks! =||= "], ["750", "Audacity fails to compile with VS2019 16.9.0 (lrint, lrintf)", null, "JohnColket", "03/17/21, 03:50:25 PM", "While prior releases of Windows VS2019 seemed to work with the new build instructions (see prior pull request), the very latest release 16.9.0 of VS2019, seems to have a problem with the intrinsic functions lrint and lrintf, and generates 68 compile errors.\r\nSpecifically, the build fails with an error: error C2169: 'lrint': intrinsic function, cannot be defined\r\nand error C2169: 'lrintf': intrinsic function, cannot be defined while compiling AudioIO.cpp and other modules.\r\n\r\nThis patch removes the lrint and lrintf definitions using conditional compilation instructions depending on the value of \"_MSC_VER\".  I am sure there are other, perhaps more valid, approaches.\r\n\r\nNote: the value of _MSC_VER is 1928 in 16.9.0. (_MSC_VER is also 1928 in 16.8.0, but _MSC_VER is 1927 in 16.7.0)\r\n_MSC_FULL_VER happens to be 192829910 in my copy of 16.9.0, which has the problem.\r\n\r\nI do not have _MSC_VER numbers of all prior successful Audacity builds, but it is reported that 16.3.8 builds OK (corresponding to _MSC_VER of 1923).  See this forum report: https://forum.audacityteam.org/viewtopic.php?p=418872#p418872\r", "I don't have this problem compiling with 16.9.0 - it compiles without errors. =||= Thanks for this report, David.  Very curious....  I'll take a look-see...\n\n- John\n\nOn Mon, Mar 8, 2021 at 4:36 AM DavidBailes <notifications@github.com> wrote:\n\n> I don't have this problem compiling with 16.9.0 - it compiles without\n> errors.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/750#issuecomment-792621763>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ASKE4NIQVVM5HMOC5JGOQLTTCSLBTANCNFSM4YYHSNPQ>\n> .\n>\n =||= So I uninstalled VS2019, then reinstalled it.  I still have the issue.  I\nhad been suspecting there might be micro versions of 16.9.0, so I checked\nand found that _MSC_FULL_VER is still 192829910 which is what it was\nyesterday.  I don't know if there is any way for me to download a prior\nversion of VS2019.\n\nOn Mon, Mar 8, 2021 at 7:17 AM John Colket <jcolket@gmail.com> wrote:\n\n> Thanks for this report, David.  Very curious....  I'll take a look-see...\n>\n> - John\n>\n> On Mon, Mar 8, 2021 at 4:36 AM DavidBailes <notifications@github.com>\n> wrote:\n>\n>> I don't have this problem compiling with 16.9.0 - it compiles without\n>> errors.\n>>\n>> \u2014\n>> You are receiving this because you authored the thread.\n>> Reply to this email directly, view it on GitHub\n>> <https://github.com/audacity/audacity/pull/750#issuecomment-792621763>,\n>> or unsubscribe\n>> <https://github.com/notifications/unsubscribe-auth/ASKE4NIQVVM5HMOC5JGOQLTTCSLBTANCNFSM4YYHSNPQ>\n>> .\n>>\n>\n =||= Revising my previous comment. I don't have any problems compiling the debug version, but do have problems with the release version. =||= The suggested fix of removing the inline definitions of lrint and lrintf reintroduces bug 2457.\r\n\r\nAn alternative fix, is in the #if (defined (WIN32) || defined (_WIN32)) && defined(_MSC_VER) && defined(_M_IX86) statement, to add the following line before the inline definitions:\r\n\r\n#pragma function(lrint,lrintf)   // do not use intrinsic versions\r\n\r\nI'm not sure if the inclusion of this line needs to depend on the version of the compiler.\r\n\r\n =||= David,\n\nThank you very much for your discoveries and your input. \u263a\n\nI have also tried VS 2019 build 16.10.0 (Prelease 1.0) and I have the same\nissue as with 16.9.0\n\nI have an old VS 2017 audacity.sln file which I have (meticulously)\nupgraded/modified so that it runs on VS 2019 on my machine.  I do not have\nthe issue with this old upgraded solution file either for Release or for\nDebug builds.\n\nSo, it seems that the issue appears when CMake is used to create the build,\nbut not with the solution file.  Perhaps there is some compiler default\nthat was changed in 16.9.0 that was somehow specified in the old solution\nfile.\n\nWe are not the first ones to see lrint problems.  See also,\nhttps://github.com/InsightSoftwareConsortium/ITK/issues/1967\n\nLater...\n\n-  John\n\nOn Tue, Mar 9, 2021 at 5:45 AM DavidBailes <notifications@github.com> wrote:\n\n> The suggested fix of removing the inline definitions of lrint and lrintf\n> reintroduces bug 2457.\n>\n> An alternative fix, is in the #if (defined (WIN32) || defined (_WIN32)) &&\n> defined(_MSC_VER) && defined(_M_IX86) statement, to add the following line\n> before the inline definitions:\n>\n> #pragma function(lrint,lrintf) // do not use intrinsic versions\n>\n> I'm not sure if the inclusion of this line needs to depend on the version\n> of the compiler.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/750#issuecomment-793700522>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ASKE4NLQTATI6ZQDUHYI2DTTCX34JANCNFSM4YYHSNPQ>\n> .\n>\n =||= Thanks, James.  ditto.  \ud83d\ude09\n\nOn Wed, Mar 17, 2021 at 11:50 AM James Crook ***@***.***>\nwrote:\n\n> Merged #750 <https://github.com/audacity/audacity/pull/750> into master.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/750#event-4471096837>, or\n> unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ASKE4NJLNDI6J2WEZPXRWG3TEDFVPANCNFSM4YYHSNPQ>\n> .\n>\n =||= "], ["753", "linux/build.txt:Inserted testing of wxWidget.", "Piyush Thange", "its-crypted", "04/17/21, 03:31:51 PM", "Added examples of wxWidgets to confirm building to verify\r\nthe build is working OK.\r\nTwo examples are provided\r\n1. The Sample which reside in the source code.\r\n2. Hello World Tutorial from wxWidget.\r\n\r\nSigned-off-by: Piyush Thange <pthange19@gmail.com>\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "NaN"], ["754", "Play-at-speed should have an option to keep the pitch constant (change only tempo)", null, "quazgar", "03/16/21, 02:17:04 PM", "**Is your feature request related to a problem? Please describe.**\r\nA clear and concise description of what the problem is. Ex. I'm always frustrated when [...]\r\n\r\n**Describe the solution you'd like**\r\nA clear and concise description of what you want to happen.\r\n\r\n**Describe alternatives you've considered**\r\nA clear and concise description of any alternative solutions or features you've considered.\r\n\r\n**Additional context**\r\nAdd any other context or screenshots about the feature request here.\r", "Thanks.  That's a great suggestion and one we already have on our radar. =||= "], ["755", "Turkish translation update", "Serkan \u00d6NDER", "serkan-maker", "03/17/21, 10:20:20 AM", "# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "correction =||= "], ["756", "[FEATURE REQUEST] Create layour mobile devices", null, "coldspark29", "03/17/21, 11:28:00 AM", "I would really like to see a layout for mobile devices like the pinephone. As of now, it is not useable.", "NaN"], ["757", "Extend theme manager to make it easier to switch between custom themes", null, "coldspark29", "03/17/21, 11:59:48 AM", "As of now, you can only copy one theme into the audacity profile folder and then choose \"custom\". Would be nice if you could copy several themes in there and then choose from the menu.\r\n\r\nI think it would also be great if these themes were added by default. They tr\u00e8s chique.\r\n[https://www.deviantart.com/podel1/art/Audacity-Clean-Dark-Theme-1-3-by-Podel-715604676](https://www.deviantart.com/podel1/art/Audacity-Clean-Dark-Theme-1-3-by-Podel-715604676)\r", "It is unlikely that theme support will be developed further until there has been a significant amount of \"under the hood\" work done relating to the Audacity GUI, so I'm closing this feature request for now. When the \"under the hood\" work has been completed there will be a lot more scope for improving the appearance of Audacity. =||= "], ["758", "Create layout for Linux mobile devices", null, "coldspark29", "03/17/21, 11:53:59 AM", "I would really like to see a layout for mobile devices like the Pinephone. As of now, it is not useable.\r", "Audacity does not currently support mobile devices or mobile operating systems.\r\nA mobile version of Audacity may be developed in the future. =||= The application itself works really well on the Pinephone. The problem is just the layout. To avoid misunderstanding: The Pinephone is a mobile phone that runs a full ARM-based Linux. I am not talking about Android. So there is just a need for proper scaling for the smaller screen. =||= To be really usable I think it would need extensive redesign of the interface rather than just scaling, which is on the cards for the future, but not the immediate future. Thanks for the clarification. =||= The developers of the phone said that the line input of the SoC is not connected to the jack anyway. So there would just be mic input and for that a simpler app would suffice. Linux phones are on the horizon though. Maybe in 1-2 years it would be worth the effort.\n\n> Am 17.03.2021 um 13:55 schrieb Steve Daulton ***@***.***>:\n> \n> \ufeff\n> To be really usable I think it would need extensive redesign of the interface rather than just scaling, which is on the cards for the future, but not the immediate future. Thanks for the clarification.\n> \n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub, or unsubscribe.\n =||= "], ["759", "Update 2.4.2 Turkish Translation", "Serkan \u00d6NDER", "serkan-maker", "03/29/21, 12:22:35 PM", "# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "Hi, thanks for the translations. I'll continue the review later on, but so far these translations are hardly an improvement over the current ones, moreover some of the previously correct translations are broken. I'd recommend a re-pass over the translations as a whole, and make sure that the \"audio\" context is preserved. =||= Hello, I corrected some incorrect translations. I did not make much change in the current translation. The majority was to add accelerators. I fixed the translation of the most parts. I would appreciate it if you report the mistake I made, I would be considered a novice in the translation business. There are also 270 missing translation lines that are not in the .pot file but are available in the interface. These missing lines are present in the .po file but cannot be used.\r\n[audacity_tr.po.zip](https://github.com/audacity/audacity/files/6161718/audacity_tr.po.zip)\r\n =||= I will continue reviewing later on. It will take a while, since I was able to barely review a quarter of the changes. =||= I corrected the wrong translations you warned\r\n[tr.po.zip](https://github.com/audacity/audacity/files/6163845/tr.po.zip)\r\n =||= > I corrected the wrong translations you warned\r\n> [tr.po.zip](https://github.com/audacity/audacity/files/6163845/tr.po.zip)\r\n\r\nThanks for the corrections, I appreciate it. Is it possible to commit your changes here for easier review? =||= incorrect translation corrections\r\n[tr.po.zip](https://github.com/audacity/audacity/files/6169563/tr.po.zip)\r\n =||= "], ["760", "Apple Silicon build (e.g. M1 processor)", "Vas Sudanagunta", "vassudanagunta", "03/27/21, 10:06:50 PM", "**Is your feature request related to a problem? Please describe.**\r\n\r\nA native build for Apple Silicon Macs will both perform better and use much less batter power. \r\n\r\n**Describe the solution you'd like**\r\n\r\nAudacity released in an Apple universal binary that includes an Apple Silicon build.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nCurrently Audacity's Intel build works on M1 Macs using Rosetta translation software.\r\n\r", "#684 =||= @JamesCrook @Margen67 I opened this issues because that one was closed for some reason. One of them should be re-opened... I think. =||= "], ["761", "Experimental flags", "Paul Licameli", "Paul-Licameli", "04/27/21, 05:08:10 PM", "# Pull Requests\r\nReimplement EXPERIMENTAL flags using CMake, eliminating Experimental.h; making it impossible to omit Experimental.h by mistake and quietly change the meaning of the code if you cut and paste it to another file\r", "Seems like a good idea to me.  How about exposing the experimental options as DEFINES on the cmake command?  We'd supply the defaults in Experimental.cmake and then they could be overridden in the CMake GUI or command line.\r\n\r\nProbably overkill though. =||= "], ["764", "Update cs.po - for Audacity 3", null, "pafri", "03/29/21, 09:20:20 PM", "I've updated the file, that I previously worked on in 2020, for the new version of Audacity 3. Greetings\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "Thank you.  Merged. =||= "], ["766", "Fixed Bitrot and empty label boxes", "m_shariff", "crpto-bug", "03/20/21, 04:15:44 PM", "# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "NaN"], ["767", "Correcting grammar and wordiness in maketarball.sh", "Nikita Mahoviya", "nikitamahoviya", "05/13/21, 06:59:29 PM", "Improving the grammar and punctuation for better presentation", "Closed by committing #768 =||= "], ["768", "Fixed the grammar-related issues in maketarball.sh #767", "Nikita Mahoviya", "nikitamahoviya", "03/21/21, 09:11:41 AM", "Fixed the grammar-related issues in maketarball.sh #767\r\n\r\nThere were some minor errors and spelling mistakes, hence corrected them.\r", "Thanks. =||= "], ["771", "Use unambiguous units for \"Measure RMS\"", null, "endolith", "03/25/21, 11:46:56 PM", "**Is your feature request related to a problem? Please describe.**\r\nIf you generate a full-scale sine wave and then use the `rms.ny` plugin to measure it, it says -3 dB:\r\n\r\n![image](https://user-images.githubusercontent.com/58611/112539189-0e014e00-8d87-11eb-8446-f42150b63790.png)\r\n\r\nBut \"dB\" for an RMS level is ambiguous, with different meanings in different contexts.\r\n\r\n**Describe the solution you'd like**\r\n\r\nThis is consistent with the dBov unit in ITU-T G.100.1 telephony standard, so it could be labeled \"-3 dBov\" and that would be unambiguous.\r\n\r\nHowever, I'd prefer that it use the unit dBFS, which is more common in pro audio contexts.  This is defined in AES17, IEC 61606, etc.  This would require multiplying the level by \u221a2 (+3.01 dB), and then it could be labeled \"0.000 dBFS\"  (= \"0 dB down from a full-scale sine wave\")\r\n\r\nLikewise, if you generate a tone with amplitude 0.0001 it should say \"-80.000 dBFS\", etc.\r", "Thanks.\r\nA contributor has provided a solution you can use: https://github.com/audacity/audacity/pull/772\r\n\r\nWe're not planning to use/distribute it though. =||= It should be part of the rms.ny file distributed with Audacity =||= "], ["772", "Fixes #771", null, "godspeed5", "03/25/21, 11:47:19 PM", "We could have a different script for DBFS I guess? I've just changed the name to dBov for now.", "Thanks.  We're not planning to use this though. =||= "], ["773", "Bug 2124 - Importing non audio file gives misleading error", "Vishal Narnaware", "vishalnarnaware", "03/27/21, 11:14:44 PM", "\r\nFixed misleading error by adding file extension test", "This fix would centralize an exhaustive list of all known audio file extensions, duplicating the information made in the several different subclasses of ImportPlugin.  It's not good to have such duplicated assumptions in different parts of the code, which might become inconsistent with each other.\r\n\r\nWhereas the existing logic gave the error only after trying to import the file with all ImportPlugins first.  That is better and more extensible.\r\n\r\nBesides which, bug 2523 duplicated this bug, and was already fixed at commit aa89805fd2cf2949f31e43f249581e623215c2cf.\r\n =||= This change blocks importing of some files that worked before which FFMpeg could import (even if they weren't in the officially supported list of types), such as brstm files (which I use occasionally).  IMO the fix from aa89805fd2cf2949f31e43f249581e623215c2cf is better. =||= "], ["774", "Internal error at DBConnection.cpp line 275. Please inform the Audacity team at https://forum.audacityteam.org/.", "Tim Tassonis", "timtas", "03/28/21, 11:54:04 AM", "Projects cannot be saved\r\n\r\n\r\nSteps to reproduce the behavior:\r\n1. Create a new project, or open an existing one\r\n2. Save it\r\n3. Close it\r\n\r\nAn internal error box appears:\r\n\r\nInternal error at DBConnection.cpp line 275. Please inform the Audacity team at https://forum.audacityteam.org/.\r\n\r\n\r\n**Additional information (please complete the following information):**\r\n - Linux (Linux from Scratch 10.0)\r\n - Audacity 3.0.0\r\n - Sqlite 3.34.1\r\n \r", "Could you attach the log please? =||= I have now resolved this issue by adding \"-Daudacity_use_sqlite=local\" to cmake, forcing the use of the bundled library version, so the issue might be closed with this work-around.\r\n\r\nI now however am stuck at opening aup3 files, always getting the error: \"Failure parsing project information\". But I guess I will open a separte issue for that.\r\n\r\n\r\n\r\n =||= Note that we patched an issue for FreeBSD subsequent to 3.0.0 tag.  https://bugzilla.audacityteam.org/show_bug.cgi?id=2697  =||= Ok, will rebuild with that, test and give you an answer. I'm not really optimistic though, as my problem also happens with newcly created projects. But it's certainly worth a try.\r\n =||= Sadly, I was right, this patch did not fix my issue. Is it advisable to delete the ~/.audacity-data directory after an upgrade, might there be something in there causing problems? =||= Best bet is to use very latest code form GitHub, which has more reporting in it, compile with that, and post info from the logs (help->diagnostics).\r\n\r\nMight as well delete ~/.audacity-data directory.  It's unlikely to be a problem, but good to rule out one more thing.\r\n\r\nWe only officially support Windows (32bit), macOS and Ubuntu.  We also only support builds using our patched wxWidgets 3.1.3.\r\n =||= Yes, I'm using your patched wxWidgets 3.1.3, and I previously never had any problems with building audacity from source. It's clear that you cannot support any odd platform, I will give git master a go and see where that gets me. In the meantime, I'm very happy with 2.4.2  =||= So, very good news! I now compiled git master from source, and while I cannot open the previously created aup3 files, I can both:\r\n- open old projects, store them as aup3 and then successfully open the new aup3 file\r\n- create a new project, save it as aup3 and the re-open it.\r\n\r\nSo, to summarize, all my issues are resolved with git master audacity, and local sqlite\r\n\r\nThanks again for your help.\r\n =||= Thanks timtas.  That's good to hear. =||= "], ["775", "Scripting not working under GBK charset.", null, "imbazhang", "05/24/21, 07:57:38 AM", "**Describe the bug**\r\nI'm a user from China. To support Chinese in the computer system, we use the GBK charset. When running the script _docimages_all.py_, the process terminated with following information:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"docimages_all.py\", line 31, in <module>\r\n    exec( inner( 'tracks' ) )\r\n  File \"<string>\", line 90, in <module>\r\n  File \"<string>\", line 16, in track_image1and8\r\n  File \"<string>\", line 109, in capture\r\n  File \"<string>\", line 71, in do\r\n  File \"<string>\", line 66, in doCommand\r\n  File \"<string>\", line 58, in getResponse\r\nUnicodeDecodeError: 'gbk' codec can't decode byte 0x98 in position 51: illegal multibyte sequence\r\n```\r\n\r\nThis bug related to the unique encode style of the GBK charset.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. enable 'mod-script-pipe'\r\n2. switch language to '\u7b80\u4f53\u4e2d\u6587' or 'Chinese(simplified)'\r\n3. run any python script\r\n4. See error\r\n\r\nSince this bug may be difficult to understand for those whose primary language is not Chinese, I will try to fix it. Further information will be updated in this issue and discord channel.\r", "There has been a known Windows issue  for Japanese, Korean and Chines with a recent Windows update.  I believe that microsoft may have issued a further update to address this. =||= But the scripting too has/will-have its own issues.\r\nOnce past the issue @imbazhang reports, I'd expect labels with surrogate pairs in them to be a particular problem.\r\n\r\nThis would be very welcome as part of a Google summer of code, which I see you are taking part in. =||= After seeing Unicode issues in Audacity and comments on Nyquist's lack \nof Unicode, I decided to \"bite the bullet\" in another language project \nand support Unicode. One thing I've learned is C and C++ probably \nadopted wide characters prematurely, and many more recent languages are \nusing UTF-8 internally. Some general conclusions I've come to:\n\n  * general text processing, if you just want to read/store/write text\n    without looking at it, is simpler/faster without any conversion, and\n    works pretty much like ASCII if you are really concerned about\n    performance.\n  * to compare strings, text must be \"normalized\" so that ligatures and\n    some other interesting compound characters have a canonical\n    representations. Normalized strings have to be renormalized if you\n    concatenate or append them -- it's ugly.\n  * Strings used as identifiers are even messier because you can have\n    very similar-looking strings that compare as unequal (the surrogate\n    pairs James mentions). A different form of normalization, e.g. NFKC,\n    is recommended to map similar-looking strings to a canonical form to\n    avoid security loopholes like creating a user-ID that looks like\n    someone else, and maybe just basic sanity for variable and field\n    names. You could do this for everything, but it does not preserve\n    typographic details, so it seems inevitable that you have to work\n    with at least 2 different kinds of normalization.\n\nThis may be old hat to everyone, but I'd be happy to share what I know \nand the code I found for UTF-8.\n\n-Roger\n\nOn 3/28/21 1:40 PM, James Crook wrote:\n>\n> But the scripting too has/will-have its own issues.\n> Once past the issue @imbazhang <https://github.com/imbazhang> reports, \n> I'd expect labels with surrogate pairs in them to be a particular problem.\n>\n> This would be very welcome as part of a Google summer of code, which I \n> see you are taking part in.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub \n> <https://github.com/audacity/audacity/issues/775#issuecomment-808930297>, \n> or unsubscribe \n> <https://github.com/notifications/unsubscribe-auth/AALLUHD6QKTRLYXJNEWKEGTTF5ZZ7ANCNFSM4Z5IVYCQ>.\n>\n =||= Roger, just to note that under Windows the wxString we use right now is UTF-16.  The surrogate pairs there are pairs of 2 byte characters that together represent one 20 bit code point.  Windows itself uses UTF-16.  We can I believe switch wxWidgets to use UTF-8 even on Windows, and that seems to me worth doing to simplify our code and keep it consistent across platforms.  Possibly worth doing at the same time as moving to 64 bit for Windows.\r\nI learned recently that I can tell directly from the current character whether I am on the start of a code point.  I do not need to parse from the start of string.   =||= I misunderstood \"surrogate pair\" thinking it was a codepoint pair such \nas a letter plus an accent.\n\nMy take on UTF-16 is unless you restrict yourself to character sets with \n16-bit code points (we don't), you get all the pain of UTF-8 and up to \ndouble the memory space.\n\nSince UTF-16 is pretty much just windows, I think it's a good idea to \nuse UTF-8. For Audacity, which is not text-intensive, UTF-32 isn't \ncrazy, but you still should deal with normalization and input/output to \nUTF-8, so I'm not sure it helps much.\n\nYes, the UTF-8 encoding is really ingenious. Unicode is still a pain, \nbut maybe if I didn't \"grow up\" with ASCII, it would be routine pain \njust like memory management, stack overflow, case-sensitivity, and so \nmany other gotchas.\n\n-Roger\n\nOn 3/28/21 2:59 PM, James Crook wrote:\n\n> Roger, just to note that under Windows the wxString we use right now \n> is UTF-16. The surrogate pairs there are pairs of 2 byte characters \n> that together represent one 20 bit code point. Windows itself uses \n> UTF-16. We can I believe switch wxWidgets to use UTF-8 even on \n> Windows, and that seems to me worth doing to simplify our code and \n> keep it consistent across platforms. Possibly worth doing at the same \n> time as moving to 64 bit for Windows.\n> I learned recently that I can tell directly from the current character \n> whether I am on the start of a code point. I do not need to parse from \n> the start of string.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub \n> <https://github.com/audacity/audacity/issues/775#issuecomment-808942411>, \n> or unsubscribe \n> <https://github.com/notifications/unsubscribe-auth/AALLUHFB55PFLIUC6QN2PELTF6DCRANCNFSM4Z5IVYCQ>.\n>\n =||= > Since this bug may be difficult to understand for those whose primary language is not Chinese, I will try to fix it. \r\n>Further information will be updated in this issue and discord channel.\r\n\r\nI have also created an entry for this in our Bugzilla bugtracker:\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2790\r\nBug 2790 - Scripting not working under GBK charset\r\n\r\nBut as **imbazhang** aims to try to fix this themselves, I will also leave this GitHub Issue open, for now at least ...\r\n\r\n =||= @imbazhang have you manged to fix this ? =||= "], ["776", "Bug 2663 - Audacity can make unwanted moves of toolbars", null, "JohnColket", "03/28/21, 08:16:09 AM", "# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "NaN"], ["778", "On hover Effect menu is not visible", null, "dev9414", "04/08/21, 05:06:49 PM", "**Describe the bug**\r\nwhen hovering on the effect menu, the expanded menu hides the effect menu.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. open audacity\r\n2. click on any menu except \"effect menu\" (i.e. file, edit, etc..)\r\n3. now move the mouse towards effect menu/ directly hover on effect menu\r\n4. See an error\r\n\r\n**Expected behavior**\r\n\r\nExpanded menu supposed to expand below effect menu so that effect menu can be visible\r\nsame as other menus\r\n![Screenshot (175)](https://user-images.githubusercontent.com/46513305/112747917-0b486800-8fd6-11eb-92dd-540b3c3ccdb6.png)\r\n\r\n\r\n\r\n**Screenshots**\r\n\r\n![Screenshot (174)](https://user-images.githubusercontent.com/46513305/112747908-01bf0000-8fd6-11eb-8690-a5b1e02c9d72.png)\r\n\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: [Windows 10]\r\n - Version [Audacity 3.0.0]", "And this also makes it difficult to get to the remaining menu items: Analyze, Tools, Extra, Help...\r\n\r\nSee also the comments posted under \"Divide plug-in menus further\" Enhancement Request\r\n(#752 opened 12 days ago by SMcCandlish) and countless other posts on the forum.\r\n\r\nTry this: Edit > Preferences > Effects > Sort or Group: Group by Publisher  (perhaps this should be set by default?)  =||= Looks like a minor bug to me - I think I will log this on Bugzilla (but this may not be today) =||= This appears to be a Wndows-only issue - I cannot reproduce this on Mac - but Mac handles its app menus separate from any app itself, handle in the Mac menu bar at the top of the screen, with only the current active app showing menus =||= I have logged this as:\r\nBug 2728 - Win: Effect menu overlays menu bar\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2728 =||= The developer who looked as this bug commented\r\n>this is Windows doing this and there's nothing we can do to prevent it.\r\n\r\nAccordingly I have closed 2728 as NOT-A-BUG\r\n\r\nThere are a couple of workarounds\r\n1) In Effects preferences set the Maximum effects per group to say 10\r\nor\r\n2) In Effects preferences set the \"Sort or group\" to \"Group by type\" =||= "], ["779", "Bug 1334 - Enh: Add Warning Message if some tracks muted when exporting", "Vishal Narnaware", "vishalnarnaware", "03/29/21, 06:42:30 PM", "There are warning messages when all tracks are muted. \r\nHowever, there was no warning message if some tracks were muted.\r\nThis PR adds a warning message with \"Do not show this again\" check box.", "Personally I'm not keen on this change. I think most users expect that their exported audio will sound the same as the current project state. Showing a warning, just in case a user has \"accidentally\" muted a track, seems like excessive hand-holding. =||= Yes maybe, however clicking one time on Do not show this again would not show it again.   \r\nThis little enhancement will be useful for new users who accidentally mutes and clicks on export and wonders later why some audio files are not edited/added. =||= Thanks @SteveDaulton , and thanks @vishalnarnaware .  Closed, see updated bug in bugzilla.  https://bugzilla.audacityteam.org/show_bug.cgi?id=1334 =||= "], ["780", "Bug 2718 - improve the error message when opening a project in a read\u2026", "Dmitry Vedenko", "crsib", "03/29/21, 05:40:40 PM", "Improves handling of the case when the project directory is read-only. \r", "Looks good.  I think the 'read only' error message might happen in some other rare cases, but those are errors that amount to the same thing in practice.\r\n\r\nReturning the error code makes this easy to extend.\r\n\r\nCommitted.   =||= "], ["782", "Turkish translation updated to 3.0.1", "Serkan \u00d6NDER", "serkan-maker", "03/31/21, 06:01:45 PM", "# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "NaN"], ["783", "Fixed the Titile", "J0hn", "Rqcker", "03/31/21, 09:37:13 PM", "# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "NaN"], ["784", "Internal error at DBConnection.cpp line 308 when closing audacity", "monochromec", "monochromec", "04/02/21, 07:38:42 PM", "**Describe the bug**\r\nCf. title\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Open audacity\r\n2. Work on a project\r\n3. Save project\r\n4. Close audacity and observe error\r\n\r\n**Expected behavior**\r\naudacity closes without error\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Stock Groovy with wxrc 3.1\r\n - Current master (3.0.0)\r\n - Pulse on Alsa\r\n - libsqlite3-dev is 3.33.0-1ubuntu0 (stock Groovy)\r\n\r\n**Additional context**\r\nPlease let me know if you need additional information - more than happy to help!\r", "After which audacity locks up and has to be killed. =||= 3.0.0 and the latest alpha test build I have for the upcoming 3.0.1 both close fine at your Step 4 =||= I had this issue, too, it went away after I \r\n- added -Daudacity_use_sqlite=local to the cmake command line\r\n- switched to latest git master (that was at 2020-03-28)\r\n\r\nMaybe you could try this as well?\r\n\r\n =||= @timtas Great - works like a charm. Thanks for the hint. @Maintainers: Perhaps this hint can be included the docs? =||= "], ["785", "Update Polish Translation from Transifex - 3.0.1", "Grzegorz Pruchniakowski", "Gootector", "04/01/21, 11:34:24 AM", "Update Polish Translation from Transifex - 3.0.1\r\n\r\nGreetings,\r\nGootector\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "NaN"], ["786", "Update Polish from Transifex", "Grzegorz Pruchniakowski", "Gootector", "04/01/21, 02:31:10 PM", "Update Polish from Transifex\r\n\r\nGreetings,\r\nGootector\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "NaN"], ["787", "Unable to parse project information", "CyberRex", "CyberRex0", "05/03/21, 07:52:05 AM", "**Describe the bug**\r\nSaved the project in the new aup3 format released in version 3.0.0.\r\nHowever, I am unable to load it later.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Record or edit project\r\n2. Save as aup3 project format\r\n3. Open project after close Audacity\r\n\r\n**Expected behavior**\r\nAudacity says \"Unable to parse project information.\"\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/26585194/113370520-0e10d780-939f-11eb-89fd-a0a4db255597.png)\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Windows 10 Build 2004 64bit\r\n - Version: Audacity 3.0.0 64bit\r\n - Language: Japanese ( I took a screenshot with English for upload to github )\r\n\r\n**Additional context**\r\nNone in particular.", "It seems that many CJK users are faced with this problem:\r\n\r\nunable to parse project information - Audacity Forum\r\nhttps://forum.audacityteam.org/viewtopic.php?t=116677 =||= I also encountered the same situation, this situation may only be reproduced on Windows systems\r\nThe language of my windows system is Chinese, I guess it may be related to the system language, but I have no evidence yet. =||= Fixed? -> https://github.com/audacity/audacity/commit/ffebbe0 =||= "], ["788", "noise reduction in macro: false sample rate mismatch ", null, "simplesalt", "04/03/21, 12:03:27 PM", "After creating a noise sample from a file (m4a, aac, stereo, sample rate: 22.05 khz, 32-bit float), I tried to run a macro including \"noise reduction\" effect.  Every time, I get the error, \"The sample rate of the noise profile must match that of the sound to be processed.\"  The sample rate (and all other codec spec details) do match.  noise profile file attached for your convenience.  Initial source file available upon request but is copyrighted so I'm not gonna publish it for everyone here.  \r\n\r\nI notice that windows mentions a bitrate of 196kbps in the noise sample, and the source m4a reports a bitrate of 58kbps.  I created the noise sample by opening the source and deleting the non-\"silence\" parts and saving with default options, including a project rate of 22050, so if the bitrate was changed, it was audacity's decision, and there's nowhere I can see to adjust it in the UI.  \r\n\r\nThe issue doesn't happen with mp3s with stereo, sample rate 24k, 32-bit float.  \r\n\r\nFile:\r\n[1-01 noise reduction sample.zip](https://github.com/audacity/audacity/files/6250252/1-01.noise.reduction.sample.zip)\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Win10\r\n - Version Audacity 3.0.0", "The important thing is the sample rate of the audio tracks (shown in the panel on the left end of the track).\r\nCheck that the sample rate of the track that you create the noise profile from and the sample rate of the track that you are applying noise reduction to are the same.\r\nIf you require further help, please ask on the Audacity help forum. https://forum.audacityteam.org\r\nIf you are still convinced that this is a bug, please post full details, including step by step instructions to reproduce the problem, to the Audacity forum. =||= It is exactly the same - that's what the ticket said.  Please read tickets before closing them.  \r\n\r\n![image](https://user-images.githubusercontent.com/49482082/113478496-b762d680-944e-11eb-930f-37d76bef88d3.png)\r\n =||= I did read the ticket before closing.\r\nThe alleged bug is not reproducible for me. To pursue this issue further will require further discussion to determine how to reproduce the problem. That's unlikely to happen here on GitHub as we use the forum for discussion. When / if we can find how to reproduce the issue, or at least confirm that it occurs for multiple users, the bug will be logged on the Audacity bug tracker for fixing. =||= here's a video of the issue.  As you can tell, even if I switch the bitrate to match the original, it still complains about the sample rate.  https://youtu.be/c-NkNl_58Iw =||= "], ["789", "noise reduction in macro: false sample rate mismatch ", null, "simplesalt", "05/21/21, 01:28:33 PM", "After creating a noise sample from a file (m4a, aac, stereo, sample rate: 22.05 khz, 32-bit float), I tried to run a macro including \"noise reduction\" effect.  Every time, I get the error, \"The sample rate of the noise profile must match that of the sound to be processed.\"  The sample rate (and all other codec spec details) do match.  noise profile file attached for your convenience.  Initial source file available upon request but is copyrighted so I'm not gonna publish it for everyone here.  \r\n\r\nI notice that windows mentions a bitrate of 196kbps in the noise sample, and the source m4a reports a bitrate of 58kbps.  I created the noise sample by opening the source and deleting the non-\"silence\" parts and saving with default options, including a project rate of 22050, so if the bitrate was changed, it was audacity's decision, and there's nowhere I can see to adjust it in the UI.  \r\n\r\nThe issue doesn't happen with mp3s with stereo, sample rate 24k, 32-bit float.  \r\n\r\nFile:\r\n[1-01 noise reduction sample.zip](https://github.com/audacity/audacity/files/6250252/1-01.noise.reduction.sample.zip)\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Win10\r\n - Version Audacity 3.0.0\r\n \r\n Re-opened from bug #778 that @SteveDaulton closed in error.\r\n \r\n Response on that bug included for convenience: \r\n \r\n> [Sample rate] is exactly the same - that's what the ticket said.  Please read tickets before closing them.  \r\n> \r\n> ![image](https://user-images.githubusercontent.com/49482082/113478496-b762d680-944e-11eb-930f-37d76bef88d3.png)\r", "The issue seems to affect mp3s as well.  I was able to get around the problem by encoding with different bitrates with ffmpeg first.  I had the same issue with another set I'm trying to process, you can see here in a video capture of the problem: https://youtu.be/c-NkNl_58Iw.   =||= I cannot reproduce this on my W10 PC with 3.0.0, 3.0.2 or the latest alpha test build I have for 3.0.3\r\n\r\n1) launch Audacity (default project rate 44100 Hz\r\n2) Import audio file\r\n3) change track rate to 22500\r\n4) select the noise profile range\r\n5) Noise Reduction => Get Noise Profile\r\n6) Run my Macro on Project - all is does is Select All and then Noise Reduction\r\n7) Observe:  success\r\n\r\nOf course if I reverse steps 3 and 4 then I do get the error message as my noise sample is at 44100 Hz and my audio to be processed is at 22500 Hz - so of course there is a rate mismatch and the error message is tightly displayed.\r\n\r\n@simplesalt  Can you please retest following my Steps to Reproduce? =||= Due to lack of response from OP and my testing as in previous comment I am going to close this issue =||= "], ["790", "Fix source newlines for translation from \\n to ~%", "Thomas De Rocker", "RockyTDR", "05/16/21, 03:03:18 PM", "Thanks to @Phroneris on Transifex for noticing this\r\n@JamesCrook ", "Thanks.  We are in string freeze and most translations are already in, so these will wait until later.  We will aim to get this right for 3.0.2. =||= @JamesCrook Any news to approve this pull request? =||= Tanks for the 'bump' (i,e thanks for reminding me of this pull request). =||= "], ["791", "Bug 2511 - Enh: Remove the \"Variable Speed: Fast / Standard\" option from MP3 dialog", "Vishal Narnaware", "vishalnarnaware", "04/03/21, 07:42:38 PM", "Variable Speed Standard has no advantage over Variable Speed Fast.   \r\nRemoved Variable Speed option from export MP3 dialog.\r\nEnhancement Description:\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2511", "Rejected.\r\nVishnal, you didn't bother to check basic functionality such as changing Bit Rate Mode.\r\nmMode is now uninitialised, and yet it is used in function OnABR() and OnCBR(), causing a crash. =||= "], ["792", "Broken links on the audacity website", "Christian Winter", "BeayemX", "09/21/21, 08:26:32 AM", "Sorry to use a github issue for this but I could not find a better way to contact you devs.\r\n\r\nThere are some broken links on the audacity website.\r\nFor one link I found the correct address. \r\nBut for the donations-link I could not find the desired site.\r\n\r\n**Donations**\r\n\r\nHere\r\n```\r\nhttps://www.audacityteam.org/contact/advertising-and-monetization-opportunities/\r\n```\r\n\r\nit points to the non-existing link:\r\n\r\n```\r\nhttps://www.audacityteam.org/donate/\r\n```\r\n\r\n**Contacts**\r\n\r\nOn this website\r\n```\r\nhttps://www.audacityteam.org/about/credits/ \r\n```\r\n\r\nthere is a link in the second line to the following address that does not work:\r\n\r\n```\r\nhttp://audacityteam.org/contact/\r\n```\r\n\r\nIt should probably link to this address:\r\n\r\n```\r\nhttps://www.audacityteam.org/contact/\r\n```\r", "Thanks for the report. This is being dealt with.\r\n\r\nGenerally the best way to contact us is via the Audacity forum as that is constantly monitored across multiple time zones.\r\nhttps://forum.audacityteam.org\r\n =||= Hi @SteveDaulton I would like to work in this issue.\r\nHow can I start?\r\n =||= Thanks  for the offer.\r\nI've already fixed some of the bad links. The remaining bad links are due to redirects not working correctly, and that requires root  access to the server. Only the system administrators have that access, so we're waiting for them.\r\n\r\nIf you notice any other broken links on the website, it would be very useful if you could report them here: https://forum.audacityteam.org/viewforum.php?f=32\r\n\r\nSteve =||= This appears to have been fixed =||= "], ["793", "Bug 2511 - Enh: Remove Variable Speed and make Fast default from MP3 dialog", "Vishal Narnaware", "vishalnarnaware", "04/04/21, 12:58:12 PM", "From #791 :\r\n```\r\nVariable Speed Standard has no advantage over Variable Speed Fast.\r\nRemoved Variable Speed option from export MP3 dialog.\r\nEnhancement Description:\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2511\r\n```\r\nPR #791 's review made me realize that I have commented out wrong part of the code.  \r\nSo a new PR to do the same but correctly this time. \r\n\r\nPS: Thank you for reviewing.", "Thanks.  Merged. =||= "], ["794", "git branch test", "Devesh Kashyap", "Kashyapdevesh", "04/04/21, 01:53:31 PM", "# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "NaN"], ["795", "Some additional error checking and logging", "Leland Lucius", "lllucius", "04/04/21, 10:06:01 PM", "# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "NaN"], ["799", "Bug2700: intermittent failure to open project database...", "Paul Licameli", "Paul-Licameli", "04/08/21, 06:56:07 PM", "... Logging data from the wild shows that the SELECT query in\r\nProjectFileIO::CheckVersion() returned SQLITE_BUSY sometimes.\r\n\r\nA plausible explanation is that the concurrently starting checkpoint thread\r\nwas sometimes creating a new connection simultaneously.\r\n\r\nInstead, serialize the creation of the two connections in the main thread and\r\npass the second one ready made into the checkpoint thread.\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "NaN"], ["800", "limiter blocks on long recordings", null, "djbenbe", "04/18/21, 07:03:35 PM", " - OS: Windows 10\r\n - Version  3.0.0\r\n\r\nI have 1 hour recordings.\r\nwhen I use the limiter it blocks.\r\nit works for a short exposure.", "This is bug that has already been fixed for the soon to be upcoming 3.0.2 (the Release Candidate RC)1 was made available for testing today.\r\n\r\nSee:  P1 Bug 2708 - Nyquist effects fail silently with One hour plus stereo \r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2708 =||= thank you. i would like to test this version. =||= The latest RC is here: https://www.fosshub.com/Audacity-devel.html =||= "], ["801", "System language display and setting language conflict", "J0hn", "Rqcker", "05/20/21, 10:14:45 PM", "**Describe the bug**\r\nFirst of all, after I compiled the software, I discovered that Audacity will display with the system language. I set the software language to **English** in the settings. Most of them can be displayed perfectly, but there are still some functions that cannot be fully displayed in the language I set. They are still displayed as system language.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to 'Audacity'\r\n2. Click on 'Generate'\r\n3. Scroll down to 'Risset'\r\n4. It can be found that the following three options are all displayed as system languages\r\n  \r\nSimilarly, when I open other toolbars, I still find a mixed display of the system language and the set language. Toolbars with problems: **\"Generate\", \"Effect\", \"Analyze\", \"Tools\"**.\r\n\r\n**Expected behavior**\r\nThe improvement goal is to achieve unity of language functions. All functions should be displayed in the language set by the user. (It shouldn't be a situation where multiple languages are mixed like this.)\r\n\r\n**Screenshots**\r\nThe following screenshots take **English** and **Chinese** as examples. After setting the display language to English:\r\n**1. Generate:**\r\n![Generate](https://user-images.githubusercontent.com/20661419/114219409-8872c600-9962-11eb-9658-0bfd6dc92c06.png)\r\n**2. Effect:**\r\n![Effect](https://user-images.githubusercontent.com/20661419/114219667-dd164100-9962-11eb-9f26-07544daf29ba.png)\r\n**3. Analyze:**\r\n![Analyze](https://user-images.githubusercontent.com/20661419/114219839-1949a180-9963-11eb-8a9b-1af7cd9d9cd1.png)\r\n**4. Tools:**\r\n![Tools](https://user-images.githubusercontent.com/20661419/114219901-33837f80-9963-11eb-8780-81b4e850699a.png)\r\n\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: x64 Windows 10\r\n - Version: Audacity 3.0.1-alpha-Apr 9 2021\r\n - Sound: Device Realtek High Definition Audio\r\n\r\n**Additional context**\r\nOnly the display interface is affected, and the specific functions implemented by the software are not affected.\r", "I have seen this issue when switching to European languages then back to English. =||= Is Windows English or Chinese locale.  I.e. is default Audacity on your machine Chinese and you switch to English?\r\n\r\nBTW there is a later version of Audacity out now 3.0.2 - and we never released a 3.0.1 we went straight from 3.0.0 to 3.0.2 so I am totally surprised that you say you were on 3.0.1.\r\n\r\nCan you please\r\na) Upgrade to 3.0.2 with the EXE installation\r\nb) accept the Reset options that occur during the upgrade an initial launch.\r\nc) then post back and tell us if this still happens =||= > Is Windows English or Chinese locale. I.e. is default Audacity on your machine Chinese and you switch to English?\r\n> \r\n> BTW there is a later version of Audacity out now 3.0.2 - and we never released a 3.0.1 we went straight from 3.0.0 to 3.0.2 so I am totally surprised that you say you were on 3.0.1.\r\n> \r\n> Can you please\r\n> a) Upgrade to 3.0.2 with the EXE installation\r\n> b) accept the Reset options that occur during the upgrade an initial launch.\r\n> c) then post back and tell us if this still happens\r\n\r\nHello Peter, \r\n  The defaults language of my win10 system is Chinese. I have switched the software to English. I am pretty sure that the version I am using is 3.0.1. I am a student participating in GSoC2021, this exe is after I compile the code. The screenshot is a screenshot of the software. I still encounter this problem in the latest version.\r\n\r\n![image](https://user-images.githubusercontent.com/20661419/118501793-fdcf7480-b720-11eb-91e6-cffb79531ad9.png)\r\n\r\nThanks,\r\nJunhao\r\n =||= You have an alpha test version of 3.0.1 - it had some bad bugs that's why we skipped it - You really need to install 3.0.2\r\nhttps://www.audacityteam.org/download/windows/ =||= Hello, the problem was successfully solved in version 3.0.2.\r\nThanks all, Cheers! =||= Thanks for the feedback @Rqcker  - glad it got sorted, so I'll close this.\r\n\r\nMany thanks,\r\nPeter. =||= "], ["803", "explain how to generate the vc_lib folder", "Jeroen", "jeroenbaas", "05/26/21, 03:28:40 PM", "This is pretty basic; just adding a step in the build.txt in order to be able to build from scratch.\r\nSee https://github.com/audacity/audacity/issues/802", "The build.txt instructions were recently tested and worked OK on a machine with new Windows installation (no prior development tools, no prior audacity or wxWidgets of any kind).\r\n\r\nDid you skip a step? For example, one of these: \r\n\t    In Windows File Manager, right-click on ../wxWidgets/build/msw/wx_vc16.sln,\r\n\t    Select Visual Studio 2019.\r\n\t    In the solutions configurations drop-down list, change \"Debug\" to \r\n      \"DLL Release\",\r\n ====>\tThen select Build > Build Solution. =||= Step 4 does indeed generate the DLLs (it creates the vc_dll folder), but not the vc_lib folder. Perhaps this can also be achieved without the nmake command and selecting a different build, but the current \"DLL Release\" doesn't produce the required vc_lib (on my machine, fresh install of the tools described in the build txt). =||= Just did a quick check, Building in VS2019 using \"Release\" instead of \"DLL Release\" also produces the vc_lib folder, so we don't need nmake, but I do think the build instruction needs amendment. This is easy to reproduce. just rename the folders to vc_lib.old / vc_dll.old and rebuild and _not_ see certain folders appear after building. =||= You are correct.  The instructions at this point need rewording.  During the next week or so, I am hoping to make some other clarifications that others have suggested.  If it would please you, I'll take a look at this as well at that time.\r\n\r\nDo we need the vc_lib folder for either the the current Audacity Release or Debug CMake builds? =||= We have changed the way the dependencies are handled =||= "], ["804", "When editing an MP3 format file, deleting the selected range freezes.", "Deleted user", "ghost", "05/21/21, 01:22:59 PM", "**Describe the bug**\r\nWhen editing an MP3 format file, deleting the selected range freezes.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1.Import MP3 format files.\r\n2.Deletes the selected range.\r\n3.See error\r\n\r\n**Expected behavior**\r\nSoftware freezes\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/62015371/114358878-61a8cf80-9bae-11eb-8c28-b6a72fb020b2.png)\r\n\r\n**Additional information:**\r\n - OS: Windows 10 20H2\r\n - Version: Audacity 3.0.0\r\n - Sound Device: Windows MME", "Works fine for me on W10 with 3.0.0 and the latest RC02 release candidate build I have for the upcoming 3.0.2 =||= Since I can't reproduce this on my W10 PC or my Big Sur 11.2.3 Macbook Pro on 3.0.0, 3.0.2 and the latest alpha test build I have for 3.0.3\r\ncan you please provide more detailed steps to reproduce, in particular:\r\na) how you make the selection,\r\nb) how you attempt to make the deletion ?\r\n\r\nPlease note that you Issue title is a little misleading as you are not actually editing an MP\u00a3 file - rather what happens when you Import it is that Audacity coverts it into its own internal 32-bit float format for working on.\r\n\r\n@ghost -  So can I please also ask yo the repeat your deletion test with:\r\n1) some audio that you Record.\r\n2) some audio that you make with one of the generators in the Generate menu?\r\n\r\nThanks =||= In the lack of response from the OP and due to the fact that such deletions work fine on my W10 PC and my Macbook Pro with macOS 11.3.1 Big Sur I shall close this issue. =||= "], ["805", "Windows 10.0.19042.867, Audacity 3.0.0 GUI does not respond to any input ", "ZhongYao Luo", "LuoZhongYao", "05/17/21, 01:34:01 PM", "**Describe the bug**\r\nOpen Audacity, perform some operations, click menus or buttons or use shortcut keys, it is very likely that the GUI interface does not respond to any input. Check the task manager, Audacity is not dead, right-click on the taskbar to close, Audacity will still pop up Save the modification dialog, but still does not respond to any input \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. run audacity\r\n2. some operations, etc click menu, click buttons, use shortcut key\r\n3. audacity don't respond any input\r\n\r\n**Expected behavior**\r\nAudacity works normally \r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Additional information (please complete the following information):**\r\n - OS:Windows 10.0.19042.867\r\n - Version: Audacity 3.0.0\r\n\r\n**Additional context**\r\nIt is easier to reproduce the problem by using shortcut keys ", "Is anyone tracking this issue? 3.0.2 version still exists, and this problem is very bad  =||= What system language is your OS set to?  We did see problems with a bad interaction with a particular windows update (on Korean and Japanese systems). =||= > \r\n> \r\n> What system language is your OS set to? We did see problems with a bad interaction with a particular windows update (on Korean and Japanese systems).\r\n\r\nSimplified Chinese  =||= I have transferred this issue to our Bugzilla bugtracker and thus will close this GitHub Issue in favor of that.\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2789\r\nBug 2789 - Windows: Simplified Chinese locale Audacity fails to respond  =||= "], ["812", "Separate playback schedule", "Paul Licameli", "Paul-Licameli", "05/14/21, 11:10:29 PM", "   RecordingSchedule and PlaybackSchedule moved to new files...\r\n    \r\n    ... so that AudioIOBase is less involved with real-time playback and recording.\r\n    \r\n    Its responsibilities are mostly (but not yet solely) to query available audio\r\n    devices and the rates they support.\r\n\r\nThis branch breaks some dependencies and splits some files, and is just one common step along the road to splitting AudioIO out into libraries, or to the cleanup of audio engine code that will allow better looping play or scrubbing and seeking of MIDI tracks.\r\n\r", "Update: added a commit to fix Windows build\r\n\r\n =||= "], ["813", "Separate files for PluginRegistrationDialog...", "Paul Licameli", "Paul-Licameli", "06/22/21, 11:53:37 PM", "\r\n    Separate files for PluginRegistrationDialog...\r\n    \r\n    ... so that PluginManager can avoid using GUI\r", "I have rebased and force-pushed, but also turned one commit into a few, I hope to make it more easily reviewable so that you can verify I made no mistakes.  See comments in each new commit.\r\n =||= "], ["814", "CI: macOS: Unblock Xcode version", "Ewout ter Hoeven", "EwoutH", "06/22/21, 07:10:17 AM", "Unblocks the Xcode version in the macOS CI build, since the default is now 12.4.\r\n\r\nPractically reverts ef88cb17 now that the GitHub environment was updated, as was intended.", "Looks like a conflict needs to be resolved, but excited that this is one step closer to apple silicon support! =||= Done! =||= Looks like another conflict cropped up \ud83d\udc40 =||= This PR is nothing more than removing a line of code, so I\u2019m closing it for now. A maintainer can easily make this change when he has time himself. =||= "], ["815", "Update pl.po from Transifex - fixes", "Grzegorz Pruchniakowski", "Gootector", "04/20/21, 08:09:22 AM", "Update pl.po from Transifex - fixes\r\n\r\nGreetings,\r\nGootector\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "Thank you. =||= "], ["818", "Fix function declaration in mod-script-pipe", "Ian McInerney", "imciner2", "04/23/21, 08:12:30 AM", "It was defined as taking a size_t paramater when it was written, so the declarations used to call it should also use a size_t parameter to ensure the call is correct.", "NaN"], ["820", "JACK detection broken on Linux in release 3.0.2", "Eric Hameleers", "alienbob", "05/13/21, 06:48:20 PM", "Commit https://github.com/audacity/audacity/commit/5b4cd040ebdddc943925990819ff5de6fa52d729#diff-033fedc31a5937995b8e216fecda6fe78dff2b94b39ff68d68322a9bfb2875d3 was meant to fix building on Windows but the change of 'find_package( Jack )' to 'find_package( jack )' breaks the build on Linux.\r\nWhile configuring portaudio, JACK will no longer be detected and the resulting audacity binary does not have support for JACK audio,\r\n\r\nWhen I revert that change in ./cmake-proxies/portaudio-v19/CMakeLists.txt (changing 'jack' to 'Jack') the resulting binary does again offer \"Jack Audio Connection Kit\" next to \"ALSA\" in the Audio Host dropdown.", "Triaged to Bugzilla as a P2 bug, and DEVEL-FIX-MADE there.\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2758\r\n\r\nClosing here, as we track it there rather than in multiple places.  Cross reference added. =||= "], ["821", "Project Save / Project Export doesn't work", null, "sh-si", "04/26/21, 06:52:00 PM", "**General Information**\r\nI've used audacity in the past for several years. I just installed Audacity 3.0.2 on a Windows10 pro 64bit German edition Thinkpad. Audacity was never installed on that machine before.\r\n\r\n**Describe the bug**\r\nI'm not able to save any project. Even Export as MP3 doesn't work.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Open Audacity\r\n2. Import Audio\r\n3. Load existing MP3 sequence file 405 KB\r\n4. Save as Project \r\n5. Save as window appears\r\n6. open target folder \r\n7. set save filename (without blanks in it) test.aup3\r\n8. hit save\r\n6. Project can't be saved due to not existing file... \ud83d\ude44\r\n\r\n**Expected behavior**\r\nI can save the aup3 project even from an existing mp3 import sequence.\r\n\r\n**Screenshots**\r\nSee https://forum.audacityteam.org/viewtopic.php?f=46&t=111271&p=396343&hilit=save+project+win10#p396343\r\nIt's the eaxctly same behavior as mentioned inside this forum post.\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Windows 10 64bit pro german\r\n - Version 3.0.2\r\n - Sound Device Windows WASAPI\r\n\r\n**Additional context**\r\n- I did not try to save the project inside a network folder\r\n- i tried to save it inside the documents folder (without blanks inside the path)\r\n- you can try save project OR save project as - same behavior\r\n\r\nAny help appreciated!\r\n\r\nThanks,\r\nStefan", "Just checked the Audacity protocol and realized a little popup in the lower right corner of my desktop: \"Virus & Trust Protection in Windows Security\"\r\n\r\nThe access was blocked from windows itself while save any file from audacity.exe.\r\nI adjusted the setting and everything is working again! =||= "], ["822", "Bug2759", "Paul Licameli", "Paul-Licameli", "05/02/21, 12:24:00 AM", "Bug2759: A failed macro command should not leave vacuous undo item\r", "Looks fine to me...merging =||= "], ["824", "Update pl.po from Transifex - fix", "Grzegorz Pruchniakowski", "Gootector", "04/30/21, 08:16:53 PM", "Update pl.po from Transifex - fix\r\n\r\nGreetings,\r\nGootector\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "NaN"], ["826", "Clarify Windows build.txt", "Daan Michiels", "daanmichiels", "06/16/21, 04:41:04 PM", "Fix typo in wxWidgets DLL name, and clarify release vs debug build.\r\nFix a typo in the toolset.", "Thank you.  I was going to do this - you saved me the trouble. :) =||= The build process has changed, build.txt is removed now =||= "], ["828", "Bug 2750 export multiple default metadata", null, "JohnColket", "05/03/21, 12:03:44 AM", "Bug 2750 - Export Multiple substitutes default metadata for user-entered metadata \r\n\r\nWell, this was a cherry pick if I've ever seen one.  One might think it was deliberately designed to take the defaults.\r", "NaN"], ["830", "Color scheme for spectrogram", "Myungchul Keum", "dofuuz", "06/15/21, 04:41:44 PM", "I made a post for this PR:\r\nhttps://forum.audacityteam.org/viewtopic.php?f=20&t=117875\r\n\r\nSame content, but with code for generating the colormap:\r\nhttps://github.com/dofuuz/audacity-colormap\r\n\r\n![proposal](https://user-images.githubusercontent.com/8174871/116871743-b42a5880-ac4f-11eb-8777-8423c9ced85f.png)\r\n\r\n![color-scheme](https://user-images.githubusercontent.com/8174871/116871759-bbe9fd00-ac4f-11eb-9a0d-7807776d37de.png)\r", "We're still interested in this proposal.\r\n\r\nPlease see more discussion at the Audacity Forum.\r\n =||= @Paul-Licameli\r\nRebased commit at recent upstream master branch.\r\n\r\nTBH, I'm not fully satisfied with CLA.\r\nBut I belive that commercial profit and support can boost imporvement on OSS.\r\nSo I signed at the CLA anyway.\r\n\r\nI just wish Audacity would remain free, open and be **much greater** than now. \ud83d\ude00 =||= > @Paul-Licameli\r\n> Rebased commit at recent upstream master branch.\r\n> \r\n> TBH, I'm not fully satisfied with CLA.\r\n> But I belive that commercial profit and support can boost imporvement on OSS.\r\n> So I signed at the CLA anyway.\r\n> \r\n> I just wish Audacity would remain free, open and be **much greater** than now. \ud83d\ude00\r\n\r\nAs for that, I share those hopes.\r\n\r\nI not only hope so, I expect so, from what I know.\r\n\r\nThough that is on the understanding that code of the Audacity audio editor \"remaining free\" is consistent with the possibility of a dual sub-licensing of parts of it that the CLA leaves open.\r\n =||= @Paul-Licameli Ping =||= I have not forgotten this!  I will write more today.\r\n =||= I just tested on W10 with dofuuz's latest build and I see that we now have the changed color descriptions in Spectrogram Preferences as we discussed.  Thanks for sorting that.\r\n![image](https://user-images.githubusercontent.com/50205984/121699753-7f6fb380-cacf-11eb-9826-6d0af883401c.png)\r\n =||= I tested with pure Spectrogram and with Multi-view dor the new and alternative colorways =||= Thanks, Peter.  Did you also observe the changes in Set Track Visuals?  A choice replaces what was only a checkbox for grayscale.\r\n =||= Paul, I assume you mean from the TCp - in which case yes, I have been playing with that too and all looks fine.\r\n =||= > Paul, I assume you mean from the TCp - in which case yes, I have been playing with that too and all looks fine.\r\n\r\nNo, I refer to one of the Macro commands.  See #969 \r\n =||= I'm pleased with these changes to address my points.  Each commit builds.\r\n\r\nI am satisfied too now with changes in AColor.cpp.  (I might suggest that the names in AColorResources.h could be made static, to have no linkage and spare a little space in symbol tables.)\r\n\r\nBut I do not want the change in Experimental.h.  It leaves no visual indication of sync lock in a spectrogram.  If you think this change is very important, than I think some alternative solution should be sought.  The sync lock tiles might be painted more than once (as they are in Waveform view).  They might be repainted last, with transparency.  Perhaps you fill follow up this implementation suggestion.\r\n\r\nSo to summarize:   please rebase onto most master, and omit the change to Experimental.cmake.  Then I will approve it and merge it!\r\n\r\n =||= Removing transparency from spectrogram is important fix! Without the change, new colormap gonna lose its power.\r\nI'll find if there are easy and nice fix for this situation... =||= > But I do not want the change in Experimental.h. It leaves no visual indication of sync lock in a spectrogram. If you think this change is very important, than I think some alternative solution should be sought. The sync lock tiles might be painted more than once (as they are in Waveform view). They might be repainted last, with transparency. Perhaps you fill follow up this implementation suggestion.\r\n\r\n\r\nBut even in current Audacity there is very poor visual indication of sync-lock in a spectrogram ...\r\n\r\nThe example image below was made with 3.0.2\r\n![image](https://user-images.githubusercontent.com/50205984/122001420-9c96d180-cdb0-11eb-9025-2538e946b4c3.png)\r\n\r\nThis image flatters the real-life situation\r\na) It is (at least) double real-life size - much harder to see in Audacity on-screen\r\nb) I deliberately greatly reduced the amplitude of the left half of the selction, note that in the right half of the selection in the spectrogarm track the clocks are barely visible at all.\r\n\r\nI thought we had a Bugzilla entry for this, but I can't find it.  Maybe we should be logging one ...\r\n =||= >I thought we had a Bugzilla entry for this, but I can't find it. Maybe we should be logging one ...\r\n\r\nI logged this as P3 Bug #2806\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2806\r\nSpectrogram view has poor/inadequate visual cues to show Sync-lock selection\r\n\r\nAnd remember that this is not a result of the new Spectrogram colorway - it's always been like this. =||= > Removing transparency from spectrogram is important fix! Without the change, new colormap gonna lose its power.\r\n> I'll find if there are easy and nice fix for this situation...\r\n\r\nAs your branch is now, there is no indication at all of sync lock, rather than the existing one, poor though that might be.\r\n\r\nWhy do you think removing transparency of the spectrogram is very important?  In my own trials building your branch,  I did not think it looked bad either with or without it.\r\n\r\nWould you consider merging the branch with transparency, but opening an issue to correct the problems?\r\n\r\nI see your example in \"Obstacles.\" https://forum.audacityteam.org/viewtopic.php?f=20&t=117875#p424607\r\n\r\n =||= I don't think that losing the Sync-Lock \"clocks\" in spectrogram view is a problem. Even with \"classic\" spectrogram view they are barely visible with real world audio, and imo they are little more than visual clutter when they are. Waveform view, or multi-view are far better suited to temporal editing. I'd rather have a clearer view of the spectrogram in track spectrogram view than overlaid information that is irrelevant to \"spectral\" editing. =||= ![synclock](https://user-images.githubusercontent.com/8174871/122051527-a99ed980-ce1f-11eb-8d73-1d8415d95ac8.jpg)\r\n\u2191 New color with `SPECTROGRAM_OVERLAY` transparency. Clock background on 4th track is almost not visible.\r\n\r\nTransparency makes the visual totally different from what I intended(accurate and pretty).\r\nBackground becomes brighter than some of foreground. There are some grain around black which should not appear. It means loss of accuracy.\r\nOverall color becomes desaturated. Not pretty.\r\n\r\nBringing clock overlay on top of spectrogram [like this](https://user-images.githubusercontent.com/8174871/122054382-96d9d400-ce22-11eb-9890-a7db4d253904.jpg) might be the fix. \r\nBut basically I have same opinion with @SteveDaulton. =||= If we want to keep the clocks but also make spectrogram non-transparent, then I think a solution is to draw the clocks with transparency, not the track, and paint the clocks later.\r\n\r\nIf we lose all of the clocks in spectral view, arguably that's a regression.  But maybe Steve and Peter would agree not to treat it as such.\r\n\r\nAre there examples of clocks on the spectrogram in the manual?  If so they would be one more thing to change in manual images.\r\n\r\nI think the objection that clocks are clutter for spectral editing is irrelevant.  The track that you do interact with, for spectral editing, never shows the clocks.  The clocks indicate what part of another track will be affected, if the track you do interact with changes its length with insertion or deletion.  Spectral editing doesn't do that, but other edits do.\r\n\r\n\r\n\r\n =||= > Bringing clock overlay on top of spectrogram [like this](https://user-images.githubusercontent.com/8174871/122054382-96d9d400-ce22-11eb-9890-a7db4d253904.jpg) might be the fix.\r\n> But basically I have same opinion with @SteveDaulton.\r\n\r\nHow did you do that \"like this\" picture?  Did you change Audacity source code to do it?\r\n =||= > How did you do that \"like this\" picture? Did you change Audacity source code to do it?\r\n\r\nNo. I used image editor. =||= > If we lose all of the clocks in spectral view, arguably that's a regression. But maybe Steve and Peter would agree not to treat it as such.\r\n\r\nIt's not really our call any more - But I would certainly be happy with the way it si now with the closcks invisible on the spectrogram (I agree with Steve's views above that  \r\na) they've been largely unvisible on Soectrograms anyway and \r\nb) other views are better for temporal editing)\r\n\r\nSo if MUSE QA and RM agree (Dmitry, Martin, Jouni) I would vote for this - and this would then let me close P3 Bug 2806.\r\n\r\nAs far as I can recall no user has ever complained about the clocks on Spectrograms - porr visibiliy of or lack thereof.\r\n =||= I would leave bug 2806 open.  But we need to get a release out very soon, and these new colors will be a banner feature, and I don't want this detail to block it.\r\n\r\nMaybe Myungchul will even write the fix easily.  I outlined how we might to do it.  Repaint the clocks, after the spectrum, making the clocks the transparency.\r\n\r\n =||= ![image](https://user-images.githubusercontent.com/8174871/122081263-ed9ed800-ce39-11eb-99a4-09727c22429f.png)\r\n\u2191 In development screenshot, Left: Light theme, Right: Dark theme\r\n\r\nFortunately, It seems like the fix is not hard to implement.\r\nI'll push commit after some cleanup in couple of days. For now, I have to sleep\ud83d\ude34\r\n\r\nTo adjust color and transparency of clock overlay, we need to edit theme image. I won't do this.\r\nI think the clock should be gray, 50% transparent. =||= Thanks for trying the clocks dofuuz, but from a user perspective I would much prefer to NOT have the clocks.\r\n\r\nWhen using track spectrogram view and Sync-Lock, I would have to temporarily turn off Sync-Lock to remove the distraction of the clocks. That's more work for the user, and a needless distraction from their workflow. The user can already see if Sync-Lock is on by looking for the clock in the control panel on the left hand end of the track - which is how users have had to work (with zero complaints) when using the \"classic\" spectrogram color scheme.\r\n\r\nWith QA hat on, usability trumps consistency. Now that I can see what it looks like with the new color scheme + clocks (thank you), I would say that it is significantly worse than not having the clocks showing in spectrograms.\r\n\r\nSteve =||= Thank you, Steve.\r\n\r\nYou have a strong opinion about the clocks.  I do NOT have a strong opinion about them -- which is why I brought the matter up:  in the absence of strong opinions, the presumption should be conservatism about the application's behavior, changing only what one needs to change for the really new feature.\r\n\r\nIn this case, hiding the clocks was not the intention of the feature, but a side-effect of trying to achieve something else, the non-transparency that improved spectrogram appearance.\r\n\r\nHowever, given your remarks now,  I find no reason left to delay the merger of this pull request.  If someone really wants to overrule the elimination of the clocks, let them raise an issue.\r\n\r\n\r\n =||= Merged!\r\n\r\nThe residual issue about the clocks -- if anyone insists on keeping them -- is already at: https://bugzilla.audacityteam.org/show_bug.cgi?id=2806\r\n =||= Great\ud83d\ude06\r\nWe can implement sync-lock overlay later, if there are anyone complain about it. =||= dofuuz, do you wish to be listed in the Credits dialog of the next version?  If so, how exactly should we spell your name?  (In Hangul too if you like.)\r\n =||= @Paul-Licameli \r\nYes. List me as\r\nMyungchul Keum\r\nThanks\ud83d\ude06 =||= I have updated the Website Credits page adding Keum to the \"Contributors\"\r\nhttps://www.audacityteam.org/about/credits/\r\n\r\nI cannot update the in-app credits.\r\n\r\nThanks for your work on this Keum/dofuuz   \ud83d\ude06 =||= Please help, we want to be sure that it is correct to alphabetize that under K and not M!\r\n =||= Keum is my family name. =||= Thanks for that clarification dofuuz ( Myungchul)  - I have adjusted that ordering in the Website credits:\r\nhttps://www.audacityteam.org/about/credits/\r\n\r\nTh latest 3/.0.3 alpha already has the correct alphabetic ordering.\r\n\r\nPeter.\r\n\r\n =||= "], ["833", "Update pl.po from Transifex", "Grzegorz Pruchniakowski", "Gootector", "05/04/21, 09:15:51 AM", "Update pl.po from Transifex\r\nA lot of improvements\r\n\r\nGreetings,\r\nGootector\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "Thank you very much for this. =||= "], ["834", "Different GUI candidates, possible proaudio-oriented", null, "nick87720z", "05/11/21, 03:50:26 PM", "**Related problems**\r\n- WxWidgets itself is rather meta-gui, using other system GUI with different look. Not all devs like that. At least some apps, like Carla by falktx and MuseScore installers include own qt engine (with so called 'pro' style, both in dark and light versions) to unify look. Also (may be just opinion to me), that it makes impossible or ugly some solutions, easily doable at Qt and GTK.\r\n- Another issue is with GTK itself, used as backend in linux. GTK is not more independent of gnome. It's not more secret that gnome is not interested in gtk usage outside of gnome.\r\n- Qt... well, both Qt and GTK are somewhat heavy for resource usage. And that's not just opinion from internet, at least my opinion matches to that.\r\n- JUCE - perhaps it's technically nice, but I remember there were some hidden telemetry, and some reliability issues with developer.\r\n\r\n**Solution**\r\nThere is at least one proaudio-oriented gui toolkit. RobTK by x42 (Robin Gareus) is used for its own plugins, many of which are cross-platform and compile not only as lv2 plugins, but also as standalone apps. Which means for me,  robtk is not restricted for lv2 plugins only. RobTK uses pugl (opengl canvas by David Robillard, initially created for patchbays). I still don't know, if it involves gtk runtime ever though, so I certainly have to try it my self.\r\n\r\n**Alternatives**\r\nAnother alternative could be NTK, which is forked from fltk but using cairo. As far as I know, NTK was first used in non stuff, then utilized in zynaddsubfx. Other uses are unknown to me. I'm not sure though, how good is it comparing to robtk - as it supports opengl, but only for custom, explicit use\r\n\r\n**Additional context**\r\nThis paragraph could be im problems list too, but imho too big.\r\nI found mentions of some destructive activities, originating from gnome since gnome3, and now paralysing all the freedesktop part (it's not secret that gnome and freedesktop have same benefactors, and fd standards are mostly tuned for gnome needs) - mentioning of some issues may be cause for ban (like overengineering problem). Of course I have seen little of this, but from what I see in gtk - slow removal of low-level style control API (below css), inability to disable double buffering in windows. Moving to complete alternative could bye some time until fd is either stabilized, contained or purged.\r\nEven for writing own gui from scratch - there are cross-desktop windowing toolkits, like sdl, glut and gdk.", "I am gonna go ahead and ask this one be closed.\r\n\r\nThe OP seems to be under the misconception that the needs of \"pro audio\" applications are sufficiently different from other GUI's that they need their own framework. This is naive, as there is little difference between the rendering pathway of an audio application and any other GUI. \r\n\r\nThe OP also seems to be requesting that the UI toolkit used be changed to allow it to be \"prettier\", without recognizing that most of the application would need to be rewritten from the ground up, and that changing toolkit does not automatically fix the problem of how the application looks. \r\n\r\nThe OP also seems to conflate stand alone applications and plugins several times in their post, which have very different requirements for rendering. Namely plugins are provided a restricted rendering context from their host, meanwhile standalone applications are provided no rendering context at all and need to figure out how to create a window on the system themselves.\r\n\r\nFormal Request for closure. =||= Playing extrasence,  oohhkaaayyy...\r\n\r\n> The OP seems to be under the misconception that the needs of \"pro audio\" applications are sufficiently different from other GUI's that they need their own framework.\r\n\r\nIncorrect.\r\nI would gladly prefer such toolkits for any other apps as well :) Its just application issue, making higher requirements for them.\r\n\r\n> The OP also seems to be requesting that the UI toolkit used be changed to allow it to be \"prettier\", without recognizing that most of the application would need to be rewritten from the ground up, and that changing toolkit does not automatically fix the problem of how the application looks.\r\n\r\nMissed.\r\nLook is not reason:  it's not problem to reproduce x42, kokkinizitta, blender of whatever-you-like look-and-feel in gtk/qt css.\r\n\r\n> The OP also seems to conflate stand alone applications and plugins several times in their post, which have very different requirements for rendering. Namely plugins are provided a restricted rendering context from their host, meanwhile standalone applications are provided no rendering context at all and need to figure out how to create a window on the system themselves.\r\n\r\nERR: x42-plugins do standalone well.\r\nBigger application scale only emphasizes requirements for GUI toolkits.\r\nIt's smaller/simpler UI's, where performance issues are hard to notice.\r\n\r\nNTK is just modified FLTK, in ZynAddSubFX it has very complex layouts - enough hard to be proposed everywhere, not just proaudio.\r\n\r\nCorrection: I would exclude RobTK proposal until I'm sure it got some standard dialogs and enough widget diversity for wide use. Perhaps Nuklear, also based on PuGL, could concur it.\r\n\r\nOne more reason for this issue:\r\nI proposed this all after got news about audacity movement to Muse group, which I assumed means rewrite in qt. =||= I mean you raise some interesting points. If NTK is so similar have you considered swapping the build deps over and replacing the includes?\r\n\r\nYou idea would be a lot more compelling if you were coming across with even a partially working proof of concept. Would really help get a handle on what your ideas will help fix, and what extra work is needed. =||= Maybe we should write a new audio editor in Rust and QML :laughing:  =||= Unless its planned to anyway rewrite at something other than wxWidgets, my proposal would make no sence.\r\n\r\n> Maybe we should write a new audio editor in Rust and QML\r\n\r\nThat's case, for which I wrote it. Above rewrite could fall is same category as WIP cinelerra-gg rewrite to gtk, called Luimia.\r\nI forget one thing, btw. Many devs are upgrading their gui for direct wayland support. If this is imporant, than list of possible candidades may seriously shrink, excluding even NTK. Otherwise I could propose one more candidade - cinelerra-gg gui.\r\n\r\nI guess, no need to present what cinelerra-gg is. If complete rewrite is ever considered, cinelerra could be just used for base, getting audacity-specific features - anyway yeah, it would be something completely new. I wish I could ever join this party before its obsolete. =||= > Maybe we should write a new audio editor in Rust and QML laughing\r\n\r\nI would vote for Rust and GTK. Qt's open source future is sorta on the rocks atm =||= This is a feature request to use NTK or RobTK.  Any porting effort to a new toolkit is a big step, and realistically will actually be decided by Muse.  Realistically Muse porting to Rust (great though Rust is) or NTK or RobTK is extremely extremely unlikely, so keeping this issue open is no use at all in progressing Audacity, so I am closing it.\r\n\r\nAside: @IGBC Yep, Qt's open source future is sort of dodgy at the moment.  \r\n\r\n  =||= "], ["835", "Basic telemetry for the Audacity", "Dmitry Vedenko", "crsib", "05/09/21, 08:27:00 PM", "Please, see our response:\r\n\r\nhttps://github.com/audacity/audacity/discussions/889\r\n\r\n---\r\n\r\nDear all,\r\n\r\nDue to the large amount of worry about this PR, (which we completely understand), we want to clarify exactly what is going on:\r\n\r\n1. Telemetry is **strictly optional and disabled by default**. No data is shared unless you choose to opt-in and enable telemetry.\r\n2. Telemetry only works in the builds made by GitHub CI from the official repo (the telemetry URLs are only defined there). \r\n3. If you are compiling Audacity from source, we will provide a CMake option to enable the telemetry code. This option will be turned **off** by default.\r\n\r\n![image](https://user-images.githubusercontent.com/2660628/117440186-6312b100-af3c-11eb-884e-3db660a0cc1f.png)\r\n\r\n**Why have telemetry at all?**\r\n\r\nEssentially, it\u2019s to help us to identify product issues early:\r\n\r\n1. Audacity is widely used across several platforms, but we have no information on the application stability.\r\n2. It is difficult for us to estimate the size of the user base accurately.\r\n3. We need a way to make informed decisions about which OS versions to support. For example, can we raise the minimum version of the macOS to 10.10 to update the wxWidgets to the latest version?\r\n4. We have a known issue with the new file format introduced in Audacity 3.0. We found it with the great help of the community members on our forum. However, there is no way for us to estimate the impact of these issues on users. Is it just a random case? Do we need to rush the work on the recovery tool or help the users one by one? Or do we need to rethink the file format to make it safer and more easily recoverable?\r\n\r\nRegarding the concerns about the choice of providers:\r\n\r\n1. We do not incorporate cross-site tracking, limiting the ability to identify the user by both Google and Yandex.\r\n2. Yandex would only receive the \u201capplication opened\u201d event to help us estimate the size of the user base.\r\n3. Google would only receive:\t\r\n    a. Session start and end events;\r\n    b. Errors for debugging;\r\n    c. File formats used for import and export;\r\n    d. OS and Audacity versions;\r\n    e. Use of effects, generators, and analysis tools to prioritize future improvements;\r\n4. We will consider replacing Google and Yandex with another service if we find one that fulfills our requirements - thanks for the suggestions and keep them coming.\r\n\r\n\r\nJust to reiterate, **telemetry is completely optional and disabled by default**. We will try to make it as clear as possible exactly what data is collected if the user chooses to opt-in and enable telemetry. We will consider adding the fine-grained controls that some of you have asked for.\r\n\r\n---\r\n\r\nAlso:\r\n\r\nTo address the concerns about use of private library versions, the largest part of this pull request is a networking layer built on top of **libcurl**. This library is chosen as it is an industry-standard for cross-platform networking. It is exceptionally tested and reviewed by industry experts. The layer on top of it, aka `lib-network-manager` meant to simplify the development of future features. **libcurl** is used without any patches. It is possible to use the system-provided version of the library available on the Linux distributions, and we will double-check that this works as expected.\r\n\r\n---\r\n\r\nOriginal PR description:\r\n\r\nThis request provides the basic telemetry for Audacity.\r\n\r\nTo implement the network layer libcurl is used to avoid issues with the built-in networking of the wxWidgets.\r\n\r\nUniversal Google Analytics is used to track the following events:\r\n\r\n* Session start and end\r\n* Errors, including errors from the sqlite3 engine, as we need to debug corruption issues reported on the Audacity forum\r\n* Usage of effects, sound generators, analysis tools, so we can prioritize future improvements.\r\n* Usage of file formats for import and export\r\n* OS and Audacity versions\r\n\r\nTo identify sessions we use a UUID, which is generated and stored on the client machine.\r\n\r\nWe use Yandex Metrica to be able to correctly estimate the daily active users correctly. We have to use the second service as Google Analytics is known to have some really tight quotas.\r\n\r\nBoth services also record the IP the request is coming from. \r\n\r\nTelemetry collection is optional and configurable at any time. In case of data sharing is disabled - all calls to the telemetry Report* functions are no-op.\r\n\r\nAdditionally, this pull request comes with a set of libraries to help the future efforts on Audacity.\r\n\r\n\r", "VERSION was renamed to VERSION-* due to issues with the XCode 12.5.\r\n\r\nThe same reason stands for raising minSDKVersion on macOS to 10.9 =||= New libs need COPYING files (or equivalent) to state their license.\r\nNew libs need to be listed with their licenses in the top level README.txt file. =||= > New libs need COPYING files (or equivalent) to state their license.\r\n\r\nThreadPool has COPYING, libcurl is downloaded in a similar way to the wxWidgets.\r\n\r\n> New libs need to be listed with their licenses in the top level README.txt file.\r\n\r\nBoth libraries are now added to REAMDE.txt\r\n =||= What's the status on lib-string-utils, lib-uuid, lib-timer, lib-telemetry Dmitry?\r\n\r\nE.g. if they are entirely ours, are they \"GPL2 or later\" or MIT or something else?  Maybe that just needs a comment in README.txt to say that /libraries is under same license as /src ?\r\n\r\nSeparately, now assuming these are all ours, the class files will need the /****  and \\class \\brief style of doxygen comments, so that doxygen https://doxy.audacityteam.org/annotated.html will include these classes.  Probably the doxygen .dox.in file needs to be updated to include /libraries too. =||= > E.g. if they are entirely ours, are they \"GPL2 or later\" or MIT or something else? Maybe that just needs a comment in README.txt to say that /libraries is under same license as /src ?\r\n\r\nWill do. The list of internal libraries will be further extended as part of @Paul-Licameli future work.\r\n\r\n> Separately, now assuming these are all ours, the class files will need the /**** and \\class \\brief style of doxygen comments\r\n\r\nSure, no problem.\r\n\r\n =||= > New libs need COPYING files (or equivalent) to state their license.\r\n> New libs need to be listed with their licenses in the top level README.txt file.\r\n\r\nIs this also pertinent to pull request #836 ? https://github.com/audacity/audacity/pull/836\r\n =||= I'm trying to verify that each commit in the sequence is buildable for me, on my MacBook at least.  I fail at the first one:\r\n\r\necho \"Performing update step for 'curl'\"\r\nPerforming update step for 'curl'\r\ncd /Users/paullicameli/GitHub/audacity/build/cmake-proxies/libcurl/libcurl/src/curl && /Applications/CMake.app/Contents/bin/cmake -P /Users/paullicameli/GitHub/audacity/build/cmake-proxies/libcurl/libcurl/tmp/curl-gitupdate.cmake\r\necho \"Performing configure step for 'curl'\"\r\nPerforming configure step for 'curl'\r\ncd /Users/paullicameli/GitHub/audacity/build/cmake-proxies/libcurl/libcurl/src/curl-build && /Applications/CMake.app/Contents/bin/cmake -DCMAKE_INSTALL_PREFIX=/Users/paullicameli/GitHub/audacity/build/cmake-proxies/libcurl/libcurl -DHTTP_ONLY=On -DBUILD_CURL_EXE=Off -DCMAKE_USE_SECTRANSP=On -GXcode /Users/paullicameli/GitHub/audacity/build/cmake-proxies/libcurl/libcurl/src/curl\r\n-- The C compiler identification is AppleClang 12.0.0.12000032\r\nCMake Error at CMakeLists.txt:48 (project):\r\n  No CMAKE_C_COMPILER could be found.\r\n\r\n\r\n\r\n-- Configuring incomplete, errors occurred!\r\nSee also \"/Users/paullicameli/GitHub/audacity/build/cmake-proxies/libcurl/libcurl/src/curl-build/CMakeFiles/CMakeOutput.log\".\r\nmake: *** [/Users/paullicameli/GitHub/audacity/build/cmake-proxies/libcurl/libcurl/src/curl-stamp/Debug/curl-configure] Error 1\r\nCommand /bin/sh failed with exit code 2\r\n =||= The commit dc7c7368f7bb9e40772cae271648edc8607ec254 \"Fixes XCode 12.5 build\" still doesn't fix my build.  I'm using XCode 12.4 and macOS 10.15.6.  Are you increasing the minimum needed for builds?\r\n\r\nIf this commit \"Fixes\" the build, that suggests to me that not all of the previous commits were buildable for you even on 12.5.  Can you permute this list of commits so that each step is sure to build and run?\r\n =||= > If this commit \"Fixes\" the build, that suggests to me that not all of the previous commits were buildable for you even on 12.5. Can you permute this list of commits so that each step is sure to build and run?\r\n\r\nOnly XCode 12.5 was broken, 12.4 worked fine, as obviously 12.3 does (as build succeeds on CI). \r\n\r\n12.5, however, won't be able to build Audacity master as well.  \r\n\r\nI'm not sure if force push will be a great idea now, as Anton has already started working from this branch. However, if you are worried about bisect in the future - we can do a squash merge. This will be less time-consuming and much safer.\r\n\r\nCan you please post the full error? From the CMakeOutput.log? I'm not able to reproduce it with the clean build and everything builds fine with GitHub Actions. Usually, `No CMAKE_C_COMPILER could be found` means some environmental problems.\r\n\r\n =||= I think some interactive rebasing to simply this commit history would be useful.\r\n\r\nAs I have said, don't squash everything into a big commit, rather, do leave logical steps of the project in place for easier review and possibly later bisection for debugging.  But don't leave a record of mistakes and corrections made during development.  Squash the small corrections.\r\n\r\nWhat requires the macOS deployment target minimum to increase from 10.7 to 10.9?  If the XCode minimum to build also increases, then what is forcing that?  Explain these things prominently in commit comments.\r\n\r\nYou introduce the libraries folder, which I also want to do in my misc-modules branch.  Are we agreed that:  each sub-folder of libraries builds one library, which Audacity depends on?  Each of these is (for now) shared?  (Though I might in future want to make certain of them static instead.)  Where should the compiled libraries be copied?  (In my branch they simply go into the folder with the executable file.)\r\n\r\nAnd the code in libraries is always \"ours\", whereas anything in lib-src is only third-party code plus only small patches of ours that we must apply.  Yes?\r\n\r\nAbout white space preferences,  I don't want to expend much time on those, but I do find it a little odd to see a space between a function name and the left parenthesis.  I prefer to leave the space before the parenthesis only for if, for, and while.\r\n\r\n\r\n\r\n\r\n =||= > I think some interactive rebasing to simply this commit history would be useful.\r\n> \r\n\r\nAt this point, force-pushing will break the day for another developer. Rebasing into a fully compilable and runnable set of commits will be very time-consuming. So if you are concerned about bisecting the master - we can squash the request or create a merge commit.\r\n\r\n> What requires the macOS deployment target minimum to increase from 10.7 to 10.9? If the XCode minimum to build also increases, then what is forcing that? Explain these things prominently in commit comments.\r\n\r\nIf we want to support developers running newer XCode versions and/or M1 hardware - we need to increase the target, because compiling for 10.7 and 10.8 is no longer supported. It is possible to take the Xcode version and host system into account and configure it on this basis if we think that is critical to stay on 10.7, but I recall you wanted to raise min SDK version as well.\r\n \r\n> You introduce the libraries folder, which I also want to do in my misc-modules branch. Are we agreed that: each sub-folder of libraries builds one library, which Audacity depends on? \r\n\r\nYes.\r\n\r\n> Each of these is (for now) shared? \r\n\r\nYes.\r\n\r\n> Where should the compiled libraries be copied? (In my branch they simply go into the folder with the executable file.)\r\n\r\nThis is system-dependent. Currently, on macOS, they will be placed into the Frameworks directory.\r\n\r\n> And the code in libraries is always \"ours\", whereas anything in lib-src is only third-party code plus only small patches of ours that we must apply. Yes?\r\n\r\nYes.\r\n\r\n\r\n**Just to clarify the situation with XCode 12.5:**\r\n\r\nIt was released last week (Apr 26) and breaks the Audacity build. There are two major issues: \r\n\r\n1. Looks like we cant compile for 10.7 anymore\r\n2. We need to force CMake to use the legacy build system.\r\n\r\n =||= > > I think some interactive rebasing to simply this commit history would be useful.\r\n> \r\n> At this point, force-pushing will break the day for another developer. Rebasing into a fully compilable and runnable set of commits will be very time-consuming. So if you are concerned about bisecting the master - we can squash the request or create a merge commit.\r\n\r\nI think what I suggested is a good rule for topic branches that are the work of one person.  I do this sort of interactive rebasing of my own work in progress often, and I don't find it very time consuming.  But collaboration with someone else does make force pushes difficult, that is true.\r\n\r\n> \r\n> > What requires the macOS deployment target minimum to increase from 10.7 to 10.9? If the XCode minimum to build also increases, then what is forcing that? Explain these things prominently in commit comments.\r\n> \r\n> If we want to support developers running newer XCode versions and/or M1 hardware - we need to increase the target, because compiling for 10.7 and 10.8 is no longer supported. It is possible to take the Xcode version and host system into account and configure it on this basis if we think that is critical to stay on 10.7, but I recall you wanted to raise min SDK version as well.\r\n\r\nI'd like to use C++17.  You say developing on M1 also requires it.\r\n\r\nThe increase of the minimum supported version is not strictly necessary, though, to make telemetry work in the product.  Is that right?\r\n\r\nSo it's still not strictly needed to abandon 10.7 and 10.8 for that reason.  Still I hope that affects only a small minority of users.\r\n\r\n =||= > and I don't find it very time consuming\r\n\r\nRebasing is quick and fun :-) But in this case, it will be more of `git reset --soft` and then checking every commit against the CI. I hope that in the future we won't have the feature branches of this size. Strictly speaking - this branch should be divided into like 5 different branches merged one by one, each for a library. The problem, however, that `lib-telemetry` is the main consumer of the functionality included in the other libraries now.\r\n\r\n> Is that right?\r\n\r\nThat's right. I can implement a set of checks in the CMake that will set the `CMAKE_OSX_DEPLOYMENT_TARGET` based on the version of XCode and the host hardware.\r\n\r\nAFAIK 10.7 and 10.8 stand for less than 0.5% of the macOS install base, that is hard to say how many Audacity users are on this versions.\r\n\r\n =||= \r\n> AFAIK 10.7 and 10.8 stand for less than 0.5% of the macOS install base, that is hard to say how many Audacity users are on this versions.\r\n\r\nThink of some statistic we might want to know about the users -- and now we might write code to collect just that information!  (If they opt in)\r\n\r\n(I'm not suggesting we necessarily build 3.0.3 for 10.7 still, just so collect the hard data on just how few really use it, and only then decide to abandon 10.7.)\r\n\r\n\r\n =||= > > and I don't find it very time consuming\r\n> \r\n> Rebasing is quick and fun :-) But in this case, it will be more of `git reset --soft` and then checking every commit against the CI. I hope that in the future we won't have the feature branches of this size. Strictly speaking - this branch should be divided into like 5 different branches merged one by one, each for a library. The problem, however, that `lib-telemetry` is the main consumer of the functionality included in the other libraries now.\r\n\r\nThose five little branches would add the lib-* one at a time, bottom up?  That might be less overwhelming to review.\r\n\r\nThe stuff in lib-* is all your work, not copied from elsewhere?\r\n\r\nI can't see yet in his fork how much work Anton has done with dependency on your branch, which is why you don't want to force commit.\r\n =||= > Those five little branches would add the lib-* one at a time, bottom up? That might be less overwhelming to review.\r\n\r\nYep. But the most of the code is in lib-network-manager still\r\n\r\n> The stuff in lib-* is all your work, not copied from elsewhere?\r\n\r\nIt is mine, no 3d party code there =||= I know me leaving a comment is not going to stop this feature being included in Audacity, but I want to voice my opposition to this change anyway. Feel free to ignore me if my opinion is inconvenient to you.\r\n\r\nI've never contributed to Audacity, and haven't really engaged in the development of the project before. I have however used audacity for various audio editing tasks for the better part of a decade. And while I welcome the prospect of new development, and the project getting some of the updates it deserves, I am concerned about the use of analytics, from a principled stand point.\r\n\r\nWe live our lives in a world where virtually every movement we make online, and many of the movements we make in the real world are subject to surveillance and tracking. It has been normalised to the point where the majority of people just put up with it, or don't question its usage.\r\nFundamentally tracking and analytics are about a power imbalance between the people doing the tracking and the people being tracked on. Yes, I understand that this is opt-in, but that is how a lot of things started, and how they become normalised to the point where a lot of applications and websites _don't_ ask for permission first. Worse, because a lot of users have been conditioned to think that tracking is normal, many will just press \"ok\" or \"yes\" to make an annoying dialog go away, not fully realising what they are consenting to. Consent based on incomplete data is not truly consent.\r\n\r\nAs I said, I am very happy to see that Audacity is getting some love and attention from a design perspective. I'm excited to see how the project can be improved. But I am worried about the use of analytics, especially using large data mining companies (Google & Yandex) as a platform to do so. If you want to know what your users think about something, ask us. Ask us directly and out in the open. Don't spy on us.\r\n\r\nThank you for reading. =||= Is telemetry opt-in only or do users have to disable it manually once they update to the next release? =||= I agree with @spacekookie. I don't think these kinds of data collection are actually very helpful. The Mixxx website had Google Analytics for years and in practice it never changed a decision we made. If you're going ahead with this, I think you owe it to users to explain in specific terms (not some vague \"this will help us improve Audacity\") what you are planning to do with this data and how it is going to help users. You can get the information you need to improve Audacity by listening to what users already say and watching them use the software in usability tests.\r\n\r\nAs a harm reduction measure, I suggest to use a service that Audacity hosts. Collecting data about Audacity users is one thing and sending that data to Google and Yandex is another. I would feel deceived if I thought I was opting into sending data to the Audacity developers and later found out it was also going to Google and Yandex.\r\n\r\nI also suggest to guard this with a CMake option that defaults to `OFF`. I suspect some Linux distributions will want to build without this. Like users, packagers should have to specifically opt into this. =||= Also, you may want to think about the GDPR, Google isn't known for respecting it... And although it only applies to \"personal information\", the definition of it isn't really precise, and an IP may be considered \"personal info\".\r\n\r\nPS: I'm no lawyer, that's why I used conditional... [Other people](https://github.com/audacity/audacity/pull/835#issuecomment-833852063) down below pointed out that IP is in fact a personal information, by law. =||= Google is a monopoly and a bad actor and I do not want their spyware in Audacity. Please do not include it in any form. I've spent more time than I care to account for trying to divest from Google and I don't want to have to worry that Audacity is funneling data about me to them when I listen to or work with music tracks. I will simply stop using it.\r\n\r\nTelemetry isn't that useful anyway. It's certainly not useful enough to justify selling out users to a very large surveillance company, in my view. Please remove it completely. =||= I'm just some rando, but I've been using Audacity for at least a decade at this point, for everything from school assignments to experimental art. I will find something to replace it if this is merged.\r\n\r\nGetting information about users would be more ethically conducted via a survey of some sort, linked to from the startup modal, ideally with a fully-qualified URL and hosted by a site without tracking. At the very least then there would be more transparency for the user about who is collecting one's information, how, and what of that information is received by Audacity developers. This could even be done - albeit with less automation - by linking to a forum thread whose sole purpose is to retrieve user feedback. The first post could explain the thread and provide a template for what information the developers would most like to have. =||= Telemetry won't tell you if users like the software or wish for a new feature. It only tells them they've been subjected to economic surveillance in an economic manner, and not even a decently useful one. Let's face it: telemetry is useless. By its nature, it can't bear any context information, as the telemetry to read a user's mind is yet to be found. (A quest which hopefully never succeeds.) \r\n\r\nHow comes that other successful open source software never had any use for analytics? Blender, Inkscape, GIMP... afaik none of them utilitized Google or Yandex or any other corporate surveillance service and they're doing great without. Some out-of-the-box thinking which innovative companies claim to be good at is probably what's required here. =||= in addition to all the above comments, i'd like to point out that mandating telemetry may hurt people with any issues related to connectivity. i hope you make this opt-in(and not google! google is terrible with privacy. look into ethical alternatives to data analytics!), rather than opt-out. don't spy on your users. let them tell you things. =||= Audacity is wonderful software. It is great, because it works well at what it does. Sending surveillance data to third-party companies is not part of that. If you want to collect data, please save it locally, without Google or other intermediaries, and ask when you want to send it, giving me the option to inspect it beforehand.\r\n\r\nEven better: Allow me to enable recording my actions in a typical use-case and send you exactly this data as usage scenario. That way you get self-curated data which is much more useful for improving audacity, and you avoid selling our privacy to surveillance companies. =||= I guess we can learn from the past of where musecore did also having a backlash for implementing telemetry. Since Audacity now is part of mu.se group, its inevitable. (https://musescore.org/en/telemetry)\r\n\r\n But yes... make it opt-in option and if possible, please give an option to disable to this feature in build/make parameter too. =||= It is quite concerning that this comes so soon after the announcement regarding Muse Group. I was excited to learn that Audacity was getting attention on its design, but this makes me concerned about what other questionable changes are coming for Audacity in the future. =||= We need a community fork without telemetry and using a different branding, so, as soon as Muse Group implements more ~~privacy-abusing~~ people-abusing features, or decides to simply make Audacity proprietary, development can continue independently. =||= There are two separate issues:\r\n1. Telemetry itself;\r\n2. The sharing of user data with Google Analytics, Yandex or other third-party for-profit ad-oriented companies.\r\n\r\nWhile telemetry itself is sometimes included in libre software (as explicit opt-in), I don't believe piping user behavior data into Google Analytics et al is a widespread practice in well-known free software projects yet. (I _may_ be totally wrong and other projects may already be doing this, but at least the explicit opt-in popups that I have seen as a user didn't mention Google Analytics).\r\n\r\nI suspect that GDPR-wise this might be an interesting legal problem not only for Audacity but for Linux distributions as well.\r\n\r\nPlease manage the telemetry data yourself instead, without using Google Analytics (perhaps by using self-hosted open-source tools).\r\n\r\nAnd make it opt-in, with clear consent (GDPR, again). =||= > or decides to simply make Audacity proprietary\r\n\r\nLet's not get hyperbolic here. Audacity is licensed under the GPLv2. Nobody can make it proprietary. =||=  > Let's not get hyperbolic here. Audacity is licensed under the GPLv2. Nobody can make it proprietary.\r\n\r\nif muse group holds the license to all the code, they can simply not release future versions under the GPL. the existing code would exist, but the other code wouldn't be GPL licensed. =||= > Universal Google Analytics is used to track the following events:\r\n    Session start and end\r\n    Errors, including errors from the sqlite3 engine, as we need to debug corruption issues reported on the Audacity forum\r\n    Usage of effects, sound generators, analysis tools, so we can prioritize future improvements.\r\n    Usage of file formats for import and export\r\n    OS and Audacity versions\r\n\r\nPlease make each of these categories of information easy for the user to individually opt into with separate checkboxes. A simple \"send information to Audacity developers\" option is not sufficient for informed consent or giving users meaningful choices to make about their privacy. I personally would be fine telling Audacity developers what effects, OS, and Audacity version I am using, but I am not comfortable telling you when I am using Audacity. That feels invasive and you don't need to know that.\r\n\r\nAlso, please explain directly in the user interface where these options are toggled how sending each of these pieces of information to the Audacity developers will benefit users sending the information, for example, \"Telling us what operating system you are using helps us prioritize which operating systems to keep Audacity compatible with.\" =||= > Also, you may want to think about the GDPR, Google isn't known for respecting it... And although it only applies to \"personal information\", the definition of it isn't really precise, and an IP may be considered \"personal info\".\r\n\r\nIP **is** a personal data [according to the GDPR](https://ec.europa.eu/info/law/law-topic/data-protection/reform/what-personal-data_en):\r\n\r\n> Examples of personal data\r\n>\r\n> \u2026\r\n> an Internet Protocol (IP) address;\r\n> \u2026\r\n\r\n(See also this [working party document](https://ec.europa.eu/justice/article-29/documentation/opinion-recommendation/files/2007/wp136_en.pdf), page 16.)\r\n\r\nWhen it comes to Google Analytics, it\u2019s a no-brainer: if the user has a Google account and has been connected to the account on the same IP address Audacity is used, there will likely to be a match (depending on the number of users having the same IP, and/or sharing the device).\r\n\r\nThat said, if Audacity maintainers want to do telemetry:\r\n- you\u2019re by law required to make it opt-in, at least for European users;\r\n- there are open source and/or self-hosted alternatives you should consider:\r\n  - https://matomo.org\r\n  - https://umami.is\r\n  - https://plausible.io\r\n  - https://usefathom.com\r\n  - https://simpleanalytics.com\r\n  - https://ackee.electerious.com\r\n  - https://github.com/milesmcc/shynet\r\n  - https://chiffre.io\r\n- make sure your privacy policy:\r\n  - receives the attention it deserves;\r\n  - is explicit about what you track and what it enables;\r\n  - states that the collected data are publicly accessible, because it\u2019s open software. =||= > This request provides the basic telemetry for Audacity.\r\n\r\nIf you audaciously add this I'm going to have to fork Audacity and remove it again. =||= Please post screenshots with your pull requests when you propose to change the GUI to make it easier for users to give feedback on the design, especially considering you require a forked version of wxWidgets which makes it cumbersome to build Audacity locally. =||= As a long time user, I'm really struggling to see why you'd want to add telemetry. First, it's going to Google, which is kinda againsty the FOSS (free and open-source software) philosophy, and second, what is that going to help you with? Audacity managed to be the best FOSS sound editing software you can get, with a lot of features, and without a bit of telemetry.\r\n\r\nIf your goal is to provide a good piece of software to the FOSS community, then listen to the community instead of selling it to Google, and \"trying to figure out what they want\" based on some numbers in a chart. =||= Are users able to see the data that is collected or is that only available to a few Audacity developers? =||= I am concerned for the direction of the project if the maintainers are considering incorporating telemetry, of all things. =||= @Be-ing \r\n> Let's not get hyperbolic here. Audacity is licensed under the GPLv2. Nobody can make it proprietary.\r\n\r\nNot necessarily, it depends on whether the copyright of code and contributions is owned entirely by the developers/authors, or not. Contribution agreements play an important role on whether you can take a GPL'd software proprietary or not.\r\n\r\nThis article explains different cases: https://wpandlegalstuff.com/taking-gpld-code-proprietary/ =||= One suggestion: make it clear in the permission dialog that telemetry uses Google Analytics rather than a private service you host yourself. This may be particularly of note to users who are covered by GDPR regulations. =||= > Is telemetry opt-in only or do users have to disable it manually once they update to the next release?\r\n\r\nIncluding it in the first place (opt-in or opt-out) is the problem. Changing the default down the road is just too tiny a change (and maybe too tempting not to do it).\r\n\r\nThis should not be included at all.\r\n =||= Some users are going to be upset if you merge any form of telemetry whatsoever. Personally, my respect for Audacity would increase if you really take the feedback here to heart, put in the work to switch to a self-hosted server, and work with us to make the GUI design very specific and clear so users can easily make informed decisions about their privacy. I think you will get more complete and useful data if users feel they can trust you with it.\r\n\r\nEDIT: My [opinion has changed](https://github.com/audacity/audacity/pull/835#issuecomment-834969949). =||= Is there a specific issue or request that this PR addresses? I'm not seeing any reference here to the usual discussion a major change like this would usually require. =||= The commit stats on this are amazing to me:\r\n\r\n> +5,506 \u221225 \r\n> Commits 29\r\n> Files changed 92\r\n \r\n5,506 lines of code inserted to implement telemetry that should not be in there. That is a substantial amount of code that certainly contains dozens of bugs and likely several security issues. That is enough code to be a maintenance headache for someone forever. That's also enough code to implement at least one cool new feature that end users actually want to have.\r\n\r\nWhy telemetry, in an already excellent piece of software? Whyyyyyyyyyyyy? =||= > 5,506 lines of code\r\n\r\nMost of that code is from vendored dependencies. The changes to the Audacity code are quite small. =||= > > 5,506 lines of code\r\n> \r\n> Most of that code is from vendored dependencies. The changes to the Audacity code are quite small.\r\n\r\nGood point. So perhaps the \"dang, this could have been an actually useful feature\" part of my mini-rant is not as relevant. The rest is though--that's a lot of code, with potentially a lot of bugs and security holes, and you've already started documenting above! Adding a bunch of new dependencies is worrisome generally speaking, too, let alone for this. =||= Not going to dispute that this is a bad look, or might violate the GDPR, or even that it's a slippery slope and all that.\r\n\r\nBut as a long time casual Audacity user this is not the end of the world for me either:\r\n\r\n* at least it's Google (motto: \"We're Not Evil\u2122\"), and not Facebook (motto: \"Hahah, whoops you caught us\u2026\")\r\n* sounds like I will not be required to opt-in (and/or at least can opt-out, \u2026and block any initial attempts via Little Snitch until then ;-)\r\n\r\nAnd one thing that makes a big difference to me:\r\n\r\n* the telemetry agent looks to be custom code tracked in the repository itself, instead of dropping in some supply chain attack that an advertising company offers in pre-built form (and which may/may-not actually respect my tracking preferences behind the scenes!) =||= > Adding a bunch of new dependencies is worrisome generally speaking, too, let alone for this.\r\n\r\nYup. They're adding a whole network and HTTP stack *just* for that. =||= > > Adding a bunch of new dependencies is worrisome generally speaking, too, let alone for this.\r\n> \r\n> Yup. They're adding a whole network and HTTP stack _just_ for that.\r\n\r\nit seems like the PR author forgot that this is an audio editing program and not a \"stream mouse clicks to Google\" program. =||= > * at least it's Google (motto: \"We're Not Evil\u2122\"), and not Facebook (motto: \"Hahah, whoops you caught us\u2026\")\r\n\r\n@natevw I strongly recommend you read up on just how evil Google is. They've had multiple, multi-billion dollar fines for their various misdeeds; they spy relentlessly on anyone who gets near their platform; they are involved in multiple lawsuits in the US for violations of antitrust law; they're a revolving door for US military higher-ups; they take large amounts of money from the US military and there's good reason to believe it's helping to build weapons; etc etc etc etc. Literally Google \"Google actually is evil\" and you'll find lots.\r\n\r\n\"As least it's Google and not Facebook\" doesn't make sense. That's like saying you're glad you had a major stroke instead of a heart attack.\r\n =||= I'll add my vote against this PR. You shouldn't be sending any data to Google. Looking forward to the fork without the telemetry code. =||= Your privacy policy is missing all your information how to handle collected data on your website https://www.audacityteam.org/contact/privacy-policy/. \r\n\r\nDo you even have a privacy policy for your application?\r\n\r\nYou have a google searchbar, but dont list the conditions of usage (including privacy terms) which is legally worrisome at least.\r\n\r\nI want to quote your message on your website https://www.audacityteam.org/contact/advertising-and-monetization-opportunities/\r\n\"We are happy with our current advertising partners and are not interested in new offers of advertising or monetization schemes.\r\nWe do not, and will not bundle other applications with Audacity.\"\r\n\r\nYour website and \"The Google logo is a trademark of Google, Inc.\" (https://www.audacityteam.org/copyright/) makes me think different. =||= Itemize this down into several parts.\n\nAdding libcurl, while increasing the complexity and dependency chain of Audacity, may be useful in the future (e.g., networked live/streaming audio capture, linking audio files in a project from network sources) but not to implement a development nightmare like this.\n\nDon't import the library wholesale, but rather, include its code in a maintainable way that is safe to upgrade by maintainers. Lobbing the whole library into local scope may interfere with the speedy response to security/vulnerability reports, and looks ugly in general to maintainers.\n\nDon't fork wxWidgets for one feature. Try instead, to write the feature in a local scope - a lot of the Wx APIs are declared weak, for a reason.\n\nDon't add telemetry to a third-party provider that isn't owned by a maintainer of Audacity, or a leading member of the Audacity team.\n\n> _I am not an Audacity team member; these are only suggestions, and may not reflect the Team's views or goals._ =||= > @Be-ing\r\n> \r\n> > Let's not get hyperbolic here. Audacity is licensed under the GPLv2. Nobody can make it proprietary.\r\n> \r\n> Not necessarily, it depends on whether the copyright of code and contributions is owned entirely by the developers/authors, or not. Contribution agreements play an important role on whether you can take a GPL'd software proprietary or not.\r\n> \r\n> This article explains different cases: https://wpandlegalstuff.com/taking-gpld-code-proprietary/\r\n\r\nas far as I can see, there isn't and wasn't any sort of CLA in place that specified that anyone submitting patches to the project would agree to future license changes. So if I'm not mistaken, the license of the project cannot be changed from GPL unless the new project managers obtain permission from everyone who contributed in the past and/or remove code contributed from people who refuse to change the license. Therefore, while monetisation can come into the project by building additional paid cloud services or selling the telemetry data, the project cannot become closed source with respect to what is on a user's desktop. =||= bruh =||= '-'\r\n\r\n\\\"\r\n\\-\r\n\r\n\\\"\r\n0\r\n\\= =||= > Therefore, while monetisation can come into the project by building additional paid cloud services or selling the telemetry data, the project cannot become closed source with respect to what is on a user's desktop.\r\n\r\nHalf of that sentence is true, it can not become closed source. The other half is not related in any way. Of course one can and may charge for open source software. You can tie pre-built binaries to payment, for example.\r\n\r\n =||= adding telemetry is a good way to instantly create 20 new forks of this project, all of which remove muse group's control over their investment. Consider yourselves threatened. =||= Neat! Another project I can cross off my list. =||= Also what are you doing to keep this GDPR and local Data Protection laws complaint? =||= Just to reassert this: making it opt-in is a __requirement__ of the GDPR. Without misleading dialogs, and without manipulation like a shiny green 'accept' button vs. a tiny 'reject' button.\r\n\r\nAnd yes, other commenters have been correct in saying that telemetry isn't that useful, and you should just *ask* users what issues they run into with the software. You will learn a lot more actionable information, without being invasive.\r\n\r\nEdit: To clarify, ask users what they dislike or what frustrates them, not what they want. Learning what people *don't* want is the most actionable information for improving a piece of software - pie-in-the-sky ideas are much less useful. =||= This nonsence, but still no bug fixes to Jack support.... Really? I guess the Muse Group money had strings attached. =||= I feel bad for all the people getting emails about this right now...\r\n\r\nPersonally, I wouldn't mind the change if it didn't add more dependencies (both locally in terms of libraries, and in terms of depending on 2 relatively large tech companies for your data). Maybe if it was a Matomo instance (or similar), it would be more likable. =||= > This nonsence, but still no bug fixes to Jack support.... Really? I guess the Muse Group money had strings attached.\r\n\r\nHow do we know he's with them?  =||= @lodenrogue I did some digging, the account is largely inactive until this year. First contribution to Audacity was in 29 March, and was an edit to the Error handling. One other PR merged yesterday was a SQLite version bump, presumably to support this change. Finally the account states his location is St Petersburg, and has a very small set of projects given the account's 9yr old age.\r\n\r\nGenerally it stinks of corporate interference, but at least they didn't sneak this in as a side entry to some other more important changes. Clearly they're new to this FOSS thing. =||= > @lodenrogue I did some digging, the account is largely inactive until this year. First contribution to Audacity was in 29 March, and was an edit to the Error handling. One other PR merged yesterday was a SQLite version bump, presumably to support this change. Finally the account states his location is St Petersburg, and has a very small set of projects given the account's 9yr old age.\r\n\r\nThe most suspicious thing here is how readily reviewers jumped to inspecting the implementation details of a PR given the complete lack of any discussion of the feature, or even a single relevant ticket.  =||= > Finally the account states his location is St Petersburg\r\n\r\nOkay, I can understand why you would be suspicious of the other things but why is being located in Russia a suspicious thing? Does country of origin really matter in this case?\r\n\r\n =||= Wow so many people in this thread need to chill out.\r\nA) It's opt in\r\nB) It's anonymous\r\nC) It's only collecting basic stats about how users are using the application, ya know, helpful stuff that helps developers make decisions on how to improve the user experience?\r\n\r\nChill out folks. =||=  Its where muse group's headquarters are. No malcontent to any Russians intended, I am only pointing out that makes it more likely this where that guy works.  =||= As someone who has worked and collaborated on many open-source audio applications and plugins myself, **please DO NOT merge** this PR.\r\nI will fork and maintain a custom Audacity build myself if I have to.\r\n\r\nWe do not want analytics, phone-home or other \"modern\" crap in such tools.\r\nThank you\r\n =||= I don't think we need a fork if this is behind a compile option that defaults to off. =||= > Wow so many people in this thread need to chill out.\r\n> A) It's opt in\r\n\r\nFor now.\r\n\r\n> B) It's anonymous\r\n\r\nIt's pseudonymous at best, Google and Yandex can likely de-pseudonymize you.\r\n\r\n> C) It's only collecting basic stats about how users are using the application, ya know, helpful stuff that helps developers make decisions on how to improve the user experience?\r\n\r\nThere's already a tool for that, it's called asking.\r\n\r\n> Chill out folks.\r\n\r\n[It's very likely that this \u201cfeature\u201d is illegal in the EU.](https://noyb.eu/en/101-complaints-eu-us-transfers-filed) =||= > A) It's opt in\r\n\r\nYup, but it's a slippery slope to see it enabled by default some day...\r\n\r\n> B) It's anonymous\r\n\r\nNope, that's GA. They will do whatever they can to add that data to the (already large) user profile they have of everybody.\r\n\r\n> C) It's only collecting basic stats about how users are using the application, ya know, helpful stuff that helps developers make decisions on how to improve the user experience?\r\n\r\nTracking users is not the FOSS way of making better software. There are tons of great FOSS software that has decent UX (blender, inkscape, ...) and spoiler, they're not tracking their users. =||= > I don't think we need a fork if this is behind a compile option that defaults to off.\r\n\r\n100% not the point. One of the pillars of FOSS is maintaining decentralized systems. This PR is in direct conflict with those values. =||= Get the GDPR lawsuit threats ready just in case folks\r\n\r\nand pitchforks =||= I'm concerned about the use of a persistent identifier and google analytics here. Google does not have much respect for user privacy, and this change provides more than enough information to allow a user to be tracked across networks. =||= I personally can see some value in having telemetry information, but I would politely, yet firmly, disagree with the notion of adding Google-based tracking to Audacity and, instead, would ask for something that wouldn't deliver information, \"anonymized\" or otherwise, to a company such as Google on a silver platter...\r\n\r\nIsn't OpenTelemetry a thing? =||= just do a survey =||= Is the author aware of submodules? Why are those dependencies directly included? =||= > I personally can see some value in having telemetry information, but I would politely, yet firmly, disagree with the notion of adding Google-based tracking to Audacity and, instead, would ask for something that wouldn't deliver information, \"anonymized\" or otherwise, to a company such as Google on a silver platter...\r\n\r\nI second this.\r\n\r\n> Isn't OpenTelemetry a thing?\r\n\r\nIt is a thing, but Google is heavily involved with the project, but I am not sure if it's actually a Google project:\r\n\r\n> OpenTelemetry is an open source observability framework created when CNCF merged the OpenTracing and OpenCensus projects.[64] OpenTracing offers \"consistent, expressive, vendor-neutral APIs for popular platforms\"[65] while the Google-created OpenCensus project acts as a \"collection of language-specific libraries for instrumenting an application, collecting stats (metrics), and exporting data to a supported backend.\"[66] Under OpenTelemetry, the projects create a \"complete telemetry system [that is] suitable for monitoring microservices and other types of modern, distributed systems \u2014 and [is] compatible with most major OSS and commercial backends.\"[67] It is the \"second most active\" CNCF project.[68] In October 2020, AWS announced the public preview of its distro for OpenTelemetry.[69] \r\n\r\nhttps://en.wikipedia.org/wiki/Cloud_Native_Computing_Foundation#OpenTelemetry\r\n\r\nAlso: https://opensource.google/projects/opentelemetry =||= Nice, it's almost a \"real DAW\" now.\r\n\r\nFork name suggestions? =||= \ud83c\udf5e \ud83d\udca8  =||= Please don't post one word or just an emoji in a comment. It only makes noise with notifications and clutters the discussion. Use GitHub reactions instead. =||= > Is the author aware of submodules? Why are those dependencies directly included?\r\n\r\nAudacity already [directly includes other dependencies](https://github.com/audacity/audacity/tree/master/lib-src) instead of using submodules.  I don't know exactly why it's done like that, but one advantage is that downloading the repository as a zip file includes the libraries (which doesn't happen with submodules), and also regular `git clone` works normally instead of requiring `git clone --recurse-submodules`.\r\n\r\nIMO it would be wrong to add a new dependency as a submodule without converting the existing ones to submodules, which would also be something that should happen in its own PR (if converting to submodules is actually a good idea). =||= As a developer who does a lot of \"proprietary-flavored\" services, stuff that has a very corporate coat of paint over it, I know the value of telemetry information to get a sense of user base topology. Audacity is often prided on its high-quality forum, but it's really hard to get users to actually speak up when they find something wrong with your service. Users don't report crashes or bugs; they just complain. The thing is, I want to make my software better for them!\r\n\r\nTelemetry and crash reporting is *super* helpful, because it takes the effort off of the user to get information about crashes. If you have issues with a given feature, it ends up on your radar a lot quicker. As such, I totally support the decision by Audacity to include telemetry in the next release of Audacity.\r\n\r\nBut...\\\r\nGoogle Analytics?\r\n\r\nGuys, I think you need to reconsider. Google Analytics isn't a telemetry or analytics platform; it's the eyes and ears of a cosmic horror of a company. I shouldn't need to go into the details of why Google or GA is so bad. I realize I alone won't have any power to dissuade you guys, but I seriously implore y'all to reconsider. Please, guys, pick another telemetry platform. =||= I would like to point out there is in the shadow of this PR a draft PR to add breakpad support. Which is a crash and error reporting tool, much more appropriate to the types of information that *should* be collected here.\r\n\r\nThat said breakpad is also a google technology and I am unaware how tightly it is integrated with google infra, but It stands as a statement that even in google's wheel house analytics is a tool for making money, not actionable insites on software stability. =||= I understand the need for this kind of telemetry. But I think it would be better if instead of the telemetry of being opt out it would be opt in. This way people who value privacy wouldn't feel like they are using creepware and people who are willing to give their information can do so by changing a setting.\r\n\r\nAlso, using Google Analytics is a very bad move and would discourage a lot of people from keeping the setting enabled. I would be willing to send my information somewhere I trust but Google is definitely not a company that is trustworthy and has a horrible privacy track record. =||= I will say that self-hosted telemetry services are a thing. I'm not inherently against the idea of telemetry; but while a high-dollar, professional and closed-source application may handle it with Google and wide-brushed opt-out click-tracking, this particular implementation is extremely sore for a free-software project.\r\n\r\nThe damage done by even *__suggesting__* this line of action, will completely undo the supposed benefits of direct feedback, knowing which features are used how, in a general user workflow.\r\n\r\nI'm aware Audacity is under new management, in general, but that just makes things even more sore for the community of users and contributors on seeing this change come to light. It puts egg on the face of not the project, but its management, leadership and ownership.\r\n\r\nI strongly suggest cancelling this change set - as I mentioned before, keep the parts which do have value to the project now or in the future, like library additions and upgrades - the SQLite upgrade merge happened without issue! And this change set is at least in multiple commits, which are easier to break down and work with - those should have been separare PR's, rather than this obstructive patch of regolith with many layers to support one core function.\r\n\r\nI'd recommend that you do keep the different parts in separate itemized PRs with a smaller code footprint, and do open a public request for comments on telemetry implementations, best-practices, things like GDPR/California CCPA regulatory and compliance hurdles, and get a general feel for the community that uses the software. Hell, if you have legal counsel on the team, it would be a bright idea to loop them in on the telemetry changes. Audacity is a global project, and legal scope matters just as much as jurisdiction.\r\n\r\nAll in all, everyone commenting and \ud83d\udc4e'ing the PR here, are a very small minority of Audacity users; most (myself included!) won't even see changes like this, until it's brought to their attention by someone, likely a contributor, who _has_ seen this.\r\n\r\nIf a small cluster of us, including open-source contributors, are strongly against it, it would be remiss of you, and the management of the project here, to push through without soliciting further comment and considering changing course in the ways that matter.\r\n\r\nThis change set exemplifies \"audacity\" by the word; not as in \"bold courage\", but as in \"brazen impudence\". =||= If there was a way to force this branch to always conflict, so that it could never successfully merge, that would be cool. \r\n\r\nOthers have pointed to GDPR, Privacy Policies, statements made previously about third parties, and whatnot. I'm here, looking at a merge that passes checks and is two affirmative reviews away from a hard fork away from here. \r\n\r\nIf we, as a community, created and got approved merge requests that intentionally conflict with this branch it could slow this down. \r\n\r\nI say this as someone who has yet to contribute to the Audacity project. \r\n\r\nHow dare you have the audacity to put analytics into FOSS!? =||= > If there was a way to force this branch to always conflict, so that it could never successfully merge, that would be cool.\r\n> \r\n> Others have pointed to GDPR, Privacy Policies, statements made previously about third parties, and whatnot. I'm here, looking at a merge that passes checks and is two affirmative reviews away from a hard fork away from here.\r\n> \r\n> If we, as a community, created and got approved merge requests that intentionally conflict with this branch it could slow this down.\r\n> \r\n> I say this as someone who has yet to contribute to the Audacity project.\r\n> \r\n> How dare you have the audacity to put analytics into FOSS!?\r\n\r\nThis kind of sabotage, and spam, and general anger in this thread isn't the right way to do this and isn't productive. The important thing is that reviewers don't approve it and the maintainers don't merge it until it gets the thorough evaluation and discussion it deserves. Spam does nothing but make the people who object (who are right, of course) look bad.\r\n\r\n**Don't** simply merge this PR. That's the obvious takeaway here.\r\n\r\n**Do** open a full and thorough issue and discussion about whether to have any sort of analytics. If there's consensus that analytics are beneficial, then have a discussion about what platforms and providers to use, and how to safely protect that information to confirm to the relevant requirements. If there's consensus about that, then we can figure out what the best software stacks are to use. This PR is jumping *far* ahead of a reasonable process. =||= > If we, as a community, created and got approved merge requests that intentionally conflict with this branch it could slow this down.\r\n\r\nGit is not a weapon. Behavior like this would be counter productive and damaging to the software as a whole.\r\n\r\n\r\n =||= @ThisIsPaulDaily, this pull request is definitely bad, but antagonizing the Audacity developers who have put *years* of hard work into this software is unhelpful and ungrateful. =||= @Be-ing agreed =||= > I don't think we need a fork if this is behind a compile option that defaults to off.\r\n\r\nI think we do. If this is merged I don't know that I can trust the Audacity team anymore. And I don't think anyone else should either. The privacy of their users and the backlash that this is getting should be strongly considered.\r\n\r\nIf this is merged I will no longer be using Audacity. I will no longer be installing it on my own machines or the machines of any company whose infra I manage, now and in the future.\r\n\r\nWe have enough stuff that is watching us and listening to us already. I don't need my audio editor added to the list.\r\n\r\nPrivacy is a human right. Involving Google or Yandex in the use of a piece of software like this is completely uncalled for.\r\n\r\nI was legitimately excited when I heard Muse Group was getting involved in Audacity. I see my excitement was misplaced. =||= > This PR is jumping far ahead of a reasonable process.\r\n\r\nI strongly recommend all Audacity developers read this [blog post](https://aturon.github.io/tech/2018/05/25/listening-part-1/) about the Rust project's experience with an inside group trying to push through a controversial change, the lessons learned, and the changes in process and culture that resulted from that. The whole 3 part series of blog posts is fantastic.  =||= \r\n\r\n\r\n\r\n> If there was a way to force this branch to always conflict, so that it could never successfully merge, that would be cool.\r\n> \r\n> Others have pointed to GDPR, Privacy Policies, statements made previously about third parties, and whatnot. I'm here, looking at a merge that passes checks and is two affirmative reviews away from a hard fork away from here.\r\n> \r\n> If we, as a community, created and got approved merge requests that intentionally conflict with this branch it could slow this down.\r\n> \r\n> I say this as someone who has yet to contribute to the Audacity project.\r\n> \r\n> How dare you have the audacity to put analytics into FOSS!?\r\n\r\nThis is the exact mindset that lead to the actix web incident. =||= > This is the exact mindset that lead to the actix web incident.\r\n\r\nSounds to me like the outcome of that was the project rid themselves of a Toxic individual.\r\n =||= No problem. If this is merged, a fork will emerge that will most likely take over. I certainly won't be using upstream Audacity if it does.\r\n\r\nWhy on earth anyone thought this was a good idea is astounding. Tantacrul, if you're here, this is highly suspicious. I sincerely hope this has nothing to do with MuseScore.\r\n\r\n---\r\n\r\n# EDIT: Another PR that is adding Google dependencies, potentially telemetry: #836 =||= > \r\n> \r\n> Is the author aware of submodules? Why are those dependencies directly included?\r\n\r\nNoob question, why is directly including the dependencies bad?  =||= As stated by many before me, **please** don't add telemetry to Audacity. Doesn't matter if it is opt-in or if it helps to improve user experience. When a user had an issue in the past, they posted to forums and got help that way. That's how it can still continue to work. Analytics are __not__ needed, especially due to the decentralized aspect of free software. Who will collect theses logs? This is absurd. This is an audio software, not a data collection solution.\r\n\r\nI think this PR (or any that involves telemetry) should not be merged. I believe this goes against the essence of free software. I will be using a telemetry-free fork and encouraging people to do the same if the project decides to go down that path. =||= > that will most likely take over\r\n\r\n@Qix- except it won't. Visual studio code is a great example that bundling telemetry in a FOSS project can be done. Adding telemetry in audacity, even opt out, will inevitably affect the privacy of the majority of people. The ones who won't bother to switch to one of the forks. =||= > Noob question, why is directly including the dependencies bad?\r\n\r\nA module which is included directly won't get updates or security patches, requiring developers to manually upgrade. This increases the risk that a fix for a security vulnerability or important bugfix doesn't get into the program quickly. =||= > > Is the author aware of submodules? Why are those dependencies directly included?\r\n> \r\n> Noob question, why is directly including the dependencies bad?\r\n\r\nIt puts the responsibility to update and maintain the dependency on the maintainer, it also provides an opportunity for the dependency to diverge from its upstream which has license and maintainability concerns. the UNIX philosophy would be to dynamically link against the library, allowing the OS to manage updates and provide bugfixes when available, but that its its own can of worms. Using a sub module is an in between. =||= Whether this PR is merged or not, it's a good thing that this issue came to the community's attention. I don't really pay much attention to the developer side of most of the products I use, and I doubt vast majority of people on the consumers' end do either. Good on you guys!\r\n =||= > > Is the author aware of submodules? Why are those dependencies directly included?\r\n> \r\n> Noob question, why is directly including the dependencies bad?\r\n\r\nNot a noob question imo, and a very good one, too. <3 People don't ask questions about large codebase management often enough, at all. :)\r\n\r\nThere's pros and cons to including the dependencies, versus alternatives like, getting tarballs in the buildscripts, or git submodules.\r\n\r\n**Include all libraries in-tree, and maintain them ourselves.** (Audacity does this.)\r\n- **Pro:** By homing the dependencies and libraries, you can quickly integrate your own changes to the libraries you need as you need them, without waiting for upstream developers and maintainers to review and merge them.\r\n- **Con:** However, including dependencies can cause bit rot and API erosion, where new versions of the library are introduced that are incompatible with the included version, and contain important or valuable changes (such as security fixes or performance improvements),\r\n\r\n**Separately download and patch a specific version of upstream libraries, at build-time, through build automation.**\r\n- **Pro:** Having the build scripts pull in the libraries and patching them locally is a good compromise between self-maintainership, flexibility and autonomy, while better enabling out-of-tree development to continue, and for the upstream changes to be included in the current source as needed, efficiently. Many GNU-type tools do this.\r\n- **Con:** Getting the libraries separately as a tarball can introduce bit rot when remote maintainers (like, say, the GNU project or a sourceforge page) change URL formats, remove old versions, or otherwise go dark.\r\n\r\n**Use Git submodules to fragment dependencies out-of-tree, and handle patches through change-request branches.**\r\n- **Pro:** Including the dependencies as submodules works best for a Git-based workflow, and is automatic, Further, this exposes changes that Audacity would seek to include in a future version of a dependency, to maintainers who may wish to import and merge the changes. And, if they choose not to, the branch you made will remain available for your own use, regardless.\r\n- **Con:** Well, this can be quite a headache to maintain, especially to someone not strongly familiar with Git and Github and the like, and this method does not easily carry over into a tarball format (unless the .git tree, or at least the submodules/gitconfigs, are included alongside.)\r\n\r\nI view the first issue as the most problematic, far outweighing its pros, and would recommend against including the libraries in-tree for that reason alone.\r\n\r\nPersonally, I'd do a mix of the above:\r\n- Host our own version of dependencies, libraries and such, under the Audacity github organization or its canon git server.\r\n- Have the build scripts download and patch the library dependencies, using Git as needed, if they're not found (e.g., by way of tarball); \r\n- Use submodules, pointing to the included versions hosted by Audacity, which are forks of upstream libraries at specific versions;\r\n- and, finally, provide tarballs including a flat (`--depth=1`) git tree, plus making `git bundle` format sourceballs available alongside the tarballs, as Git may compress the code better than a flat code tree in gzip. =||= > I view the first issue as the most problematic, and would recommend against including the libraries in-tree for that reason alone.\r\n\r\nAudacity's vendoring of PortAudio has already caused hassle for Fedora packaging (#840), which ends up affecting developers of other applications (Mixxx) that use PortAudio because it is up to us to do the work to keep Audacity working with the distribution package and include the updates our applications need (to be fair, the PortAudio maintainers were not very responsive in the past few years which has gotten better in the past few months). =||= while we're on the topic of problematically bundling dependencies why on earth does Audacity have an SQLite <s>server</s> **Database** in it in the first place? =||= > while we're on the topic of problematically bundling dependencies why on earth does Audacity have an SQLite server in it in the first place?\r\n\r\nIIRC SQLite doesn't require a server =||= > while we're on the topic of problematically bundling dependencies why on earth does Audacity have an SQLite server **Database** in it in the first place?\r\n\r\nI don't use databases much but sqlite is useful for small single user databases for standalone applications \r\n\r\nfrom their own page https://sqlite.org/whentouse.html =||= > while we're on the topic of problematically bundling dependencies why on earth does Audacity have an SQLite server **Database** in it in the first place?\r\n\r\nI have answered my own question, aup3 files are actually SQLite databases. Seems like a strange design decision but this PR is not the place to argue about such things. =||= > I have answered my own question, aup3 files are actually SQLite databases. Seems like a strange design decision but this PR is not the place to argue about such things.\r\n\r\nthat's interesting, but it makes sense - a lot of embedded, serialized data types use sqlite for such things - like, video game save files, working projects in some video editors, configurations for some IDEs and text editors, and things like Mozilla Firefox for storing a combination of user settings, history, bookmarks and such in a nicely bundled, easily-queried and reproducible tabular form. =||= is there an official statement about telemetry and this pull request? Trying to be respectful to all parties, but this does not seem like it is helping the user and/or the maintainers at the moment. Does this coincide with the recent acquisition?   =||= While adding some form of telemetry is useful, I would absolutely recommend against using google analytics, there are plenty of good alternatives that don't require you pinging google every time you use audacity =||= Just no.  =||= No. Remove entirely. Shouldn't even be opt-in. 100% using a fork without this from now on if this malware is merged. =||= I'm ok with telemetry. I'm _not_ ok with Google telemetry. I'll immediately stop using Audacity if you put this in and I'll warn all of my colleagues to do the same. \r\n\r\nI understand the need for telemetry and analytics, but I cannot and will not condone Google analytics in any open source software I use.  =||= There is no public statement that I am aware of yet, but I imagine there\nwill be one tomorrow, or if not, in the next few days. I can't imagine them\nnot making one with the amount of pushback the PR has received.\n\nOn Thu, May 6, 2021, 22:50 Ict ***@***.***> wrote:\n\n> is there an official statement about telemetry and this pull request?\n> Trying to be respectful to all parties, but this does not seem like it is\n> helping the user and/or the maintainers at the moment. Does this coincide\n> with the recent acquisition?\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/835#issuecomment-834021100>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ATJASMGGMEHKXQE6KUYLEQLTMNIQXANCNFSM44C5SLTA>\n> .\n>\n =||= the first red flag has arrived =||= @a-wip0 it's only the beginning =||= I have been reading through this PR, and all of the comments, and agree that the idea of adding telemetry using the Google API's is extremely problematic.  There really does need to be a lot of conversation around this PR considering all of the issues that have been brought up, including (but not limited to):\r\n\r\n- The apparent lack of following the normal process for this PR.\r\n- The apparent lack of consideration of how this change needs to be implemented for different localities, such as the EU's GDPR, California's CCPA regulations, and other regions regulation, etc.\r\n- Questions surrounding Google API's being used for gathering this information.\r\n- Serious issues with privacy questions.\r\n- Questions about the custody of this information: ie, who is going to gather and use this information?  And to what end is this information going to be used?\r\n- Are there other options that can be implemented that will enable the same functionality without impeding on the privacy of users?\r\n\r\nThe problem with this PR is now that it is out there is a stain of mistrust on the Audacity project... Something that I would never have thought I would be saying about one of the most revered Open Source projects of all time.  (Seriously, I can't think of many projects that have had the enduring admiration of such a large audience.)\r\n\r\nIMO - if there is not a public statement about this PR made tomorrow, I would suggest that someone participating in these comments start a **respectful** conversation on the forum, as this PR's proposals need to be discussed with the much larger user base of Audacity. =||= I tried to find discussion about this in the forum and could not.\r\n\r\nIf you want to know more about how to improve Audacity for users, I recommend switching to modern and more usable infrastructure, in particular migrating your old phpBB forum to Discourse. This will make it nicer for users to tell you what they want. =||= > I tried to find discussion about this in the forum and could not.\r\n> \r\n> If you want to know more about how to improve Audacity for users, I recommend switching to modern and more usable infrastructure, in particular migrating your old phpBB forum to Discourse. This will make it nicer for users to tell you what they want.\r\n\r\nThe forum is an interesting idea, but really any GitHub PR should be strongly linked to one (or more) GitHub issues =||= > I tried to find discussion about this in the forum and could not.\r\n\r\nSo did I, and for some reason I cannot create a new conversation, which is why I suggested that someone should start one.\r\n\r\n \r\n> If you want to know more about how to improve Audacity for users, I recommend switching to modern and more usable infrastructure, in particular migrating your old phpBB forum to Discourse. This will make it nicer for users to tell you what they want.\r\n\r\nPersonally, I'm not a fan of Discourse, and a forum with over 150,000 members, and hundreds of users online at a time migrating to a new forum is likely something that would (a) take considerable effort, and (b) be just as divisive as this PR. :) =||= I strongly recommend never putting any telemetry code into Audacity. Audacity is an open source music app for editing sound and music. You don't need numerical data and metrics and analytics to improve the app. It's not the end of the world if someone encounters an error and the developers aren't aware of it right away. What good could possibly come out of it? None. What bad could come out of it? Lots privacy issues and bugs.\r\n\r\nFrom the PR:\r\n\r\n>Session start and end\r\n>Errors, including errors from the sqlite3 engine, as we need to debug corruption issues reported on the Audacity forum\r\n>Usage of effects, sound generators, analysis tools, so we can prioritize future improvements.\r\n>Usage of file formats for import and export\r\n>OS and Audacity versions\r\n\r\nYou can fix bugs as you encounter them. Or as people report them and you are able to reproduce them. If you want, you can make logs and have people to upload those log files manually. You don't need to know which file formats are popular, you can just ask people to open Issues if they want a file format supported. You don't need to know which effects are popular. Prioritize improvements based on your own experiences with the app and encourage people to give written feedback. Why does it matter which OS version or Audacity version people are using? That information should be private. If for some reason you really care you can create a poll. =||= Excuse me, but what the fuck do you think you're doing to our baby?! =||= based! =||= This is completely unnecessary, nobody except the users who run the program should know anything about the host machine or what the user did with the program. Audacity is one of the last FOSS programs out there without Telemetry in it, there is no reason to add any to it. It's a fucking AUDIO EDITOR for Christs sake! =||= > If you want to know more about how to improve Audacity for users, I recommend switching to modern and more usable infrastructure, in particular migrating your old phpBB forum to Discourse. This will make it nicer for users to tell you what they want.\r\n\r\nWhat benefit is derived from moving from one forum to another? =||= > What benefit is derived from moving from one forum to another?\r\n\r\nMoving to infrastructure that is easier to use makes it easier for users to give feedback, which helps developers know what is important to users, much moreso than questionably useful incomplete statistics. =||= Regarding the software used on the forum. Respectfully, I do not believe\nthis PR is the right avenue to discuss this. We should keep this discussion\non topic. Post here should be directly related to this PR. We have plenty\nenough to discuss in the PR already.\n\nOn Thu, May 6, 2021, 23:57 jxu ***@***.***> wrote:\n\n> If you want to know more about how to improve Audacity for users, I\n> recommend switching to modern and more usable infrastructure, in particular\n> migrating your old phpBB forum to Discourse. This will make it nicer for\n> users to tell you what they want.\n>\n> What benefit is derived from moving from one forum to another?\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/835#issuecomment-834045448>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ATJASMAIACKKJQBSTD2HCB3TMNQMBANCNFSM44C5SLTA>\n> .\n>\n =||= > > What benefit is derived from moving from one forum to another?\r\n> \r\n> Moving to infrastructure that is easier to use makes it easier for users to give feedback.\r\n\r\nThere is nothing difficult about using a phpbb forum.\r\n\r\n(Personally I find Discourse to be horribly ugly and difficult to navigate, compared to traditional forums. You may think the opposite, but the change from a well established forum won't go over easily.) =||= > > What benefit is derived from moving from one forum to another?\r\n> \r\n> Moving to infrastructure that is easier to use makes it easier for users to give feedback.\r\n\r\nEasier to use for who?  Discourse is an annoyance (at best) to me, and I think it would be a pain to many of the 150,000+ users that are used to phpBB already.  IMO. =||= Okay, enough about the forum software. Let's not drag this further off topic. =||= NACK =||= I don't want to pile on in regards to analytics or the implementation here, so far as to say that I disagree with it and I largely agree with the community sentiment in the above posts.\r\n\r\nI would like to point out that home assistant which is a very large and active community recently implemented some analytics. They had really good discussions and a significant amount of communication with the community about what they were going to collect and how they were going to use it, with specific tangible benefits and examples. I think a lot can be learned about the process that they went through and how they implemented this feature. While their implementation collects different information and is not directly equivalent to what is being implement it here, I think that how they went about implementing it and how they interacted with the community was excellent and is a good case study for how such things could by implemented in the future.\r\n\r\nhttps://www.home-assistant.io/integrations/analytics =||= Emphatic -1. Google is a scourge on the internet. There is absolutely no way this analytics data will not be cross-referenced inside their insidious black box of multi-billion-dollar ad tracking, just another finger prying into people's online lives. I, like many others, will simply use a \"Google-free\" fork of this software and encourage everyone else to do so, even if there are no other changes to Audacity other than a bunch of red minus symbols cutting the entire Google stack out wholesale.\n\nDon't take this as an invitation to more tightly integrate the software with Google, such as requiring their SSO or an email login to get access to \"enhanced features\" or whatever, either. =||= Waiting for a statement by Tantacrul who is quite active on social media (does he have a github account?) =||= ### For those that are saying telemetry should not **ever** be implemented: \r\nYeah, sorry, but as the new maintainers are trying to improve the UI and UX (which I strongly support and am looking forward to as Audacity is still stuck with a really old-looking GUI and skinning is still horrible), analytics _can_ be helpful.  However, though I myself have no problems with Google Analytics, I have many friends that do.  It's not a matter of whether we can or should implement Google Analytics in Audacity - it's the fact that as one of the oldest/best FOSS projects the brand-new maintainers should not immediately begin making such controversial decisions without approval of the userbase.  \r\n\r\nI'd once again draw the maintainer's attention to @meduzen's comment where they provide many decentralized and/or FOSS analytics platforms as alternatives: https://github.com/audacity/audacity/pull/835#issuecomment-833852063  There's little reason to use Google Analytics over these other options for the type of data the Audacity team _should_ be collecting in order to improve this project.  \r\n\r\nI'd remind us all to stay positive and remember that as a community we don't get anywhere from division and anger.  The Muse Group has done an excellent job with MuseScore, so let's continue to support their efforts to improve Audacity and simply provide _constructive_ feedback.  Cheers! =||= As a mere user, I'd be fine with user tracking _only_ if:\r\n- It was opt-in.\r\n- It did not use Google Analytics, but rather an open-source analytics suite hosted by Audacity developers.\r\n- The developers did not share this data with a third party.\r\n\r\nEDIT: I'd even opt-in if it would provides developers with data useful for UX improvements. Considering Google Analytics is controversial in FOSS, I feel this early move by new management is somewhat worrying. =||= @jxu I messaged him on Patreon about this PR. If he isn't aware of it yet,\nhe likely will be by the morning.\n\nOn Fri, May 7, 2021, 00:13 jxu ***@***.***> wrote:\n\n> Waiting for a statement by Tantacrul who is quite active on social media\n> (does he have a github account?)\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/835#issuecomment-834050545>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ATJASMECR72FLVSQQ5A4XXTTMNSHJANCNFSM44C5SLTA>\n> .\n>\n =||= >  messaged him on Patreon about this PR. If he isn't aware of it yet, he likely will be by the morning.\r\n\r\nOh right, he has a Patreon. It is for his videos, but given he made a popular video on being the head of audacity (how I found about him), it's safe to say it's relevant.\r\n\r\n =||= > @jxu I messaged him on Patreon about this PR. If he isn't aware of it yet, he likely will be by the morning.\r\n\r\nI've found is Github account, but it doesn't look like he doesn't do much work on here, one commit to musescore and one PR review in musescore.\r\n\r\nIMO - I'm guessing he isn't aware of this PR as he isn't on the approval chain.  It appears the author of this PR, and the approvers are likely associated with Ultimate Guitar, the company that acquired both MuseScore and Audacity.\r\n\r\nThis PR is likely not in his area of responsibility.  However, I have the feeling he would likely want to be aware of it since he has made himself and his associations with these projects very publicly visible. =||= > Ultimate Guitar, the company that acquired both MuseScore and Audacity\r\n\r\n@SndChaser Just a quick correction, they're known as the Muse Group ([mu.se](https://mu.se)) \ud83d\ude04 =||= > > Ultimate Guitar, the company that acquired both MuseScore and Audacity\r\n> \r\n> @SndChaser Just a quick correction, they're known as the Muse Group ([mu.se](https://mu.se)) smile\r\n\r\nThanks for the correction...  I picked up the UG name from Reddit, I should have double checked it before repeating it publicly.  (Although, at least UG is one of their applications...) =||= Absolute insanity. Google spying in an audio editor? Are you out of your mind, or are you just bought and paid for by some three-letter government agency?\r\n\r\nYou do realize that it will be forked and all the spying removed, right? Even if this is merged, all you will accomplish is taking all your goodwill in the open source community and lighting it on fire. =||= > Yeah, sorry, but as the new maintainers are trying to improve the UI and UX (which I strongly support and am looking forward to as Audacity is still stuck with a really old-looking GUI and skinning is still horrible), analytics _can_ be helpful. \r\n\r\nOkay but how do the following things help with UI/UX at all? Shouldn't we be getting feedback directly from the users instead of an automated system?\r\n\r\n- Session start and end\r\n- Errors, including errors from the sqlite3 engine, as we need to debug corruption issues reported on the Audacity forum\r\n- Usage of effects, sound generators, analysis tools, so we can prioritize future improvements.\r\n- Usage of file formats for import and export\r\n- OS and Audacity versions\r\n\r\nEDIT: Instead of having telemetry, why don't we make it easier for users to find places to submit issues and feedback in the program?\r\n =||= audacity team does not need info on how many fart.wav sound effects I export =||= > \r\n> \r\n> audacity team does not need info on how many fart.wav sound effects I export\r\n\r\nExactly lmao =||= I've created a fork of audacity that I'll be trying to maintain, if any of you would like to help out in any way, I'll be setting up Github Discussions for it shortly.\r\n\r\nhttps://github.com/yonderbread/foss_audacity =||= I will sincerely hope for the failure of the audacity project and cheer for any clean fork if Audacity gains the capability to send any of my data to a third party data aggregator such as Google or Yandex, no matter how \"trivial\" that data is. =||= > I've created a fork of audacity that I'll be trying to maintain, if any of you would like to help out in any way, I'll be setting up Github Discussions for it shortly.\r\n> \r\n> https://github.com/yonderbread/foss_audacity\r\n\r\nI think it's a little premature and why should the community trust you as a maintainer?  =||= > \r\n> \r\n> I will sincerely hope for the failure of the audacity project and cheer for any clean fork if Audacity gains the capability to send any of my data to a third party data aggregator such as Google or Yandex, no matter how \"trivial\" that data is.\r\n\r\nAt this point I don't even know if I can trust the Linux kernel. =||= > > I've created a fork of audacity that I'll be trying to maintain, if any of you would like to help out in any way, I'll be setting up Github Discussions for it shortly.\r\n> > https://github.com/yonderbread/foss_audacity\r\n> \r\n> I think it's a little premature and why should the community trust you as a maintainer?\r\n\r\nSimple. Follow upstream exactly except for the telemetry. Should be easy to see in git. =||= I don't have the knowledge but is there anyone out there who can copy the code base and start a new, really open source, spy and adware free (because you know the next thing will be ads) version of this and then drop this version? =||= > \r\n> \r\n> > I've created a fork of audacity that I'll be trying to maintain, if any of you would like to help out in any way, I'll be setting up Github Discussions for it shortly.\r\n> > https://github.com/yonderbread/foss_audacity\r\n> \r\n> I think it's a little premature and why should the community trust you as a maintainer?\r\n\r\nWell they have no reason to trust me as of now, but I'm going to make sure all contributions to my fork are composed of 100% free and open source code. You shouldn't trust anyone, just use good judgement. =||= > At this point I don't even know if I can trust the Linux kernel.\r\n\r\n@yonderbread Linux kernel is pretty trustworthy. =||= > \r\n> \r\n> > At this point I don't even know if I can trust the Linux kernel.\r\n> \r\n> @yonderbread Linux kernel is pretty trustworthy.\r\n\r\nSo was audacity. =||= the audacity of this pull request - the 12 year old versions of ourselves would be kicking all of our asses right now if they knew this was going on =||= > > > I've created a fork of audacity that I'll be trying to maintain, if any of you would like to help out in any way, I'll be setting up Github Discussions for it shortly.\r\n> > > https://github.com/yonderbread/foss_audacity\r\n> > \r\n> > \r\n> > I think it's a little premature and why should the community trust you as a maintainer?\r\n> \r\n> Well they have no reason to trust me as of now, but I'm going to make sure all contributions to my fork are composed of 100% free and open source code. You shouldn't trust anyone, just use good judgement.\r\n\r\nA maintainer does a lot more than contribute code. He/she has to make tough decisions about what changes are made. =||= IMO it _is_ useful to know how often each function or file format is used, but it's much more sensitive than OS version numbers.  The only way that would be reasonable is if each type of information were individual opt-ins where the user explicitly says that they're OK with sending each kind of data.  And I didn't even know Google Analytics was a thing for non-web apps; I agree with everyone here that involving Google as a third party is a terrible idea.\r\n\r\nFeedback from users is helpful, but it doesn't let you know what people _don't_ use, only what they _do_ use and have issues with.\r\n\r\nAnd just to be explicit, **this change has not been merged yet**. =||= Anonymous telemetry is really good idea, this may help devs to improve software. Now you want to use surveillance software like Yandex and Google Metrics, that's definitely bad idea due to privacy reasons. I hope that this PR wouldn't be merged at the current state. If Audacity really needs some telemetry we should create _privacy and free_ friendly solution =||= > \r\n> \r\n> > > > I've created a fork of audacity that I'll be trying to maintain, if any of you would like to help out in any way, I'll be setting up Github Discussions for it shortly.\r\n> > > > https://github.com/yonderbread/foss_audacity\r\n> > > \r\n> > > \r\n> > > I think it's a little premature and why should the community trust you as a maintainer?\r\n> > \r\n> > \r\n> > Well they have no reason to trust me as of now, but I'm going to make sure all contributions to my fork are composed of 100% free and open source code. You shouldn't trust anyone, just use good judgement.\r\n> \r\n> A maintainer does a lot more than contribute code. He/she has to make tough decisions about what changes are made.\r\n\r\nI guess I'll have to learn along the way! =||= In my opinion something similar to the way KDE does telemetry is a good way of doing it: [https://community.kde.org/Policies/Telemetry_Policy](https://community.kde.org/Policies/Telemetry_Policy)\r\n\r\nIf something similar gets implemented by Audacity, that will be fine. But Google Analytics, no thank you, =||= If you must have telemetry, why can't it be a transparent JSON file emailed to the maintainers? Is that ridiculous? =||= The audacity of adding telemetry to Audacity...\r\n\r\nIf the premise is to 'prioritize future improvements' then by nature of being opt-in, wouldn't there be an extremely small sample size relative to the entire userbase? I especially doubt many people would willingly opt-in knowing that the information is being collected by Google Analytics, let alone Yandex whose headquarters is in Moscow, Russia. =||= No. =||= I use audacity a lot and welcome all improvements. Telemetry is an extremely useful tool for helping release the full potential of software... because relying on users to report issues alone is simply not enough. It's clunky, prone to misinformation/misinterpretation, and just not giving the full picture.\r\n\r\nI agree with all points regarding using your own FOSS hosted analytics platform, making it opt-in and ensuring privacy policy is succinct, correct and requiring explicit consent, handling GDPR considerations etc. If it's a FOSS project, it should be sensitive towards issues like privacy and the legality of collecting and storing certain data.\r\n\r\nWhat I don't agree with is hyperbole and the freaking out some people are doing because of the mere idea of telemetry. That makes no sense at all. =||= > In my opinion something similar to the way KDE does telemetry is a good way of doing it: https://community.kde.org/Policies/Telemetry_Policy\r\n\r\nThis is great. Kudos to the KDE community for working to put together these sensible guidelines in clear, concise language. That page is licensed under the Creative Commons Attribution-Share Alike License, so I recommend that Audacity start by copying that verbatim and perhaps make some small adjustments for Audacity's use case. =||= > > In my opinion something similar to the way KDE does telemetry is a good way of doing it: https://community.kde.org/Policies/Telemetry_Policy\n> \n> This is great. Kudos to the KDE community for working to put together these sensible guidelines in clear, concise language. That page is licensed under the Creative Commons Attribution-Share Alike License, so I recommend that Audacity start by copying that verbatim and perhaps make some small adjustments for Audacity's use case.\n\nIf you have to change the rules later, you might as well not have rules at all. =||= Disabled by default, a user must manually and without nagging explicitly opt-in to telemetry themselves. This is what GDPR demands, this is what i expect. =||= Telemetry burns the community as you should be able to see in this PR. User testing is more expensive than telemetry on its own, but contributors *will* leave over this. It isn't worth it. Please stop before you kill the project. =||= @kisaragi-hiu Realistically speaking, telemetry does not kill a project. Win10 is still the most-installed OS, GitLab still exists, and so will Audacity continue. However, the user base will shrink. Plus there's also the issue of how useful telemetry *really* is, 'cause there's an endless well of biases to consider when trying to use telemetry for anything more than automated sending of crash reports. =||= > Universal Google Analytics is used to track the following events:\r\n\r\nThis list seems somewhat misleading.\r\n\r\nEvery single [wxDialogWrapper title](https://github.com/audacity/audacity/pull/835/files#diff-4bfd3b3b53026d49a2072771cab4e8afd22b54de76baf68e3cb222adec2e191aR84) is being recorded. It doesn't matter if  there was an error or not. \r\n\r\nSeems it's only a matter of time before filenames(linked with IP) will be leaked through the titles.  =||= Google Analytics? Seriously?  =||= > @kisaragi-hiu Realistically speaking, telemetry does not kill a project. Win10 is still the most-installed OS, GitLab still exists, and so will Audacity continue. However, the user base will shrink. Plus there's also the issue of how useful telemetry _really_ is, 'cause there's an endless well of biases to consider when trying to use telemetry for anything more than automated sending of crash reports.\r\n\r\nWin10 is not FOSS and cannot be forked sans telemetry. Audacity is and can.  =||= Audacity survived without having trackers for more than 20 years.\r\n\r\nWhy is this needed all of the sudden? =||= I rarely use Audacity. I think telemetry is a good thing to improve software.\r\nBut please, use open source platform to collect telemetry, if you will use proprietary platform, it has high chance to be removed from distros like Debian because of 3rd party non-free dependency.\r\nSo my wishes are:\r\n1. Use open source telemetry platform\r\n2. Dynamic linking, so it's easier to package audacity for distro developers\r\n3. Ask on first launch if user wants to share telemetry =||= Just passing by to say that yes, this is a horrible idea. Don't integrate *Google Analytics*, of all things, into a FOSS desktop audio program. Please. Opt-*in* anonymous well-defined self-hosted analytics? I'm personally okay with that, but it still toes the line for a lot of people. I don't see the value-add here beyond error reporting, but even then, you could just implement a system where if an error happens it can be optionally reported by itself, like what JetBrains does in their IDEs. Just seems silly to me. =||= > In my opinion something similar to the way KDE does telemetry is a good way of doing it: https://community.kde.org/Policies/Telemetry_Policy\r\n> \r\n> If something similar gets implemented by Audacity, that will be fine. But Google Analytics, no thank you,\r\n\r\nVLC's implementation of first-run opt-in for something as basic as _network access for thumbnail lookup_ is something I think Audacity could model after for anonymous usage/failure data. =||= I'm so confused. Why use off the shelf analytics software for this? You can run your own endpoint to collect events with like....one PHP file. And that could be open source too so we see exactly how you collect analytics data and decide for ourselves whether we want to opt in or not. Why soil your non-controversial brand with associations to controversial ones? All of this just to avoid setting up a backend service that inserts rows into a table? =||= Please 1) make telemetry opt-in and 2) provide an easy way for users to see what technical information is collected *directly from within Audacity*. =||= > This list seems somewhat misleading.\r\nEvery single wxDialogWrapper title is being recorded. It doesn't matter if there was an error or not.\r\nSeems it's only a matter of time before filenames(linked with IP) will be leaked through the titles.\r\n\r\nThank you for this astute code review. @Maykeye I hope you keep an eye on whatever proposed code changes follow this. =||= Just the fact that it collects your IP address and assigns a UUID to your machine ALONE is worrying..\r\n(Yes, I'm aware Github probably does the same thing, but at least it isn't something that's directly installed on my PC and I can *easily* do something to anonymize myself from it) =||= > Google Analytics? Seriously?\r\n\r\nThis one *really* concerns me as well, not to say disgusts me. Not only is there an addition of telemetry, of which i do not see potential merits outweighing all concerns to be had, but that data is shoved right through fucking Google. The one entity with enough data to deanonymise anything they want to, given time and will.\r\n\r\nI have not ever observed telemetry resulting in an improvement of usability of software. It always ended up just collecting biased data. You can't tell the difference between e.g. a person not being interested in a feature or just not being able to fucking find it or a person not seeing it due to accessibility issues. Yes, all damn software jumps onto that false prophet. And once it does, there's is zero guarantee that said software may not one day add none-of-your-business data to the mix, be it on purpose or by accident. (See the file name concern raised above.)\r\n\r\nLooks like i should more seriously start reinstalling all my software except the browser in sandboxed environments without any network connections. =||= @yonderbread Precisely. There is *no such thing* as truly anonymised data. It's only obfuscated at best. Throw enough effort at it and everything's an open book. And all that for little benefit to the end user. =||= Yikes =||= No. =||= I feel like all the points have been driven in - for telemetry, against all telemetry, against _these_ telemetry services; jokes about \"the audacity of\" Audacity; how badly it will kill the project/the team/my ego/my ex's pet slime mold; rallying calls to pitch forks and spoons - all that remains now is to wait on a decision to be made, and set down the pitchforks for the time being.\r\n\r\nAfter all, we're just a small sample of the audience. Many people use Audacity and may remain blissfully unaware of an issue like this, until people notice it being a problem. It would be rather difficult to rally the momentum behind millions of Audacity users to a random fork over a single issue like this.\r\n\r\nIt is best that we address it _in this project_ primarily, and avoid dragging users through miles of heartbreak over \"which audacity\" to use.\r\n\r\nAlso worth noting: Audacity \u00ae\ufe0f is a registered trademark in the US and other jurisdictions. While I'm not a lawyer, and this is not legal advice: forks really must not carry the name \"Audacity\" on them without permission from its rights-owner - and, in my opinion, even for other reasons aside from the legal. =||= A shitty company will make shitty software, that's no surprise. =||= A summary of the general feeling would be : \r\n\r\n1) Basic telemetry isn't a bad idea but...\r\n2) Opt-in and by default disabled. Ask on first run if the user wishes to enable it, and inform about it.\r\n3) DON'T USE GOOGLE ANALYTICS.  =||= How about we cease the one-word comments and repetition of already-stated arguments and wait for a response from the Audacity team? I think it's pretty clear what the community's stance on this is. Further dilution only hides the actually good arguments. =||= @Zardoz89 I feel misrepresented by your summary. My standpoint is:\r\n\r\n- Telemetry for UX studies is near useless thanks to all the sources of bias in your data.\r\n- Automatic crash reports with user confirmation are super valuable.\r\n- If you absolutely must have telemetry or else someone dies, at least follow the entire GDPR by the letter, take it as dogma, and whatever you do, no Google. =||= > Privacy always trumps any need for telemetry data, no matter how legitimate.\r\n\r\n\\- from the [KDE Telemetry Policy](https://community.kde.org/Policies/Telemetry_Policy).\r\n\r\nI wonder how you got to this decision - as a team or as a FOSS contributor to just say \"yeah, it's fine if we can track users using Google Analytics\" (of all things). Don't you know that Google is a data mining company? Users are the _product_, data is their _currency_.\r\n\r\nBut to keep this constructive, what about another, self-hosted FOSS telemetry library (e.g. https://opentelemetry.io/)? Here's a list of different open source analytics libraries: https://github.com/0xnr/awesome-analytics (seems to be web focused mostly).\r\n\r\nReally hope this doesn't get merged and this direction of questionable changes to Audacity under the new leadership will stop! =||= > Also worth noting: Audacity registered is a registered trademark in the US and other jurisdictions. While I'm not a lawyer, and this is not legal advice: forks really must not carry the name \"Audacity\" on them without permission from its rights-owner - and, in my opinion, even for other reasons aside from the legal.\r\n\r\nthen we can call the fork \"Audacious\" :+1:  =||= Ah, we doing joke fork names? Given the \u00bbaudacity to telemetry\u00ab, how about naming the telemetry-free fork \u00bbRespect\u00ab? =||= > > Also worth noting: Audacity registered is a registered trademark in the US and other jurisdictions. While I'm not a lawyer, and this is not legal advice: forks really must not carry the name \"Audacity\" on them without permission from its rights-owner - and, in my opinion, even for other reasons aside from the legal.\r\n> \r\n> then we can call the fork \"Audacious\" +1\r\n\r\nCall it \"Humility\" or \"Respect\". =||= > Ah, we doing joke fork names? Given the \u00bbaudacity to telemetry\u00ab, how about naming the telemetry-free fork \u00bbRespect\u00ab?\r\n\r\nBeat me to it. =||= I know it's beating a dead horse at this point, but what exactly does adding telemetry accomplish?  Audacity is already the\r\n> Basic audio editing program that runs on damn near anything.\r\n\r\nAnd if there were any scenario in which it were not accomplishing the running on damn near anything which it already does near flawlessly for decades, would not somebody just open a ticket and upload a crashlog?\r\n\r\nThe benefit of FOSS is you don't need metrics on which platforms to support, because if it's not working on your end, you can just patch it until it does.  You don't need to predict what the market wants, just carry it forward every once and a while and barring a backport make old releases available. =||= @yzziizzy Concurrency hard. :) =||= @bbappserver Average Joe\u2122 will indeed not open a GitHub issue with a crash report, 'cause Average Joe\u2122 doesn't even know what GitHub is. We are the tech-savvy 1% here. But that's why i said automated crash/error reports with user confirmation are fine. Nobody has to open an issue, Audacity devs get their stack traces in the formats they prefer, everyone's happy. =||= Absolutely no. Remove it already. \r\nWhy do you think people use this tool in the first place? You are taking away something. VERY bad idea.\r\nResolve this. Make a good decision. Thank you. =||= > @bbappserver Average Joe\u2122 will indeed not open a GitHub issue with a crash report, 'cause Average Joe\u2122 doesn't even know what GitHub is. We are the tech-savvy 1% here. But that's why i said automated crash/error reports with user confirmation are fine. Nobody has to open an issue, Audacity devs get their stack traces in the formats they prefer, everyone's happy.\r\n\r\nSerious suggestion here: Put a button in the top right of the menubar that says \"Complain to the Developers\". It pops up a little input box, 128 character max, and sends it directly to a simple webserver along with the build number and OS version, both visible in the box. 100% anonymous. No UUID's, no machine fingerprints, no sneaky anything. Have a 10 minute cooloff or something to prevent spam. Post all the messages publicly on the audacity website. You will collect the real frustrations of your users very quickly. \r\n\r\nThe wording of the button is important; do not soften it. You want _complaints_, not _feedback_. You want to know when things aren't working to the degree that people are getting frustrated enough to _complain_, not just that someone had a nifty idea about how the icon should be corn-flower blue. =||= As someone who values privacy more. I aggresively disagree with this. If this gets merged, then I guess I have to look for another Audio Recording software. This is just BS and a violation of our Privacy.  =||= > @bbappserver Average Joe\u2122 will indeed not open a GitHub issue with a crash report, 'cause Average Joe\u2122 doesn't even know what GitHub is. We are the tech-savvy 1% here. But that's why i said automated crash/error reports with user confirmation are fine. Nobody has to open an issue, Audacity devs get their stack traces in the formats they prefer, everyone's happy.\r\n\r\nOpening a github issue is by no means the only recourse, the first recommended action in a google search is to ak the forum, then the bugzilla, not the github(though this may be historic, everybody likes the Cloud\u2122 these days.\r\n\r\nFor modernizing bug reports, I would accept being prompted to upload a log as a convenience, but automatically collecting a bunch of log data during normal operation is probably mostly pointless, and having software that doesn't need to constantly call home just always feels nefarious, even if nobody would ever use Audacity to do something nefarious.  Just collect the last hour of logs, and the postmortem if necessary, maybe scrub some paths etc.\r\n\r\nI can see a reason for prompting the user to upload a crash log on relaunch after dirty exit.  And I can see a reason to have a wizard under the help menu for opening a ticket with a simple HTTP POST from within the application for behaviours that are not behaving.   These are always nice to haves for non technical end users.  But session and platform tracking, now that's just dumb. =||= @yzziizzy On that note, i *really* like how MS Teams handles feedback/complaints after video calls. It politely asks for a star rating, you can just click it away. And if you rated, you get the option to specify whether something didn't work. A few checkboxes for expectedly common problems, an input field for custom complaints, done. =||= the level of paranoia on this PR is wildly out of control =||= > the level of paranoia on this PR is wildly out of control\r\n\r\nYour level of denial to the practices of your run of the mill \"Don't be evil\u2122\", \"Do the good thing\u2122\" megacorporations is wildly out of control. =||= > the level of paranoia on this PR is wildly out of control\r\n\r\nFunny, I just wanted to say the same about the level of ignorance. :D  =||= Excuse me what the funk =||= It's not paranoid to act suspicious of unnecessary features in software that is working fine, particularly if it adds a bunch of otherwise unnecessary dependencies that you now have to manage, and depends on an external commercial interest, especially one that has its entire business model predicated on violating your privacy as much as the law will allow. =||= > the level of paranoia on this PR is wildly out of control\r\n\r\nIn some countries, privacy is a matter of life and death. It is understandable that some people have strong feelings about it. \r\n\r\nThat being said, most of the commenters do not have a problem with responsibly implemented, opt-in, truly and fully anonymous, completely FOSS usage data collection. That's not what this PR is. This PR sends the titles of all your windows to a company known to sell data to all sorts of bad actors. =||= I've been using Audacity since 15 years ago and it's perfectly fine without this unnecessary \"telemetry\" and stuff. =||= Also I've heard people defend telemetry because it would help the UI design. Personally I think the UI is fine as it is... =||= > > the level of paranoia on this PR is wildly out of control\r\n> \r\n> In some countries, privacy is a matter of life and death. It is understandable that some people have strong feelings about it.\r\n> \r\n> That being said, most of the commenters do not have a problem with responsibly implemented, opt-in, truly and fully anonymous, completely FOSS usage data collection. That's not what this PR is. This PR sends the titles of all your windows to a company known to sell data to all sorts of bad actors.\r\n\r\nExactly, I wonder how many people will die because US agencies use that data, collected by Google, for drone strikes. =||= This mostly echoes what other people have written but this would be my important shortlist before considering something like this.\r\n\r\n- Implement your own data collection service, use data sampling to make the data volumes reasonable.\r\n- Anonymize all data before it's being written to any kind of storage, preferably in the client when its possible.\r\n- Be GDPR compliant (and really spend some time on understanding what this means).\r\n- Provide a detailed document to the users that explains all the events that are collected.\r\n- Always ask users for consent initially and for every change in what you collect.\r\n =||= > Also I've heard people defend telemetry because it would help the UI design. Personally I think the UI is fine as it is...\r\n\r\nI second this. I'm sick and tired of having to constantly re-learn the UI of this or that application because it was \"modernized\" or the devs just felt like changing everything for fashion reasons. Very seldom is there a legitimate improvement in redesigns, and very often it's a step backwards. Look at Excel 2003 vs the new \"ribbon\" garbage. gedit is basically unusable now with the new CSD hamburger menus. =||= So in conclusion, nobody really likes this. Skedaddle. =||= I speak for the quantified opinion of the masses when I say this isn't going to happen.\r\n\r\nThe finer details of how this isn't going to happen are up to you, Dmitry Vedenko. =||= > - Be GDPR compliant (and really spend some time on understanding what this means).\r\n\r\nIf not, someone will report failures to be compliant to the corresponding offices, there'd be a tongue-lashing, and if things don't get fixed ASAP then, boy will it be expensive. =||= The first post be like\r\n![image](https://user-images.githubusercontent.com/27609692/117412896-2c03b780-aeca-11eb-9d8e-cc1b2f4d0993.png)\r\n =||= Make this ONLY opt-in and I don't have an issue with this. We don't want to give Google even more data. I mean if you need analytics setup Matomo Analytics on a DO box and do it like that. I am 100% sure that DO or AWS will provide servers for free for this open-source project but we can also sponsor this. =||= ![funkyoucrsib](https://user-images.githubusercontent.com/61635519/117413852-fe3c6400-af05-11eb-84f7-cf65dc2de989.jpg)\r\n =||= I would not sponsor for telemetry infrastructure, btw. I prefer throwing my money into the river instead and watch it float. Much better UX. =||= > \r\n> \r\n> ![funkyoucrsib](https://user-images.githubusercontent.com/61635519/117413852-fe3c6400-af05-11eb-84f7-cf65dc2de989.jpg)\r\n\r\nRespect for making that homemade meme right on the spot. =||= At this point most of this pull request is spam. It's very obvious audacity does not need telemetry. As far as I remember that audacity has plugin support. So why not make this a plugin instead? =||= > At this point most of this pull request is spam. It's very obvious audacity does not need telemetry. As far as I remember that audacity has plugin support. So why not make this a plugin instead?\r\n\r\nA plugin tucked away in a repo deep, deep underground where no sunlight will ever reach it. =||= I have a few simple questions.\r\n\r\n1) Why on earth would you need Telemetry in an audio editor like Audacity?\r\n2) Telemetry and Crash Reporting are two different things. Why go with Telemetry?\r\n3) Where is telemetry going to help users? Given that users escape Microsoft's Telemetry and come to GNU/Linux distributions for the privacy (as one of the many of the reasons that they use when they decide to switch OSes) why implement a feature that is so hated in a F/LOSS software that is so used?\r\n4) Audacity is a pretty famous F/LOSS piece of software. Noone is denying that and there are plenty of evidence to back that claim up. Why the telemetry?Why now? What makes you guys think that this is ever going to change (apart from merging such a feature into a perfectly fine piece of software)?\r\n\r\nThank you in advance for taking the time to answer my questions. =||= Who's idea was this? \r\n\r\n![56ebpd](https://user-images.githubusercontent.com/45698918/117416505-0fbe4580-aedf-11eb-892f-5123c39051ba.jpg)\r\n =||= I thought this is a joke. It's not funny. I guess all that had to be said about this has already been said.\n\nI trust the new maintainers will listen to the community and realize doing things this way is not actually going to help Audacity and it's community.\n\nI'll happily share some data with the team to help improve Audacity, but **not like this**. =||= Might as well just use propietary software at this point. =||= > The damage done by even _**suggesting**_ this line of action\r\n\r\nI don't know the communication policy of this project, but any other reasonably large project I know use one of ticket / RFC / forum post / mailing list post to \u201csuggest\u201d something like adding phoning home. A PR is for submitting implementations, as can be directly witnessed here it bifurcates into people discussing the change itself, while others focus on the technicalities of the implementation. So perhaps this is also an opportunity to reset the question how adding things like this are communicated to and discussed with the project first. =||= Nice idea ! You should also add a Bitcoin miner ! =||= No, just no =||= As with modern OSS development in 2021, it is likely the discussion here will be ignored, this PR and any issues marked as \"locked; too heated\", and merged anyway. =||= I would like to raise my concern about this pull request as the maintainer of this software for Arch Linux.\r\nWith several hundreds of packages to maintain I can not spend the time to start devendoring more things, that are being vendored into audacity for no good reason.\r\n\r\nIt is one thing to vendor [your custom version of wxwidgets](https://github.com/audacity/audacity/issues/625) (poorly), and not fix issues with the build system (https://github.com/audacity/audacity/issues/522, https://github.com/audacity/audacity/issues/521, https://github.com/audacity/audacity/issues/519). However, it is something completely different to start vendoring `curl` (poorly) and potentially expose users to its numerous CVEs per year.\r\nTo remove all this and protect users from this harmful decision making adds more work for me.\r\n\r\nThis decision is short sighted and *very* frustrating for users and maintainers alike... =||= Ah yes, Open Source Google Spyware, how great =||= WTF are you doing? You woke up one morning and decided your time was best spent writing this garbage? =||= Regarding the concerns of vendoring dependencies, I recommend considering [vcpkg](https://github.com/microsoft/vcpkg). I recently helped [set up vcpkg for Mixxx's Windows dependencies](https://mixxx.org/news/2021-02-23-build-infrastructure-updates/). Despite being made by Microsoft, it was surprisingly pleasant to work with. It's implemented with CMake scripts and integrates with CMake easily. I suspect Mixxx and Audacity have a lot of dependencies in common so you likely won't need to add many packages to vcpkg yourself. It's quite easy to add new packages to vcpkg and it's easy to vendor the dependencies you need to vendor while keeping the rest up to date. Mixxx uses GitHub Actions to build all Windows dependencies, scp an archive of them to a server, then downloads and caches that archive for the CI jobs on the application code repository. I'd be happy to discuss this further and give you some tips to get started on this if you're interested. =||= It is an absolute no-go to include a tracker. Please remove Google Analytics. I do not want to send my data to Google. And in particular certainly not via Audacity. =||= Well lads, if this gets merged, we might as well create a new fork. I\u2019d absolutely hate it if telemetry were to be in Audacity, even more so if it is Google Analytics. =||= Google Analytics in FOSS... the sheer audacity of it all.\r\n\r\nRealtalk: if you do this expect much of the userbase to move over to a fork without this spyware in it. =||= why the fuck would you add that =||= Don't really think this is a good idea I was hopeful they would just improve the UI and mostly leave it alone but seems I was wrong\r\n\r\nI wouldn't mind if this was opt-in or heck opt-out if the user is prompted after install also don't like the idea of this being done with Google or Yandex\r\n\r\nTracking can be very useful sometimes for fixing bugs but shouldn't be too spook this is only going to push people away from Audacity and probably create many forks\r\n\r\nAlso don't know how true this is since I am probably the worst programmer on earth but many have pointed out that curl is not very secure and have many security bugs =||= Telemetry is not bad. Just make sure Google isn't the one collecting data. Also make it opt-in. =||= That's the beginning of the end of Audacity.\r\n\r\nThat's 5500 lines full of bugs that need to be maintained and will take brain time off the actual program. Such things are actively harmful to projects.\r\n\r\nProjects that have become greedy for improvement so badly that they start to harm themselves (and their users) into a vicious cycle.\r\n\r\n*Actual* users who liked the program and who have something to say about it will leave. And you'll be left with uninvolved people whose usage doesn't reflect the original usage anymore. And so will Audacity die. =||= Can I be in the screenshot? =||= Let's stop collectively posting insults and doomsaying, it's not helpful. The actual points have already been made, and this is just drowning them in the noise. =||= I strongly oppose this change =||= if this gets merged I will have to look for an alternative.  =||= I'll probably too. I try not to use software that \"adds\" my data into Google's magic data collection server lab to do... well nobody knows what they are going to do. =||= @crsib , why doesn't your management just stay away from Audacity development instead of slowly killing it? Just let this program alone, and the community will make it sustain without any telemetry junk!\r\nNice improvements from the very first days of acquisition! =||= \ud83c\udf74 =||= ![Audacity](https://user-images.githubusercontent.com/11233299/117425064-baa42300-af22-11eb-964a-56c462bd88e7.png)\r\n =||= I am against this PR.\r\nNot because it is telemetry, not because it is helpful for the developers\r\n\r\nI am against this because it is not opt-in(It is opt-in, according to @SpyTec), and it is using third-party services suchs as Google Analytics and Yandex. \r\nGood luck writing the new privacy policy and we users are forced to accept =||= The fact that project members discuss implementation details of this instead of questioning the whole idea leads me to believe that a major fork is just a matter of time. =||= > I am against this because it is not opt-in\r\n\r\nIt is opt-in. Looking through the code can verify that =||= How about ***no*** =||= Next up, adding telemetry to the linux kernel via Google analytics.\r\n\r\nJokes aside, a big **NO**. =||= ITT Twitter and Reddit =||= I guess that this is going to be merged anyway, but have you considered at least using a self-hosted OSS analytics solution like [Plausible](plausible.io) or [Matomo](https://matomo.org/) instead of Google/Yandex?\r\n\r\nAt least that's a more privacy friendly solution and should get rid of the quota problem. =||= Traditional way to get feedback from users (which functions they use and how much) was to send questionnaire. I wonder if this would be better alternative (e.g. optional questionnaire shown after first run of newly installed Audacity)\r\n\r\nAlso - I think there are many users which use older versions of Audacity and does not need to update it (because older version just works fine without problems). So probably you will not get actual usage stats this way, but version somewhat skewed to new users / users who update regularly.\r\n\r\nEDIT: I use Audacity a lot and updated to 2.4.2 only after I needed to use some advanced noise reduction trick which was not possible with older version which otherwise worked just fine for some years. =||= For all that I dislike the *idea* of having telemetry in FOSS, as a developer I have to admit that it _can be useful_ for cases such as tracking feature usage and bugs. Honestly, what percentage of users **will take the time to write an issue or a forum post** whenever they have a bug? \r\n\r\nThat being said, *if* telemetry there is, it should absolutely be opt-in, and **not in the GDPR** \"click OK to accept all or spend fifteen minutes clicking on checkboxes to disable everything\" way.  There are numerous FOSS with telemetry that simply, at the first launch, present the user with a \"Do you agree for XXX to send usage data to the developers?\" dialog box with a simple Yes/No answer. \r\n\r\nThat doesn't fix the problem of shipping additional libraries required for telemetry which increases both the time required for OS maintainers to package new releases, and the attack surface. The latter could be solved by providing telemetry-free builds of Audacity for those who want them (remember the ANSI/Unicode Windows builds days?).\r\n\r\nNo real conclusion in this comment, I simply wrote it to say that the issue isn't as simple as \"Telemetry bad\". =||= It would be especially ironic if after all this true user feedback, Audacity decides to still spy on their users. Clearly it would show that \"user feedback\" is **not** what they really care about, at all. =||= If this gets merged, the project will be forked and the community split. =||= You will own nothing and you will be happy. =||= > > Let's not get hyperbolic here. Audacity is licensed under the GPLv2. Nobody can make it proprietary.\r\n> \r\n> if muse group holds the license to all the code, they can simply not release future versions under the GPL. the existing code would exist, but the other code wouldn't be GPL licensed.\r\n\r\nWhile we may choose to uplicense as necessary (ex: GPLv2 --> GPLv3), Audacity was born GPL and will remain GPL for as long as it will exist.\r\n\r\nUplicensing is also not something to take lightly either, as there are considerable downstream implications. It should only be done when there is a genuine blocker that prevents enhancements that are clear benefits to the user. \r\n\r\nA good example of such a blocker is the VST3 SDK which is GLPv3. If Audacity is not uplicensed to GLPv3, VST3 support is not possible, significantly limiting future capability and user choice.\r\n\r\nEvery choice we make as a company in contribution to the open source initiatives that we support is in service of improving the experience of the user.\r\n\r\nPart of our commitment to open source is a commitment to transparency. Being fully transparent, the CLA of the open source projects we support does grant some form of flexibility in licensing. But what does this mean?\r\n\r\nI will use the example of MuseScore. The MuseScore CLA does allow for the possibility to dual license the source code as GPL and proprietary, so long as it remains also available under GPL.\r\n\r\nBut why would we ever want to do this? How could this possibly be in service of the user and user choice?\r\n\r\nTo answer this, let's back up to when the Audacity project began. At that time, the most powerful and capable mobile devices on the market had a 2 inch bitmap screen. The most powerful potential of the capabilities of that device was the ability to play Snake.\r\n\r\nFast forward to now, where the new iPad Pro devices are even more powerful and capable than Apple's top Macbook Pro.\r\n\r\nUser choice also means choice of devices they wish to experience the software on. But there is only one problem. The ability to install software on some devices is limited by the manufacturer who acts as gatekeeper. \r\n\r\nAs we have learned from the Apple/VLC issue from a few years back, there is considerable risk with being subject to these sole gatekeepers and their interpretation of GPL. To minimize such risk, it is good to have more flexible options for limited scenarios such as alternative licensing for a specific build for a specific platform to solve a specific issue (ex: excluded from platform due to GLP as in VLC case).\r\n\r\nIn more simple terms, we view the potential of dual licensing as an insurance policy in order to ensure availability for the user on the platform of their choice.\r\n\r\nAll of this is simply words. I completely understand this. I can only suggest that you look to our actions, particularly as it is related with MuseScore. =||= > \r\n> \r\n> > I am against this because it is not opt-in\r\n> \r\n> It is opt-in. Looking through the code can verify that\r\n\r\nIt's not opt-in if the default is on.\r\n\r\nhttps://github.com/audacity/audacity/pull/835/files#diff-38452b2ab9b100d5046eb855410add20e6158dbc69533301bfc15f6d0913d3efR93-R94 =||= Things like this are the work of corporate developers, not software engineers and computer scientists. Let it be known that users, especially those in the open source community, will not stand to be spied on.\r\n\r\nThis is quite possibly one of the largest rebuttals to a pull request I've seen, second only to GitHub's DMCA on youtube-dl (which I have commonly used in conjunction with audacity actually).\r\n\r\nGood job people. =||= > I can only suggest that you look to our actions\r\n\r\nThis action looks very bad right now. Your response with an essay on a tangential issue rather than addressing the substance of this pull request only adds fuel to the fire. =||= > I can only suggest that you look to our actions\r\n\r\n@workedintheory You seem to be including Google Analytics in Audacity as opt-out. Looking at that action alone shows that you are hostile towards your users: you data-mine them and feed the results into Google, so you can get a little bit of that data for yourself in return. =||= A big **NO**. Waiting for a split/fork and staying with the previous version. =||= Original Author:\r\n> Universal Google Analytics is used to track the following events:\r\n> \r\n>     * Session start and end\r\n> \r\n>     * Errors, including errors from the sqlite3 engine, as we need to debug corruption issues reported on the Audacity forum\r\n> \r\n>     * Usage of effects, sound generators, analysis tools, so we can prioritize future improvements.\r\n> \r\n>     * Usage of file formats for import and export\r\n> \r\n>     * OS and Audacity versions\r\n\r\n\r\nMe Last Night:\r\n> > while we're on the topic of problematically bundling dependencies why on earth does Audacity have an SQLite server **Database** in it in the first place?\r\n> \r\n> I have answered my own question, aup3 files are actually SQLite databases. Seems like a strange design decision but this PR is not the place to argue about such things.\r\n\r\nI have realized that the phrase \"Errors, including errors from the sqlite3 engine,\" is deliberately misleading. As mentioned in the Quote from an off topic discussion earlier the SQLlite3 engine IS the save file handler in the (new and ill-conceived) Audacity 3.0 save format. So without going through 5000 lines of code to confirm this there is a distinct possibility that \r\n\r\n## __this code is uploading portions of your save files to Google and Yandex__. \r\n\r\nWhich is not as harmless as the developers have indicated but is a major invasion of privacy.\r\n\r\nI commented last night that this is not the time to argue about save files, but it has come to my attention that even Archlinux (a distribution known for tracking software releases quickly) is refusing to update past Audacity 2.4.1 Which implies there is something fundamentally wrong with the new release. I think that the new save format which is evidently causing many issues on the forum is part of this problem. \r\n\r\nSo a message for the devs: If you ditch this ill conceived idea of using web tech to store real time audio data that is fundamentally incompatible with how people want to use the software, maybe to won't need telemetry to track why it's broken. I can tell you why its broken RN, it was a bad idea!\r\n\r\nI demand a community petition to roll the entire project back to v2.4, and divorce from MuZegroup\r\n \r\n =||= As the founder of Kludge Cyber Systems we are happy to make and adopt a community fork if this is merged. Rest assured, this ship will not sail anywhere other than the seas of freedom. =||= @falkTX has already offered to maintain a fork. If that ends up being necessary, it would best be done by someone with a strong reputation and skills in cooperative audio software. =||= > As the founder of Kludge Cyber Systems we are happy to make and adopt a community fork if this is merged. Rest assured, this ship will not sail anywhere other than the seas of freedom.\r\n\r\nI thought this was a joke at first. Then I realized you really did found a company called Kludge Cyber Systems. My bad =||= > I thought this was a joke at first. Then I realized you really did found a company called Kludge Cyber Systems. My bad\r\n\r\nNo worries. My friends laughed at me for the name when I made it, too. But ultimately I founded it to prove to myself you don't have to swallow your morals to be successful, so that doesn't matter to me\r\n\r\n> @falkTX has already offered to maintain a fork. If that ends up being necessary, it would best be done by someone with a strong reputation and skills in cooperative audio software.\r\n\r\nI agree. This would be our first undertaking into audio software, but we pick up on things very quickly, and in general have a good reputation with maintaining open source projects of many sizes. For instance, we have inherited 2 year old Python abandonware, I myself know C++, Go, Rust, et cetera, and we are strong advocates of open source software.\r\n\r\nNot to toot my own trumpet, though - this decision is best left to the community as a whole. =||= This is a really bad idea =||= > No worries. My friends laughed at me for the name when I made it, too. But ultimately I founded it to prove to myself you don't have to swallow your morals to be successful, so that doesn't matter to me\r\n\r\nI like the name :) =||= _Embrace, Extend, Exterminate_ =||= > \r\n> \r\n> > > I am against this because it is not opt-in\r\n> > \r\n> > \r\n> > It is opt-in. Looking through the code can verify that\r\n> \r\n> It's not opt-in if the default is on.\r\n> \r\n> [#835 (files)](https://github.com/audacity/audacity/pull/835/files#diff-38452b2ab9b100d5046eb855410add20e6158dbc69533301bfc15f6d0913d3efR93-R94)\r\n\r\nNo, it is opt-in. You're referring to a modal with \"Yes\" already focused so that pressing enter key will enable it. You still have a yes and no button next to each other. Throughout the code telemetry is disabled and will only be enabled if the user clicks yes. Focusing on the confirmation button does not mean it's opt-out =||= > No, it is opt-in. You're referring to a modal with \"Yes\" already focused so that pressing enter key will enable it.\r\n\r\nI do have to ask, though - why is this even necessary? The only thing software like this needs to collect is when errors occur and crash logs happen, at which point a popup should display at the end of the session or on crash letting them see the log that's about to be sent and asking if they want to report it. =||= > This request provides the basic telemetry for Audacity.\r\n> \r\n> To implement the network layer libcurl is used to avoid issues with the built-in networking of the wxWidgets.\r\n> \r\n> Universal Google Analytics is used to track the following events:\r\n> \r\n> * Session start and end\r\n> * Errors, including errors from the sqlite3 engine, as we need to debug corruption issues reported on the Audacity forum\r\n> * Usage of effects, sound generators, analysis tools, so we can prioritize future improvements.\r\n> * Usage of file formats for import and export\r\n> * OS and Audacity versions\r\n> \r\n> To identify sessions we use a UUID, which is generated and stored on the client machine.\r\n> \r\n> We use Yandex Metrica to be able to correctly estimate the daily active users correctly. We have to use the second service as Google Analytics is known to have some really tight quotas.\r\n> \r\n> Both services also record the IP the request is coming from.\r\n> \r\n> Telemetry collection is optional and configurable at any time. In case of data sharing is disabled - all calls to the telemetry Report* functions are no-op.\r\n> \r\n> Additionally, this pull request comes with a set of libraries to help the future efforts on Audacity.\r\n\r\nTo whom it may concern,\r\n\r\nI speak as only an individual amongst the huge FOSS community, so value the following comments as just a representation of only MY feelings & opinions on this matter.\r\n\r\n*But* take note that this is the **FIRST** time that I have ever been so against a decision that I have felt that I needed to voice my opinion on it.\r\n\r\n\r\nSo the first issue I have here is just how **poorly** the *Audacity Development Team* have handled this entire Push Request/Suggested Changes process.\r\nYou have failed from the very outset to identify that as a widely used and well loved FOSS, you will be, and must be, at all times subject to public scrutiny of decisions prior to **ANY** kind of code changes being submitted.\r\n\r\nYour entire teams complete lack of transparency, and the failure of your team to respond adequately & promptly following such a strong public disagreement shows that the systems you have in place for managing Public Relations are an utter shambles and really need to have attention paid to them so that situations similar to this if they do occur in the future aren't pushed through with such complete disregard for end-users & package maintainers.\r\n\r\n\r\nNow that I have highlighted the flaws in the poor execution of public relations with the community I shall now move on to addressing the actual Code Commit itself, it's contents, it's intentions, and it's usefulness.\r\n\r\n##1.) The addition of Telemetry inside of a FOSS project\r\n\r\nNow that I have clearly outlined in the title of this section exactly what I will now cover you should hopefully be prepared to listen to and take note of the issues that I have with this change.\r\n\r\nFOSS prides itself on being highly privacy-focused and open, this is something that many people in the FOSS community see as a cornerstone of FOSS development, and it seems that the the Audacity Development Team have failed to realise just how critical privacy is to many people that choose Linux and FOSS as thier chosen methods of software interaction.\r\n\r\nTelemetry is not welcome in FOSS software, regardless of the project, and as someone who helps support a FOSS project I can tell you from my own personal experience that Telemetry is essentislly useless to most people looking to find faults with and fix bugs in software, the methods with which the data is gathered, and, the inability for that data to be understood from the users perspective mean that it is impossible to gain any useful context from Telemetry Data.\r\n\r\nThe Audactiy Development Team should be fully aware that Telemetry is useless for all but some very invasive marketing and analytical subjections.\r\n\r\n***WHY*** **did you ever think this was an acceptable change to make?**\r\n\r\n**Do you think we are stupid?**\r\n\r\nUnder no circumstances should Telemetry be included into Audacity.\r\nIt doesn't belong in FOSS projects under any circumstances.\r\n\r\nAnd, your attitude towards how you have handled it's suggested integration into Audacity highlights your complete disconnection from the huge community that uses Audacity.\r\n\r\n\r\nStop the process here and now.\r\nGo back to the drawing board and re-evaluate the feedback you have recieved from the community on this matter.\r\nYou'll learn a lot by listening to the communtiy and taking on-board the feedback that has been provided.\r\n\r\nDon't make us fork this project just because you are unable to accept honest criticism from your end-users.\r\nDo the right thing, work with us to improve the project in ways that the community want it to be improved.\r\n\r\n\r\nThe last two points I was going to cover are frankly irrelevant because they don't even need to be considered once you taken on-board my feedback on the first point.\r\nBut just in case you think you know better than your own end-users..... \r\n\r\n***NO Google. NO Yandex.***\r\n\r\n**NO Opportunity for discussions on the matter either. It's the communities way or the highway for the current Audacity Development Team.**\r\n\r\n\r\nTake heed, we want our values preserved, please don't fight against us on this matter.\r\n\r\n\r\n\r\n =||= I like the guy above me. =||= Don't merge this. =||= This is sus as. =||= Where am i? =||= If I had to guess, I don't think the community wants this. Not like there's 19 likes and 1570 dislikes.\r\nIn all seriousness, this might contribute to the development of Audacity but this seems unnecessary, especially with the existence of forums. If there's a crash... just post it on the forums. No automation or Google Analytics required, and users can leave their privacy concerns at rest. =||= > Where am i?\r\n\r\nThe place from where it all went down :( =||= This is preaching to the choir and may be melodramatic grandstanding: the spirit of Audacity was a open research project at Carnegie Mellon. I don't speak for my institution, but it seems like many of my peers are all to eager to cash out with a lucrative big tech job violating people's privacies. Somewhere along the way, most of the hacker spirit died and programming just became a way to market and track people more.  =||= > > Where am i?\r\n> \r\n> The place from where it all went down :(\r\n\r\n@CristhianCC and me looking at this PR :D\r\n![image](https://user-images.githubusercontent.com/30338644/117431827-f7274d00-af29-11eb-94ed-1162cd2a4e62.png)\r\n =||= Use internal infrastructure instead of relying on a third party for analytics collection, please. =||= > This is preaching to the choir and may be melodramatic grandstanding: the spirit of Audacity was a open research project at Carnegie Mellon. I don't speak for my institution, but it seems like many of my peers are all to eager to cash out with a lucrative big tech job violating people's privacies. Somewhere along the way, most of the hacker spirit died and programming just became a way to market and track people more.\r\n\r\nThat isn't software engineering. That isn't computer science. It's computer industry. Your peers can enjoy it, but I'd hope you reasonably want no part of it, and certainly nor do the rest of us. =||= Polite reminder this is GITHUB, not your local discord server. Please keep discussions on topic, and ensure every new post adds to the discussion. As a further reminder every time someone clicks \"Comment\" about 200 people get an email.  =||= > adds\r\n\r\nSorry, i thought Reddit had a new feature to upload code. My bad. =||= > All of this is simply words. I completely understand this. I can only suggest that you look to our actions, particularly as it is related with MuseScore.\r\n\r\nThese are all very sweet words. But the TL'DR of your message is that you are somehow implying you will add a CLA to be able dual license Audacity, i.e. add a non-GPL version. Could you please clarify if you obtained that permission from all main constributors of _the existing code base_ (which in my understanding is a precondition to add dual licensing), and what you intend to do with code that has been submitted by people who were not part of that deal? =||= > and ensure every new post adds to the discussion.\r\n\r\nI think that ship sailed 200 comments ago =||= > All of this is simply words. I completely understand this. I can only suggest that you look to our actions, particularly as it is related with MuseScore.\r\n\r\nNot really a strong leg to stand on MuseScore has been littered with subscription only features and bolted to a closed source server infrastructure. With as far as I can tell little input from the community about if that is what they want. Muse is about monetizing these apps not improving them. =||= Currently over 99.97% of the reactions to the original commit are negative. Clearly the users are overwhelming opposed to it. If it gets added that will be a massive middle finger to people who have used Audacity all these years and will most likely result in a loss of users. =||= BTW Ardour is Free Open Source, has no tracking, and still manages to fund its self. BTW its also got 90% of the features of Audacity, and is a viable exit strategy for many.\r\n\r\n * Cough * https://ardour.org/ * cough * =||= > Currently over 99.97% of the reactions to the original commit are negative. Clearly the users are overwhelming opposed to it. If it gets added that will be a massive middle finger to people who have used Audacity all these years and will most likely result in a loss of users.\r\n\r\nMost users who were led here by reddit, HN, etc. It would be more fair to survey \"the typical Audacity users\" (what telemetry does, but voluntarily). I think Audacity users care about open source, but a lot of people couldn't care less and just use it because it's free. Or maybe distro maintainers will decide whether or not to use a fork. =||= https://old.reddit.com/r/programming/comments/n6kxm8/psa_audacity_pr_to_add_telemetry_sharing_user/gx91j70/\r\n\r\n> We're going to be writing up an announcement about this soon. Apologies for the delay. I just woke up to see this thread.\r\n> \r\n> To calm those who are concerned, here are the facts about the telemetry PR:\r\n> \r\n> The purpose is to collect app performance statistics. Most importantly, the crash rate.\r\n> It is anonymous. There is understandable concern that this is intended to collect personal information. It really isn't.\r\n> This has absolutely nothing to do with advertising of any kind\r\n> It is optional. We ask users whether they will allow us to collect these statistics when the app opens. You can say 'no' and we don't ask again. We can not automatically track anything by law and wouldn't try to.\r\n> There is nothing sneaky about our intentions here. We've been getting a few disturbing comments about crashes on large projects and we want to determine how widespread they are. It's a very useful tool to help us keep the app stable.\r\n> \r\n> This message won't answer every concern raised here. We're getting on that. Just thought I'd at least let you know the basics.\r\n> \r\n> edit: it is also disabled by default =||= Getting back on topic.. sorry to say but Google Analitycs and Datadog are ones of the most intrusive methods to datamine the user, the way and the ammount of data that it collects its disgustingly wide.\r\n\r\nI honestly wouldn't feel comfortable knowing that Audacity uses it, even if there was a button to disable it. =||= > Most users who were led here by reddit, HN, etc. It would be more fair to survey \"the typical Audacity users\" (what telemetry does, but voluntarily).\r\n\r\nAnecdotal data point: I'm a regular Audacity user and I also learned about this issue via Reddit. (I don't know if I would have learned about this in time if it wasn't for Reddit/HN.) I assume that many of the people speaking in this thread actually use the application instead of participating in storms about applications they don't even use or haven't seen them used themselves. =||= > Telemetry is not welcome in FOSS software, regardless of the project, and as someone who helps support a FOSS project I can tell you from my own personal experience that Telemetry is essentislly useless to most people looking to find faults with and fix bugs in software, the methods with which the data is gathered, and, the inability for that data to be understood from the users perspective mean that it is impossible to gain any useful context from Telemetry Data.\r\n\r\n@TOGLK I understand the motive behind it but I disagree with this. While I do admit that telemetry is useless for the end user, it's *theoretically* only directly useless for them. If developers use telemetry properly, this will indirectly be useful for the end user as many more bugs will get squashed which will make it more stable and potentially faster, but that's only if developers use telemetry properly.\r\n\r\nI'm all for FOSS telemetry. I don't like opt-in or opt-out telemetry; I prefer a prompt at first launch that asks the user if they want to enable telemetry or not, which can then be enabled or disabled in the settings depending on what you chose initially.\r\n\r\nThat being said, I'm all for FOSS telemetry. Google Analytics is something I will sincerely disagree with however. =||= > > Currently over 99.97% of the reactions to the original commit are negative. Clearly the users are overwhelming opposed to it. If it gets added that will be a massive middle finger to people who have used Audacity all these years and will most likely result in a loss of users.\r\n> \r\n> Most users who were led here by reddit, HN, etc. It would be more fair to survey \"the typical Audacity users\" (what telemetry does, but voluntarily). I think Audacity users care about open source, but a lot of people couldn't care less and just use it because it's free. Or maybe distro maintainers will decide whether or not to use a fork.\r\n\r\nThat may be the case but that doesn't mean when the average user hears about this and how it was added to Audacity anyway despite the overwhelming concerns of other developers that there won't be a loss of users, not all users, most likely not a majority of users, but it will still drive people away from the program. Are the benefits of telemetry worth that loss? =||= \r\n\r\n> https://old.reddit.com/r/programming/comments/n6kxm8/psa_audacity_pr_to_add_telemetry_sharing_user/gx91j70/\r\n> \r\n> > We're going to be writing up an announcement about this soon. Apologies for the delay. I just woke up to see this thread.\r\n> > To calm those who are concerned, here are the facts about the telemetry PR:\r\n> > The purpose is to collect app performance statistics. Most importantly, the crash rate.\r\n> > It is anonymous. There is understandable concern that this is intended to collect personal information. It really isn't.\r\n> > This has absolutely nothing to do with advertising of any kind\r\n> > It is optional. We ask users whether they will allow us to collect these statistics when the app opens. You can say 'no' and we don't ask again. We can not automatically track anything by law and wouldn't try to.\r\n> > There is nothing sneaky about our intentions here. We've been getting a few disturbing comments about crashes on large projects and we want to determine how widespread they are. It's a very useful tool to help us keep the app stable.\r\n> > This message won't answer every concern raised here. We're getting on that. Just thought I'd at least let you know the basics.\r\n> > edit: it is also disabled by default\r\n\r\nThis response by Tantracrul misses most of the complaints people have. I am not hopeful at this stage for the Audacity team to actually listen to the feedback. =||= This is a terrible idea, and is a crime against the values of many of your core users. Absolutely immoral. =||= I have a Distro developer telling me they are preparing a patch to remove this PR from future builds for their OS. So this is already starting to fracture the product. =||= Why do you want telemetry this much with all these services?\r\nThey're never going to make their way into this software, move on and make your own fork of audacity with Google Analytics telemetry if you want, but keep in mind that it isn't Audacity's goal to track (not directly) its users. =||= Yandex, seriously? Like a KGB cyber front? Haha, try harder next time... =||= All I will say is that after [this little gem](https://github.com/Xmader/musescore-downloader/issues/5) where, after the acquisition by Ultimate Guitar (now Muse Group), MuseScore developers threatened a developer with sending the police to their door for *using a public API* to download sheet music... I am not in the least bit surprised that their first move after taking control of Audacity would be something like this.\r\n\r\n> Otherwise, I will have to transfer information about you to lawyers who will cooperate with github.com and Chinese government to physically find you and stop the illegal use of licensed content.\r\n\r\nSeriously, read the whole thread for more. =||= This IMHO (and the success of programs like Blender) is the proof that FLOSS projects work best as non-profit endeavors (e.g. foundations) backed by donations. We have to change the culture so that all users realize the value of FLOSS programs they use and donate to feed the people who put their work into those programs! =||= The success of a fork or a continuing series of patches depends on where the regular contributors contribute to. The same issue arose when youtube-dl got into hot water on github. Have the regular contributors made any statements yet?  =||= > This IMHO (and the success of programs like Blender) is the proof that FLOSS projects work best as non-profit endeavors (e.g. foundations) backed by donations. We have to change the culture so that all users realize the value of FLOSS programs they use and donate to feed the people who put their work into those programs!\r\n\r\nYes, take a look at Krita and Ardour for positive examples of how to fund cooperative creative software. @workedintheory I recommend you have some discussions with the developers of those software about how they make it work in practice. =||= > every time someone clicks \"Comment\" about 200 people get an email.\r\n\r\nGood. Telemetry is not wanted.\r\n =||= pls never merge this. =||= this is a horrible, horrible idea =||= It really is a bad omen if the first thing that MuseScore does is implement user tracking using Google, of all things. =||= > Polite reminder this is GITHUB, not your local discord server. Please keep discussions on topic, and ensure every new post adds to the discussion. As a further reminder every time someone clicks \"Comment\" about 200 people get an email.\r\n\r\nWhat's the point of being constructive? This is garbage pull request, the points have been made, and now the only thing left is to get those points across. =||= I am as an end user firmly in the camp this pull request should be rejected as one it raises serious privacy concerns and two it will cause a fork. If something like this is allowed in can I trust the Audacity team any more? Because from where I'm standing I can not and this is coming from a long time user that has used Audacity in a professional context and suggested it to other people over the years.  The fact parts of the code are obviously obfuscated to hide what they actually do and where they are sending data is worrying especially with the fact we know there are actors out there trying to initiate supply chain attacks on OSS projects. \r\n\r\nEDIT: One thing I forgot to mention is I have no issue with some telemetry per say it's more the providers being used to process it as I know Google has been caught in the past intentionally trying to link 3rd part apps and services using their analytics to their user tracking database.  I do believe a better solution can be found with a little time with the greater community.  =||= yay another fork and revert  =||= > It really is a bad omen if the first thing that MuseScore does is implement user tracking using Google, of all things.\r\n\r\nIt's true. I haven't seen a single UX improvement yet. =||= > The fact parts of the code are obviously obfuscated to hide what they actually do\r\n\r\nThe Audacity code is not obfuscated. It's right here in this pull request, have a look yourself if you want. Multiple people have already. However, the code running on the servers this data is sent to *is* proprietary. =||= Please no. Thank you. =||= The telemetry should be put behind a define so one could compile Audacity without telemetry. Opt In after compiling it and optional in the compilation process. =||= This is an awful idea. At least you could have tried to implement it in some non-google, open-source way. If this gets accepted, you are losing me as a devoted Audacity user. Please do not continue with these efforts. =||= Umpteenth user chiming in: the issue is not telemetry, it's the provider used. I am happy to provide telemetry data, so long as the telemetry infrastructure is open source and hosted by Audacity. A black box is unacceptable in free and open-source software. =||= \"Additionally, this pull request comes with a set of libraries to help the future efforts on Audacity.\"\r\nPutting sugar on crap doesn't make it not crap. =||= > Umpteenth user chiming in: the issue is not telemetry, it's the provider used. I am happy to provide telemetry data, so long as the telemetry infrastructure is open source and hosted by Audacity. A black box is unacceptable in free and open-source software.\r\n\r\nMaybe making it viewable for everyone would also help? Because that way everyone knows transparently whats being collected + independend devs can also use that data for improving the software. =||= People really going \"these people came here from reddit, they're not real users\" when the merge request calls the program \"the audacity\" like some geezer calling their grandkids' favorite game \"the pokemon\" =||= > People really going \"these people came here from reddit, they're not real users\" when the merge request calls the program \"the audacity\" like some geezer calling their grandkids' favorite game \"the pokemon\"\r\n\r\nThat they had _the audacity_ to do this \ud83e\udd2a (sorry I couldn't help myself) =||= It will be the \"Vital vs Vitalium\" situation all over again. An audio editing tool is an audio editing tool, not something that connects to your toaster and short-circuits it.\r\n\r\nBut if you're butt-tight about telemetry, how about using something like [plausible](https://plausible.io/) instead of Google analytics? Plausible is open source and can be self hosted. =||= I wouldn't care a lot about this but it is using Google analytics. No just no.  =||= > Umpteenth user chiming in: the issue is not telemetry, it's the provider used. I am happy to provide telemetry data, so long as the telemetry infrastructure is open source and hosted by Audacity. A black box is unacceptable in free and open-source software.\r\n\r\nEven if the infrastructure is FLOSS, once your data leaves your computer you have no control over it. Audacity's servers could still send it to other servers owned by ad companies. My question is: since Muse Group is a for-profit company and it decided to buy Audacity, which is clearly an offline program, why did they buy it?\u00a0What is their proposed business model? =||= bruh =||= And this, dear viewers, is the first step of a formerly very popular foss software into irrelevance.\r\nFair well, it was a good time before it stopped being Free and Libre Open Source software. =||= > People really going \"these people came here from reddit, they're not real users\" when the merge request calls the program \"the audacity\" like some geezer calling their grandkids' favorite game \"the pokemon\"\r\n\r\nMuse Group developers appear to be located in Russia. I wouldn't hassle them over English usage =||= > Umpteenth user chiming in: the issue is not telemetry, it's the provider used. I am happy to provide telemetry data, so long as the telemetry infrastructure is open source and hosted by Audacity. A black box is unacceptable in free and open-source software.\r\n\r\nI would like to point out that I am NOT happy with any telemetry. Telemetry shows a shift from the user base being a community to being a customer base. Instead of cooperating with the community a telemetry system spies on them, and stores its findings in a database that only a handful of developers can access. This is flies in the face of the fundamental goals of free open source software that anyone can contribute and all project materials are freely available. =||= I think its clear that most of us don't like this PR, can we finally agree on that and cancel this PR?\r\n\r\n![image](https://user-images.githubusercontent.com/30338644/117439179-d283a300-af32-11eb-84db-f86f2695ac04.png)\r\n\r\n\r\nWorst case scenario, we can always make a fork if people want to keep using it without the proposed changes. =||= To all people complaining here, MuseScore already includes google analytics.\r\nhttps://github.com/musescore/MuseScore/tree/master/thirdparty/qt-google-analytics\r\n\r\nSo they likely already have a working setup with GA, it makes sense (for them, on their side) to use the same setup once again.\r\n\r\nI think complaining here will do nothing. They will merge this and just wait for the storm to die out as usual.\r\n =||= \r\n\r\n> To all people complaining here, MuseScore already includes google analytics.\r\n> https://github.com/musescore/MuseScore/tree/master/thirdparty/qt-google-analytics\r\n> \r\n> So they likely already have a working setup with GA, so make sense (for them, on their side) to use the same setup once again.\r\n> \r\n> I think complaining here will do nothing. They will merge this and just wait for the storm to die out as usual.\r\n\r\nI think it still makes sense to put it behind a define - maybe even making the data public - its open source after all (but especially not using Google or Yandex would help) =||= > I think its clear that most of us don't like this PR, can we finally agree on that and cancel this PR?\r\n\r\nThe people who can do that are project maintainers and members i.e. the people who have permissions to for this repo. =||= This was a dumb idea. It is just going to mean the project gets forked and the developers move. =||= > I think its clear that most of us don't like this PR, can we finally agree on that and cancel this PR?\r\n> \r\n> `<image snipped>`\r\n> \r\n> Worst case scenario, we can always make a fork if people want to keep using it without the proposed changes.\r\n\r\n\r\n\r\n> bruh\r\n\r\n\r\n> I don't like you.\r\n\r\nPolite reminder this is GITHUB, not your local discord server. Please keep discussions on topic, and ensure every new post adds to the discussion. As a further reminder every time someone clicks \"Comment\" about 200 people get an email.\r\n\r\n@Frenzoid  @CristhianCC  Final warning both of you before you get passed up to the GitHub Moderation team\r\n\r\n\r\n =||= @falkTX, so is distrho ports going to have a new addition? =||= I agree, terrible idea. I will use a fork. =||= Regular users shouldn't have their data unsolicitedly sent to servers. =||= we engage in subtle ammounts of tomfoolery =||= > @falkTX, so is distrho ports going to have a new addition?\r\n\r\ndistrho-ports is for juce plugins, not this.\r\n\r\nfor open-source and linux distributions in general, the best we can do for audacity is de-vendor the dependencies as much as possible.\r\nthe custom modifications to wxwidgets are particularly hard to deal with for packaging #625 =||= > To all people complaining here, MuseScore already includes google analytics.\r\n> https://github.com/musescore/MuseScore/tree/master/thirdparty/qt-google-analytics\r\n> \r\n> So they likely already have a working setup with GA, it makes sense (for them, on their side) to use the same setup once again.\r\n> \r\n> I think complaining here will do nothing. They will merge this and just wait for the storm to die out as usual.\r\n\r\nWell if true that's that. Time of death May 2021, age 22 years. =||= For error reporting a good alternative could be sentry.io, as it's opensource and has way better tools for catching errors.\r\n\r\nFor tracking there's always matomo.org, which is also opensource. =||= Please do not add telemetry to Audacity. I do not like the idea in general but using Google makes this even worse.\r\nMaybe use polls and surveys to find out how people are using the program. I'm 1000 times more willing to fill out a survey than passively provide use information. I'm sure many other people feel the same, especially since this is open source software that people are inclined to trust more than proprietary software. =||= > \r\n> \r\n> > > Where am i?\r\n> > \r\n> > \r\n> > The place from where it all went down :(\r\n> > @CristhianCC and me :D\r\n> > ![image](https://user-images.githubusercontent.com/30338644/117431827-f7274d00-af29-11eb-94ed-1162cd2a4e62.png)\r\n\r\n\r\n\r\n> \r\n> \r\n> > To all people complaining here, MuseScore already includes google analytics.\r\n> > https://github.com/musescore/MuseScore/tree/master/thirdparty/qt-google-analytics\r\n> > So they likely already have a working setup with GA, it makes sense (for them, on their side) to use the same setup once again.\r\n> > I think complaining here will do nothing. They will merge this and just wait for the storm to die out as usual.\r\n> \r\n> Well if true that's that. Time of death May 2021, age 22 years.\r\n\r\nPolite reminder this is GITHUB, not your local discord server. Please keep discussions on topic, and ensure every new post adds to the discussion. As a further reminder every time someone clicks \"Comment\" about 200 people get an email.\r\n\r\n@IGBC Final warning before you get passed up to the GitHub Moderation team =||= Dear all,\r\n\r\nWe have updated the PR description to clarify what is going on. =||= I think its quite clear that people dont like this PR, as for this topic, as i said before, its gotten out of hands.\r\n\r\nPeople already said more than 10 times that noone wants these changes, and the fact that it doesnt stop says alot about the progression of this topic.\r\n\r\nIts gotten to the point where the conclusion of the topic is more than clear, and theres nothing else to add that could change the mind of the users.\r\n\r\nThe topic should be closed at this point, you wanted a feedback for this PR, and you got it.\r\n\r\n\r\n\r\nNot meant to be rude with this message, but the topic started deviating from the original subject long ago. =||= > Dear all,\r\n> \r\n> We have updated the PR description to clarify what is going on.\r\n\r\nIf this is absolutely necessary - what about at least making the data public (anonymized) and using open-source tools? =||= Please do not add telemetry to this project. =||= > Dear all,\r\n> \r\n> We have updated the PR description to clarify what is going on.\r\n\r\nThe updated description states:\r\n\r\n> We will consider replacing Google and Yandex with another service if we find one that fulfills our requirements - thanks for the suggestions and keep them coming.\r\n\r\nAs-is, going with GA is crossing a line many people here expressed not being okay with.\r\n\r\nI am personally not okay with any kind of analytics, but if it really has to happen without question, FFS do not use Google.\r\nThe fact that we even need to state this makes me lose hope on the development process of the team behind Audacity.\r\n =||= >     2\\. Telemetry only works in the builds made by GitHub CI from the official repo (the telemetry URLs are only defined there).\r\n\r\nThis will essentially erase all users of your software not using Windows or MacOS, as most UNIXes rebuild the software on their own servers which will automatically exclude them from your statistics. With an automatic measurement bias such as this how do you expect to extract meaningful information from this move, without punishing users on platforms that are not supporting your telemetry? =||= > Regular users shouldn't have their data unsolicitedly sent to servers.\r\n\r\nPlease fully read the PR comment:\r\n`Telemetry is\u00a0strictly optional and disabled by default. No data is shared unless you choose to opt-in and enable telemetry. `.\r\n\r\nI don't know, do you cry over the fact that when Firefox crashes you can send crash info back to Mozilla? =||= Please don't merge this. I don't want to share my data \u2013 especially not with a google service. =||= I agree with @falkTX. I would like to see a clear, unambiguous commitment now that you will *not* use Google Analytics *nor* Yandex. To quote [KDE's Telemetry Policy](https://community.kde.org/Policies/Telemetry_Policy):\r\n\r\n> Privacy always trumps any need for telemetry data, no matter how legitimate.\r\n\r\nI understand it will take some time to evaluate the various alternatives that have been proposed and decide on one. If none fulfill everything you wanted, then continuing with Google Analytics and/or Yandex is still not acceptable. =||= Even its disabled by default, the fact that it use GA and Yandex as first start is still disappointing. Should have choose the free open source analytics one if still insisting doing telemetry =||= > Telemetry is strictly optional and disabled by default.\r\n\r\nSo on the prompt window the button for sending telemetry is pretty much highlighted. Yet you state, that it is disabled by default. It makes no sense to me.  =||= > Due to the large amount of worry about this PR\r\n\r\nNah you have mistaken worry for anger =||= > My question is: since Muse Group is a for-profit company and it decided to buy Audacity, which is clearly an offline program, why did they buy it?\u00a0What is their proposed business model?\r\n\r\nMy guess? Make an ad filled mobile app with a paid \"premium version\" to remove the ads and slowly turn Audacity itself into a \"cloud based music creation platform\" with a subscription fee. =||= ![imagen](https://user-images.githubusercontent.com/45803478/117442748-78391100-af37-11eb-8d71-7670d053cbf7.png)\r\n =||= Is this a joke? =||= I'm not a fan of telemetry in general, especially for a fully offline application.\r\n\r\nBut my biggest concern lies with google and yandex, these are not privacy conscious companies nor do you have any control over how they use the data. (That's, of course, assuming the telemetry remains opt-in by default and that the behavior never changes, this seems unlikely to me seeing how this industry tends to operate so I'm strongly against it in general).\r\n\r\nNotably this prompts the question \"how is this going to change over time?\"\r\nIs it going to become mandatory in five years? Is it going to then expand in scope? \r\n\r\nI suspect I'm not the only one finding this development concerning in both the short and long term. =||= > Telemetry is strictly optional and disabled by default. No data is shared unless you choose to opt-in and enable telemetry.\r\n\r\nFYI, while opt-in is a good thing, the interface in the screenshot *still* violates the GDPR - it makes the \"accept\" option more visually attractive, which is not allowed. The accept and reject options must be presented on equal footing, without using 'dark patterns' like attractive colors for the accept button or extra-convincing label text.\r\n\r\nEdit: It also doesn't mention *where* it is sending the data to, which is dubious under the GDPR at best. =||= > > Telemetry is strictly optional and disabled by default.\r\n> \r\n> So on the prompt window the button for sending telemetry is pretty much highlighted. Yet you state, that it is disabled by default. It makes no sense to me.\r\n\r\nYeah this is concerning too. If they ship it into macOS also, should it have to be the \"Dont Send\" button that should be highlighted? because what i know about Apple ecosystem is they designed it like that and giving no option to tracking. =||= > Most users who were led here by reddit, HN, etc. It would be more fair to survey \"the typical Audacity users\" (what telemetry does, but voluntarily). I think Audacity users care about open source, but a lot of people couldn't care less and just use it because it's free. Or maybe distro maintainers will decide whether or not to use a fork.\r\n\r\nI am very sick of this mentality to be very honest.\r\n\r\nIt is precisely us that should be opposing these changes. As developers we have the responsibility to fully understand the technical and ethical implications of such things and stick up for software users that are less informed than us - users that place all their trust in us.\r\n\r\nWhen I go to the store to buy food I expect it not to contain poison because I trust that the experts in that industry have my best interests in mind, and have protected me against things that I may not know about. \"We can put telemetry in this software and the users will not realise\" is just as true as \"We can put poison in our food and the customer will probably not realise from the ingredients list\". =||= > > Telemetry is strictly optional and disabled by default. No data is shared unless you choose to opt-in and enable telemetry.\r\n> \r\n> FYI, while opt-in is a good thing, the interface in the screenshot _still_ violates the GDPR - it makes the \"accept\" option more visually attractive, which is not allowed. The accept and reject options must be presented on equal footing, without using 'dark patterns' like attractive colors for the accept button or extra-convincing label text.\r\n> \r\n> Edit: It also doesn't mention _where_ it is sending the data to, which is dubious under the GDPR at best.\r\n\r\nbump bump bump =||= > Most users who were led here by reddit, HN, etc. It would be more fair to survey \"the typical Audacity users\" \r\n\r\nThese are the typical Audacity users. Audacity users are almost a complete subset of reddit & HN users. =||= ![image](https://user-images.githubusercontent.com/24716467/117443386-f98ca580-af2f-11eb-85d6-67932de378d3.png)\r\nPlease make \"Don't send\" the default option, or don't specify a default option.  =||= Don't merge this please. =||= > To address the concerns about use of private library versions, the largest part of this pull request is a networking layer built on  top of libcurl. This library is chosen as it is an industry-standard for cross-platform networking. It is exceptionally tested and reviewed by industry experts.\r\n\r\nIn your clarifications you do not address the security implications that you introduce with vendoring an out-of-date and unpatched version of curl though (which would be the case for macOS and Windows users). Do you plan on releasing every time libcurl has a release? How do you envision to do security advisory tracking?\r\n\r\n> The layer on top of it, aka lib-network-manager meant to simplify the development of future features. libcurl is used without any patches. It is possible to use the system-provided version of the library available on the Linux distributions, and we will double-check that this works as expected.\r\n\r\nOpening an application to the internet like this is non-trivial and unnecessary attack surface.\r\nThe above leads me to the conclusion, that `lib-network-manager` will be used not only for telemetry in the future and I find this very worrying, as this means that while the user can opt-out of telemetry, a vendored libcurl would still be used to talk to e.g. a web shop or whatever it is you envision to do with it.\r\n\r\nThat thinking about the topic of \"how to build this sanely on a Linux distribution\" came after the fact makes me not very hopeful, that issues with the build system, such as #625 will ever be resolved. =||= The confirmation dialog says:\r\n\r\n> We <u>do not</u> collect any personal data or sensitive information such as location or file names or any content of your audio.\r\n\r\n\u2026 when at the same time the pull request says \u2026\r\n\r\n> * Errors, including errors from the sqlite3 engine, as we need to debug corruption issues reported on the Audacity forum\r\n>\r\n> \u2026\r\n> To identify sessions we use a UUID, which is generated and stored on the client machine.\r\n> \u2026\r\n> Both services also record the IP the request is coming from.\r\n\r\nSo, errors reported \u201canonymously\u201d can be matched with forum users. Great.\r\n\r\n> * Session start and end\r\n>\r\n> \u2026\r\n> We use Yandex Metrica to be able to correctly estimate the daily active users correctly. We have to use the second service as Google Analytics is known to have some really tight quotas.\r\n\r\nIf you use Yandex to get daily usage, why do you need session start time? If you want to get session duration, why record start/end? Can you name a single feature that would benefit from usage duration information?\r\n\r\n> We have to use the second service as Google Analytics is known to have some really tight quotas.\r\n\r\nWhy would you use GA then?\r\n =||= If this is merged I'm off official builds. I'm sure someone will be providing binaries off here that have the telemetry disabled at compile time.\r\n\r\nIn the end I have outgoing firewalls on everything anyway and block requests by default. Funny that the first thing you do when audacity is bought out is an unpopular \"feature\" 1/2 the user base is against. =||= I think Audacity can still come out on top and get back users trust if it closes this PR on the short-term.\r\nThe longer this PR is left open, the more people will be outraged and stop using it altogether.\r\n\r\nAt some point the shitstorm is not worth it.\r\nOnly if there are deeper plans for more \"modern\" practices coming after this, which I really, really hope it is not the case.\r\n\r\nPlease close this PR and show you care about yours users. =||= If audacity is going to add telemetry, I\u2019d at least suggest using [matomo ](https://matomo.org/) instead of privacy-unfriendly solutions like Google analytics and similar. =||= > I think Audacity can still come out on top and get back users trust if it closes this PR on the short-term.\r\n> The longer this PR is left open, the more people will be outraged and stop using it altogether.\r\n> \r\n> At some point the shitstorm is not worth it.\r\n> Only if there are deeper plans for more \"modern\" practices coming after this, which I really, really hope it is not the case.\r\n> \r\n> Please close this PR and show you care about yours users.\r\n\r\nnah this team will never again be trusted by anyone for anything ever again =||= completely off topic but @falkTX are you the guy who makes cadence? If so I really wanna talk to you about the world of jack mangers, you can find ways of contacting me in my bio.\r\n\r\n =||= > Can you name a single feature that would benefit from usage duration information?\r\n\r\nI would like an answer to this as well. I cannot imagine any way this helps Audacity developers improve the software for users. It only seems intrusive for no benefit. =||= Hum... I guess, I'm not going to be using not recommending Audacity anymore. =||= > nah this team will never again be trusted by anyone for anything ever again\r\n\r\n@kernelzeroday You seem to have a habit of thinking you speak for everyone. Your views are quite extreme and I'd prefer if you stopped assuming everyone was as hate and spite-filled as yourself. I'm sure we'd all prefer to come to a respectful middle-ground. \r\n\r\nEdit: I see the irony in saying \"I'm sure we'd all...\" after talking about speaking for everyone. To rephrase, I believe it'd be _better_ for everyone, whether everyone would prefer that or not. =||= > > nah this team will never again be trusted by anyone for anything ever again\r\n> \r\n> @kernelzeroday You seem to have a habit of thinking you speak for everyone. Your views are quite extreme and I'd prefer if you stopped assuming everyone was as hate and spite-filled as yourself. I'm sure we'd all prefer to come to a respectful middle-ground.\r\n\r\nI sure do buddy and I'll say it again, they fucked up here. If you genuinely think anyone can ever recover from this i have a bridge to sell you =||= > > nah this team will never again be trusted by anyone for anything ever again\r\n> \r\n> @kernelzeroday You seem to have a habit of thinking you speak for everyone. Your views are quite extreme and I'd prefer if you stopped assuming everyone was as hate and spite-filled as yourself. I'm sure we'd all prefer to come to a respectful middle-ground.\r\n> \r\n> Edit: I see the irony in saying \"I'm sure we'd all...\" after talking about speaking for everyone. To rephrase, I believe it'd be _better_ for everyone, whether everyone would prefer that or not.\r\n\r\nDon't worry I flagged his first comment for \"hate speech\" \"inciting violence\" and \"directed threats\" already. An impressive number of rule violations in a single post I might add. =||= > > > nah this team will never again be trusted by anyone for anything ever again\r\n> > \r\n> > \r\n> > @kernelzeroday You seem to have a habit of thinking you speak for everyone. Your views are quite extreme and I'd prefer if you stopped assuming everyone was as hate and spite-filled as yourself. I'm sure we'd all prefer to come to a respectful middle-ground.\r\n> > Edit: I see the irony in saying \"I'm sure we'd all...\" after talking about speaking for everyone. To rephrase, I believe it'd be _better_ for everyone, whether everyone would prefer that or not.\r\n> \r\n> Don't worry I flagged his first comment for \"hate speech\" \"inciting violence\" and \"directed threats\" already. An impressive number of rule violations in a single post I might add.\r\n\r\nIncidentally I did this despite us being on the same side of the argument. that sort of conduct is not good for anyone involved. Just cos we don't like a software decision doesn't mean death threats are justified. =||= Adding telemetry is a useless act when nearly all your users (Linux distros) are gonna compile from source and create their own packages or downright disable it. All you are doing is shattering peoples faith. You obviously do not care about the previous user base of this application when  you have decided to include telemetry that a majority has clearly expressed they don't want. Who cares if you disabled it by default? In the end you are still leaving room for an opt-out scenario in the future and even more data gathering.  When a company owns a piece of software these things are added for improving your profit not the users experience.  =||= Whew, what a drama. I remember participating in another one, don't remember which one, got a lot of fun. \r\ncrsib is a master troll, CristhianCC and IGBC are your typical github moderation team pet lapdogs.\r\n\r\nI just hope Audacity will stay as it is, open source and free for everyone and from any kind of telemetry (which is used for selling to advertisers, not for improving software) and that this topic will never be brought back. =||= This is ridiculous. **It is disabled by default and if you don't want to use it, you can keep it disabled.**\r\n\r\nThough I have to agree with some people - you should probably use open source/FOSS analytics tools instead. =||= > \r\n> \r\n> Whew, what a drama. I remember participating in another one, don't remember which one, got a lot of fun.\r\n> crsib is a master troll, CristhianCC and IGBC are your typical github moderation team pet lapdogs.\r\n> \r\n> I just hope Audacity will stay as it is, open source and free for everyone and from any kind of telemetry (which is used for selling to advertisers, not for improving software) and that this topic will never be brought back.\r\n\r\nAt least, mention me when you talk about me. And thank you, nobody told me i was a pet lapdog, that's kinda flattering. @Tataarujin =||= > > Can you name a single feature that would benefit from usage duration information?\r\n> \r\n> I would like an answer to this as well. I cannot imagine any way this helps Audacity developers improve the software for users. It only seems intrusive for no benefit.\r\n\r\nIt's the type of information advertisers like to see when negotiating how much they'll pay for ad placement. =||= imo, if you REALLY want to add telemetry, you should add it like this:\n\n- Log locally\n\n- At a successful restart delete the data\n\n- At a successful restart after a crash, ask to send it, and then delete it locally. =||= Not sure about others, but I for one would prefer to fill in a survey than telemetry. (I will always opt out of telemetry.) Please provide ways for the user to talk about the program instead! =||= >  IGBC are your typical github moderation team pet lapdogs.\r\n\r\nAt your service. I do enjoy a good FOSS food fight. Looks like this has just gone back to draft, so I guess we got through to them. Or they got sick of getting 100 emails an hour.\r\n\r\nGood work everyone. =||= > \r\n> \r\n> This is ridiculous. **It is disabled by default and if you don't want to use it, you can keep it disabled.**\r\n\r\nIn 6 months its gonna change from disabled by default to enabled and people will be like: \"What are you mad about you can disable it?\".\r\n6 months after that the option will disappear and people are like \"Who cares it wasn't even the default option\".\r\n\r\nDO NOT add tracking for an OFFLINE ONLY application. =||= Imagine wanting to edit some audio files and suddenly you have 14 HTTP requests sent out a minute (optimistic I guess) =||= > > IGBC are your typical github moderation team pet lapdogs.\r\n> \r\n> At your service. I do enjoy a good FOSS food fight. Looks like this has just gone back to draft, so I guess we got through to them. Or they got sick of getting 100 emails an hour.\r\n> \r\n> Good work everyone.\r\n\r\nYeah, finally, after repating the same thing, and reading the same \"we don't like this PR\" for the 100th time. Its true that the topic deviated, but thats just because everyone were TIRED of repeating themselves.\r\n\r\nPeople have to learn to noticed when something like this happends during a conversation.\r\nCause when that happends, you stop add anything of value to the conversation. =||= The mere existence of Google Analytics in the code is already a violation of the GDPR in the EU. The fact that the software is used in education and schools makes it even more problematic. Even more critical is the fact that the tracking could also capture the data of minors. Anyone (admin or school board responsible) who makes the software available unchecked and explicitly approved (in each individual institution) even just makes himself liable to prosecution under certain circumstances. She (or he) risks a fine and the loss of his job. If you want to see the software disappear into insignificance within a very short time, stay on this path. I work for a school board and - for my own self-protection alone - I will suggest to my superiors that the software be banned immediately in all schools in the state if there is a risk that it MAY contain unlawful tracking.  =||= Can't wait to be arrested for using Audacity in the EU. =||= > > > IGBC are your typical github moderation team pet lapdogs.\r\n> > \r\n> > \r\n> > At your service. I do enjoy a good FOSS food fight. Looks like this has just gone back to draft, so I guess we got through to them. Or they got sick of getting 100 emails an hour.\r\n> > Good work everyone.\r\n> \r\n> Yeah, finally, after repating the same thing, and reading the same \"we don't like this PR\" for the 100th time. Its true that the topic deviated, but thats just because everyone were TIRED of repeating themselves.\r\n> \r\n> People have to learn to noticed when something like this happends during a conversation.\r\n> Cause when that happends, you stop add anything of value to the conversation.\r\n\r\nnah I am only telling people off for posting memes or harrassing other users. Thankfully not much of that today. =||= So if they put this in, who is going to maintain the Audacity fork that lacks telemetry, but is otherwise the same? =||= > * At a successful restart after a crash, ask to send it, and then delete it locally.\r\n\r\n@adryzz Thing is, that's crash reporting, not telemetry. Crash reporting is still immensely useful, and Audacity's also considering adding it via Breakpad. Telemetry is collecting information about platform, high-level usage context and performance, to help understand how the software is running when everything is working, rather than why it's failed when it has failed.\r\n\r\nTelemetry is easier to argue shouldn't be present at all. Crash reporting is way easier to justify. I mentioned before that I find telemetry super useful for my own software, and I don't mind Audacity adding it; they should just be conscious about privacy, more so than they are right now by sending the data off to Google and Yandex.\r\n\r\nOtherwise, I totally agree with you. =||= > So if they put this in, who is going to maintain the Audacity fork that lacks telemetry, but is otherwise the same?\r\n\r\nSomeone who will have the _audacity_ to fork it.\r\n\r\nI'll see myself off. =||= > So if they put this in, who is going to maintain the Audacity fork that lacks telemetry, but is otherwise the same?\n\ni mean it doesn't take much to cherry pick commits to merge... =||= > > > > IGBC are your typical github moderation team pet lapdogs.\r\n> > > \r\n> > > \r\n> > > At your service. I do enjoy a good FOSS food fight. Looks like this has just gone back to draft, so I guess we got through to them. Or they got sick of getting 100 emails an hour.\r\n> > > Good work everyone.\r\n> > \r\n> > \r\n> > Yeah, finally, after repating the same thing, and reading the same \"we don't like this PR\" for the 100th time. Its true that the topic deviated, but thats just because everyone were TIRED of repeating themselves.\r\n> > People have to learn to noticed when something like this happends during a conversation.\r\n> > Cause when that happends, you stop add anything of value to the conversation.\r\n> \r\n> nah I am only telling people off for posting memes or harrassing other users. Thankfully not much of that today.\r\n\r\nThats ok, but you jump too quickly :C. Not everyone posting a meme is insantly a bad user.\r\nMemes are a way of expressing ourselves, and can be used to point out the mood of a conversation before it escalates, its true that we are adults here, but that doesnt mean that the convesation has to be stricly formal. =||= \r\n> i mean it doesn't take much to cherry pick commits to merge...\r\n\r\nThis is the sort of work a lot of distros already do. In researching this PR I found that debian have been modifying audacity privately for years just to keep the damn thing working on their OS.  =||= I can understand the desire to know users OS, as it allows indeed to support more users more effectively, but there are free/libre telemetry and helpdesk support systems.\r\n\r\nMore generally I have been thinking about the state of free/libre softwares support tooling recently. Often you will see a software great in its own field, but that uses a proprietary chat room system, forum, or telemetry. There should be more collaboration and free projects should offer support to other free projects when possible. You run a free forum ? Offer to run \\<other free project\\>'s forum. =||= > So if they put this in, who is going to maintain the Audacity fork that lacks telemetry, but is otherwise the same?\r\n\r\n@TheStranjer See the clarification of the PR. Support for telemetry is only enabled by default in the official builds. If you build from source, it won't even ask if it's okay to send data; you're safe and sound.\r\n\r\nThat said, I'm not sure if Audacity supports reproducible builds. Considering they have all their dependencies included in the main git tree, rather than as submodules or traditional dependencies, I'm a little worried about their architecture. I'm no expert with Audacity (I use it casually and have never made any contributions to it) but this kind of software tends to have certain difficulties with building cleanly and consistently.\r\n\r\n**Edit:** It's still concerning to me that they're including intrusive telemetry, but this reply is to clarify there's an official way to disable it from builds altogether. I guess there's solace in at least that. =||= Just wanted to share some support for the people working on this. I actually think telemetry data could prove extremely useful to understand how the software is used in the wild, and what are the potential pain points.\r\n\r\nAs long as it's opt-in, disabled by default, and there is a clear communication about what is sent, when, why and to whom, I don't think it's such big deal. And it seems to be the case.\r\n\r\nThat being said, an other backend than Google Analytics or Yandex for storing and querying the data would be nice, but hey, what good enough alternatives are available out there? =||= > > So if they put this in, who is going to maintain the Audacity fork that lacks telemetry, but is otherwise the same?\r\n> \r\n> @TheStranjer See the clarification of the PR. Support for telemetry is only enabled by default in the official builds. If you build from source, it won't even ask if it's okay to send data; you're safe and sound.\r\n\r\n@eunakria See the post on incrementalism by @Nex4rius. No \"telemetry.\" Hard stop. =||= You cannot said is for dev only when you plug-in Google Analytics ... This monster just snif everything you do and you don't know what its take... =||= > Its where muse group's headquarters are. No malcontent to any Russians intended, I am only pointing out that makes it more likely this where that guy works.\r\n\r\nOh how nice. I'm another russki comrade, just freedom loving one. Gonna go and find this HQ and verbally assassinate everyone there. Wish me luck. =||= oh absolutely not =||= > > This is ridiculous. **It is disabled by default and if you don't want to use it, you can keep it disabled.**\r\n> \r\n> In 6 months its gonna change from disabled by default to enabled and people will be like: \"What are you mad about you can disable it?\".\r\n> 6 months after that the option will disappear and people are like \"Who cares it wasn't even the default option\".\r\n> \r\n> DO NOT add tracking for an OFFLINE ONLY application.\r\n\r\nIf this gets merged and you further have to use use audacity, consider using [firejail](https://github.com/netblue30/firejail/blob/master/etc/profile-a-l/audacity.profile) to disable internet access and further restrict folder access in your $HOME. \r\n\r\nI dont know, why @JamesCrook @MartynShaw @Paul-Licameli and @SteveDaulton have not replied to the PRs and who has what access rights to the repo besides them. I will stop following this for now. The main devs should manage this. =||= Why is there a plan to send my usage data for Audacity as additional data points to an ever-growing analytics and Telemetry Monster instead of the fabled eighth magnifying glass i was promised Tantacrul?\r\n\r\nBut seriously: If you do analytics **please** selfhost it. Who has access, how long and when will it be deleted - and even better, how much will be made public so others can benefit - should be mandatory statements - as well as help compliance.\r\n\r\nAnd make \"No\" the highlighted default. I know it sucks and it will lead to less users agreeing (Which effect does the close button/ESC call? Default? None?) to send usage data but that will be the most friendly, agreeable and least resistant way - plus 100% GDPR/DSGVO compliant too.\r\n\r\nAnd while i value the effort to take audacity into the current century with a more consistent design after you applauded the amazing open source community please dont disappoint the same with the first action being telemetry to some of the biggest privacy violating monsters despised by FLOSS out there. We're all rooting for you to do the right thing. =||= > @TheStranjer See the clarification of the PR. Support for telemetry is only enabled by default in the official builds. If you build from source, it won't even ask if it's okay to send data; you're safe and sound.\r\n\r\nAs a side effect from this, which was touched by others but only briefly, is that Audacity team will only receive analytics reports from a certain, very specific kind of people.\r\nIf new developments and ideas happen because of the results of these analytics, it will be focused only on these people, no way around it.\r\n =||= >The only thing software like this needs to collect is when errors occur and crash logs happen, at which point a popup should display at the end of the session or on crash letting them see the log that's about to be sent and asking if they want to report it.\r\n\r\nthis is how Zrythm does it\r\n\r\n![Screenshot from 2021-05-07 13-17-06](https://user-images.githubusercontent.com/3407655/117448316-7fabea80-af36-11eb-8012-b196fab42784.png)\r\n\r\nexample bug report that gets generated:\r\nhttps://todo.sr.ht/~alextee/zrythm-bug/507 =||= > imo, if you REALLY want to add telemetry, you should add it like this:\r\n> \r\n> * Log locally\r\n> * At a successful restart delete the data\r\n> * At a successful restart after a crash, ask to send it, and then delete it locally.\r\n\r\nThis is by far the best way. Bonus points for making the logs easy and intuitive to find so the average user can participate in submitting bugs with logs. =||= @ITotalJustice I really like the log local, ask to send approach. I personally would like to see what type of data is being sent as well... There could even be a \"Always send\" option that will cause a window to pop up that announces it is sending the data (along with an option to opt out of the \"Always send\" mode), but otherwise just works in the background. =||= > @eunakria See the post on incrementalism by @Nex4rius. No \"telemetry.\" Hard stop.\r\n\r\n@TheStranjer The idea of this being a slippery slope itself seems preposterous to me - as much as you might want to assure yourself with it, companies and projects are not inherently disposed to become evil once they get big. Again, I don't support the way Audacity is implementing telemetry, but I know how useful it can be as someone who includes it in my own software.\r\n\r\n*I'm not interested in any profit incentive;* I would leave it out if I didn't gain anything from it. But knowing who my users are and how well my software is performing for them, is incredibly helpful. I expect Audacity feels the same about this.\r\n\r\nGoogle and Yandex software range from cheap to free and are super easy to integrate, but they are ethical monstrosities. I've already spoken against the inclusion of any link to their platforms in Audacity. However, I believe telemetry can absolutely be done ethically and productively.\r\n\r\nBeing able to gauge Audacity's user base will greatly help them as a platform, I believe, and to this extent, I'll support them. What's so evil about knowing how many users you have and how generally they use your software? It's not going to spiral out of control. =||= >We will consider replacing Google and Yandex with another service if we find one that fulfills our requirements - thanks for the suggestions and keep them coming.\r\n\r\nThis is ridiculous. Your response to hundreds of users telling you they don't want their data to be shared with the privacy nightmare that is Google shouldn't be \"we'll replace it only if we can find something better\". If you can't find a solution for telemetry that the userbase can be happy with, like KDE's approach, then you shouldn't add telemetry at all. The fact that you're even considering adding Google Analytics at this point clearly shows that you aren't taking this feedback seriously. If you don't do a complete 180 on this, I expect that there'll be a fork that'll split the community. =||= >I actually think telemetry data could prove extremely useful to understand how the software is used in the wild, and what are the potential pain points.\r\n\r\nHow about they just ask their users instead? Like how we found out people's opinions on things for the entirety of human history?\r\n\r\nTelemetry is invasive, anti-social, underhanded, and not even an effective tool. No amount of numbers and statistics is ever going to tell you *why* people are doing a certain thing or how they feel using your software. \"90% of people are using this feature\" is completely meaningless when you have no idea if they're pulling their hair out and punching the wall the entire time they're using it. =||= > \r\n> \r\n> imo, if you REALLY want to add telemetry, you should add it like this:\r\n> \r\n>     * Log locally\r\n> \r\n>     * At a successful restart delete the data\r\n> \r\n>     * At a successful restart after a crash, ask to send it, and then delete it locally.\r\n\r\nTHIS. Or at the very least, use a self-hosted, open-source telemetry platform. Not Google Analytics...\r\n\r\nI completely understand how this data _could_ be useful to improve Audacity, and I want to assume good faith here. But this is not the way. =||= This gets an absolutely big NO from me and almost all other audacity users in this thread, pretty unanimous. =||= People will be mentioning this PR for a decade in discussions about telemetry. We are witnessing history here folks. =||= > The idea of this being a slippery slope itself seems preposterous to me\r\n\r\n@eunakria If you think foresight is preposterous then that's a you problem. =||= While this thread not locked, hello there! =||= You don't need to implement telemetry to make better software, take Blender as an example, it has no telemetry and yet it's the best free and open source 3D tool available out there.\r\nYou can use community forums to ask what people need and want, report bugs, have transparent discussions etc...\r\nAgain, you don't need telemetry. =||= Seriously, of all the telemetry and logging solutions out there you had to use F*****G GOOGLE?\r\n\r\nI'm not opposed to opt-in telemetry, but come on, at least come up with something that isn't google. =||= I'd prefer not to have telemetry and I hope this PR gets dropped (but I'm not entirely against it if done well), but please in case DO NOT track more data than you REALLY need... You surely don't need file names, IP addresses, UUIDs, or other information that is user-identifying (maybe OS and kernel version are ok by themselves). This could be an issue with Google Analytics or Yandex (it's also not entirely clear why you have to use both, I think there are other ways to do that, maybe something like batching). I hope you'll use some analytics service that it's more privacy-oriented, in case this PR goes on...\r\nAnyway, all Linux distributions build packages from source. Because of that and because telemetry is disabled when building from source, you likely won't receive ANY data from Linux users (I also really doubt distros' package maintainers will enable telemetry on your package) so the data you would receive will surely be incomplete. =||= If you take your users seriously and there's need for information about the user's system behavior, simply ask the users. Be it with polling or other services. =||= To reflect on the given reasons why this feature was built in:\r\n\r\n1. \"Audacity is widely used across several platforms, but we have no information on the application stability\"\r\n\r\nOn almost all platforms it is possible to catch fatal exceptions and let the user decide whether they want to report that crash. With the permission of the user (and this permission is only for that very crash and not all crashes after that), this crash report can be sent to servers owned by the community instead of sending them to Google&co to further process them and fix the bug.\r\n\r\n2. It is difficult for us to estimate the size of the user base accurately.\r\n\r\nI'm not sure how this would make Audacity better. You have the download statistics. Those numbers will be significantly higher and closer to the actual user base than the number of users actually agreeing to that telemetry feature. If you want to actually know the number of users, you can ask the user ONCE during installation or start up whether they would like to let this known. Again this information should be going to community servers instead of Google&co. Apart from that, trying to know the exact user base is only good for one thing; letting investors know how much potential customers they have to milk.\r\n\r\n3. We need a way to make informed decisions about which OS versions to support. For example, can we raise the minimum version of the macOS to 10.10 to update the wxWidgets to the latest version?\r\n\r\nAgain, download statistics can help here or an optional questionaire on the download page or once at first startup.\r\n\r\n4. We have a known issue with the new file format introduced in Audacity 3.0. We found it with the great help of the community members on our forum. However, there is no way for us to estimate the impact of these issues on users. Is it just a random case? Do we need to rush the work on the recovery tool or help the users one by one? Or do we need to rethink the file format to make it safer and more easily recoverable?\r\n\r\nTelemetry does not help with prioritizing bugs. Bugs are usually not visible in telemetry data as bugs have the tendency to be unaccounted for and thus there is no telemetry data to count particular bugs. After all, why adding telemetry to understand a bug, instead of \"just\" fixing it? Also the number of users watching a particular issue (or the already mentioned crash report) will give you enough hints about how important a bug is.\r\n =||= To the poeple suggesting compile-time flags and distributions taking this feature out: Great, you're looking for a solution for **you**. How about we all agree that nobody likes tracking (at best, people are *indifferent* to tracking!) and that we don't want it in any version of Audacity?\r\n\r\nIf we debate \"opt-in\" vs. \"opt-out\", we've already lost the most important battle. This feature should not be part of the code. Saving Linux builds or self-compiled builds will not be helpful to the general user base of this program. If it's in the default, precompiled windows installer, that's probably used for 60% or more of all people using Audacity. And we're debating to screw them over.\r\n\r\nSo: no tracking, please. It's not exactly complicated. Not \"opt-in\". Not \"i can compile it away, I am so smart\". No \"we're forking this\". No tracking. Period. =||= >     1. It is difficult for us to estimate the size of the user base accurately.\r\nThis plus the measurement of the periods of users use of the software is suspicious. This is classic \"screen hours\" reporting.\r\n\r\nThe only reason I can see to do this is to determine the \"value\" of the software for a monetization strategy. If you look at https://mu.se the thing they are most proud of is \"100M Downloads\" not how this software has helped Individuals, educators, and Scientific Research for the last 22 years.  =||= Also, please, don't use a \"dark pattern\" if you decide to add telemetry. The \"Send anonymous data usage\" in blue is leading users to click it without reading, as usual.\r\n\r\nAlso, \"anonymous\" is a word a bit too strong when we know it's about using Google Analytics... There is no anonymity possible with Google Analytics. =||= >Saving Linux builds or self-compiled builds will not be helpful to the general user base of this program. If it's in the default, precompiled windows installer, that's probably used for 60% or more of all people using Audacity. And we're debating to screw them over.\r\n> \r\n\r\nI think you have bigger problems than precompiled audacity opt-in telemetry if you are using windows. =||= The Audacity developer should have just implemented this and be done with it, and just let the people complain and do whatever they want. Just look at FileZilla. Tim Kosse gives zero f*s and do whatever he wants and people pretty much have to accept whatever he does \ud83d\ude06. FileZilla has worse stuff than telemetry mind you. =||= Both previous posts (Windows, FileZilla) are strawman arguments. =||= Just in case nobody said it before ;) This sucks.  =||= > The Audacity developer should have just implemented this and be done with it, and just let the people complain and do whatever they want. Just look at FileZilla. Tim Kosse gives zero f*s and do whatever he wants and people pretty much have to accept whatever he does laughing. FileZilla has worse stuff than telemetry mind you.\r\n\r\nThis is not how open source projects work in real life. The idea of FLOSS is for people to collaborate together and not one person making egoistical decisions =||= > I dont know, why @JamesCrook @MartynShaw @Paul-Licameli and @SteveDaulton have not replied to the PRs\r\n\r\nSpeaking for myself, a \"work in progress\" pull request is not a QA issue. I shall make my views clear to the development team when or if this work is merged, based on a calm and careful assessment of it as it is at that time. While I understand some of the concerns raised, and while I personally take the issue of user privacy very seriously, I also appreciate the benefits that telemetry can bring \"for users\". \r\n\r\nHaving developed many features for Audacity, including TimeLine Quick Play, Split Stereo Track to Mono, the Distortion effect, Bass and Treble effect, Sample Data Import / Export, Label Sounds, Nyquist Plug-in Installer, countless plug-ins and many enhancements, I would LOVE to know which features Audacity users find useful. \r\n\r\nI improved the Pink Noise and Brownian Noise generators, but does anyone use them? Despite asking on the very active Audacity Forum, I have no idea. Was I wasting my time? Could I have brought more value to the Audacity community by doing something else? I have no idea, because asking users to give feedback on the forum does not work. \r\n\r\nWhat about all the time that I spent adding SBSMS to Change Pitch and Change Tempo? Is that something that people use, or was that a waste of time? I have no idea, I just assume that it might be useful for some, with hardly any user feedback to support that assumption.\r\n\r\nCan telemetry be useful in FOSS? Yes I believe that it can, provided that it is opt-in, is transparent about what data is collected, who has access to that data, and what the data is used for. I see, and I am happy about the limited uses of telemetry in FOSS classics such as Firefox. \r\n\r\nI am rather disappointed to see so many negative comments from people that have clearly not even checked if this feature is opt-in or opt-out. I much prefer to see people contributing rather than just criticising. If you really want to help, get involved and contribute (I'm aware that several writers here do actually contribute to FOSS).\r\n\r\nI am not going to speculate about the final form of telemetry, if any, that will end up in a future Audacity release. Many of Audacity's features have been through multiple iterations before being suitable for general release, and I have better things to do with my time than speculate about what may or may not be - at least I think I have better things to do.\r\n =||= grabbing some popcorn\r\n\r\nhttps://youtu.be/FOn_82MKmFg =||= yikes wtf =||= @SteveDaulton \r\n\r\n> Despite asking on the very active Audacity Forum, I have no idea. Was I wasting my time? Could I have brought more value to the Audacity community by doing something else? I have no idea, because asking users to give feedback on the forum does not work.\r\n\r\nThat's not surprising - most users will likely never look at the forums. A much better approach to this is to have the *software* ask users to fill in eg. a survey. That doesn't require telemetry, and the problem in this case was likely just that users didn't *know* that their feedback was being asked for.\r\n\r\n> I am rather disappointed to see so many negative comments from people that have clearly not even checked if this feature is opt-in or opt-out.\r\n\r\nThat should not be surprising, considering that the PR involves thousands of lines of code, included no explanation on what was going on, and the norm in the software industry is to violate user consent (which this proposal also does, through the use of dark patterns). That's an error on the side of the maintainers who have not communicated effectively, not an error on the side of the users who see a dark cloud descending over their favourite software.\r\n\r\n> If you really want to help, get involved and contribute (I'm aware that several writers here do actually contribute to FOSS).\r\n\r\nThere's not really anything to \"contribute\" when the maintainers of the project have seemingly already decided to do this, without engaging with the community first. =||= > I am rather disappointed to see so many negative comments from people that have clearly not even checked if this feature is opt-in or opt-out. I much prefer to see people contributing rather than just criticising. If you really want to help, get involved and contribute (I'm aware that several writers here do actually contribute to FOSS).\r\n\r\n@SteveDaulton it's not about opt-in or opt-out, it's more about the fact that there are plenty more non-invasive and privacy-friendly (even self-hostable) analytics provider out there than Google Analytics. =||= @Steve as others have stated, much of the concern is about the usage of\nGoogle Analytics and Yandex, along with the violation of the GDPR.\n\nThere are also concerns about security by introducing dependencies on\nlibcurl and by doing downloads in the build scripts.\n\nIf they ran their own telemetry servers, fixed the issue with the\nopt-in/opt-out dialog and removed the (poorly implemented) dependencies on\nthings like libcurl people would have been much less upset.\n\nAt this point though the cat is likely already out of the bag. The damage\nhas been done and clearly the dev team has lost a lot of trust with the\ncommunity. I suspect walking this back all the way and having a true\ndiscussion with the community it the only way to win back that trust.\n\nThis should have never been a PR. This should have been an Issue. It should\nhave had discussion on the forums. There are so many mis-steps here.\n\nOn Fri, May 7, 2021, 09:05 Steve Daulton ***@***.***> wrote:\n\n> I dont know, why @JamesCrook <https://github.com/JamesCrook> @MartynShaw\n> <https://github.com/MartynShaw> @Paul-Licameli\n> <https://github.com/Paul-Licameli> and @SteveDaulton\n> <https://github.com/SteveDaulton> have not replied to the PRs\n>\n> Speaking for myself, a \"work in progress\" pull request is not a QA issue.\n> I shall make my views clear to the development team when or if this work is\n> merged, based on a calm and careful assessment of it as it is at that time.\n> While I understand some of the concerns raised, and while I personally take\n> the issue of user privacy very seriously, I also appreciate the benefits\n> that telemetry can bring \"for users\".\n>\n> Having developed many features for Audacity, including TimeLine Quick\n> Play, Split Stereo Track to Mono, the Distortion effect, Bass and Treble\n> effect, Sample Data Import / Export, Label Sounds, Nyquist Plug-in\n> Installer, countless plug-ins and many enhancements, I would LOVE to know\n> which features Audacity users find useful.\n>\n> I improved the Pink Noise and Brownian Noise generators, but does anyone\n> use them? Despite asking on the very active Audacity Forum, I have no idea.\n> Was I wasting my time? Could I have brought more value to the Audacity\n> community by doing something else? I have no idea, because asking users to\n> give feedback on the forum does not work.\n>\n> What about all the time that I spent adding SBSMS to Change Pitch and\n> Change Tempo? Is that something that people use, or was that a waste of\n> time? I have no idea, I just assume that it might be useful for some, with\n> hardly any user feedback to support that assumption.\n>\n> Can telemetry be useful in FOSS? Yes I believe that it can, provided that\n> it is opt-in, is transparent about what data is collected, who has access\n> to that data, and what the data is used for. I see, and I am happy about\n> the limited uses of telemetry in FOSS classics such as Firefox.\n>\n> I am rather disappointed to see so many negative comments from people that\n> have clearly not even checked if this feature is opt-in or opt-out. I much\n> prefer to see people contributing rather than just criticising. If you\n> really want to help, get involved and contribute (I'm aware that several\n> writers here do actually contribute to FOSS).\n>\n> I am not going to speculate about the final form of telemetry, if any,\n> that will end up in a future Audacity release. Many of Audacity's features\n> have been through multiple iterations before being suitable for general\n> release, and I have better things to do with my time than speculate about\n> what may or may not be - at least I think I have better things to do.\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/835#issuecomment-834364683>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ATJASMB7O4V3JJGV6SHIDULTMPQTDANCNFSM44C5SLTA>\n> .\n>\n =||= > \r\n> Can telemetry be useful in FOSS? Yes I believe that it can, provided that it is opt-in, is transparent about what data is collected, who has access to that data, and what the data is used for. I see, and I am happy about the limited uses of telemetry in FOSS classics such as Firefox.\r\n> \r\n> I am rather disappointed to see so many negative comments from people that have clearly not even checked if this feature is opt-in or opt-out. I much prefer to see people contributing rather than just criticising. If you really want to help, get involved and contribute (I'm aware that several writers here do actually contribute to FOSS).\r\n> \r\n\r\n@SteveDaulton many people here agree with you in that telemetry can be really useful, myself included! The biggest problem is _how_ this feature is implemented. No data is anonymous nor can it becollected in an ethical way when sent over to proprietary telemetry platforms owned by giant advertising companies.\r\n\r\nBut if the data IS anonymous and sent over to an open-source platform you guys DO have control over, and the data collected is sensible and will actually help improve Audacity? Then sure, collect away!\r\n\r\nThis implementation proposed is not sensible. At the very least it feels rushed. And I think it is important to acknowledge that. =||= \"Privacy by Design\" and \"Privacy by default\" are basic provisions of the GDPR! What is a tracking tool doing in an audio editor? It can only be used for user research. \r\nWas the reaction to the Whatsapp/Facebook announcement not seen? Users are switching to other solutions. \r\nHopefully we don't have to look for another audio editor....\r\n =||= I see two paths here, and both of them are equally disgusting.\r\n\r\nPath one:\r\nYou guys are selling your users' data to corporations, for money.\r\n\r\nPath two:\r\nYou guys are trying to go public, showing how many users you have to convince corporations to buy the software alongside its user base.\r\n\r\n\r\nAm I wrong? There are many evidences that are provoking these ideas in my mind. In case I'm wrong, then why would Yandex care of how many users are running Audacity? Why send data directly to Google?  =||= > > I dont know, why @JamesCrook @MartynShaw @Paul-Licameli and @SteveDaulton have not replied to the PRs\r\n> \r\n> Speaking for myself, a \"work in progress\" pull request is not a QA issue. I shall make my views clear to the development team when or if this work is merged, based on a calm and careful assessment of it as it is at that time. While I understand some of the concerns raised, and while I personally take the issue of user privacy very seriously, I also appreciate the benefits that telemetry can bring \"for users\".\r\n> \r\n> Having developed many features for Audacity, including TimeLine Quick Play, Split Stereo Track to Mono, the Distortion effect, Bass and Treble effect, Sample Data Import / Export, Label Sounds, Nyquist Plug-in Installer, countless plug-ins and many enhancements, I would LOVE to know which features Audacity users find useful.\r\n> \r\n> I improved the Pink Noise and Brownian Noise generators, but does anyone use them? Despite asking on the very active Audacity Forum, I have no idea. Was I wasting my time? Could I have brought more value to the Audacity community by doing something else? I have no idea, because asking users to give feedback on the forum does not work.\r\n> \r\n> What about all the time that I spent adding SBSMS to Change Pitch and Change Tempo? Is that something that people use, or was that a waste of time? I have no idea, I just assume that it might be useful for some, with hardly any user feedback to support that assumption.\r\n> \r\n> Can telemetry be useful in FOSS? Yes I believe that it can, provided that it is opt-in, is transparent about what data is collected, who has access to that data, and what the data is used for. I see, and I am happy about the limited uses of telemetry in FOSS classics such as Firefox.\r\n> \r\n> I am rather disappointed to see so many negative comments from people that have clearly not even checked if this feature is opt-in or opt-out. I much prefer to see people contributing rather than just criticising. If you really want to help, get involved and contribute (I'm aware that several writers here do actually contribute to FOSS).\r\n> \r\n> I am not going to speculate about the final form of telemetry, if any, that will end up in a future Audacity release. Many of Audacity's features have been through multiple iterations before being suitable for general release, and I have better things to do with my time than speculate about what may or may not be - at least I think I have better things to do.\r\n\r\n@SteveDaulton \r\nI think this response was carefully thought through but ultimately tone deaf. As has been repeated many times in this now unmanageably long thread, we, the community, are telling you, the developers, we don't believe this is an effective or appropriate measure.\r\n\r\nWe understand that you want feedback about the development direction of the software, and we are telling you the forum should be enough. I am curious why you do not trust the direct feedback from your thousands of active users, to the point you feel you need automated tracking systems to replace that model?\r\n\r\nAs for tracking in FOSS, IF it is indeed useful it must also be considered how that data can be shared safely and fairly. What segment of users this data truly represents, and how compliance with the myriad of laws surrounding data protection can be abided.  We, the community, have seen no planning or engagement with the community about how to approach these important issues. \r\n\r\nFinally with the introduction of new corporate developers in recent times means __we don't believe you__ when you say this is for the god of the community anymore. This is not helped by the repeated statements from devs that this is optional and anonymous, when frankly the \"opt in\" dialog is already in violation of GDPR, and it is widely accepted by the security community that google analytics is not anonymous. You either fundamentally misunderstand the technology you are trying to implement or your are misleading the community. \r\n\r\nYou cannot sidestep these issues  =||= Yes, I would love to have my data collected by Google Analytics and Yandex, processed by them and told that my data is completely anonymous and untraceable. Sure thing! In a FOSS project :)\r\n\r\n1:35 like to dislike ratio doesn't show a 'dislike', but an 'overwhelming majority voting against this bad idea'.\r\n\r\nThe first thousand user's data may be used for development, but the hundreds of thousands of other users' data will be used for data processing and collection, not for enhancing any user's experience.\r\n\r\nGet rid of this draft... =||= I vote against this. Telemetry shouldn't even be optional, it should be kept out of the code completely. HARD NO TO TELEMETRY.\r\nThey all start with \"disabled by default\", then they become \"enabled by default\", then parts of telemetry become default, not an option anymore. And more will follow. So, NO to telemetry. \r\n\r\nPeople have mentioned that the window that asks for opt-in for telemetry has a dark pattern to trick the user to click on the opt-in button. I'd say that's evil. =||= Hey, the screenshot that has now been added to the PR message includes a [dark pattern](https://www.darkpatterns.org/). This isn't making things better.\r\n\r\nPlease listen to the community and everyone posting in here. This is not a change people will forget and will forever tarnish the reputation of Audacity. =||= I am a grad student in linguistics who used Audacity infrequently in the past, but will probably has more uses for it in near future as I'm studying phonology (inter alia). I'll probably also end up teaching on this subject in a few years, so that's were my single comment in this thread will be coming from (I'll refrain from participating otherwise as this is already a huge thread, and back and forth bickering won't add much).\r\n\r\nFirst of all, I'll say as a student/researcher in phonology / phonetics, if this change goes through, I can not in good faith recommend Audacity as a good tool for research to my peers and any students I might have. Among others, I do not trust a now corporate project to stick to its word once tracking gets in to the software, and once that happens, we will ultimately face extra research ethics issues, as our science is based on human subjects who have rights to privacy we must respect.\r\n\r\nSecondly, I want to parrot a comment I made on social media as to why I wouldn't trust you with keeping your word in the long run:\r\n\r\n> I am fairly happy with what I read [in the updated PR] but I'm also concerned not only because it's Google APIs nevertheless, but it's indicative of a different, less community friendly culture. Telemetry communicates to me that you're taking a more Mozilla like statistics oriented approach. And justifications like\r\n\r\n>> We need a way to make informed decisions about which OS versions to support. For example, can we raise the minimum version of the macOS to 10.10 to update the wxWidgets to the latest version?\r\n\r\n> or \r\n\r\n>> It is difficult for us to estimate the size of the user base accurately.\r\n\r\n> are scary because that implies, incorrectly or not, cutting corners and costs on compatibility instead of inclusive portability and a tendency to indirect monetisation, like ads etc., which will inevitably come with many other (chains of) effects eventually.\r\n\r\n> This might well not be the direction they're going now, but so was the case for Mozilla back in 2010. If you told me back then that Firefox would come with trackers and Pocket and Hello and whatnot, I'd laugh in your face. But look where we are now.\r\n\r\n> The whole concept of telemetry is anti-communal-software even when not considering the privacy aspects thereof.\r\n\r\nMy two cents. =||= How audacious! =||= Ah hell someone already made the joke =||= > How audacious!\r\n\r\nafter 487 messages these jokes are getting old =||= > Ah hell someone already made the joke\r\n\r\nYou tried \u00af\\_(\u30c4)_/\u00af =||= While skimming through the source code, this is what I discovered is the information that Audacity will collect:\r\n\r\n- client UUID (apparently generated on a per-session basis)\r\n- Your OS name and version\r\n- Audacity name and version\r\n- Version number of wxWidgets\r\n- System language\r\n- when you start Audacity\r\n- when you close Audacity\r\n- when an exception/error occurs\r\n- when you import audio (file format, and whether import succeeded?)\r\n- when you export audio (file format, and whether export succeeded?)\r\n- when you apply an effect\r\n- when some kind of database error occurs?\r\n- when you open a window?\r\n- when you use the analyzer?\r\n- it also appears to store cookies???\r\n\r\n(NOTE: this list is based on my own rough review, I didn't look at the first post before! I might also not be 100% correct, it was only a quick and dirty look at the code.)\r\n\r\nBoth Google Universal Analytics and Yandex Metrica are used. It appears that the collected information is sent directly to Google and Yandex.ru (but not everything appears to be sent to Yandex.ru). This also means they know your IP.\r\nKnowing your IP, in combination with OS name, version, Audacity version, etc. could be used for fingerprinting, similar to browser fingerprinting. There is a chance you could be de-anonymized with this information. Although I don't know if the information would be enough to fully de-anonymize someone, it is certainly in the realm of possibilities.\r\nAlso, this PR is called \"BASIC telemetry for the Audacity\". This implies that is is planned to add even more telemetry features in future, thereby increasing the chances of de-anonymization.\r\nThe fact that Google and Yandex are used for tracking doesn't make it any better. Google has like a billion tricks up their sleeve to track you. I don't know about Yandex, but they too are a big corporation.\r\nI conclude that all claims of anonymity are VERY questionable. However, with this change, Audacity will lie to the user by claiming that this tracking is completely anonymous.\r\n\r\nThis is almost certainly a GDPR violation waiting to happen. Someone somewhere in the EU will probably install an Audacity build for an institution but tracking was \"accidentally\" enabled and now they're in trouble. I've already read comments of people who will go full \"scorched earth\" mode and get rid of all Audacity installation because they don't want that even just 1 bit is sent to Google or other tracking companies.\r\nAlso, this is certainly a violation of informed consent, since it suggests anonymity while this claim stands on very thin ice.\r\n\r\nBut let's not overlook the elephant in the room: Overall, this change is obviously completely useless for the user and no user wants this. From the user point of view, this feature is always bad since it has a risk of de-anoymization. In other words, this is an anti-feature. The discussion of opt-in vs opt-out is a distraction. The only reasonable decision here is complete rejection. =||= rip audacity, good night dear friend. =||= Feel free to have look at https://matomo.org/ for \"clean\" telemetry, if it exists. =||= > While skimming through the source code, this is what I discovered is the information that Audacity will collect:\r\n> \r\n>     * client UUID (apparently generated on a per-session basis)\r\n> \r\n>     * Your OS name and version\r\n> \r\n>     * Audacity name and version\r\n> \r\n>     * Version number of wxWidgets\r\n> \r\n>     * System language\r\n> \r\n>     * when you start Audacity\r\n> \r\n>     * when you close Audacity\r\n> \r\n>     * when an exception/error occurs\r\n> \r\n>     * when you import audio (file format, and whether import succeeded?)\r\n> \r\n>     * when you export audio (file format, and whether export succeeded?)\r\n> \r\n>     * when you apply an effect\r\n> \r\n>     * when some kind of database error occurs?\r\n> \r\n>     * when you open a window?\r\n> \r\n>     * when you use the analyzer?\r\n> \r\n>     * it also appears to store cookies???\r\n> \r\n> \r\n> (NOTE: this list is based on my own rough review, I didn't look at the first post before! I might also not be 100% correct, it was only a quick and dirty look at the code.)\r\n> \r\n> Both Google Universal Analytics and Yandex Metrica are used. It appears that the collected information is sent directly to Google and Yandex.ru (but not everything appears to be sent to Yandex.ru). This also means they know your IP.\r\n> Knowing your IP, in combination with OS name, version, Audacity version, etc. could be used for fingerprinting, similar to browser fingerprinting. There is a chance you could be de-anonymized with this information. Although I don't know if the information would be enough to fully de-anonymize someone, it is certainly in the realm of possibilities.\r\n> Also, this PR is called \"BASIC telemetry for the Audacity\". This implies that is is planned to add even more telemetry features in future, thereby increasing the chances of de-anonymization.\r\n> The fact that Google and Yandex are used for tracking doesn't make it any better. Google has like a billion tricks up their sleeve to track you. I don't know about Yandex, but they too are a big corporation.\r\n> I conclude that all claims of anonymity are VERY questionable. However, with this change, Audacity will lie to the user by claiming that this tracking is completely anonymous.\r\n> \r\n> This is almost certainly a GDPR violation waiting to happen. Someone somewhere in the EU will probably install an Audacity build for an institution but tracking was \"accidentally\" enabled and now they're in trouble. I've already read comments of people who will go full \"scorched earth\" mode and get rid of all Audacity installation because they don't want that even just 1 bit is sent to Google or other tracking companies.\r\n> Also, this is certainly a violation of informed consent, since it suggests anonymity while this claim stands on very thin ice.\r\n> \r\n> But let's not overlook the elephant in the room: Overall, this change is obviously completely useless for the user and no user wants this. From the user point of view, this feature is always bad since it has a risk of de-anoymization. In other words, this is an anti-feature. The discussion of opt-in vs opt-out is a distraction. The only reasonable decision here is complete rejection.\r\n\r\nAnd all this for an audio editor! Why in the hell would an audio editor collect so many data if not for selling them to corporations in exchange of money? =||= Want to be extra ethical?\r\n\r\nDon't use psychological manipulations by making the \"Send anonymous analytics data\" in blue. Users will be more likely to click on it. It should be a white button instead and make the \"Don't send\" button white.\r\n\r\nBetter yet listen to the people over here, people don't want this bullshit implemented. I liked Audacity for a reason, because of its open source non-telemetry software which is unlike most other proprietary crap that has spyware bundled with it. =||= Also hey while we're at it, can we talk about how this is going to negatively impact hundreds upon thousands of other computer users who don't know what GitHub is and consequently also cant protest to this egregious privacy violation? Cos that's also pretty cool, huh!\r\n\r\nSmall edit: I will say also that I'm not fully opposed to the idea of actually basic actually anonymous telemetry for the sake of actually helping development....but frankly, the reasons given are rubbish and as previously mentioned don't really _need_ telemetry. That, and the fact that you're so reluctant to move away from Google/Yandex despite multiple people giving you an absurdly long list of alternatives is ridiculous. Get over yourselves and actually listen to your community. =||= I'm no enemy to telemetry in general and making in opt-in is the only valid option. Having the buttons in a way to guide non-tech users towards opting-in is borderline, but may be ok.\r\nBut using google analytics (or any other privacy-denying provider) for that purpose is about the worst idea any open source project can have... =||= > Also hey while we're at it, can we talk about how this is going to negatively impact hundreds upon thousands of other computer users who don't know what GitHub is and consequently also cant protest to this egregious privacy violation? Cos that's also pretty cool, huh!\r\n> \r\n> Small edit: I will say also that I'm not fully opposed to the idea of actually basic actually anonymous telemetry for the sake of actually helping development....but frankly, the reasons given are rubbish and as previously mentioned don't really _need_ telemetry. That, and the fact that you're so reluctant to move away from Google/Yandex despite multiple people giving you an absurdly long list of alternatives is ridiculous. Get over yourselves and actually listen to your community.\r\n\r\nI hope somebody makes a fork out of this honestly! =||= > users who don't know what GitHub is cant protest to this egregious privacy violation\r\n\r\nOf course they can protest. There is a \"Don't send\" button.\r\n\r\nThe default happy flow right now is sending your data. Many people unaware of what this means will thus give up their data. I'm sure the developers knew that while making it. This should be the other way around. =||= I don't wish to see telemetry become a broadly accepted feature of open-source software. I am very disappointed that the project is going in this direction.\r\n\r\nPlease reconsider, since you're risking splitting the community by forcing a telemetry-free fork. =||= >\r\n> Of course they can protest. There is a \"Don't send\" button.\r\n>\r\n\r\nThat implicates they can only protest to this thing when it's already passed and been included in the software. Not good enough, quite frankly. \r\n =||= > The default happy flow right now is sending your data. Many people unaware of what this means will thus give up their data. I'm sure the developers knew that while making it. This should be the other way around.\r\n\r\nAs someone who tries to minimize my connections to Google, I'd like to see the dialogue box explicitly mentioning that Google is used for the telemetry, as that would make it a hard pass for me, and probably to others who in general wouldn't oppose sending *some* telemetry, but want to avoid Google. =||= > We need a way to make informed decisions about which OS versions to support.\r\n\r\n> If you are compiling Audacity from source, we will provide a CMake option to enable the telemetry code. This option will be turned off by default.\r\n\r\nI imagine most of Linux distros will have this option disabled - which means that vast majority of their users will not show up in statistics.\r\nMaking any OS-specific decisions on such biased data will lead to worse Linux support in the long run. (Especially in the event of corporate interests taking initiative) =||= Another case of a greedy company screwing over their users for making a profit.\r\nAs other people pointed out, this seems like a move to count the number of users for promoting the company. It is just sad. =||= > Making any OS-specific decisions on such bias data will lead to worse Linux support in the long run. (Especially in the event of corporate interest taking initiative)\r\n\r\nAdditionally, it would mean that Windows users would always receive a build of Audacity with telemetry baked in from the official channels. Windows users are not accustomed to compiling software from source. If Audacity ever decides to make it this feature mandatory, there is no one there to distribute binaries with this feature patched out. =||= > If Audacity ever decides to make it this feature mandatory, there is no one there to distribute binaries with this feature patched out.\r\n\r\nAutomating this with CI (after some initial setup) is trivial.\r\nThat would be the main reason for a fork. So people would download Librecity or whatever instead of Audacity.\r\n =||= > Due to the large amount of worry about this PR, (which we completely understand), we want to clarify exactly what is going on:\r\n> \r\n>     1. Telemetry is **strictly optional and disabled by default**.\r\n\r\nAm I reading things wrong, or did you just change this after people noticed and called you out? Looks to me like the original default was enabled:\r\nhttps://github.com/audacity/audacity/pull/835/commits/fefeb2af3bc1cefe8649162b5222521999ba9f47\r\n\r\nUsually when a company acquires a popular software project they wait a lot longer to start screwing it up. Hats off to you for hitting the ground running, I guess? Seriously, how could you possibly have expected the news that one of the most popular FOSS projects was going to implement Google analytics (again--originally enabled by default) was going to be accepted any other way?\r\n\r\nEdit: Answer is I'm reading this wrong\r\nhttps://github.com/audacity/audacity/pull/835#issuecomment-834449458\r\n\r\nEdit edit: ...as least as far as the timing on the default change. I stand by my rush-to-screw-up opinion.\r\n =||= Data collection is absolutely crucial in software development. Google analytics doesn't just collect data though, it takes your soul with it. Don't ruin your reputation further. =||= > > Due to the large amount of worry about this PR, (which we completely understand), we want to clarify exactly what is going on:\r\n> > ```\r\n> > 1. Telemetry is **strictly optional and disabled by default**.\r\n> > ```\r\n> \r\n> Am I reading things wrong, or did you just change this after people noticed and called you out? Looks to me like the original default was enabled:\r\n> [fefeb2a](https://github.com/audacity/audacity/commit/fefeb2af3bc1cefe8649162b5222521999ba9f47)\r\n> \r\n> Usually when a company acquires a popular software project they wait a lot longer to start screwing it up. Hats to you for hitting the ground running, I guess? Seriously, how could you possibly have expected the news that one of the most popular FOSS projects was going to implement Google analytics (again--originally enabled by default) was going to be accepted any other way?\r\n\r\nIf you look in the actual PR history that change was made before this PR had any related comments on it. Most likely was just a default in development and changed for the actual release. =||= Tracker in FOSS... This not normal =||= I think one issue is that not everyone may be aware of the code. I, and many others, can adjust fine; I use \r\nsome ruby scripts or just oldschool GNU sed to automatically eliminate undesired code, then compile \r\nfrom source. I do this, by the way, to automatically remove \"Code of Conduct\" files too since they are not\r\nrelevant (they are not part of the licence, for example, thus irrelevant propaganda).\r\n\r\nWhen you go to the audacity homepage, though, you can read this, among other entries:\r\n\r\n\"Developed by a group of volunteers as open source.\"\r\n\r\nOf course we can ask what EXACTLY is meant with \"open source\". Is ethics included?\r\n\r\nThe audacity comes with a CODE_OF_CONDUCT.md by the way, yet audacity is currently\r\nstating that \"telemetry\" is ethically and morally acceptable. Well, call me strange, but I \r\nfind tele-sniffing and tele-spying on users much more problematic than a \"code of conduct\"\r\nwhich is already irrelevant to me (since it is not part of the licence, thus it can not be \r\nenforced).\r\n\r\nI would highly recommend the audacity team to reconsider. It is clear that this is \r\ndone for revenue-driven purposes and I think people can somewhat understand\r\ndifferent strategies used by different organization in this regard, which is \r\nunderstandably a problem with many open source projects. I am all in favour of \r\nstate-driven aid AS WELL (provided that there are verifiable means to see that\r\nthis benefits the taxpayer too), but sneaky-tele-spying is just morally and ethically\r\ninacceptable. The downvotes are very clear, so I think the audacity team should\r\ncompletely reconsider the approach. I highly recommend dropping that idea.\r\n\r\nSee the libreoffice team reconsidering their approach in regards to two-class\r\napartheid (\"business\" versus \"regular\" users) a few months ago as an example\r\nto better the situation. And see the qt project for an example how to worsen \r\nthe situation (the kde devs are in denial mode right now but this can not be\r\nmaintained in the long run either; nobody wants to be penalized up to 12 \r\nmonths before patches are available for the open source community. The\r\nkde devs have not understood this yet.) =||= I'm not as worried about analytics as some here - if things devolve, there'll be a pull request to review.\r\n\r\nI do have two concerns with the pull request:\r\n\r\n - I agree that the screenshot should be more clearly opt-in - the \"dark pattern\" should become neutral, perhaps with enabling analytics requring a checkbox to enable the \"send data\" button + a button click.  That would make opting-in a positive decision.\r\n - I am concerned about shipping a private `libcurl`, even unpatched.  `libcurl` releases frequently and has had CVEs.  I don't think Audacity wants to be in the business of tracking `libcurl` and being forced to re-release Audacity on `libcurl`'s schedule.  Make `libcurl` a dependency, and check for a minimum version. This loose coupling will ensure that `libcurl` is as up-to-date as possible; whichever updates first will be used.  `libcurl` has been very good about not breaking APIs, so this is a low risk strategy,  There is nothing (on any OS) that prevents one library (DLL) from depending on or dyamically linking another.\r\n \r\nI don't understand why you need two analytics services.  Depending on where a user lives, (s)he may be more worried about one or the other.  But both gives the worst of both worlds.  I'd suggest settling on one.  And you might satisfy some concerns if you allowed selection of what is collected.  Eg. a checkbox for \"census data only\" and another for \"usage details\".\r\n\r\n[edit: fixed two typos.] =||= > > I am rather disappointed to see so many negative comments from people that have clearly not even checked if this feature is opt-in or opt-out. I much prefer to see people contributing rather than just criticising. If you really want to help, get involved and contribute (I'm aware that several writers here do actually contribute to FOSS).\r\n> \r\n> @SteveDaulton it's not about opt-in or opt-out, it's more about the fact that there are plenty more non-invasive and privacy-friendly (even self-hostable) analytics provider out there than Google Analytics.\r\n\r\nAlso we all know as users that \"default off\" will eventually become \"always on\" as Muse Group slowly gets their tentacles all over it. Free isn't Free if your data is being mined. =||= If you hosted the telemetry collection server yourself, I might opt in. Sending your users' data to a third party is a hard NOPE. =||= Audacity is my go-to tool for whenever I need to make a very quick edit to some audio file that I have at hand, but I have one improvement for this PR:\r\n\r\nClose it. **Scrap the ENTIRE request.** Don't even think about getting this merged in the future. I want _my_ privacy to be respected. =||= > > I dont know, why @JamesCrook @MartynShaw @Paul-Licameli and @SteveDaulton have not replied to the PRs\r\n> \r\n> Speaking for myself, a \"work in progress\" pull request is not a QA issue. I shall make my views clear to the development team when or if this work is merged, based on a calm and careful assessment of it as it is at that time. While I understand some of the concerns raised, and while I personally take the issue of user privacy very seriously, I also appreciate the benefits that telemetry can bring \"for users\".\r\n> \r\n> Having developed many features for Audacity, including TimeLine Quick Play, Split Stereo Track to Mono, the Distortion effect, Bass and Treble effect, Sample Data Import / Export, Label Sounds, Nyquist Plug-in Installer, countless plug-ins and many enhancements, I would LOVE to know which features Audacity users find useful.\r\n> \r\n> I improved the Pink Noise and Brownian Noise generators, but does anyone use them? Despite asking on the very active Audacity Forum, I have no idea. Was I wasting my time? Could I have brought more value to the Audacity community by doing something else? I have no idea, because asking users to give feedback on the forum does not work.\r\n> \r\n> What about all the time that I spent adding SBSMS to Change Pitch and Change Tempo? Is that something that people use, or was that a waste of time? I have no idea, I just assume that it might be useful for some, with hardly any user feedback to support that assumption.\r\n> \r\n> Can telemetry be useful in FOSS? Yes I believe that it can, provided that it is opt-in, is transparent about what data is collected, who has access to that data, and what the data is used for. I see, and I am happy about the limited uses of telemetry in FOSS classics such as Firefox.\r\n> \r\n> I am rather disappointed to see so many negative comments from people that have clearly not even checked if this feature is opt-in or opt-out. I much prefer to see people contributing rather than just criticising. If you really want to help, get involved and contribute (I'm aware that several writers here do actually contribute to FOSS).\r\n> \r\n> I am not going to speculate about the final form of telemetry, if any, that will end up in a future Audacity release. Many of Audacity's features have been through multiple iterations before being suitable for general release, and I have better things to do with my time than speculate about what may or may not be - at least I think I have better things to do.\r\n\r\n@SteveDaulton \r\nI'm happy to voice my support for this telemetry. I have experienced what it's like to be on the other side, developing an application and having access to telemetry, and the benefits are huge. It is not a privacy concern in my opinion, the data being collected is as anonymous as the data being collected about all of us here right now every time we visit a website. There is frankly some paranoia going on in this thread and I suspect this is a \"vocal minority\" venting. More than 99% of audacity users probably don't even have a github account to comment here, let alone care this much about telemetry.\r\n\r\nThe points you raised Steve about the uses of this anonymous data are great examples of why telemetry is useful. Being able to see real time data on how your changes are making a difference to users, positive or negative, is very valuable and a great tool for a UX focused development approach.\r\n\r\nI'd also add you're right about how difficult it is to get feedback from users. Lots of people in this thread have talked about surveys and asking for feedback on forums, but almost no one ever does that and those who do are usually a vocal minority, and it's best not to let the vocal minority drive the direction of development.\r\n\r\nThose talking about this being 'data mining' for money are a few fries short of a happy meal. No money will be made from this kind of telemetry. I don't know how the average person here could even think that information about how often an error occurs or how long the average Audacity session is, or which audio effects are the most popular, could be worth anything to anyone.\r\n\r\nIt feels like a lot of people here are just automatically making the connection between harmless anonymous opt-in telemetry, and Facebook style massive data mining operations for advertisers.\r\n\r\nAlso thankyou for your great work on Audacity over the years. =||= Please, do not do this. =||= The fact that with all this backlash, the new company is still \"forcing\" this PR and is not willing to listen the community is one of the most worrying parts.\r\nThis project got here thanks to the contribution of a lot of people, and hearing what they had to say.\r\nThey completely turn their backs on the community in like 4 days of developing. =||= A completely useless PR for a feature which nobody asked for.\r\nKindly close it. =||= Please dont turn OSS into Open Source Spyware =||= > Please dont turn OSS into Open Source Spyware\r\n\r\nI will tell you they won't care. With the money they're going to get by selling users' data, who needs morals and _**Audience**_? (possible name for a future fork intended) =||= This time could be far better spent doing anything else than implementing telemetry. At least it's optional, but PLEASE focus on cleaning up Audacity's UI instead, it's quite daunting to newcomers. =||= @SteveDaulton I think others have expressed my views to you in a better way than I could right now. Nonetheless, especially after your last post here, I think you should reconsider especially since none of your messages addresses the legal standpoint, such as GDPR for example, where consent is explicitly required and AFAIK, no mechanism is present to handle such a thing in your code.\r\n\r\nTo be honest, and I know that most people in the FLOSS communities I contribute to, would just stop using a FLOSS project that might contain such \"telemetry\" even before it is implemented. In other words, unless this draft is abandoned in the near future, you will make a lot of users run away from your Audacity. This would be a shame, especially since this project is so good and well-established.\r\n\r\nI hope you will take the right decision. =||= > > Please dont turn OSS into Open Source Spyware\r\n> \r\n> I will tell you they won't care. With the money they're going to get by selling users' data, who needs morals and _**Audience**_? (possible name for a future fork intended)\r\n\r\nWaiting for a fork to come up :trollface:  =||= > This time could be far better spent doing anything else than implementing telemetry. At least it's optional, but PLEASE improve Audacity's UX, it's quite daunting to newcomers.\r\n\r\nThat's why they're adding telemetry, to get useful information to help drive UX improvements? =||= > > This time could be far better spent doing anything else than implementing telemetry. At least it's optional, but PLEASE improve Audacity's UX, it's quite daunting to newcomers.\r\n> \r\n> That's why they're adding telemetry, to get useful information to help drive UX improvements?\r\n\r\nYou could just get useful information by asking for feedback instead of tracking user activity. Have a \"send feedback\" button, reach out to users, etc. There's no need to turn Audacity into spyware. =||= No, no and no. Don't do this. =||= Good Night, Audacity.   Either I will conserve the Version I have got, or I will deinstall. =||= If the future advertisers, they're going to sell our data to, wanna know about the user count...\r\nSpoiler alert: it decreases drastically in this very moment. =||= Well this is bad.\r\nA legend falls. =||= > > > This time could be far better spent doing anything else than implementing telemetry. At least it's optional, but PLEASE improve Audacity's UX, it's quite daunting to newcomers.\r\n> > \r\n> > \r\n> > That's why they're adding telemetry, to get useful information to help drive UX improvements?\r\n> \r\n> You could just get useful information by asking for feedback instead of tracking user activity?\r\n\r\nMajority of users completely ignore any request for user feedback, and the small number who don't, usually try to use it as a means of voicing their strong opinions to affect change in the direction of development, making their feedback less useful. Even when users are being honest and reasonable with their feedback, they usually can not provide the kind of detailed useful information that telemetry can offer. =||= > It feels like a lot of people here are just automatically making the connection between harmless anonymous opt-in telemetry, and Facebook style massive data mining operations for advertisers.\r\n\r\n@mindinsomnia except that, it's actually a data sellout to google/rest of advertisers/nsa and yandex/russian government, can't believe you say facebook is data mining a lot of data while not acknowledging that google does it for the same scale, if not larger\r\n =||= > If the future advertisers, they're going to sell our data to, wanna know about the user count...\r\n> Spoiler alert: it decreases drastically in this very moment.\r\n\r\nWhich advertisers do you think are going to buy information on which menu items are being clicked the most and which error messages are the most common? Think about this. This data wouldn't even be useful to advertisers.  =||= > > This time could be far better spent doing anything else than implementing telemetry. At least it's optional, but PLEASE improve Audacity's UX, it's quite daunting to newcomers.\r\n> \r\n> That's why they're adding telemetry, to get useful information to help drive UX improvements?\r\n\r\nAdding the telemetry is **fine**. But relying the data handled to the third party, and even big tech company operating from advertising like Google is **NOT FINE** and Yandex too, even i dont know how good their privacy practice is.\r\n\r\nAlso dont forget the bad UI decision such as possible \"dark patterns\" in the screenshot dialog too. Not to mention the legal stuff on GDPR. =||= > > > This time could be far better spent doing anything else than implementing telemetry. At least it's optional, but PLEASE improve Audacity's UX, it's quite daunting to newcomers.\r\n> > \r\n> > \r\n> > That's why they're adding telemetry, to get useful information to help drive UX improvements?\r\n> \r\n> You could just get useful information by asking for feedback instead of tracking user activity. Have a \"send feedback\" button, reach out to users, etc. There's no need to turn Audacity into spyware.\r\n\r\nSeriously, just talk to your users. Build software that people _want_, not software that makes a number on a dashboard go up. =||= > > If the future advertisers, they're going to sell our data to, wanna know about the user count...\r\n> > Spoiler alert: it decreases drastically in this very moment.\r\n> \r\n> Which advertisers do you think are going to buy information on which menu items are being clicked the most and which error messages are the most common? Think about this. This data wouldn't even be useful to advertisers.\r\n\r\n\r\n> Yandex would only receive the \u201capplication opened\u201d event to help us estimate the size of the user base.  =||= Yooo its time to never update my audacity again =||= > > > > This time could be far better spent doing anything else than implementing telemetry. At least it's optional, but PLEASE improve Audacity's UX, it's quite daunting to newcomers.\r\n> > > \r\n> > > \r\n> > > That's why they're adding telemetry, to get useful information to help drive UX improvements?\r\n> > \r\n> > \r\n> > You could just get useful information by asking for feedback instead of tracking user activity?\r\n> \r\n> Majority of users completely ignore any request for user feedback, and the small number who don't, usually try to use it as a means of voicing their strong opinions to affect change in the direction of development, making their feedback less useful. Even when users are being honest and reasonable with their feedback, they usually can not provide the kind of detailed useful information that telemetry can offer.\r\n\r\nWhat \"detailed useful information\" could you get from storing client UUIDs and making network requests every time a window is opened? =||= Don't make me firewall yet another application. Users shouldn't have to worry about every application on their computer chipping away at their bandwidth caps, especially not an audio application. =||= Welp, to /dev/null audacity goes, ardour is now the only music software worth using on linux. =||= > Adding telemetry is a useless act when nearly all your users (Linux distros) are gonna compile from source and create their own packages or downright disable it.\r\n\r\nThat's an important point. There will be distro maintainers who will consider disabling this compile flag and so no telemetry data will come from those distros. If the audacity developers will base their focus on this telemetry data, they might think that no one uses the software on those operating systems and they might be inclined to just ignore bug reports or seize to support it entirely.\r\n\r\nAs some distro maintainers will forsee this problem, they will be inclined to not disable this flag because it might negatively affect the support of their platform.\r\n =||= > > > > This time could be far better spent doing anything else than implementing telemetry. At least it's optional, but PLEASE improve Audacity's UX, it's quite daunting to newcomers.\r\n> > > \r\n> > > \r\n> > > That's why they're adding telemetry, to get useful information to help drive UX improvements?\r\n> > \r\n> > \r\n> > You could just get useful information by asking for feedback instead of tracking user activity?\r\n> \r\n> Majority of users completely ignore any request for user feedback, and the small number who don't, usually try to use it as a means of voicing their strong opinions to affect change in the direction of development, making their feedback less useful. Even when users are being honest and reasonable with their feedback, they usually can not provide the kind of detailed useful information that telemetry can offer.\r\n\r\nThat doesn't make any sense. The benefits of telemetry are fairly limited, if not against the whole point of free software. And also it's not true as most contributors send a full detailed log of what's wrong. =||= > high-speed internet access and its consequences have been a disaster for humanity\r\n\r\nHumanity and its consequences have been a disaster for humanity. =||= > Adding telemetry is a useless act when nearly all your users (Linux distros) are gonna compile from source and create their own packages or downright disable it.\r\n\r\nI think there are some inaccurate assumptions being made here, such as:\r\nA) Assuming the majority of users for audacity are on Linux, far more likely that the majority are on Windows.\r\nB) Drastically over estimating the number of people who can / would compile software from source code.\r\nC) Drastically over estimating the number of people who would care about telemetry so much that they would compile a fork of audacity from source just to remove telemetry which is already opt-in. =||= Audacity has worked just fine as is for 20 years. There are many venues to report bugs. \r\nSeeing how many midi files are people exporting or what OS are they using is not going to help you fix any issues. \r\nYou still have time to turn back the ship before it turns into Titanic. =||= I'm starting to become fearful that viable alternatives for telemetry other than the kind that gives Google/Yandex data are being buried in the sea of messages. Is there any way that such alternatives can be organized into one neat list so that alternatives could actually be explored? I won't disagree with the mere concept of telemetry being included, given it's **always** opt-in, but I will fight back against the notion of willingly handing companies such as Google more data, and I know for a fact alternatives have been offered. =||= > > Adding telemetry is a useless act when nearly all your users (Linux distros) are gonna compile from source and create their own packages or downright disable it.\r\n> \r\n> I think there are some inaccurate assumptions being made here, such as:\r\n> A) Assuming the majority of users for audacity are on Linux, far more likely that the majority are on Windows.\r\n> B) Drastically over estimating the number of people who can / would compile software from source code.\r\n> C) Drastically over estimating the number of people who would care about telemetry so much that they would compile a fork of audacity from source just to remove telemetry which is already opt-in.\r\n\r\nMeanwhile you are just underestimating us that we will not make a fork of it and not caring about telemetry at all. =||= > Not to mention the legal stuff on GDPR.\r\n\r\nGDPR applies to data that identifies a person or can be uses to identify a person with reasonable certainty. Unless the telemetry collection services track the source IP address, this does not seem to be the case here as none of the listed info relates to a person. =||= > > Not to mention the legal stuff on GDPR.\r\n> \r\n> GDPR applies to data that identifies a person or can be uses to identify a person with reasonable certainty. Unless the telemetry collection services track the source IP address, this does not seem to be the case here as none of the listed info relates to a person.\r\n\r\nas someone in this thread said few hours ago, either google or devs are able to \"decrypt\" pseudonymous IDs GA gives so uhhh, thats gdpr breach =||= > Meanwhile you are just underestimating us that we will not make a fork of it and not caring about telemetry at all.\r\n\r\nWhat's the point in creating a fork just to remove a feature that is already off by default?\r\n\r\nThat's like creating a fork of VLC to remove the option to have a custom skin because you don't plan to use one. =||= > > Meanwhile you are just underestimating us that we will not make a fork of it and not caring about telemetry at all.\r\n> \r\n> What's the point in creating a fork just to remove a feature that is already off by default?\r\n> \r\n> That's like creating a fork of VLC to remove the option to have a custom skin because you don't plan to use one.\r\n\r\nthere's a point in showing opposition to whatever dumb decision devteam decides to make =||= Have you looked at https://sentry.io/welcome/ as this seems to be what you want you want and would then remove Google and yandex which seems better and you can even host it yourself if I recall correctly =||= \r\n> Meanwhile you are just underestimating us that we will not make a fork of it and not caring about telemetry at all.\r\n\r\nI'll make the logo! =||= > If the audacity developers will base their focus on this telemetry data, they might think that no one uses the software on those operating systems and they might be inclined to just ignore bug reports or seize to support it entirely.\r\n\r\nThe lack of support is already the case also without telemetry, which makes it all the more disappointing that a topic such as this receives so much attention while there are *actual problems to fix* with this application and its build system.\r\n\r\nI would love to see improvements on that. =||= > > Adding telemetry is a useless act when nearly all your users (Linux distros) are gonna compile from source and create their own packages or downright disable it.\r\n> \r\n> That's an important point. There will be distro maintainers who will consider disabling this compile flag and so no telemetry data will come from those distros. If the audacity developers will base their focus on this telemetry data, they might think that no one uses the software on those operating systems and they might be inclined to just ignore bug reports or seize to support it entirely.\r\n> \r\n> As some distro maintainers will forsee this problem, they will be inclined to not disable this flag because it might negatively affect the support of their platform.\r\n\r\nAnd that's not mentioning the distro mantainers that will just outright remove audacity from the repos, most likely to do that is debian, then they will upload their audacity fork without telemetry, and other distros will follow... =||= > \r\n> \r\n> > Meanwhile you are just underestimating us that we will not make a fork of it and not caring about telemetry at all.\r\n> \r\n> What's the point in creating a fork just to remove a feature that is already off by default?\r\n> \r\n> That's like creating a fork of VLC to remove the option to have a custom skin because you don't plan to use one.\r\n\r\nIn 3.2  you will switch it on by default\r\nIn 3.3. your tracking will try to search for Files on our discs\r\nIn 3.4. we will get annyoing advertisements from 3rd parties, probably with security leaks. \r\n\r\nAny further Questions?  \r\n\r\nAudacity is dead for me if just one single line of tracking code is inside. It doesn't matter if it's \"optional\" for a small period of time. =||= > > Meanwhile you are just underestimating us that we will not make a fork of it and not caring about telemetry at all.\r\n> \r\n> What's the point in creating a fork just to remove a feature that is already off by default?\r\n> \r\n> That's like creating a fork of VLC to remove the option to have a custom skin because you don't plan to use one.\r\n\r\nThis is a silly comparison. One is harmful on the long run, while the other is just an aesthetic thing. Also, a certain group called 'suckless' would like to know your position. =||= But why? No, please. =||= > > > Meanwhile you are just underestimating us that we will not make a fork of it and not caring about telemetry at all.\r\n> > \r\n> > \r\n> > What's the point in creating a fork just to remove a feature that is already off by default?\r\n> > That's like creating a fork of VLC to remove the option to have a custom skin because you don't plan to use one.\r\n> \r\n> This is a silly comparison. One is harmful on the long run, while the other is just an aesthetic thing.\r\n\r\nAlso they even wanted telemetry to be ON at the first place.\r\n![unknown](https://user-images.githubusercontent.com/35190743/117471097-07015a00-af47-11eb-9ca3-14976c376419.png)\r\n =||= they have been lying repeatedly throughout this entire process. I have concluded in several comments above, that the only meaningful reason to collect the types and volume of data proposed in this PR is for constructing a monetization strategy not supporting feature development. Calling this conclusion paranoid ignores that the developers in question have a history of this exact behavior with MuseScore. =||= > Mention in the pop-up that Google Analytics and Yandex are used for processing/storing the data.\r\n\r\nOr just don't add telemetry :) =||= > Mention in the pop-up that Google Analytics and Yandex are used for processing/storing the data.\r\n\r\nthats not enough, either they use self-hosted telemetry, or don't use it at all =||= # OK poll time, \r\nlets find out what people really want:\r\n\r\nhttps://www.strawpoll.me/45241130\r\n\r\nI dunno how to make a poll on github =||= Are you trying to get people to stop using it, or just encouraging people to fork? =||= If this is implemented there is a very real danger that I hope the team avoids:\r\n\r\n* Powers users (those that are more likely to be both privacy and technically conscious who may choose to disable telemetry) may use certain obscure features more than other users\r\n* The analytics will, by dint of the above caveat, not reflect features used more often by power users\r\n* This runs the risk of management choosing to cut features because they see them as not being used, and therefore not worthy of the time required to maintain them\r\n\r\nI have seen other projects fall into this trap, so I hope the audacity team is aware of this and knows how to avoid it. =||= Just the fact that despite after 2500 dislikes and more than 500 comments all saying we **DON'T** want telemetry, they don't take action says long enough about what kind of people we are dealing with. If we can't fix their minds then there is no more reason to even try to fight against. =||= I don't understand the outrage. What they're doing is perfectly reasonable and (I think) in good faith. They just want to have data to improve Audacity, and the way they are doing it is the best way. Data is useful, there's no denying that. Knowing how your users use the software is vital to knowing what to even improve, without it, you can only guess or hear the complaints from a minority which may or may not represent the actual problems of the software.\r\n\r\nTake into account, this data is **anonymous** and **opt-in**. **PLUS** this is only enabled if you compile from source with the intention of enabling it, most repositories will not even have this in the binary. There are other FLOSS projects which do the same, KDE comes to mind, it also has opt-in telemetry. Telemetry in itself isn't bad, it's only bad if it doesn't respect your privacy, and if you give consent to this, I don't see how your privacy is getting violated.\r\n\r\nAlso, Audacity is open source, if this actually gets out of hand, a fork will exist with all the crap removed. There's no reason to be alarmed. =||= If they don't quit with the idea of telemetry then a hostile fork will be made. Splitting the community.\r\n\r\nIs it that what you want Audacity? =||= As a developer I know how valuable knowing some numbers is. And I usually opt-in non invasive telemetry.. BUT this whole PR is somehow shady.. the narrative is changing, clarifications that should've been there are just being added and the choice of Yandex and Google is just sloppy  =||= > Just the fact that despite after 2500 dislikes and more than 500 comments all saying we **DON'T** want telemetry, they don't take action says long enough about what kind of people we are dealing with. If we can't fix their minds then there is no more reason to even try to fight against.\r\n\r\nthey are just waiting for this shitstorm to die down and resume operation aftewards.\r\nweekend is coming, so I guess on early next week we get a more definitive answer. =||= > They just want to have data to improve Audacity, and the way they are doing it is the best way. Data is useful, there's no denying that.\r\n\r\nI think the main source of outrage is the telemetry provides they are using, it really wouldn't be too hard to process telemetry on their own servers, but instead they are planning to sent this data to *Google* of all people, only Facebook would be a worse choice =||= > I don't understand the outrage. What they're doing is perfectly reasonable and (I think) in good faith. They just want to have data to improve Audacity, and the way they are doing it is the best way. Data is useful, there's no denying that. Knowing how your users use the software is vital to knowing what to even improve, without it, you can only guess or hear the complaints from a minority which may or may not represent the actual problems of the software.\r\n> \r\n> Take into account, this data is **anonymous** and **opt-in**. **PLUS** this is only enabled if you compile from source with the intention of enabling it, most repositories will not even have this in the binary. There are other FLOSS projects which do the same, KDE comes to mind, it also has opt-in telemetry. Telemetry in itself isn't bad, it's only bad if it doesn't respect your privacy, and if you give consent to this, I don't see how your privacy is getting violated.\r\n> \r\n> Also, Audacity is open source, if this actually gets out of hand, a fork will exist with all the crap removed. There's no reason to be alarmed.\r\n\r\nIt will not be anonymous until they switch to a self-hosted telemetry service and stop collecting IPs.  =||= > Just the fact that despite after 2500 dislikes and more than 500 comments all saying we **DON'T** want telemetry,\r\n\r\nWrong, some of us are in agreement with the need for telemetry, so you're going to have to go through the comments and count up the positive/negative comments. =||= > I don't understand the outrage.\r\n\r\nI'm with you on that. I don't get it either. It feels like a lot of paranoia in this thread. =||= We have come to a point where refusing being tracked and analytics is considered paranoia now... really sad state of affairs :( =||= > > I don't understand the outrage.\r\n> \r\n> I'm with you on that. I don't get it either. It feels like a lot of paranoia in this thread.\r\n\r\nSo I take you did not read much of it. =||= > > Just the fact that despite after 2500 dislikes and more than 500 comments all saying we **DON'T** want telemetry,\r\n> \r\n> Wrong, some of us are in agreement with the need for telemetry, so you're going to have to go through the comments and count up the positive/negative comments.\r\n\r\nMind insomnia you and a couple of others are individuals standing against dozens. I respect you for standing by your views in such a public forum, however you should acknowledge the consensus stands against you. =||= The edited OP makes it even more obvious that this is, at best, trying to solve a problem that doesn't exist, at least not nearly to the degree that would make it worth entering into a deal with the google.\r\n\r\nI remember a couple years back when GZDoom had telemetry. No Google nonsense, just a very narrow question of how many people were still using some really old OSes and graphics hardware that the devs were struggling to keep supporting. These struggles had been voiced and well known for quite some time before the decision had been made.\r\n\r\n*Once that question was settled the GZDoom team got rid of the telemetry.*\r\n\r\nI don't see that kind of thinking with this PR. Instead, it just looks like someone wants to add telemetry to this because they think it's a good idea but without any immediate use case in mind, and then tried to come up with justifications for it. =||= The pop-up could be a lot clearer:\r\n\r\n```\r\nWe would like to gather information about your usage of Audacity to analyze \r\nand improve the product.\r\n\r\nIf you agree, the following data will be stored:\r\n- a unique identifier linked to your Audacity instance\r\n- your IP address\r\n- session start and end events with timestamps\r\n- any errors you encounter\r\n- usage of effects, sound generators and analysis tools\r\n- file formats used when importing and exporting\r\n- your OS type and Audacity version\r\n\r\nYou do not have to agree to this. If you agree, you can opt-out at any time by \r\nchanging your preference at \"Preferences > Analytics\".\r\n\r\nSome or all of this data is processed and stored by Yandex and Google. See our\r\nPrivacy Policy for more information.\r\n``` =||= > > I don't understand the outrage.\r\n> \r\n> I'm with you on that. I don't get it either. It feels like a lot of paranoia in this thread.\r\n\r\nSimple, lack of transparency from the start + iffy choice of what to collect and absolutely unnecessary choice of provides like Google and Yandex = outrage =||= # Have your say \r\nlets find out what people really want:\r\n\r\nhttps://www.strawpoll.me/45241130\r\n\r\nyes I see the irony in collecting statistics on if people want statistics collected. =||= > Mention in the pop-up that Google Analytics and Yandex are used for processing/storing the data.\r\n\r\nAs-per GDPR (at least), they MUST do that and more (consent, etc.). =||= > > Just the fact that despite after 2500 dislikes and more than 500 comments all saying we **DON'T** want telemetry, they don't take action says long enough about what kind of people we are dealing with. If we can't fix their minds then there is no more reason to even try to fight against.\r\n> \r\n> they are just waiting for this shitstorm to die down and resume operation aftewards.\r\n> weekend is coming, so I guess on early next week we get a more definitive answer.\r\n\r\nThis is toxic mentality if they do, because it means they don't care about the transparency of the decisions and are no different than big companies.\r\nInstead, what they could and should do, is discussing these decisions in forums and with people, not decide by themselves what it's best for them. =||= > # Have your say\r\n> \r\n> lets find out what people really want:\r\n> \r\n> https://www.strawpoll.me/45241130\r\n> \r\n> yes I see the irony in collecting statistics on if people want statistics collected.\r\n\r\nI refuse to be tracked by your survey! You'll just sell my data to advertisers! =||= @crsib :\r\n\r\n> Due to the large amount of worry about this PR, (which we completely understand), we want to clarify exactly what is going on:\r\n\r\nThis is a good start, with 3000 people stating they are disapproving, confused or concerned it seems that the initial proposal was less than well considered.\r\n\r\n>     1. Telemetry is **strictly optional and disabled by default**. No data is shared unless you choose to opt-in and enable telemetry.\r\n\r\nStrictly optional for who?  Implementing an opt-in/opt-out dialog indicates that by default you are expecting this code to be compiled into the application\r\n\r\n>     2. Telemetry only works in the builds made by GitHub CI from the official repo (the telemetry URLs are only defined there).\r\n> \r\n>     3. If you are compiling Audacity from source, we will provide a CMake option to enable the telemetry code. This option will be turned **off** by default.\r\n\r\nThis seems rather disingenuous.  The vast majority of users do not compile this code themselves.  They get it from an upstream that compiles it for them, therefore the average user will have no way of knowing if this code is compiled into the application until they start it.\r\n\r\n> **Why have telemetry at all?**\r\n> \r\n> Essentially, it\u2019s to help us to identify product issues early:\r\n\r\nAnd this is a valid use case...  HOWEVER, having a valid use case doesn't make the jump to using API's from privacy disrespecting third parties an obvious solution.  Having identified the need and use case the obvious next step should have been to start a conversation how to best implement this feature, and make certain identify:\r\n\r\n- Impact of the feature on developers\r\n- Impact of the feature on users\r\n- How to safeguard user information\r\n- What is the chain of custody for the information being gathered\r\n- What is the life cycle for the information\r\n- What features will be available to users to see the information that is being gathered\r\n- What types of transparency are the developers going to maintain around this information\r\n\r\n> Regarding the concerns about the choice of providers:\r\n> \r\n>     1. We do not incorporate cross-site tracking, limiting the ability to identify the user by both Google and Yandex.\r\n\r\nCross-site tracking is not necessary for Google to take the information supplied to them and use it against other sources they gather information from in order to fingerprint the user. This kind of data mining operation is precisely what they have been known to do for years now.\r\n\r\n\r\n>     3. Google would only receive:\r\n>        a. Session start and end events;\r\n>        b. Errors for debugging;\r\n>        c. File formats used for import and export;\r\n>        d. OS and Audacity versions;\r\n>        e. Use of effects, generators, and analysis tools to prioritize future improvements;\r\n\r\nThis is more than enough information for Google to use it in their mining operations.\r\n\r\n>     4. We will consider replacing Google and Yandex with another service if we find one that fulfills our requirements - thanks for the suggestions and keep them coming.\r\n\r\nDid you consider anything else?  I did a quick thought experiment about other common applications that I know that gather information.  What did I come up with?  Well, I'm using FireFox, and I know they gather information all the time.\r\n\r\nSo, I did a quick double check to see what their documentation / statement is around the information they gather.  They are very clear and transparent: [Telemetry collection and deletion](https://support.mozilla.org/en-US/kb/telemetry-clientid).  I note they have some very carefully stated guidelines surrounding the gathering and use of this information:\r\n\r\n> **How long do you keep telemetry data?**\r\n\r\n> We keep telemetry data for 13 months.\r\n\r\n> **How do I opt out or delete telemetry data?**\r\n\r\n> You can opt out of sending any Firefox telemetry information at any time. If you opt out of sending telemetry data, we will also treat this as a request to delete any data we previously collected. Data will be deleted within 30 days after you opt out. \r\n\r\nYour proposal is that you have an on / off switch, with no indication of:\r\n\r\n1. Where the information is stored?\r\n2. How long the information is stored?\r\n3. What (if anything) will be done to anonymize the information?\r\n4. Who will have access to the information (including any third parties)?\r\n5. If the user turns off the option later, when will their information be deleted?\r\n\r\nSpeaking to #3 above, it's definitely necessary as you have stated:\r\n\r\n> Both services also record the IP the request is coming from.\r\n\r\nThe simple FAQ style document from Mozilla addresses a number of these concerns, and links to more in depth information regarding the gathering of this information and all of the technical details of how it is used.  This is the kind of transparency that needs to be included when addressing this kind of situation.\r\n\r\nOne of the nicer things about Mozilla's implementation is they have a whole, publicly available portal for information surrounding the telemetry they gather: [Mozilla Telemetry Portal](https://telemetry.mozilla.org/) - nothing in your proposal suggests that you would implement anything similar.\r\n\r\nAlso, very noteworthy: Mozilla has a **whole open source [SDK called GLEAN](https://mozilla.github.io/glean/dev/index.html)** for this application.  This is the kind of implementation that should have been considered before even one line of code was written to try to implement this.,\r\n\r\nThe big takeaway here, is that as a developer you have misunderstood the practice for implementing a large new feature.  From a technology standpoint it is simple.  The hard part is the **policy, procedures and processes** that are needed to support this feature.  The code is the easy part, it's working with the whole community that is difficult, BUT IT IS ABSOLUTELY CRITICAL. =||= As they're obviously do not take the concerns of thousands of their users serious - Waiting for Forks to come.\r\nGet ready to become the OpenOffice of audio software. =||= > I refuse to be tracked by your survey! You'll just sell my data to advertisers!\r\n\r\n\ud83d\ude06  very good. Yes straw poll collect your IP address for the purposes of ensuring you can't vote twice. However when creating the poll I disabled all other cheat tracking, including cookies. Unlike audacity at least straw poll is upfront about their what data they actually collect.\r\n =||= I think it's useless keep going. It's clear they won't change their mind, I will stay with my idea that the telemetry has been added to sell data to corporations and maybe one day sell the whole Audacity software, team and users.\r\nNow, everybody is free to believe what they want to believe and keep going, just keep in mind you won't get listened. =||= @tralph3 \r\n\r\n> They just want to have data to improve Audacity, and the way they are doing it is the best way.\r\n\r\nPlenty of major FOSS projects get by without telemetry, this isn't necessary in any way. Even if it were, GA isn't the way to go about it.\r\n\r\n> Take into account, this data is anonymous and opt-in. PLUS this is only enabled if you compile from source with the intention of enabling it\r\n\r\nAnonymous it ain't. pseudonymous is the word here, the data it sends seems to be easily traceable to a personal profile on google's end. Opt-in and compile flag looks to have been last minute changes just to try to appease the crowd, one being a GDPR requirement in the first place and the second being a very fragile line of security.\r\n\r\n> Also, Audacity is open source, if this actually gets out of hand, a fork will exist with all the crap removed. There's no reason to be alarmed.\r\n\r\nForking is the last line of defense against stuff like this. If arguing over it gets it away from being merged upstream, that's in the best interests of (I think) almost everyone involved.  =||= > lets find out what people really want:\r\n> \r\n> https://www.strawpoll.me/45241130\r\n\r\n:lol: Apologies for being off-topic, but did you read this on the  strawpoll.me site?\r\n\r\n\"Fandom and our partners use technology such as cookies on our site to store and collect information from your browser to personalize content and ads, provide social media features, and analyze our traffic.\" =||= > > Meanwhile you are just underestimating us that we will not make a fork of it and not caring about telemetry at all.\r\n> \r\n> I'll make the logo!\r\n\r\nMake it cute and i'm in! =||= > > > Meanwhile you are just underestimating us that we will not make a fork of it and not caring about telemetry at all.\r\n> > \r\n> > \r\n> > I'll make the logo!\r\n> \r\n> Make it cute and i'm in!\r\n\r\n[fork name]-chan will be the mascot! (please I hope the name will be 'Audience') =||= Things i learned in this disrespectful and in its execution illegal PR:\r\n\r\n- Audacity shall be dead to me, time to install Ardour.\r\n- Time to uninstall MuseScore and stop composing music until i managed to save the ~500\u20ac for Finale.\r\n\r\nFuck this. =||= > > lets find out what people really want:\r\n> > https://www.strawpoll.me/45241130\r\n> \r\n> :lol: Apologies for being off-topic, but did you read this on the strawpoll.me site?\r\n> \r\n> \"Fandom and our partners use technology such as cookies on our site to store and collect information from your browser to personalize content and ads, provide social media features, and analyze our traffic.\"\r\n\r\nyea websites be shitty. But there are tools and plugins and browser features for protecting yourself online. Maybe you see why we don't want these same technologies in a native app where no such protections exist? =||= > > lets find out what people really want:\r\n> > https://www.strawpoll.me/45241130\r\n> \r\n> :lol: Apologies for being off-topic, but did you read this on the strawpoll.me site?\r\n> \r\n> \"Fandom and our partners use technology such as cookies on our site to store and collect information from your browser to personalize content and ads, provide social media features, and analyze our traffic.\"\r\n\r\nAlso this:\r\n\r\n>  How do we collect your data?\r\n> Some data are collected when you provide it to us. This could, for example, be data you enter on a contact form.\r\n> Other data are collected automatically by our IT systems when you visit the website. **These data are primarily technical data such as the browser and operating system you are using or when you accessed the page. These data are collected automatically as soon as you enter our website.** \r\n\r\nStrawpoll does literally the very thing this thread is against. =||= > \r\n> \r\n> > lets find out what people really want:\r\n> > https://www.strawpoll.me/45241130\r\n> \r\n> :lol: Apologies for being off-topic, but did you read this on the strawpoll.me site?\r\n> \r\n> \"Fandom and our partners use technology such as cookies on our site to store and collect information from your browser to personalize content and ads, provide social media features, and analyze our traffic.\"\r\n\r\nWait until you hear what GitHub collects\r\n\r\n> \r\n> \r\n> > > lets find out what people really want:\r\n> > > https://www.strawpoll.me/45241130\r\n> > \r\n> > \r\n> > :lol: Apologies for being off-topic, but did you read this on the strawpoll.me site?\r\n> > \"Fandom and our partners use technology such as cookies on our site to store and collect information from your browser to personalize content and ads, provide social media features, and analyze our traffic.\"\r\n> \r\n> Also this:\r\n> \r\n> > How do we collect your data?\r\n> > Some data are collected when you provide it to us. This could, for example, be data you enter on a contact form.\r\n> > Other data are collected automatically by our IT systems when you visit the website. **These data are primarily technical data such as the browser and operating system you are using or when you accessed the page. These data are collected automatically as soon as you enter our website.**\r\n> \r\n> Strawpoll does literally the very thing this thread is against.\r\n\r\nWait until you hear what data GitHub collects! =||= > > > lets find out what people really want:\r\n> > > https://www.strawpoll.me/45241130\r\n> > \r\n> > \r\n> > :lol: Apologies for being off-topic, but did you read this on the strawpoll.me site?\r\n> > \"Fandom and our partners use technology such as cookies on our site to store and collect information from your browser to personalize content and ads, provide social media features, and analyze our traffic.\"\r\n> \r\n> Also this:\r\n> \r\n> > How do we collect your data?\r\n> > Some data are collected when you provide it to us. This could, for example, be data you enter on a contact form.\r\n> > Other data are collected automatically by our IT systems when you visit the website. **These data are primarily technical data such as the browser and operating system you are using or when you accessed the page. These data are collected automatically as soon as you enter our website.**\r\n> \r\n> Strawpoll does literally the very thing this thread is against.\r\n\r\ny'all realise that every time you comment on this you bring more people to my poll\r\n\r\nI have got over 250 votes  =||= > > > > lets find out what people really want:\r\n> > > > https://www.strawpoll.me/45241130\r\n> > > \r\n> > > \r\n> > > :lol: Apologies for being off-topic, but did you read this on the strawpoll.me site?\r\n> > > \"Fandom and our partners use technology such as cookies on our site to store and collect information from your browser to personalize content and ads, provide social media features, and analyze our traffic.\"\r\n> > \r\n> > \r\n> > Also this:\r\n> > > How do we collect your data?\r\n> > > Some data are collected when you provide it to us. This could, for example, be data you enter on a contact form.\r\n> > > Other data are collected automatically by our IT systems when you visit the website. **These data are primarily technical data such as the browser and operating system you are using or when you accessed the page. These data are collected automatically as soon as you enter our website.**\r\n> > \r\n> > \r\n> > Strawpoll does literally the very thing this thread is against.\r\n> \r\n> y'all realise that every time you comment on this you bring more people to my poll\r\n> \r\n> I have got over 250 votes\r\n\r\nWith a highly biased sample size of mainly people who already agree with you.\r\n\r\nBut it's besides the point. The point is, Strawpoll's user tracking is actually worse than what audacity is proposing.\r\nA) It's not even possible to opt out of strawpoll's tracking\r\nB) Strawpoll is actually sending that data to advertisers =||= Are we making a Microsoft Audacity now? Come on. =||= this is getting kind of \"off-topic\" I feel. =||= Just to make sure to bump this question from @SndChaser doesnt get dumped because of the conversation\r\n\r\n> @crsib :\r\n> \r\n> > Due to the large amount of worry about this PR, (which we completely understand), we want to clarify exactly what is going on:\r\n> \r\n> This is a good start, with 3000 people stating they are disapproving, confused or concerned it seems that the initial proposal was less than well considered.\r\n> \r\n> > ```\r\n> > 1. Telemetry is **strictly optional and disabled by default**. No data is shared unless you choose to opt-in and enable telemetry.\r\n> > ```\r\n> \r\n> Strictly optional for who? Implementing an opt-in/opt-out dialog indicates that by default you are expecting this code to be compiled into the application\r\n> \r\n> > ```\r\n> > 2. Telemetry only works in the builds made by GitHub CI from the official repo (the telemetry URLs are only defined there).\r\n> > \r\n> > 3. If you are compiling Audacity from source, we will provide a CMake option to enable the telemetry code. This option will be turned **off** by default.\r\n> > ```\r\n> \r\n> This seems rather disingenuous. The vast majority of users do not compile this code themselves. They get it from an upstream that compiles it for them, therefore the average user will have no way of knowing if this code is compiled into the application until they start it.\r\n> \r\n> > **Why have telemetry at all?**\r\n> > Essentially, it\u2019s to help us to identify product issues early:\r\n> \r\n> And this is a valid use case... HOWEVER, having a valid use case doesn't make the jump to using API's from privacy disrespecting third parties an obvious solution. Having identified the need and use case the obvious next step should have been to start a conversation how to best implement this feature, and make certain identify:\r\n> \r\n> * Impact of the feature on developers\r\n> * Impact of the feature on users\r\n> * How to safeguard user information\r\n> * What is the chain of custody for the information being gathered\r\n> * What is the life cycle for the information\r\n> * What features will be available to users to see the information that is being gathered\r\n> * What types of transparency are the developers going to maintain around this information\r\n> \r\n> > Regarding the concerns about the choice of providers:\r\n> > ```\r\n> > 1. We do not incorporate cross-site tracking, limiting the ability to identify the user by both Google and Yandex.\r\n> > ```\r\n> \r\n> Cross-site tracking is not necessary for Google to take the information supplied to them and use it against other sources they gather information from in order to fingerprint the user. This kind of data mining operation is precisely what they have been known to do for years now.\r\n> \r\n> > ```\r\n> > 3. Google would only receive:\r\n> >    a. Session start and end events;\r\n> >    b. Errors for debugging;\r\n> >    c. File formats used for import and export;\r\n> >    d. OS and Audacity versions;\r\n> >    e. Use of effects, generators, and analysis tools to prioritize future improvements;\r\n> > ```\r\n> \r\n> This is more than enough information for Google to use it in their mining operations.\r\n> \r\n> > ```\r\n> > 4. We will consider replacing Google and Yandex with another service if we find one that fulfills our requirements - thanks for the suggestions and keep them coming.\r\n> > ```\r\n> \r\n> Did you consider anything else? I did a quick thought experiment about other common applications that I know that gather information. What did I come up with? Well, I'm using FireFox, and I know they gather information all the time.\r\n> \r\n> So, I did a quick double check to see what their documentation / statement is around the information they gather. They are very clear and transparent: [Telemetry collection and deletion](https://support.mozilla.org/en-US/kb/telemetry-clientid). I note they have some very carefully stated guidelines surrounding the gathering and use of this information:\r\n> \r\n> > **How long do you keep telemetry data?**\r\n> \r\n> > We keep telemetry data for 13 months.\r\n> \r\n> > **How do I opt out or delete telemetry data?**\r\n> \r\n> > You can opt out of sending any Firefox telemetry information at any time. If you opt out of sending telemetry data, we will also treat this as a request to delete any data we previously collected. Data will be deleted within 30 days after you opt out.\r\n> \r\n> Your proposal is that you have an on / off switch, with no indication of:\r\n> \r\n> 1. Where the information is stored?\r\n> 2. How long the information is stored?\r\n> 3. What (if anything) will be done to anonymize the information?\r\n> 4. Who will have access to the information (including any third parties)?\r\n> 5. If the user turns off the option later, when will their information be deleted?\r\n> \r\n> Speaking to #3 above, it's definitely necessary as you have stated:\r\n> \r\n> > Both services also record the IP the request is coming from.\r\n> \r\n> The simple FAQ style document from Mozilla addresses a number of these concerns, and links to more in depth information regarding the gathering of this information and all of the technical details of how it is used. This is the kind of transparency that needs to be included when addressing this kind of situation.\r\n> \r\n> One of the nicer things about Mozilla's implementation is they have a whole, publicly available portal for information surrounding the telemetry they gather: [Mozilla Telemetry Portal](https://telemetry.mozilla.org/) - nothing in your proposal suggests that you would implement anything similar.\r\n> \r\n> Also, very noteworthy: Mozilla has a **whole open source [SDK called GLEAN](https://mozilla.github.io/glean/dev/index.html)** for this application. This is the kind of implementation that should have been considered before even one line of code was written to try to implement this.,\r\n> \r\n> The big takeaway here, is that as a developer you have misunderstood the practice for implementing a large new feature. From a technology standpoint it is simple. The hard part is the **policy, procedures and processes** that are needed to support this feature. The code is the easy part, it's working with the whole community that is difficult, BUT IT IS ABSOLUTELY CRITICAL.\r\n\r\n =||= > > > > > lets find out what people really want:\r\n> > > > > https://www.strawpoll.me/45241130\r\n> > > > \r\n> > > > \r\n> > > > :lol: Apologies for being off-topic, but did you read this on the strawpoll.me site?\r\n> > > > \"Fandom and our partners use technology such as cookies on our site to store and collect information from your browser to personalize content and ads, provide social media features, and analyze our traffic.\"\r\n> > > \r\n> > > \r\n> > > Also this:\r\n> > > > How do we collect your data?\r\n> > > > Some data are collected when you provide it to us. This could, for example, be data you enter on a contact form.\r\n> > > > Other data are collected automatically by our IT systems when you visit the website. **These data are primarily technical data such as the browser and operating system you are using or when you accessed the page. These data are collected automatically as soon as you enter our website.**\r\n> > > \r\n> > > \r\n> > > Strawpoll does literally the very thing this thread is against.\r\n> > \r\n> > \r\n> > y'all realise that every time you comment on this you bring more people to my poll\r\n> > I have got over 250 votes\r\n> \r\n> With a highly biased sample size of mainly people who already agree with you.\r\n> \r\n> But it's besides the point. The point is, Strawpoll's user tracking is actually worse than what audacity is proposing.\r\n> A) It's not even possible to opt out of strawpoll's tracking\r\n> B) Strawpoll is actually sending that data to advertisers\r\n\r\nso what your saying is....\r\n\r\nStatistics are a bad way of judging how the community as a whole feels about your software? =||= @mindinsomnia \r\n\r\n>  The point is, Strawpoll's user tracking is actually worse than what audacity is proposing.\r\n\r\nI don't use Strawpoll every day to do my job. Strawpoll doesn't care about my usage patterns other than the 3 seconds I took to use their site. I have Privacy Badger and uBlock Origin installed, which thwarts most of what they try anyway.\r\n\r\nNone of that can be said for Audacity. You're arguing a moot point. =||= @mindinsomnia Are you realizing that you have more dislikes than likes in your posts?\r\nThe strawpoll is not biased in any way I see. =||= > > > > Meanwhile you are just underestimating us that we will not make a fork of it and not caring about telemetry at all.\r\n> > > \r\n> > > \r\n> > > I'll make the logo!\r\n> > \r\n> > \r\n> > Make it cute and i'm in!\r\n> \r\n> [fork name]-chan will be the mascot! (please I hope the name will be 'Audience')\r\n\r\nthe damn weebs =||= # OK poll time,\r\n\r\nlets find out what people really want:\r\n\r\nhttps://www.strawpoll.me/45241130\r\n\r\n400 responses and counting =||= @IGBC You're making a poll asking whether it's okay to send data to Google using a site that sends data to Google? =||= I don't know why people are acting as if this is new, musescore's website has used Yandex for telemetry since at least January 2019. https://musescore.org/en/node/283188 =||= > # OK poll time,\r\n> \r\n> lets find out what people really want:\r\n> \r\n> https://www.strawpoll.me/45241130\r\n> \r\n> 400 responses and counting\r\n\r\nyou dont need to keep reposting this =||= fine :P I will put the results up when it slows down enough =||= @rak1507\r\n\r\n> I don't know why people are acting as if this is new,\r\n\r\nI would wager because Audacity is (most likely) used by exponentially more people than MuseScore. Nobody here is suggesting that sending analytics to shady companies is new. =||= > I don't know why people are acting as if this is new, musescore's website has used Yandex for telemetry since at least January 2019. https://musescore.org/en/node/283188\r\n\r\nBecause we are talking about Audacity here, I guess \u00af\\_(\u30c4)_/\u00af =||= @rak1507 You do understand the difference between a damn website running behind uBlock Origin, uMatrix, and more, where *we* are in control over what code runs, somewhat, and a compiled executable that can do whatever it wants to, right? =||= May be use sentry.io (it's open source, you can selfhost it) for the data, described in PR? It's privacy friendly and (IMO) perfect fit for such case. =||= I think I put it the wrong way, I'm just pointing out that they've always been pretty shady. =||= > May be use sentry.io (it's open source, you can selfhost it) for the data, described in PR? It's privacy friendly and (IMO) perfect fit for such case.\r\n\r\nSentry wouldn't work for this, it's only for error reporting AFAIK. =||= > > > > > Meanwhile you are just underestimating us that we will not make a fork of it and not caring about telemetry at all.\r\n> > > > \r\n> > > > \r\n> > > > I'll make the logo!\r\n> > > \r\n> > > \r\n> > > Make it cute and i'm in!\r\n> > \r\n> > \r\n> > [fork name]-chan will be the mascot! (please I hope the name will be 'Audience')\r\n> \r\n> the damn weebs\r\n\r\nAre more likely to fork software. =||= > > May be use sentry.io (it's open source, you can selfhost it) for the data, described in PR? It's privacy friendly and (IMO) perfect fit for such case.\r\n> \r\n> Sentry wouldn't work for this, it's only for error reporting AFAIK.\r\n\r\nNope, you can report both errors and custom events, here is link to the doc page of sentry CLI, but the same for any platform with sentry SDK: https://docs.sentry.io/product/cli/send-event/\r\n\r\nWe literally used that for tracking user base count and \"open app home screen\" events for mobile apps in one of private projects, because we don't want to send our users data to google analytics or yandex (app)metrica =||= > Have you looked at https://sentry.io/welcome/ as this seems to be what you want you want and would then remove Google and yandex which seems better and you can even host it yourself if I recall correctly\r\n\r\nI'd be cautious of this one...  I don't see anything licenses, and I don't see any clear statements about how data is handled if it isn't self-hosted.  IOW - it would be possible to encounter many similar issues that we have with Google and Yandex now...  And the fact that this isn't an open source project gives me quite a bad feeling about it being used in an open source project. =||= > > Have you looked at https://sentry.io/welcome/ as this seems to be what you want you want and would then remove Google and yandex which seems better and you can even host it yourself if I recall correctly\r\n> \r\n> I'd be cautious of this one... I don't see anything licenses, and I don't see any clear statements about how data is handled if it isn't self-hosted. IOW - it would be possible to encounter many similar issues that we have with Google and Yandex now... And the fact that this isn't an open source project gives me quite a bad feeling about it being used in an open source project.\r\n\r\nhttps://github.com/getsentry/ =||= > Things i learned in this disrespectful and in its execution illegal PR:\r\n> \r\n>     * Audacity shall be dead to me, time to install Ardour.\r\n\r\nAs the original/lead dev of Ardour, I appreciate the sentiment, but it should be made clear that Audacity is an audio file editor, and Ardour is a DAW. Although their functionality overlaps somewhat, they are entirely different sorts of programs, and one does not replace the other (at least, not necessarily). \r\n\r\nAlso in the interest of full disclosure, builds of Ardour from ardour.org (the only ones we recommend and support) will contact ardour.org (not google) when you start the application and send it your OS and current Ardour version. We use this to notify you of new releases. We necessarily know your IP address when you do this (because that's how the internet works). We do store this information, but do nothing else with it: ardour.org has no idea who you are or what you are doing with Ardour (and we don't want to know either). =||= Making an audacity app steal data and send it off to random third parties is pointless. Why would anyone want this\r\n\r\nThis provides zero value to the end user, is a huge potential risk, and its VERY bad public relations\r\n\r\nWhy? Just why =||= Ok, although I hate google enough to have moved entirely to SFOS (look at my repos), I certainly understand why this is being done. As long as it is opt-in, I'm ok with that. I never go anywhere near those settings and I've been using Audacity from the beginning. \r\n\r\nThanks Muse and Audacity teams for your work!  =||= > > > May be use sentry.io (it's open source, you can selfhost it) for the data, described in PR? It's privacy friendly and (IMO) perfect fit for such case.\r\n> > \r\n> > \r\n> > Sentry wouldn't work for this, it's only for error reporting AFAIK.\r\n> \r\n> Nope, you can report both errors and custom events, here is link to the doc page of sentry CLI, but the same for any platform with sentry SDK: https://docs.sentry.io/product/cli/send-event/\r\n> \r\n> We literally used that for tracking user base count and \"open app home screen\" events for mobile apps in one of private projects, because we don't want to send our users data to google analytics or yandex (app)metrica\r\n\r\nThanks for the correction, might not be too bad of a solution then.\r\n\r\n> > Have you looked at https://sentry.io/welcome/ as this seems to be what you want you want and would then remove Google and yandex which seems better and you can even host it yourself if I recall correctly\r\n> \r\n> I'd be cautious of this one... I don't see anything licenses, and I don't see any clear statements about how data is handled if it isn't self-hosted. IOW - it would be possible to encounter many similar issues that we have with Google and Yandex now... And the fact that this isn't an open source project gives me quite a bad feeling about it being used in an open source project.\r\n\r\nYou do bring up a good point. I looked into [their repository](https://github.com/getsentry/sentry) and it appears the code is licensed under the \"Business Source License\" which explicitly says it is not an open source license. The license changes from this \"BSL\" to Apache 2.0 after 3 years AFAIK, which is not ideal. So maybe Sentry is not the move here. =||= Because of the FUD around telemetry- making it optional would mean most half-informed people will turn it off (most of them being on Linux). Thus audacity will have no way to track linux usage hurting it's progress on Linux. I propose making it mandatory and impossible to turn off but with anonymization and less data points.\t \t  =||= > Because of the FUD around telemetry- making it optional would mean most half-informed people will turn it off (most of them being on Linux). Thus audacity will have no way to track linux usage hurting it's progress on Linux. I propose making it mandatory and impossible to turn off but with anonymization and less data points.\r\n\r\nif it cannot be turned off people will just disallow audacity internet access with a firewall =||= ```\r\nip netns add audacity\r\nip netns exec sudo -u $SUDO_USER audacity\r\n``` =||= For OpenBSD:\r\n```\r\nroute -T255 exec audacity\r\n``` =||= I'm sure continued comments are going to get lost in the giant flood of folks already commenting here, but this is a bad idea :TM: as currently implemented. \r\n\r\nSince you are attempting this ostensably to collect user feedback/needs, I'll make my feedback very clear. If this PR is merged, I will no longer use Audacity and will find another solution. I will also no longer reccomend Audacity to friends/colleagues due to this stance on user privacy.\r\n\r\nIf this PR was revised to meet some of the suggestions of others in the thread (using a self-hosted and secured telemetry system, being clearer about what data is being collected, making opt-out the default) I would re-consider my stance. However, the trust has already been broken in my opinion and now I would have to cautious about every future change to Audacity being a change that violates user privacy. =||= @pauldavisthefirst :\r\n\r\n> Also in the interest of full disclosure, builds of Ardour from ardour.org (the only ones we recommend and support) will contact ardour.org (not google) when you start the application and send it your OS and current Ardour version. We use this to notify you of new releases. We necessarily know your IP address when you do this (because that's how the internet works). We do store this information, but do nothing else with it: ardour.org has no idea who you are or what you are doing with Ardour (and we don't want to know either).\r\n\r\nHi Paul,\r\n\r\nThanks for wading into this messy PR to comment on some of these items.  I don't think the kind of \"check-in\" system is something that most would object to...  By implementing this feature in a way that is respectful to your users.\r\n\r\nHowever, I wondered if you could provide some more feedback to help clarify some of the things about how Ardour went about implementing this feature?  Things I would be curious to see added to this conversation would include:\r\n\r\n1. How transparent is this feature implementation to users?\r\n2. Is there any end-user documentation surrounding the implementation of the feature? (IE, what's gathered, how long it's kept, how it's used, etc.)\r\n3. Were there any internal discussions before the decision was made to implement this feature?\r\n4. Were there any public conversations before this feature was implmented?\r\n5. What is the data retention policy surrounding this information?\r\n6. Were there any steps taken in light of regulations that could influence how this information is kept?\r\n7. What procedures are followed to keep this information secure?\r\n\r\nI do find it a little disheartening to hear that Ardour is storing the IP address.  It  would seem to me that during a check-in it would be possible to notify users of updates, and once that is done then the IP address is not really needed and could be scrubbed from the stored information.  If you are looking to build more usage data, then an anonymized UUID should be used instead of the IP address.\r\n\r\n\r\nEDIT: Changed: \"\"check-in\" system is something that anyone would object to..\" To \"\"check-in\" system is something that most would object to..\" =||= >  I don't think the kind of \"check-in\" system is something that anyone would object to...\r\n\r\n22% of respondants polled state they object to any form of network communication: https://www.strawpoll.me/45241130/r =||= > > I don't think the kind of \"check-in\" system is something that anyone would object to...\r\n> \r\n> 22% of respondants polled state they object to any form of network communication: https://www.strawpoll.me/45241130/r\r\n\r\nI should have said *most* instead of any.  Obviously 22% is not a majority.  And, a sample size of less than 1000 against a user base (at least according to the forum) of over 150,000 isn't quite significant. =||= Looking forward to a fork of the pre-tracking audacity ...  =||= You are absolutely insane. Don\u2019t worry, I won\u2019t ever be using Audacity ever again. You took the trust we had in your software and flushed it down the toilet.  =||= @Sciss \r\n\r\n> > I do find it a little disheartening to hear that Ardour is storing the IP address\r\n>\r\n> I don't know where you hear that?\r\n\r\nRight here: https://github.com/audacity/audacity/pull/835#issuecomment-834598802\r\n\r\n> We necessarily know your IP address when you do this (because that's how the internet works). **We do store this information**\r\n\r\nEmphasis mine. =||= Audacity hasn't needed Telemetry in the past, and it doesn't need it now.\r\n\r\nThe fact that it's opt-in would make it useless any way, because the majority of your users wont go and opt-in I'm pretty sure. =||= > @Sciss\r\n> \r\n> > > I do find it a little disheartening to hear that Ardour is storing the IP address\r\n> > \r\n> > \r\n> > I don't know where you hear that?\r\n> \r\n> Right here: [#835 (comment)](https://github.com/audacity/audacity/pull/835#issuecomment-834598802)\r\n> \r\n> > We necessarily know your IP address when you do this (because that's how the internet works). **We do store this information**\r\n> \r\n> Emphasis mine.\r\n\r\nIt's likely that the IP address being stored is in web server logs, etc. nginx, etc logs IP addresses in access logs by default. =||= @tilda Please read the original comment. They explicitly store this information along with the user's OS. It is deliberate, not a mis-configuration.\r\n\r\nEven if it is web server logging, that doesn't make it OK. =||= Holy crap this is a lot of drama. I'm gonna just state my opinion:\r\n\r\n* It is possible for analytics to be okay, because \"analytics\" is a very broad word. The word \"analytics\" includes things that are okay and also things that aren't.\r\n* I have no problem with the developers of any program knowing someone is using their program on Linux, or on x64 Gentoo Linux\r\n* I have no problem with the developers of any program knowing people use their program XX hours per day on average\r\n* I have no problem with the developers of any program knowing that people are using certain plugins more than others\r\n* The above information can be gotten without having a concept of sessions\r\n* The above information can be gotten without linking data together. There would be no reason to need to know that people who start Audacity at a certain time of day are more likely to use a certain plugin.\r\n* I wonder how useful the above information actually is\r\n* I would be worried about the developers of a program knowing exactly when I'm using it.\r\n* I would be worried about the developers of a program knowing in precise detail what I'm using it for (e.g. sending audio data to the server)\r\n* I would be worried about the developers of a program linking together all that data and building a user profile.\r\n* Google is permanently untrustworthy. If it would just collect the above-mentioned data and calculate statistics for the Audacity developers, that would be okay. But I doubt that it does just that. There is no transparency about what Google does with your data. Not even the Audacity developers would know. Same for other large advertising companies.\r\n* You guys (you know who you are) are making a mountain out of a molehill considering the program asks you whether you'd like to enable analytics when you start it up. It's like you saw the word \"telemetry\" and just rushed in to attack the developers. Sheesh, cut it out.\r\n* The fact that a program has telemetry *that you turned off* is a really dumb reason to avoid using the program.\r\n* People who are irrationally pissed off are more likely to be commenting in this thread, than people who aren't. They are a \"vocal minority\" =||=    \r\n> * How transparent is this feature implementation to users?\r\n\r\nIt can be disabled if running from the command line. If the system is not online, or has a firewall blocking the communication, Ardour continues normally and without delay (it is done in a separate thread, and can fail with no impact). \r\n\r\n> * Is there any end-user documentation surrounding the implementation of the feature? (IE, what's gathered, how long it's kept, how it's used, etc.)\r\n\r\nThere is not.\r\n\r\n> * Were there any internal discussions before the decision was made to implement this feature?\r\n\r\nThere were.\r\n \r\n> * Were there any public conversations before this feature was implmented?\r\n\r\nWith the core user group, on IRC. There may or may not have been some discussion on the user mailing list - I don't recall.\r\n\r\n> * What is the data retention policy surrounding this information?\r\n\r\nThe information is not associated with any user ID at ardour.org and so cannot be deleted in connection with a GDPR-style request. Making it deletable on request would mean associating it in someway with a user ID, which we will not do. We currently retain all such \"pings\" back to 2013.\r\n\r\n> * Were there any steps taken in light of regulations that could influence how this information is kept?\r\n\r\nI researched this when the GDPR passed, and do not believe that it is affected by it.\r\n \r\n> * What procedures are followed to keep this information secure?\r\n\r\nThe usual procedures that we follow to make ardour.org itself secure, nothing more. There is an unpublicized URL that provides an aggregate summary of the data, but we rarely use it because the DB query takes too long to execute. We already have the general message that Windows and Linux users are about equally sized groups, with macOS significantly smaller, and to be honest the information coming in likely only serves to reinforce that. In that sense, we would not lose much at this point by not storing the data at all.\r\n\r\n =||= @pauldavisthefirst\r\n\r\n> In that sense, we would not lose much at this point by not storing the data at all.\r\n\r\nYou'd win a lot of points making this change in the near future, given the timing. Just a thought.\r\n\r\nI've been looking to switch away from Cubase. Maybe Ardour can be my next destination. =||= > Because of the FUD around telemetry- making it optional would mean most half-informed people will turn it off (most of them being on Linux). Thus audacity will have no way to track linux usage hurting it's progress on Linux. I propose making it mandatory and impossible to turn off but with anonymization and less data points.\r\n\r\nBravo! You've won the award for the most irrational and stupifying dumb comment in this conversation. (1) Linux users tend to be much more technical, and much better informed than the general user base, (2) such a move would likely get Audacity removed from most Linux distributions, (3) a fork would likely be inevitable, (4) the harm to the reputation of Audacity would be irreparable, (5) there would be a good chance that this kind of move could find itself in a regulatory quagmire of GDPR, CCPA, and others.\r\n\r\nThis would absolutely guarantee that Audacity would go the way of OpenOffice.org.\r\n\r\nHmm, I think I like the name \"LibreAudio\" for the fork.... ;) =||= > (2) such a move would likely get Audacity removed from most Linux distributions,\r\n\r\nAs long as it can be disabled at compile time, this is exceedingly unlikely. Linux distributions (AFAIK) all build Ardour with the --no-phone-home configure-time option. It's not an issue. =||= > Bravo! You've won the award for the most irrational and stupifying dumb comment in this conversation. (1) Linux users tend to be much more technical, and much better informed than the general user base, (2) such a move would likely get Audacity removed from most Linux distributions, (3) a fork would likely be inevitable, (4) the harm to the reputation of Audacity would be irreparable, (5) there would be a good chance that this kind of move could find itself in a regulatory quagmire of GDPR, CCPA, and others.\r\n\r\nI get the impression that comment was deliberately inflammatory (i.e. \"trolling\") =||= > > I do find it a little disheartening to hear that Ardour is storing the IP address\r\n> \r\n> I don't know where you hear that? Without forestalling an answer by Paul, what seems \r\n\r\nPaul's original comment:\r\n\r\n> We necessarily know your IP address when you do this (because that's how the internet works). We do store this information\r\n\r\nMaybe I am reading that too tightly, but \"store this information\" would indicate storing the IP address.\r\n\r\n> version. IP addresses are part of making an HTTPS query, other than that they are not stored or processed in any form.\r\n\r\nWhich is how it should be. It could just have been the wording of Paul's comment that lead me to incorrectly believe that the IP address is being stored.  If it isn't, then the feature is working the way I would hope most other developers (like you) would handle it. =||= > I've been looking to switch away from Cubase. Maybe Ardour can be my next destination.\r\n\r\nFor every person who tries Ardour and loves it, there's someone who emails me and says \"this is complete garbage, I can't even believe that you think this is usable\". For every person who says \"I used to use Logic, but Ardour is so much more intuitive\", someone emails \"this program is f***ing impossible to use, it's not intuitive at all, i'm never using it again\". I long ago stopped caring - we work for the people who like Ardour, everybody else has a great choice of amazing DAWs to work with (and prefer). =||=  1000 votes and the results seem pretty stable so I am happy to post them:\r\n\r\n![Screenshot_2021-05-07 Audacity PR #835](https://user-images.githubusercontent.com/8123843/117485029-cd891880-af5f-11eb-9cd1-d51e75d8be54.png)\r\n\r\nThese strawpolls are perpetual (I can't close it) so you can still vote https://www.strawpoll.me/45241130/\r\n  =||= @pauldavisthefirst I understand. Having worked on development of a DAW myself, I'm always interested in trying new ones. Cubase is pretty bad for how I work, and it's glitchy to boot. Updates are expensive.\r\n\r\nYou might not care, but I do. I also care about not being tracked. =||= already have a fork, without spyware? =||= >never using it again\". I long ago stopped caring - we work for the people who like Ardour, everybody else has a great choice of amazing DAWs to work with (and prefer).\r\n\r\nCount me as one of those people who loves Ardour.  I've used it for numerous recording projects (of my weird, out there noise sound stuff), and used it for rough mastering other people's works.  It's a brilliant tool when used in the manner it was designed to be used.\r\n\r\nAudacity has it's place in audio toolkits as a quick record and edit tool, right alongside Ardour.  They both have their places and uses. =||= > Which is how it should be. It could just have been the wording of Paul's comment that lead me to incorrectly believe that the IP address is being stored.\r\n\r\nThe IP address is stored. We consider it less identifying than a UUID, and wanted a way to count pings from the \"same address\" in order to differentiate 1-time \"testing the waters\" from repeat usage. But again, we've pretty much reached \"stable information\" - someone who has used it more than 3 times fires up a version they got from us about every 2.4 minutes, with at least once such user in almost every country on earth, windows & linux equal, macOS trailing. There's not a lot more we will ever glean from this data, so we may indeed stop storing any of it. =||= Just to add a thought to the whole discussion: At this point, the tracking and data collection, no matter how well meaning or not, hardly matters, the damage is already done. Open Source projects live through the community, and though the contribution of enthusiasts. Even the mention of something that makes the community lose trust in the development process and the software will negatively impact the outcome. This isn't just passionately discussed here, but at multiple places, and that will all impact the future of Audacity. The outcome will not be a net positive. Trust is a fickle thing in knowledgeable IT people... The best thing to do is for the people responsible to admit this to themselves and to the community, salvage what trust in the project remains, and maybe consider what Open Source in general and Audacity in particular really needs to thrive in the long term. =||= @pauldavisthefirst \r\n\r\n> The IP address is stored. We consider it less identifying than a UUID, and wanted a way to count pings from the \"same address\" in order to differentiate 1-time \"testing the waters\" from repeat usage. But again, we've pretty much reached \"stable information\" - \r\n\r\nThat's regrettable.  Hopefully this is a topic that might be re-considered in the future.  IMO - I think the idea of using the check-in system is useful, and I think it would be possible to anonymize a UUID.  The reason IP's aren't anonymous is precisely what you commented on below:\r\n\r\n> someone who has used it more than 3 times fires up a version they got from us about every 2.4 minutes, with at least once such user in almost every country on earth, windows & linux equal, macOS trailing. There's not a lot more we will ever glean from this data, so we may indeed stop storing any of it.\r\n\r\nGleaning the locations is what should be anonymized.  It is something that could be derived during the communication and stored, instead of storing the IP address itself.\r\n\r\nJust a bit of feedback.  And, for what it's worth, I don't think gather the information you've described is a violation of anyone's privacy, it's good usage / demographic information.\r\n\r\nI would still like to hear more about the other items I asked about if you have time to discuss them.\r\n\r\nThanks again! =||= If you **must** do telemetry, at least make it go to your own servers. How hard can it be, sounds like a simple REST API connected to a db.  =||= Those who hate tracking enough to never use a program again because it adds some analytics as an opt-in feature: Why the heck are you commenting on GitHub, a Microsoft website? =||= > If you **must** do telemetry, at least make it go to your own servers. How hard can it be, sounds like a simple REST API connected to a db.\r\n\r\nYou know as well as I do, if they were as clean, thoughtful, or even just willing to do so, this is how they would have gone from the start. Consider the big picture: this is done on purpose. =||= > Those who hate tracking enough to never use a program again because it adds some analytics as an opt-in feature: Why the heck are you commenting on GitHub, a Microsoft website?\r\n\r\nYou are free to offer an alternative.\r\n\r\nAlso, this is where the draft started, so... =||= > Just to add a thought to the whole discussion: At this point, the tracking and data collection, no matter how well meaning or not, hardly matters, the damage is already done... Even the mention of something that makes the community lose trust in the development process and the software will negatively impact the outcome.\r\n\r\nOn the contrary. What usually happens in these cases is everyone forgets about the whole thing by next week, analytics go in, no users are lost, because it turns out people actually don't care about analytics very much and they care about using the software a lot more. This happens *despite* the number of complaints in the PR. =||= > > Just to add a thought to the whole discussion: At this point, the tracking and data collection, no matter how well meaning or not, hardly matters, the damage is already done... Even the mention of something that makes the community lose trust in the development process and the software will negatively impact the outcome.\r\n> \r\n> On the contrary. What usually happens in these cases is everyone forgets about the whole thing by next week, analytics go in, no users are lost, because it turns out people actually don't care about analytics very much and they care about using the software a lot more. This happens _despite_ the number of complaints in the PR.\r\n\r\nAnd then they end up switching the default to it being enabled by default :) =||= Currently, this PR has 130 thumbs up vs 2692 thumbs down, which is a laughable 5% approval. =||= Goodbye, Audacity =||= > Currently, this PR has 130 thumbs up vs 2692 thumbs down, which is a laughable 5% approval.\r\n\r\nLines up roughly with the statistics I collected =||= > Those who hate tracking enough to never use a program again because it adds some analytics as an opt-in feature: Why the heck are you commenting on GitHub, a Microsoft website?\r\n\r\n![](https://thenib.com/wp-content/uploads/2019/08/mister-gotcha-4-9faefa-1.jpg)\r\n\r\n =||= [Original comment](https://github.com/audacity/audacity/pull/835#issuecomment-834603395)\r\n> Because of the FUD around telemetry- making it optional would mean most half-informed people will turn it off (most of them being on Linux). Thus audacity will have no way to track linux usage hurting it's progress on Linux. I propose making it mandatory and impossible to turn off but with anonymization and less data points.\r\n\r\nDemonizing your very own target audience, implying they are luddites and ignorant, very cool. \ud83d\udc4d Don't forget mandatory surveillance is a magnet for legal trouble. If you merge this, it'll be no better than using Audition, at least Adobe has monetary incentive to add features. =||= > I would like to see a clear, unambiguous commitment now that you will not use Google Analytics nor Yandex.\r\n\r\nI'm still waiting. I posted this 7 hours ago. This should not be hard, nor require much internal discussion. That fact that there has been no response on this simple matter in 7 hours does not give me confidence that the future of Audacity is in good hands. =||= > **Why have telemetry at all?**\r\n> \r\n> Essentially, it\u2019s to help us to identify product issues early:\r\n> \r\n>     1. Audacity is widely used across several platforms, but we have no information on the application stability.\r\n> \r\n>     2. It is difficult for us to estimate the size of the user base accurately.\r\n> \r\n>     3. We need a way to make informed decisions about which OS versions to support. For example, can we raise the minimum version of the macOS to 10.10 to update the wxWidgets to the latest version?\r\n> \r\n>     4. We have a known issue with the new file format introduced in Audacity 3.0. We found it with the great help of the community members on our forum. However, there is no way for us to estimate the impact of these issues on users. Is it just a random case? Do we need to rush the work on the recovery tool or help the users one by one? Or do we need to rethink the file format to make it safer and more easily recoverable?\r\n\r\n@crsib Have you considered the following points?\r\n1. If you have no information about the application stability it's probably because the application is already stable enough (?) and as a consequence people are not reporting a lot of bugs.\r\n2. Why would you need to estimate the size of the user base accurately?\r\n3. Open a thread about the switch here https://forum.audacityteam.org/ and ask for help to the community for testing.\r\n4. Take your time for testing, solving issues isn't necessarily easy. Discuss these decisions with the community themselves. Though, a telemetry system won't help you fix this knows 3.0 issue. =||= Is there something wrong with having a bug reporter (upon crashing) instead of integrated tracking? =||= > Currently, this PR has 130 thumbs up vs 2692 thumbs down, which is a laughable 5% approval.\r\n\r\namong people who bother to pay attention to it. There is a sampling bias there.\r\n\r\n> Goodbye, Audacity\r\n\r\nbets on this person installing it again within a week?\r\n\r\nSeriously, these kinds of controversies have been rehashed over and over and over and over and over and over and ... and they always have the exact same outcome: nothing. If people care, which they do not, they will fork the project and the fork will gain traction over the original, but it won't because they do not.\r\n\r\nReacting with thumbs down doesn't prevent it from happening, it just tags you as the kind of person who thinks reacting with thumbs down prevents something from happening. =||= > among people who bother to pay attention to it. There is a sampling bias there.\r\n\r\nso... you don't expect there to be sampling biases in the tracking data, like no data being able to be collected from Linux due to how its packaged? =||= > If people care, which they do not, they will fork the project and the fork will gain traction over the original, but it won't because they do not.\r\n\r\nSpeak for yourself.\r\n\r\nI care enough that if this is merged, I will maintain a version with no tracking code enabled.\r\nThen figure out CI so there are builds for win/mac without them too.\r\n\r\nJust because other people do not care (usually out of ignorance) you do not have to follow.\r\nLead by example, make the world a better place, and all that...\r\n\r\nNot everyone is the same, some people actually do want to do good stuff and have ethics about it.\r\n\r\nEDIT: most of the CI stuff seems to be in https://github.com/audacity/audacity/blob/master/.github/workflows/cmake_build.yml\r\nThen triggered via github actions? I never used those, but seems similar to travis.\r\nMight be a good exercise to get familiar with these tools.\r\n =||= > On the contrary. What usually happens in these cases is everyone forgets about the whole thing by next week, analytics go in, no users are lost, because it turns out people actually don't care about analytics very much and they care about using the software a lot more. This happens _despite_ the number of complaints in the PR.\r\n\r\nEven if the PR is merged, the people who care will look for alternative solutions and / or find methods to disable the telemetry anyways (patches, jailing, egress rules, etc).  ... Which kinda defeats the purpose of the telemetry in the first place, as it will only be available for a subset of the overall user-base, and likely only serve to complement other kinds of metrics (popularity contests, download counts, PR participation, etc).\r\n\r\n... While I'd agree that protesting alone does not work (... alternative proposals tend to do better), it's not a totally a wasted effort; after all, the decision to make the feature opt-out was **a calculated one**, and implies that the data belongs to them, unless you're smart enough to stop them. =||= > If you **must** do telemetry, at least make it go to your own servers. How hard can it be, sounds like a simple REST API connected to a db.\r\n\r\nhttps://opentelemetry.io/ =||= I still don't understand why using Google Analytics would be a good idea. It takes little effort to set up a a self hosted telemetry. =||= > If you are compiling Audacity from source, we will provide a CMake option to enable the telemetry code. This option will be turned off by default.\r\n\r\nI doubt many distributions will go out of their way to enable that option. If this PR gets merged the people who actually have the telemetry enabled is so low that it completely defeats the point of having telemetry in the first place. =||= Something curious I found.\r\nThe recent changes on their wiki mention a few updates on the analytics documentation page made today https://alphamanual.audacityteam.org/man/Special:RecentChanges\r\n\r\nThey still keep insisting that this is all annonymous. From https://alphamanual.audacityteam.org/man/Analytics_Preferences\r\n> It is anonymous. There is understandable concern that this is intended to collect personal information. It really isn't.\r\n\r\nThe use of UUID, IP and a few other details makes it really pseudonymous at best. Granted, they do not intend to record personal data, but end up helping facilitating that. =||= > > On the contrary. What usually happens in these cases is everyone forgets about the whole thing by next week, analytics go in, no users are lost, because it turns out people actually don't care about analytics very much and they care about using the software a lot more. This happens _despite_ the number of complaints in the PR.\r\n> \r\n> Even if the PR is merged, the people who care will look for alternative solutions and / or find methods to disable the telemetry anyways (patches, jailing, egress rules, etc). ... Which kinda defeats the purpose of the telemetry in the first place, as it will only be available for a subset of the overall user-base, and likely only serve to complement other kinds of metrics (popularity contests, download counts, PR participation, etc).\r\n> \r\n> ... While I'd agree that protesting alone does not work (... alternative proposals tend to do better), it's not a totally a wasted effort; after all, the decision to make the feature opt-out was **a calculated one**, and implies that the data belongs to them, unless you're smart enough to stop them.\r\n\r\nAll this stuff? It's what people say they'll do, every time it's happened in the past. Almost always, it doesn't happen. You don't have to agree or disagree, because reality agrees.\r\n\r\nBTW since it prompts you on startup, there is no difference between opt-out and opt-in. You just call it opt-out to make it sound worse.\r\n\r\n> The use of UUID, IP and a few other details makes it really pseudonymous at best. Granted, they do not intend to record personal data, but end up helping facilitating that.\r\n\r\nI'll note there is no way to avoid recording IP. However, the UUID is totally unnecessary. So is the timing and order of events. All they really  want to know is: how long was the app used in total, and how many times was each option used, over a period of say a week. =||= > I'll note there is no way to avoid recording IP.\r\n\r\nYes there is. Don't put it in the logs. =||= > > I'll note there is no way to avoid recording IP.\r\n>\r\n> Yes there is. Don't put it in the logs.\r\n\r\nThere's no way for an end user to know whether it's logged or not. They could say they're not logging it, but then log it anyway. =||= Congratulations, you've proposed the most unpopular change in the history of this project.\r\n\r\n> Dear all, Due to the large amount of worry about this PR, (which we completely understand), we want to clarify exactly what is going on\r\n\r\nBut at least you're aware of the concern. Will you act on it?\r\n\r\nGive it up or be forked. =||= > > > I'll note there is no way to avoid recording IP.\r\n> > \r\n> > \r\n> > Yes there is. Don't put it in the logs.\r\n> \r\n> There's no way for an end user to know whether it's logged or not. They could say they're not logging it, but then log it anyway.\r\n\r\nIf you never send analytics data, there is nothing to record ;) ;) =||= > There's no way for an end user to know whether it's logged or not. They could say they're not logging it, but then log it anyway.\r\n\r\nThat's true. We'd have to take their word for it, which requires trusting them. Speaking for myself, my trust for Muse Group is hanging by a thread at this point. What they need to do to *start* rebuilding it is to immediately, unambiguously commit to not using Google Analytics nor Yandex. =||= Personally, I'm not against **strictly optional, disabled by default** telemetry if you specify which services (Google? Yandex?) you're using right in the box as opposed to the privacy policy link on the screenshot. Right now it's like you're ashamed of using Google (which you should) and hiding it (which isn't good).\n\nIf you don't want to be ashamed and still roll analytics, please try to set up your own analytics software (there are a few options, from Matomo to Plausible to rolling your own script that logs events in a table and using things like Metabase to build reports from that). It's really easy nowadays and a capable server should cost like $20/mo, so that shouldn't be that big of a deal. =||= FYI for devs: you've been brigaded from Reddit. https://www.reddit.com/r/programming/comments/n6kxm8/psa_audacity_pr_to_add_telemetry_sharing_user/ =||= > FYI for devs: you've been brigaded from Reddit. https://www.reddit.com/r/programming/comments/n6kxm8/psa_audacity_pr_to_add_telemetry_sharing_user/\n\nI dont come from reddit and I oppose those changes.\n\nWhat do they need my ip address for if it's to help debug stuff?\n\nPlease, lol. =||= I found out from a non-programming related discord. I recommend you salvage what is left of your and Tantacrul's reputation. =||= I don't come from Reddit (I heard about this via a Mastodon followee) and I still think this PR is actively harmful to Audacity, its users, and the free audio community broadly - both if merged, and frankly, at this point, even if it's not, in light of what seems to be a lack of willingness to change course to address the plethora of community concerns. I would feel this way whether I'd read zero or a million words of commentary around this thread and the underlying implementation.\r\n\r\nFurthermore, \"brigading\" is a fairly loaded term to use for what was someone sharing a link. This is the internet. Links are shared all the time - it's the literal entire point. =||= > FYI for devs: you've been brigaded from Reddit. https://www.reddit.com/r/programming/comments/n6kxm8/psa_audacity_pr_to_add_telemetry_sharing_user/\r\n\r\nIt's more than Reddit, I see this issue's popped up on /g/ a bit ago, and it's been getting passed around IRC, Mastodon, Twitter, Matrix, Telegram and Discords here and there.\r\n\r\nIt is not a small issue, and I'm surprised comments have not been restricted to contributors here yet. =||= > It's more than Reddit, I see this issue's popped up on /g/ a bit ago, and it's been getting passed around IRC, Mastodon, Twitter, Matrix, Telegram and Discords here and there.\r\n\r\n > It is not a small issue, and I'm surprised comments have not been restricted to contributors here yet.\r\n\r\nTurns out that when an open-source project does something wildly unpopular, the word spreads. =||= The only project that would get a stronger reaction than Audacity would probably be if the Linux Kernel tried to do something similar. Audacity is very proud of how many users their app has. A lot of those users feel that the FOSS values of the project are very important. =||= I hope y'all are connected to github with a vpn and throwaway account =||= guys, you're in the news https://www.theregister.com/2021/05/07/audacity_telemetry =||= Now that things have quietened down I think its important to remember this is the first battle in a long war for who controls the interests of Audacity. People stating that the devs will push this change through quietly have plenty of cases to back them up. From here on out the community needs to ruthlessly review every single PR going into this project and every single commit going into Master.\r\n\r\nUntil they give up or the money runs out. =||= > guys, you're in the news https://www.theregister.com/2021/05/07/audacity_telemetry\r\n\r\nExcerpt: \r\n\r\n> 'A massive middle finger': Open-source audio fans up in arms after Audacity opts to add telemetry capture\r\n> Move comes days after firm acquired by Muse Group =||= > I hope y'all are connected to github with a vpn and throwaway account\r\n\r\n[Whataboutism](https://en.wikipedia.org/wiki/Whataboutism) adds nothing of value to this, or any, discussion. We can go down that rabbit hole all day and it will still do nothing but waste everyone's time. =||= > > It's more than Reddit, I see this issue's popped up on /g/ a bit ago, and it's been getting passed around IRC, Mastodon, Twitter, Matrix, Telegram and Discords here and there.\r\n> \r\n> > It is not a small issue, and I'm surprised comments have not been restricted to contributors here yet.\r\n> \r\n> Turns out that when an open-source project does something wildly unpopular, the word spreads.\r\n\r\nI'm neither surprised nor disappointed - so far the discussion has remained, for the most part, civil here - and in case y'all missed it (I did) - there is a statement made in the OP above, about the use of telemetry, library cruft and what not.\r\n\r\nWhile I'm glad they addressed it, I'm still unhappy with the decision to push forward as it is - though, I would be incredibly relieved if they saw it fit to work out a self-hosted telemetry service to use on public builds.\r\n\r\nAnother option IMO, would be to entirely separate telemetry-enabled builds on the Audacity download page, and gate that behind a strict privacy policy, for compliance's sake.\r\nThis makes it an opt-in proposition at download time - and, at first-run.\r\nThat way, users deploying Audacity en masse, which can ***not*** have Telemetry on their network for understandable reasons, can continue using a supported version of Audacity, rather than a fork or a build from source. =||= > > FYI for devs: you've been brigaded from Reddit. https://www.reddit.com/r/programming/comments/n6kxm8/psa_audacity_pr_to_add_telemetry_sharing_user/\r\n> \r\n> I dont come from reddit and I oppose those changes.\r\n> \r\n> What do they need my ip address for if it's to help debug stuff?\r\n> \r\n> Please, lol.\r\n\r\ncause it's impossible to send anything over the internet without an IP address...? =||= > > > FYI for devs: you've been brigaded from Reddit. https://www.reddit.com/r/programming/comments/n6kxm8/psa_audacity_pr_to_add_telemetry_sharing_user/\n> > \n> > I dont come from reddit and I oppose those changes.\n> > \n> > What do they need my ip address for if it's to help debug stuff?\n> > \n> > Please, lol.\n> \n> cause it's impossible to send anything over the internet without an IP address...?\n\nThey don't need to log it. =||= > They don't need to log it.\r\n\r\nCorrect, but there is no way to prove they aren't logging it, so we have to assume they are anyway =||= @crsib small request - could you specify what requirements you're looking for specifically, perhaps in a new issue report, for a non-Google/non-Yandex and/or self-hosted telemetry service?\r\nThe community has answers, but this PR comment space is getting crowded for sure.\r\n> 4. We will consider replacing Google and Yandex with another service if we find one that fulfills our requirements - thanks for the suggestions and keep them coming.\r\n =||= > FYI for devs: you've been brigaded from Reddit. https://www.reddit.com/r/programming/comments/n6kxm8/psa_audacity_pr_to_add_telemetry_sharing_user/\r\n\r\nIt's not brigading when it's the wider free software community/users responding... =||= > Another option IMO, would be to entirely separate telemetry-enabled builds on the Audacity download page, and gate that behind a strict privacy policy, for compliance's sake.\r\nThis makes it an opt-in proposition at download time - and, at first-run.\r\nThat way, users deploying Audacity en masse, which can not have Telemetry on their network for understandable reasons, can continue using a supported version of Audacity, rather than a fork or a build from source.\r\n\r\nI think this is a great idea. Several users have already mentioned that they are responsible for usage of Audacity in educational settings. In schools, universities, governmental agencies, companies, and other institutions with mass deployments of computers, it would be easier for them to use Audacity without a shred of doubt about compliance with institutional and legal policies if https://audacityteam.org hosts official builds with the telemetry not even compiled into the binary. In a mass deployment, it would be inconvenient to ensure that the checkbox for telemetry is disabled on every single computer. With GitHub Actions, this would be really easy to implement using the matrix feature. =||= NACK =||= > All this stuff? It's what people say they'll do, every time it's happened in the past. Almost always, it doesn't happen. You don't have to agree or disagree, because reality agrees.\r\n\r\n... some people actually do care, and things can change. To think otherwise is feed into complacency. What people do and say matters. (If all this is for not, then what is the point of the PR -- or this dialog -- in the first place; just merge and be done with it).\r\n\r\n> BTW since it prompts you on startup, there is no difference between opt-out and opt-in. You just call it opt-out to make it sound worse.\r\n\r\nNo, I'm calling it opt-out because it, in-fact, requires end users to \"opt out\" (the shinny blue default button in the mockup ;) , aside from the other comments about config defaulting) ... If the opt-out model sounds worse to you, that is inferred.\r\n\r\nWould things change so much if users were required to check a box to **enable** telemetry; perhaps with the same catchy rationale above it?  ... yes, it would, because most users will not read the message, and as a consequence, telemetry would not be collected. The whole point of defaulting **on** is to collect information from those uses who indifferent, not paying attention, or are uninformed.\r\n\r\nI think it is more appropriate, and in better taste, to produce software in an ethical manner and air on the side of caution for people who might not know any better, then it is to aggregate metrics.\r\n\r\n(... a different way of saying it, with using that other phrase ...) =||= > ... some people actually do care, and things can change. To think otherwise is feed into complacency. What people do and say matters. (If all this is for not, then what is the point of the PR -- or this dialog -- in the first place; just merge and be done with it).\r\n\r\nI'll believe it when I see your fork become more popular.\r\n =||= > > ... some people actually do care, and things can change. To think otherwise is feed into complacency. What people do and say matters. (If all this is for not, then what is the point of the PR -- or this dialog -- in the first place; just merge and be done with it).\r\n> \r\n> I'll believe it when I see your fork become more popular.\r\n\r\noh, you got me there, maybe I should change the way I think about the world ... =||= > I'll believe it when I see your fork become more popular.\r\n\r\nThat is the thing, it doesnt have to.\r\nFor something to become a success, all it takes is 1 person using it and being grateful for it.\r\n\r\nVSCodium is a thing for those that need to run VSCode (say the rest of the team is using the same tool and has a defined workflow for it) but are not ok with all the tracking and EULA associated with it.\r\nVSCodium is never going to be more popular than VSCode, but because people use it, in my opinion it is already a success.\r\n\r\nIt serves a purpose and serves it well.\r\nThose that care will find it and use it.\r\n\r\nThe developers that fork and create such projects are not interested on popularity contests, but about being useful. =||= > > ... some people actually do care, and things can change. To think otherwise is feed into complacency. What people do and say matters. (If all this is for not, then what is the point of the PR -- or this dialog -- in the first place; just merge and be done with it).\r\n> \r\n> I'll believe it when I see your fork become more popular.\r\n\r\nVScode is still more popular than VScodium.\r\n =||= > VSCodium\r\n\r\nOoh where do I download that? Need that. =||= @IGBC https://vscodium.com/ =||= But the thing is, unlike audacity, most people think of VScode as being a free tier of a Microsoft product, not as a OSS product.\r\nTherefore, expectations are exponentially lower, given M$'s ancient reputation =||= Dear obviously confused committer,\r\n\r\nI'm not from Reddit. I'm a random guy who knows Audacity exists, simply because it's one of the most well-known, most complete and most appreciated FLOSS alternatives to proprietary software.\r\n\r\nPlease consider to stop fucking with it. You're making it worse. Go back to your shitty commercial offerings that noone has ever heard about and stuff all your shitty telemetry, antipatterns and UI redesigns in there. In other words, kindly fuck off.\r\n\r\nBest regards,\r\nThe Internet =||= Oh yea my favourite thing about this Muse takeover is they have promised to \"fix\" the GUI. \ud83d\ude06 \r\n\r\nThe GUI in audacity may not be pretty (and there's a couple of bugs) but its one of the most straight forward and intuitive interfaces I have ever used. In fact I have seen it be used as a case study for good interface layout before.\r\n\r\nMaking it pretty doesn't make it better.  =||= @SteveDaulton:\r\n> I improved the Pink Noise and Brownian Noise generators, but does anyone use them? Despite asking on the very active Audacity Forum, I have no idea. Was I wasting my time? Could I have brought more value to the Audacity community by doing something else? I have no idea, because asking users to give feedback on the forum does not work.\r\n\r\nI suggest taking a perspective more like these developers:\r\n\r\n@pauldavisthefirst:\r\n> For every person who tries Ardour and loves it, there's someone who emails me and says \"this is complete garbage, I can't even believe that you think this is usable\". For every person who says \"I used to use Logic, but Ardour is so much more intuitive\", someone emails \"this program is f***ing impossible to use, it's not intuitive at all, i'm never using it again\". I long ago stopped caring - we work for the people who like Ardour, everybody else has a great choice of amazing DAWs to work with (and prefer).\r\n\r\n@falkTX:\r\n> The developers that ... create such projects are not interested on popularity contests, but about being useful.\r\n\r\nPlease don't base your decisions on whether to continue support for a feature or operating system on necessarily unrepresentative numbers. Drop support for features when maintaining them becomes an obstacle to moving forward with the rest of the project. It doesn't matter if one person or ten million people use the feature. If it needs to go, it needs to go. If not, keep it. =||= Hi @pauldavisthefirst \r\n\r\nThe majority of this response is very useful... I'll just add a few follow up comments where there might be some more interest:\r\n\r\n> > * Is there any end-user documentation surrounding the implementation of the feature? (IE, what's gathered, how long it's kept, how it's used, etc.)\r\n\r\n> There is not.\r\n\r\nIt would be a good idea if there were...  Say the way Mozilla approaches it: [Telemetry collection and deletion](https://support.mozilla.org/en-US/kb/telemetry-clientid)\r\n\r\n> > * Were there any public conversations before this feature was implemented?\r\n\r\n> With the core user group, on IRC. There may or may not have been some discussion on the user mailing list - I don't recall.\r\n\r\nThat's at least some consideration of the user base. :)\r\n\r\n> > * What is the data retention policy surrounding this information?\r\n> \r\n> The information is not associated with any user ID at ardour.org and so cannot be deleted in connection with a GDPR-style request. Making it deletable on request would mean associating it in someway with a user ID, which we will not do. We currently retain all such \"pings\" back to 2013.\r\n\r\nNow that is something that I would suggest could be improved.  As noted in the Firefox document I linked above, they keep the data for 13 months, while removing IP addresses every 14 days.\r\n\r\n> > * Were there any steps taken in light of regulations that could influence how this information is kept?\r\n\r\n> I researched this when the GDPR passed, and do not believe that it is affected by it.\r\n\r\nFrom what I've read (from documents like [Intersoft Consulting's](https://gdpr-info.eu/issues/personal-data/) guide), they tend to view \"personal data\" in the broadest terms possible.  Since IP addresses can be used to compel information from a service provider, it is generally regarded as personal information.  Just some food for thought.\r\n\r\n\r\n> > * What procedures are followed to keep this information secure?\r\n> \r\n> The usual procedures that we follow to make ardour.org itself secure, nothing more. There is an unpublicized URL that provides an aggregate summary of the data, but we rarely use it because the DB query takes too long to execute. We already have the \r\n\r\nIMO - while the fact that this URL only presents aggregate information is good, having an unpublished URL that is public facing (if it is, in fact public facing) is not.  This is an attack surface that someone who found the URL could use to try to gain access to the database itself.\r\n\r\n> general message that Windows and Linux users are about equally sized groups, with macOS significantly smaller, and to be honest the information coming in likely only serves to reinforce that. In that sense, we would not lose much at this point by not storing the data at all.\r\n\r\nYes, you mentioned this in other posts.  Personally, I don't see the issue with gathering such information as it might be of use for other purposes (ie, identifying which versions of Ardour are still in wide use, identifying which platforms are most active - like you have already stated, how often Ardour is being used, and possibly a lot more).  I think the main point is to (a) secure the information as strongly as possible, and (b) keep the information as anonymous as possible.\r\n\r\nIt sounds like these were considerations when it was first implemented.  If anything, I would suggest that this topic could be re-investigated to update things to more current standards.\r\n\r\nIt's this kind of thinking that should be present in this PR that I think many of us are not seeing / reading... My hope is that this discussion might provide more of an example to MuseCorp about what users would like to see discussed about such an implementation. =||= > Essentially, it\u2019s to help us to identify product issues early\r\n\r\nThe fact that they're calling it a product means it's already dead to me as FOSS, telemetry or not. =||= > > (2) such a move would likely get Audacity removed from most Linux distributions,\r\n> \r\n> As long as it can be disabled at compile time, this is exceedingly unlikely. Linux distributions (AFAIK) all build Ardour with the --no-phone-home configure-time option. It's not an issue.\r\n\r\nHi Paul,\r\n\r\nI was responding to the person that stated the telemetry should be left on permanently with no option to disable it.  This would not be acceptable to most distributions. =||= > > Essentially, it\u2019s to help us to identify product issues early\r\n> \r\n> The fact that they're calling it a product means it's already dead to me as FOSS, telemetry or not.\r\n\r\nAmen, to that, I have been waiting for someone to say this for the last 24H =||= > > Bravo! You've won the award for the most irrational and stupifying dumb comment in this conversation. (1) Linux users tend to be much more technical, and much better informed than the general user base, (2) such a move would likely get Audacity removed from most Linux distributions, (3) a fork would likely be inevitable, (4) the harm to the reputation of Audacity would be irreparable, (5) there would be a good chance that this kind of move could find itself in a regulatory quagmire of GDPR, CCPA, and others.\r\n> \r\n> I get the impression that comment was deliberately inflammatory (i.e. \"trolling\")\r\n\r\nProbably, but I figured there was a chance he was serious so I thought a serious response was worthwhile. =||= F in the chat for old good Audacity.\r\nWhat's a good name for the fork? =||= > F in the chat for old good Audacity.\r\n> What's a good name for the fork?\r\n\r\nI postulated LibreAudio earlier...  Borrowing from LibreOffice forking off of OpenOffice.org =||= F in the chat for old good Audacity.\r\nWhat's a good name for the fork? =||= > How about \"Audacious\"?\r\n\r\nThat's already [a thing](https://audacious-media-player.org/). =||= > > F in the chat for old good Audacity.\r\n> > What's a good name for the fork?\r\n> \r\n> How about \"Audacious\"?\r\n\r\nThere's an audio player named Audacious. =||= I say we call it Audacity.\r\n\r\nYou know cos we have the Audacity to call it Audacity.\r\n\r\n(Yea I know I know, I am going) =||= Audacity Origin ;-)\r\n\r\n__Edit:__ But jokes aside, I thought _Audience_ was pretty nice, if there is no conflict with existing software. =||= Glad to see this made a draft. =||= It should probably get some practical and boring name like LibreAudio until someone can come up with a good pun. =||= > Glad to see this made a draft.\r\n\r\nBaby steps: next get the PR closed altogether\r\n\r\nThen get @crsib removed from the list of people with write access altogether.  =||= > It should probably get some practical and boring name like LibreAudio until someone can come up with a good pun.\r\n\r\n@spacekatia (not in the topic) came up with Audacium (Audacity and Chromium stuck together) =||= Maybe this is a situation where a benevolent dictator leadership model would've helped. Torvalds would've rightfully cursed these changes out.   =||= Stallman is the counterpoint of when a benevolent dictator goes wrong however. Finding a truly benevolent dictator is hard.\r\n\r\nFrankly I prefer the rust model where everyone even the lead devs are held to a set of community rules and processes for implementing changes, its a model where no one is above the law, and no one's voice is permitted to be louder than anyone else's (within practical reason). \r\n\r\nIt's not perfect but it significantly reduces the amount of drama in the rust world.\r\n\r\n(so far the discussion has been polite please don't flame me on this one) =||= I agree that this pull request should be closed at this point. Any alternative implementation should start fresh in a new pull request *after* discussing with the community how to do it in an acceptable way.\r\n\r\nI'm still waiting on an unambiguous statement that Audacity will not use Google Analytics nor Yandex. =||= > F in the chat for old good Audacity.\r\n> What's a good name for the fork?\r\n\r\nAudiocity ? =||= > > F in the chat for old good Audacity.\r\n> > What's a good name for the fork?\r\n> \r\n> Audiocity ?\r\n\r\nI feel we need another poll \ud83d\ude06  =||= Call it Cacophony lol =||= It would probably be wise to discuss a possible fork, its naming etc. somewhere else? The thread gets out of hand, and project maintainers (somewhat rightfully) could close/ lock it at some point. It could be on the Audacity user forum, or better suggestions? =||= > F in the chat for old good Audacity.\r\n> What's a good name for the fork?\r\n\r\ncould call it animocity (portmanteau of animosity and audacity) =||= > It would probably be wise to discuss a possible fork, its naming etc. somewhere else? The thread gets out of hand, and project maintainers (somewhat rightfully) could close/ lock it at some point. It could be on the Audacity user forum, or better suggestions?\r\n\r\nOh I thought the point of having it here was to remind the dev's we are not going away. this isn't over just cos the thousands of tryhards from reddit and HN have stopped\r\n\r\n =||= I presume we haven't had an \"official response\" from either Muse group or Debian/Arch/other distro maintainers yet.  =||= @jxu They are working on one. That much has been confirmed. =||= Given that all of the Muse group people have not even considered removing Google and Yandex, the most controversial sticking points, I'm not hopeful.  =||= ohoh what about ANA ?\r\nIt stands for Ana is Not Audacity :)\r\nOr even Audacity is Not Audacity if you will. =||= > F in the chat for old good Audacity.\r\n> What's a good name for the fork?\r\n\r\nduplicity is another neat one, a constant reminder of why people started the fork (also because it's a duplicate of audacity) =||= > Given that all of the Muse group people have not even considered removing Google and Yandex, the most controversial sticking points, I'm not hopeful.\r\n\r\nThey are considering it. They have not committed to not using Google Analytics and Yandex. =||= > Seriously, these kinds of controversies have been rehashed over and over and over and over and over and over and ... and they always have the exact same outcome: nothing. If people care, which they do not, they will fork the project and the fork will gain traction over the original, but it won't because they do not.\r\n\r\nI would suggest you look at the community you are addressing this to: LibreOffice is the result of a fork from OpenOffice.org when Oracle took it over and started making changes that met with major disapproval.\r\n\r\nThe Maria Database came about from the same situation with Oracle taking over MySQL.\r\n\r\nNeoVim came about because some users felt that the development speed and direction of Vim wasn't moving in the right direction (it wasn't even an issue was controversial as this one).\r\n\r\nYou should learn some history about the open source world.  There is a long history of projects being forked when there are issues that developers have ignored their users feedback.\r\n\r\n> Reacting with thumbs down doesn't prevent it from happening, it just tags you as the kind of person who thinks reacting with thumbs down prevents something from happening.\r\n\r\nNo, reacting with a thumbs down is an indicator that your comment doesn't deserve support because it is a deeply flawed and ignorant argument. =||= > NeoVim came about because some users felt that the development speed and direction of Vim wasn't moving in the right direction (it wasn't even an issue was controversial as this one).\r\n\r\nVim and NeoVim are co-existing just fine. =||= \"We do not incorporate cross-site tracking, limiting the ability to identify the user by both Google and Yandex.\"\r\nThis is misleading. If information is sent to either of these websites along with your IP, it's identifiable, period. It is easily correlated with you via the gobs and gobs of data they already have on you (Yandex more so if you're Russian). This is what they're good at, this is their bread and butter. \r\n\r\nAnd people know this. I will never opt into telemetry with them as the service provider, and so will many, many, many other people who use this app, which will limit the usefulness of this. If you switched to to a self-hosted solution, I'd definitely feel more comfortable with it. I recognize the utility and usefulness of telemetry in designing helpful applications, but there are tremendous privacy concerns that come with it, and using Google or Yandex is a non-starter for a huge swath of your userbase. =||= > > Given that all of the Muse group people have not even considered removing Google and Yandex, the most controversial sticking points, I'm not hopeful.\r\n> \r\n> They are considering it. They have not committed to not using Google Analytics and Yandex.\r\n\r\nThey are still not addressing the main points though: why are they collecting the data they chose, why didn't they include the community, and why do they think this is apropriate way of collecting information about their __Community__ (not product)\r\n\r\nmy poll which has now over 1400 responses shows that 50% of respndants don't support the idea of any tracking at all. https://www.strawpoll.me/45241130/r yet no response on this matter from Audacity or Muse. =||= I think I should restate what I said directed at a developer earlier:\r\n\r\n> \r\n> I think this response was carefully thought through but ultimately tone deaf. As has been repeated many times in this now unmanageably long thread, we, the community, are telling you, the developers, we don't believe this is an effective or appropriate measure.\r\n> \r\n> We understand that you want feedback about the development direction of the software, and we are telling you the forum should be enough. I am curious why you do not trust the direct feedback from your thousands of active users, to the point you feel you need automated tracking systems to replace that model?\r\n> \r\n> As for tracking in FOSS, IF it is indeed useful it must also be considered how that data can be shared safely and fairly. What segment of users this data truly represents, and how compliance with the myriad of laws surrounding data protection can be abided. We, the community, have seen no planning or engagement with the community about how to approach these important issues.\r\n> \r\n> Finally with the introduction of new corporate developers in recent times means we don't believe you when you say this is for the god of the community anymore. This is not helped by the repeated statements from devs that this is optional and anonymous, when frankly the \"opt in\" dialog is already in violation of GDPR, and it is widely accepted by the security community that google analytics is not anonymous. You either fundamentally misunderstand the technology you are trying to implement or your are misleading the community.\r\n> \r\n> You cannot sidestep these issues =||= > > NeoVim came about because some users felt that the development speed and direction of Vim wasn't moving in the right direction (it wasn't even an issue was controversial as this one).\r\n> \r\n> Vim and NeoVim are co-existing just fine.\r\n\r\nExactly... This was less of an issue like this one, there was just a feeling that there needed to be a different direction for the development.  LibreOffice and OpenOffice are co-existing as well...but I'd guess the user base for OOorg is a lot smaller now. =||= > I would suggest you look at the community you are addressing this to: LibreOffice is the result of a fork from OpenOffice.org when Oracle took it over and started making changes that met with major disapproval.\r\n> \r\n> The Maria Database came about from the same situation with Oracle taking over MySQL.\r\n\r\nYou will note that in these cases, the main developers of the project moved to the fork. =||= > It should probably get some practical and boring name like LibreAudio until someone can come up with a good pun.\r\n\r\nThanks for calling my suggestion boring and practical... LOL =||= Oh **** I didn't even see someone else made the same suggestion, sorry @SndChaser  =||= they are not addressing this and will not address it because it is all pretty normal for them.\r\nmusescore already added google analytics, so this was the obvious next step. just integrating the new acquisition onto the same toolset they have in place.\r\n\r\nthe responses here are the exception, not the norm.\r\nI bet some of them are baffled to what is going on, doesnt make sense to them.\r\n\r\nI personally have very little hopes of google analytics being taken out. it is now the modus operandi of businesses and corporations. in order to grow in userbase, understand which areas need attention, generally bringing \"value\" to the \"product\" :nauseated_face: they take analytics as a necessity.\r\n\r\nthis is a hard clash of ideals between corporate attitude and free, open-source ethos.\r\nnot everyone shares the same ideals of, for example, blender's author when he says he has no interest on money.\r\na recommended watch https://www.youtube.com/watch?v=qJEWOTZnFeg\r\n =||= > Oh **** I didn't even see someone else made the same suggestion, sorry @SndChaser\r\n\r\nIt's alright, I was genuinely laughing.... =||= > this is a hard clash of ideals between corporate attitude and free, open-source ethos.\r\n> not everyone shares the same ideals of, for example, blender's author when he says he has no interest on money.\r\n> a recommended watch https://www.youtube.com/watch?v=qJEWOTZnFeg\r\n\r\n@falkTX Well stated, but it's our job to show muse their corporate mindset will not get them very far here. Audacity's roots are in the scientific community, that its where it grew from. I doubt many users are interested in the Musings or wills of our corporate overlords.\r\n\r\n(pun intended) =||= > > I would suggest you look at the community you are addressing this to: LibreOffice is the result of a fork from OpenOffice.org when Oracle took it over and started making changes that met with major disapproval.\r\n> > The Maria Database came about from the same situation with Oracle taking over MySQL.\r\n> \r\n> You will note that in these cases, the main developers of the project moved to the fork.\r\n\r\nIn those cases that is true.  But there are lots of other cases where the original developer left a project, and others took over by forking the project.  \r\n\r\nMy point was that the concept of forking a project due to disagreements over development trajectories is not unusual in the open source world.  Whether the original developers move over, or if the fork gains the same following as the original was not really the point...  Addressing the lack of understand of the person I was responding to was the point. =||= Boo =||= > \r\n> \r\n> > It should probably get some practical and boring name like LibreAudio until someone can come up with a good pun.\r\n> \r\n> Thanks for calling my suggestion boring and practical... LOL\r\n\r\nBoring and practical and easy to remember and on-brand and self-explanatory... is good name =||= > > > It should probably get some practical and boring name like LibreAudio until someone can come up with a good pun.\r\n> > \r\n> > \r\n> > Thanks for calling my suggestion boring and practical... LOL\r\n> \r\n> Boring and practical and easy to remember and on-brand and self-explanatory... is good name\r\n\r\nI was just making a joke based on the OpenOffice.org -> LibreOffice transition...  But it might just stick. :) =||= > > I would suggest you look at the community you are addressing this to: LibreOffice is the result of a fork from OpenOffice.org when Oracle took it over and started making changes that met with major disapproval.\r\n> > The Maria Database came about from the same situation with Oracle taking over MySQL.\r\n> \r\n> You will note that in these cases, the main developers of the project moved to the fork.\r\n\r\nin these cases, the older projects are also more well known! please can we discuss forks as a last resort, because most people **will not ever** switch to your new audacity fork meaning they will not see the benefits of an audacity fork =||= ![Screenshot_2021-05-07 Audacity PR #835](https://user-images.githubusercontent.com/8123843/117512910-6fbcf680-af88-11eb-864a-07b45c41dba1.png)\r\nThe poll I created is at 1500 votes, now representing 1% an equivalent of the alleged user base on the forum. The statistics remain unchanged 50% of responses state a firm no to any form of tracking.\r\nas always the poll is available at https://www.strawpoll.me/45241130/r =||= > > > Have you looked at https://sentry.io/welcome/ as this seems to be what you want you want and would then remove Google and yandex which seems better and you can even host it yourself if I recall correctly\r\n> > \r\n> > \r\n> > I'd be cautious of this one... I don't see anything licenses, and I don't see any clear statements about how data is handled if it isn't self-hosted. IOW - it would be possible to encounter many similar issues that we have with Google and Yandex now... And the fact that this isn't an open source project gives me quite a bad feeling about it being used in an open source project.\r\n> \r\n> https://github.com/getsentry/\r\n\r\nRight, this doesn't use an Open Source license in my opinion: https://github.com/getsentry/sentry/blob/master/LICENSE\r\n\r\nIn fact to quote the license:\r\n\r\n> The Business Source License (this document, or the \"License\") is not an Open\r\nSource license. However, the Licensed Work will eventually be made available\r\nunder an Open Source License, as stated in this License.\r\n\r\nP.S. I see that someone else replied to this earlier....I'm still catching up on comments since I was away for a couple of hours.  (Hopefully caught up now.)\r\n =||= This just occurred to me, and I'm not sure whether anyone mentioned it already: if the telemetry is using methods and services that goes against the conscious of most privacy minded folks, it would mean that most Linux distributions will build Audacity without it for their repositories, and that will result in no user data from Linux.\r\nWouldn't it just defeat the purpose of the telemetry from the start then? =||= Just edit you `/etc/hosts` and no google analytics for you. =||= > Just edit you `/etc/hosts` and no google analytics for you.\r\n\r\nYou shouldn't have to do that =||= > \r\n> \r\n> > Just edit you `/etc/hosts` and no google analytics for you.\r\n> \r\n> You shouldn't have to do that\r\n\r\nyou keep using ad blockers? =||= > > > Just edit you `/etc/hosts` and no google analytics for you.\r\n> > \r\n> > \r\n> > You shouldn't have to do that\r\n> \r\n> you keep using ad blockers?\r\n\r\nYes, and I shouldn't have to. I use adblockers because I do not support super annoying and laggy ads, not to mention the tracking that comes with almost all of them. I strongly prefer websites that don't have ads at all. You did nothing to address my point whatsoever =||= @nicemicro \r\n> if the telemetry is using methods and services that goes against the conscious of most privacy minded folks, it would mean that most Linux distributions will build Audacity without it for their repositories, and that will result in no user data from Linux.\r\n\r\nWith this PR, telemetry would only be included in the official releases built through the GitHub CI system; Linux distributions building Audacity from source on their own infrastructure won't include the telemetry bit *at all*. This means the project wouldn't get *any* data from *any* Linux user installing it through their package manager in the first place. On one hand, I'm glad that none of my personal data would get sent to Google and Yandex. On the other hand, I'm pretty sure that means they wouldn't get potentially useful information from a significant chunk of their users so the collected data is incomplete.\r\n\r\nIgnoring the privacy concerns for a moment, this functionality just seems badly implemented in its current state. =||= > @Amolith \r\n\r\n> GitHub CI system; Linux distributions building Audacity from source on their own infrastructure won't include the telemetry bit _at all_. This means the project wouldn't get _any_ data from _any_ Linux user installing it through their package manager in the first place. On one hand, I'm glad that none of my personal data would get sent to Google and Yandex. On the other hand, I'm pretty sure that means they wouldn't get potentially useful information from a significant chunk of their users so the collected data is incomplete.\r\n\r\nIncomplete is an understatement.  From a statistical point of view it would be an invalid data set, which would be no basis for making any decisions (technical or otherwise).\r\n\r\n> Ignoring the privacy concerns for a moment, this functionality just seems badly implemented in its current state.\r\n\r\nWorse than badly implemented.  It seems broken by design. =||= Maybe this PR is more targeted towards windows and Mac OS users? =||= Seems like this could skew data a bit.\n\nOn 5/7/2021 17:46, AndreiS wrote:\n\n> Maybe this PR is more targeted towards windows and Mac OS users?\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, [view it on GitHub](https://github.com/audacity/audacity/pull/835#issuecomment-834869857), or [unsubscribe](https://github.com/notifications/unsubscribe-auth/ABZZJCFJYCDFMNZM32CI2BTTMR3VJANCNFSM44C5SLTA). =||= > Reacting with thumbs down doesn't prevent it from happening, it just tags you as the kind of person who thinks reacting with thumbs down prevents something from happening.\r\n\r\nSo, I gather you hadn't spotted the number of new forks then.  =||= I've used Audacity all my life, since I was like 6 years old. I'm now 22. (take my data, mine it I don't care) and I did so on Windows. I've also run Linux exclusively for quite a few years. But these days, the only times telemetry genuinely annoys me is if it gets in my way. If I can turn off the targeted advertising that results from my data being collected. I don't care.\r\n\r\nThe way analytics are being approached in this case is at best useless and at worse worrying. [like stated in this comment](https://github.com/audacity/audacity/pull/835#issuecomment-834521293).\r\n\r\nI don't agree with the foam at the mouth raging mentality of \"Audacity is dead, let's make a fork now.\" (call it audavillage since you're reclused away from the city) I think I understand what happened here.\r\n\r\nAn attempt at a useful feature was made by a community member who was well-intentioned, But did not know how to handle these things properly. Using proprietary obscure services like Google Analytics and Yandex Metrics. As well as explicitly storing records of IPs and UUIDs.\r\n\r\nThe main developer of Ardour has popped up in this thread and mentionned how Ardour uses (used) anonymized telemetry to get a better idea of the divide in operating systems amongs their users. This is useful info. THAT CAN BE GUESSED FROM PEOPLE DOWNLOADING THE APP.\r\n\r\nI will say, a manual analytics feature that lets you get a full system report including data about Audacity to put into a bug report would be useful. But automated background analytics aren't. Recurring data can only ever be used for engagement metrics useless to development.\r\n\r\nI realize this is a mess of a comment. sorry.\r\n\r\nI wish the best to the Audacity Team. =||= so, who's starting the preventive, no telemetry fork of audacity? =||= People who are focusing on there being analytics, and not the specificities of analytics being provided by large, known to disrespect privacy megacorps, are massively missing the point and proving they don't actually understand why anyone was originally concerned about analytics in general, and are just jumping on what they perceive to be a cool fad.\r\n\r\n**Analytics can be great tools for developers** for a multitude of reasons (although I don't agree with her stated approach to invasive telemetry, @TripingPC has brought up some good ones, and I find @SndChaser's reply [here](https://github.com/audacity/audacity/pull/835#issuecomment-834543942) to be perfect in every way), but **the use of Google and Yandex tools is concerning and egregious, and goes against the very foundational ethical philosophies of a FLOSS application.**\r\n\r\nI really, HIGHLY hope the Audacity team takes into consideration why going with these tools is harmful. If they aren't quite sure, I'm sure many people in their community are more than welcome to help them understand. \r\n\r\nThough I would [suggest they consider what has been said in this comment, because it is indeed a very valid concern.](https://github.com/audacity/audacity/pull/835#issuecomment-834521293) =||= Anyone who posts a pro-analytics comment who does not wish to\r\nimmediately out themselves as a hypocrite should include their IP address in their comment.\r\n\r\nEither it is \"safe and anonymous information\" or it isn't, you can't have it both ways. =||= @mcilrain Here's mine: 127.0. 0.1\r\n\r\n:) =||=  > It should probably get some practical and boring name like LibreAudio until someone can come up with a good pun.\r\n\r\n\r\nLibredacity, but that sounds weird lol\r\n =||= > > It should probably get some practical and boring name like LibreAudio until someone can come up with a good pun.\r\n> \r\n> Libredacity, but that sounds weird lol\r\n\r\nAudience - Audio Editor with the audacity to listen to it's users =||= > Audience - Audio Editor with the audacity to listen to it's users\r\n\r\nI'd rather not see a fork, but that name would be a fun one :^) =||= @polyjitter \r\n\r\n> **Analytics can be great tools for developers** for a multitude of reasons (although I don't agree with her stated approach to invasive telemetry, @TripingPC has brought up some good ones, and I find @SndChaser's reply [here](https://github.com/audacity/audacity/pull/835#issuecomment-834543942) to be perfect in every way), but **the use of Google and Yandex tools is concerning and egregious, and goes against the very foundational ethical philosophies of a FLOSS application.**\r\n\r\nThanks for the vote of confidence on my comment...it certainly took a while to put it together, and I still feel like I could have done some more...  Like gathering more policies around telemetry in other open source projects just to provide more examples that handle it appropriately. =||= I have changed my opinion. There should be zero telemetry in Audacity whatsoever, even if it is collected and stored in an anonymized, consentful way. @workedintheory has already demonstrated that he [will use it as a weapon against people with legitimate concerns](https://github.com/Xmader/musescore-downloader/issues/5#issuecomment-704372864):\r\n\r\n> There are more than 12 million members of the community and it is growing at a rate of thousands per day. The number of people complaining about the particular issue of not having a more flexibility with variants of CC [Creative Commons] licenses is less than 50. This issue is not quite as large of an issue as you perceive it to be.\r\n\r\n@workedintheory, you may think less than 50 people complaining is irrelevant. You are wrong. 50 people complaining is actually *a lot*.\r\n\r\nIt is your capitalist mindset that is irrelevant. You can't buy trust. What has your money done for Audacity? You've hired at least one new developer (@crsib) who has no history of contributing to Audacity. The only reference I can find of @crsib contributing to FOSS is a link to a [nonexistent repository](https://bitbucket.org/crsib/mani) from his LinkedIn profile. Now some of the first code he writes for Audacity sets off this shitstorm?\r\n\r\nI'm not saying you shouldn't hire anyone who doesn't have a prior history in FOSS to work on Audacity -- that would amplify existing biases -- but did you even consider looking for FOSS audio developers to hire? When RedHat hires the Fedora Project Leader, they don't just hire any random programmer. They hire someone from the community and who they hire is subject to the advise and consent of the volunteer elected representatives of the Fedora community, as specified in [written policy](https://docs.fedoraproject.org/en-US/council/).\r\n\r\nDid you even know that @falkTX recently started asking for financial support for his work? I'm not trying to speak for @falkTX; I don't know if he would even want the job. But it sure seems you didn't ask or were even aware that he was seeking financial support to work on FOSS audio software. And now through your mismanagement, he's prepared to maintain a fork and make your investment in the Audacity trademark worthless.\r\n\r\nYou've gone about this all wrong. You need to understand that the community is in charge here, not you, and come to us humbly, asking how to make amends and build trust. The first step would be closing this pull request and committing to not adding any telemetry to Audacity. A second step could be setting your new hires to work addressing longstanding complaints from the wider FOSS community about Audacity forking dependencies and making it hard to integrate Audacity's build system with Linux distributions' packaging policies. Audacity does not exist in a vacuum. It is far bigger than the regular contributors and active users on the forum. It is one part of a large ecosystem of interdependent software. =||= > > Because of the FUD around telemetry- making it optional would mean most half-informed people will turn it off (most of them being on Linux). Thus audacity will have no way to track linux usage hurting it's progress on Linux. I propose making it mandatory and impossible to turn off but with anonymization and less data points.\r\n> \r\n> Bravo! You've won the award for the most irrational and stupifying dumb comment in this conversation. (1) Linux users tend to be much more technical, and much better informed than the general user base, (2) such a move would likely get Audacity removed from most Linux distributions, (3) a fork would likely be inevitable, (4) the harm to the reputation of Audacity would be irreparable, (5) there would be a good chance that this kind of move could find itself in a regulatory quagmire of GDPR, CCPA, and others.\r\n> \r\n> This would absolutely guarantee that Audacity would go the way of OpenOffice.org.\r\n> \r\n> Hmm, I think I like the name \"LibreAudio\" for the fork.... ;)\r\n\r\nYou sound retarded and self obsessed so I am not going to reply to individual points. Now go watch your netorare  =||= Gah, I saw this happening as soon as I saw the Muse announcment.\r\n\r\nNo.  No analytics, unless wholly self hosted.\r\n\r\nBut also, most linux distros will build this without analytics, so your data will be near useless, as a large userbase IS linux users.\r\n\r\nJust a bad PR from the user story phase, right up to the systems architecture phase, and then still a bad PR in the user acceptance phase. =||= > > or decides to simply make Audacity proprietary\r\n> \r\n> Let's not get hyperbolic here. Audacity is licensed under the GPLv2. Nobody can make it proprietary.\r\n\r\nAh, I see you didn't follow the VitualBox and MySQL debacles, huh? =||= > \r\n> \r\n> > > or decides to simply make Audacity proprietary\r\n> > \r\n> > \r\n> > Let's not get hyperbolic here. Audacity is licensed under the GPLv2. Nobody can make it proprietary.\r\n> \r\n> Ah, I see you didn't follow the VitualBox and MySQL debacles, huh?\r\n\r\nAnd then came MariaDB =||= > To address the concerns about use of private library versions, the largest part of this pull request is a networking layer built on top of libcurl. This library is chosen as it is an industry-standard for cross-platform networking. It is exceptionally tested and reviewed by industry experts. The layer on top of it, aka lib-network-manager meant to simplify the development of future features. libcurl is used without any patches. It is possible to use the system-provided version of the library available on the Linux distributions, and we will double-check that this works as expected.\r\n\r\nPR description keeps getting updated in a way that suggests there is no interest in dropping the telemetry. They just keep doubling down on why what they're doing is okay.\r\n\r\nIt's not okay. My audio editing app does not need \"cross-platform networking\", and it certainly doesn't need a layer on top of that for \"future features\".\r\n =||= > I have changed my opinion. There should be zero telemetry in Audacity whatsoever, even if it is collected and stored in an anonymized, consentful way. @workedintheory has already demonstrated that he [will use it as a weapon against people with legitimate concerns](https://github.com/Xmader/musescore-downloader/issues/5#issuecomment-704372864):\r\n> \r\n> > The number of people complaining about the particular issue of not having a more flexibility with variants of CC [Creative Commons] licenses is less than 50. This issue is not quite as large of an issue as you perceive it to be.\r\n> \r\n> You may think less than 50 people complaining is irrelevant. You are wrong. It is your capitalist mindset that is irrelevant. You can't buy trust. What has your money done for Audacity? You've hired at least one new developer (@crsib) who has no history of contributing to Audacity. The only reference I can find of @crsib contributing to FOSS is a link to [nonexistent repository](https://bitbucket.org/crsib/mani) from his LinkedIn profile. Now some of the first code he writes for Audacity sets off this shitstorm?\r\n> \r\n> I'm not saying you shouldn't hire anyone who doesn't have a prior history in FOSS to work on Audacity -- that would amplify existing biases -- but did you even consider looking for FOSS audio developers to hire? When RedHat hires the Fedora Project Leader, they don't just hire any random programmer. They hire someone from the community and who they hire is subject to the advise and consent of the volunteer elected representatives of the Fedora community, as specified in [written policy](https://docs.fedoraproject.org/en-US/council/).\r\n> \r\n> Did you even know that @falkTX recently started asking for financial support for his work? I'm not trying to speak for @falkTX; I don't know if he would even want the job. But it sure seems you didn't ask or were even aware that he was seeking financial support to work on FOSS audio software. And now through your mismanagement, he's prepared to maintain a fork and make your investment in the Audacity trademark worthless. You've gone about this all wrong. You need to understand that the community is in charge here, not you, and come to us humbly, asking how to make amends and build trust. The first step would be closing this pull request and committing to not adding any telemetry to Audacity. A second step could be setting your new hires to work addressing longstanding complaints from the wider FOSS community about Audacity forking dependencies and making it hard to integrate Audacity's build system with Linux distributions' packaging policies. Audacity does not exist in a vacuum. It is far bigger than the regular contributors and active users on the forum. It is one part of a large ecosystem of interdependent software.\r\n\r\nI agree, **no telemetry at all** should be in Audacity. If this PR gets accepted, many people like me and people who value privacy will stop using Audacity and MuseScore (and both will both likely be forked). Prepare to become OpenOffice.org if this gets accepted! Also, if you disagree, please put your IP, email, and your Unix username below. It will be annonymized, I swear :) =||= > > 5,506 lines of code\r\n> \r\n> Most of that code is from vendored dependencies. The changes to the Audacity code are quite small.\r\n\r\nNevertheless, they are now part of the Audacity maintenance, since they are included.  Bugs in the \"vendor dependencies\" are now bugs in Audacity. =||= Does anyone know any good software alternatives that don't include telemetry? I heard about ardour somewhere, is it legit? =||= >\n>\n> Does anyone know any good software alternatives that don't include telemetry? I heard about ardour somewhere, is it legit?\n\nArdour is a bit overkill.\n\nOn 5/7/2021 20:52, SirAxolot wrote:\n\n> Does anyone know any good software alternatives that don't include telemetry? I heard about ardour somewhere, is it legit?\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, [view it on GitHub](https://github.com/audacity/audacity/pull/835#issuecomment-834999781), or [unsubscribe](https://github.com/notifications/unsubscribe-auth/ABZZJCEX5L2OVKNWRRWC7U3TMSRPTANCNFSM44C5SLTA). =||= @SirAxolot I'm on their website now https://ardour.org/support_expectations.html and I thought I read something about some limited telemetry I don't recall what exactly, I can't find it on the site, and it might not even be real (but even if it was, it was nothing of the sort that's being proposed in this PR).\r\n\r\nAnd yeah, this program does look like overkill for a lot of us, but hey if we gotta drop something on such short notice to trade it for something that's even more, that's certainly a more pleasant surprise than dropping it for something less! =||= Well, ardour is a full fledged DAW (Digital Audio Workstation), of course it will be overkill compared to audacity, which is an Audio Editor, that's why if a PR like this, or something similar gets merged the only course of action is fork as there's no other good FOSS program to fill in audacity's use case, that of a \"simple\" Audio Editor. =||= As long as Audacity **commits** to never enable telemetry by default in the future, I have no problem with this. I don't want Audacity to become another Firefox. =||= @crsib there is a typo in this commit message https://github.com/audacity/audacity/pull/835/commits/e420e0f68f6dd6faf9359bb61a26ae122f10ee40\r\nAlso, I found a bug:\r\nhttps://github.com/crsib/audacity/blob/telemetry/libraries/lib-network-manager/CookiesList.cpp#L67\r\nThis seems to have been copypasted from [here](https://github.com/crsib/audacity/blob/telemetry/libraries/lib-network-manager/CookiesList.cpp#L54-L56), I think you meant to use `trailingSemicolon` and not `semicolonPosition` in the npos check (As-is it looks like it can lead to bad things (tm) if the first semicolon is found and the \"Expires=\" semicolon isn't, leading to `cookieString.substr (expiresPosition, trailingSemicolon - std::string::npos)`)\r\n\r\n\r\nI'll stop using Audacity if this PR gets merged. Have a nice day =||= I generally agree with this PR and I would argue it's probably better to implement it anyway against the backlash depending on the risk of creating a fork.\n\nThe thing is, the upvote/down vote ratio is highly skewed because the sample size is not all Audacity users but only the ones who are outraged by this. The ones in favor will probably not click on articles about this and search the PR afterwards and also upvote (like I did).\n\nSure, in this bubble the shit storm is big, but the bubble in general is fairly small and I doubt that this would be such a controversial PR if every Audacity user had to vote on this before they could launch Audacity again.\n\nAs for the \"pro-people leave your ip address!\":\nNo I won't, because I don't have to. You also don't have to opt into telemetry.\n\nTo conclude:\nThe community can still create a fork if this gets out of hand, but as of now I don't see why this PR alone would warrant it.\n\nEDIT: Please explain the downvotes on this comment. =||= > \r\n> \r\n> Anyone who posts a pro-analytics comment who does not wish to\r\n> immediately out themselves as a hypocrite should include their IP address in their comment.\r\n> \r\n> Either it is \"safe and anonymous information\" or it isn't, you can't have it both ways.\r\n\r\nit's off by default and completely opt in. I honestly don't understand the issue. if you don't like it, you literally don't have to *do anything* to not share your data, because it *isn't*.\r\nMy IP is also 49.183.159.93 by the way, not that this does anything because the security risk of a simple IP address is greatly overstated anyway. =||= > EDIT: Please explain the downvotes on this comment.\r\n\r\nLol.\r\n =||= > EDIT: Please explain the downvotes on this comment.\r\n\r\nNo, just like I don't have to opt in to telemetry. =||= > To address the concerns about use of private library versions, the largest part of this pull request is a networking layer built on top of libcurl. This library is chosen as it is an industry-standard for cross-platform networking. It is exceptionally tested and reviewed by industry experts. The layer on top of it, aka lib-network-manager meant to simplify the development of future features. libcurl is used without any patches. It is possible to use the system-provided version of the library available on the Linux distributions, and we will double-check that this works as expected.\r\n\r\nAt this point, your justification rings hollow. I will make no claims about your motives for making this change, but I will say that you've already significantly damaged the trust that the community has in the people making the decisions for this software. Continuing to double down is only making things worse. Drop this patch, take a step back, and evaluate the situation. You're only digging yourselves deeper. I get that you want to gauge how the people using Audacity actually use the software, but this was never the way to do it.\r\n\r\nEdit: It's also rather telling that you're even concerned with complaints about the use of private library versions. I'm sure a couple people here have voiced that concern, but the primary issue isn't the version of libcurl that's being included, it's the fact that libcurl is being included at all. It's the fact that you intend on adding *more* networking to an offline audio editor in the future. If you want to keep Audacity the same and not anger the people who use it, you're going about it the wrong way. =||= > I generally agree with this PR and I would argue it's probably better to implement it anyway against the backlash depending on the risk of creating a fork.\r\n> \r\n> The thing is, the upvote/down vote ratio is highly skewed because the sample size is not all Audacity users but only the ones who are outraged by this. The ones in favor will probably not click on articles about this and search the PR afterwards and also upvote (like I did).\r\n> \r\n> Sure, in this bubble the shit storm is big, but the bubble in general is fairly small and I doubt that this would be such a controversial PR if every Audacity user had to vote on this before they could launch Audacity again.\r\n> \r\n> As for the \"pro-people leave your ip address!\":\r\n> No I won't, because I don't have to. You also don't have to opt into telemetry.\r\n> \r\n> To conclude:\r\n> The community can still create a fork if this gets out of hand, but as of now I don't see why this PR alone would warrant it.\r\n> \r\n> EDIT: Please explain the downvotes on this comment.\r\n\r\nwelp, if this kind of karen tier comment is the support for this PR..... then there's no other way around, fork, and fork hard! :D =||= @CiriousJoker\r\n> \r\n> EDIT: Please explain the downvotes on this comment.\r\n\r\nThe general lack of empathy you\u2019ve displayed for people using audio software for reasons extremely outside of your use case or opposite of your geography. That same lack of empathy could ricochet through a general software tool that millions of people use for reasons entirely outside your understanding of human communication in general. =||= > it's off by default and completely opt in. I honestly don't understand the issue. if you don't like it, you literally don't have to _do anything_ to not share your data, because it _isn't_.\r\n\r\nThe issue is that:\r\nA. It uses closed source telemetry providers that are well known to data mine\r\nB. The telemetry is not that useful considering that basically no Linux build will include it enabled\r\n\r\n> My IP is also 49.183.159.93 by the way, not that this does anything because the security risk of a simple IP address is greatly overstated anyway.\r\n\r\nIt's not necessarily a security issue, it's a privacy issue.\r\n =||= A meta-concern:\r\n\r\nIf lots of apps decide that telemetry is important (even if it is disabled by default, with informed consent, and limited to sharing genuinely relevant data), then users are not going to have the time to stay aware of what information they are sending, to whom, and how to disable the items that they no longer wish to share.\r\n\r\nThis is similar to the situation that cookie consent banners have arrived in.  Many websites may follow the rules, but the overall effect is that users are overwhelmed and lack sufficient agency to be confident about how their data is used.\r\n\r\nA scalable solution for the user population might require something more like a system settings dialog, where users could select what kind of information they are comfortable sharing, with the ability to add exceptions for specific types of application and/or data brokers.\r\n\r\nProviding the ability for users to accurately vote with their data that way would help to create a telemetry/analytics data market, and increase the value of user data, encouraging data providers and application authors to play by the rules and maintain trust.\r\n\r\nOn a personal note: in the long term, I think some level of data sharing is beneficial for people.  It's difficult to exist entirely as an island.  But not everyone feels safe or ready to share - especially when it is in a digital, nebulous way that their senses cannot detect.  So we should always offer no sharing of data -- real privacy -- as a default, while explaining and showing the benefits (and drawbacks) that others experience from participating. =||= > My IP is also 49.183.159.93 by the way\r\n\r\nHow did you enjoy [PRED-313 (JAV porn) that you downloaded using BitTorrent a week ago?](https://iknowwhatyoudownload.com/en/peer/?ip=49.183.159.93)\r\n\r\n =||= I don't want to have to use Audacity through a VPN sheesh =||= I am sad to see @JamesCrook and @Paul-Licameli actively supporting this at the top of this pull request. I would like to hear your responses to the criticism here. Is this something you really want, or was this imposed by @workedintheory / Ultimate Guitar / Muse Group? Where did the decision to implement this come from and why is there nothing publicly available about the proposal before any code was written? If you really think sending data about Audacity users to Google and Yandex is okay, well, thanks for Audacity, but I can't trust you anymore. =||= > > My IP is also 49.183.159.93 by the way\r\n> \r\n> How did you enjoy [PRED-313 (JAV porn) that you downloaded using BitTorrent a week ago?](https://iknowwhatyoudownload.com/en/peer/?ip=49.183.159.93)\r\n\r\nYa know most people have dynamic IP addresses that change regularly right? My IP address changes almost every day. =||= > You've gone about this all wrong. You need to understand that the community is in charge here, not you, and come to us humbly, asking how to make amends and build trust. The first step would be closing this pull request and committing to not adding any telemetry to Audacity. A second step could be setting your new hires to work addressing longstanding complaints from the wider FOSS community about Audacity forking dependencies and making it hard to integrate Audacity's build system with Linux distributions' packaging policies. Audacity does not exist in a vacuum. It is far bigger than the regular contributors and active users on the forum. It is one part of a large ecosystem of interdependent software.\n\nAlso friendly reminder to the new Team Members, that in case of a fork - Audacity could actually die like OpenOffice did - it's gonna be a race then I suppose =||= > > My IP is also 49.183.159.93 by the way\r\n> \r\n> How did you enjoy [PRED-313 (JAV porn) that you downloaded using BitTorrent a week ago?](https://iknowwhatyoudownload.com/en/peer/?ip=49.183.159.93)\r\n\r\nWhile this is admittedly incredibly funny as a response, it isn't really the gotcha you think it is. \r\n\r\nAnalytics does not inherently mean collecting and storing data on IP addresses. There's plenty of useful data to be provided without any of that stuff being recorded. In fact, quite truthfully I don't know what analytics solution, third party or homegrown, WOULD provide that, since I can't see it as useful data in any way.\r\n\r\nAnd if you're concerned about the mere connection to another party revealing said address, well... I hope you never visit the website for Audacity, or downloaded prebuilt binaries, or used any application that uses a P2P system, or used any centralized package repository on Linux. Or, uh, accessed the internet in general really.\r\n\r\nThis isn't a problem with analytics, this is just inherently how internet traffic works. Any time a project will provide some sort of connection, they will see your IP. That's downloads, that's websites, that's selfhosted git, that's extension managers, that's repositories, that's support communications. \r\n\r\nAn IP address is inherently public information, which is why you should be careful with what you do about it. If you're going to do embarrassing or illegal stuff that is trackable via IP, use a VPN. That's basic knowledge and this person being sloppy with downloading pornography doesn't indicate that this is a \"privacy concern\". Sometimes we ARE responsible for our own actions.\r\n\r\nGoogle and Yandex should not be trusted for analytics because of way too many other privacy concerns. And opt-out is a dark pattern. Opt-in analytics, through a solution that is both open source and privacy oriented, can provide useful information to improve an application and pinpoint issues and where things are failing. \r\n\r\nKeep in mind crash logs are technically a type of analytics... =||= > > You've gone about this all wrong. You need to understand that the community is in charge here, not you, and come to us humbly, asking how to make amends and build trust. The first step would be closing this pull request and committing to not adding any telemetry to Audacity. A second step could be setting your new hires to work addressing longstanding complaints from the wider FOSS community about Audacity forking dependencies and making it hard to integrate Audacity's build system with Linux distributions' packaging policies. Audacity does not exist in a vacuum. It is far bigger than the regular contributors and active users on the forum. It is one part of a large ecosystem of interdependent software.\r\n> \r\n> Also friendly reminder to the new Team Members, that in case of a fork - Audacity could actually die like OpenOffice did - it's gonna be a race then I suppose\r\n\r\nNot really. OpenOffice died because the original project's development slowed down to a crawl while the fork developed faster than OO ever did.\r\n\r\nThat would not be the case with a fork of audacity done purely remove an **opt-in** setting. The fork would likely be playing catch-up with the original constantly. A better comparison would be something like Firefox and the fork Waterfox. =||= > > > You've gone about this all wrong. You need to understand that the community is in charge here, not you, and come to us humbly, asking how to make amends and build trust. The first step would be closing this pull request and committing to not adding any telemetry to Audacity. A second step could be setting your new hires to work addressing longstanding complaints from the wider FOSS community about Audacity forking dependencies and making it hard to integrate Audacity's build system with Linux distributions' packaging policies. Audacity does not exist in a vacuum. It is far bigger than the regular contributors and active users on the forum. It is one part of a large ecosystem of interdependent software.\r\n> > \r\n> > \r\n> > Also friendly reminder to the new Team Members, that in case of a fork - Audacity could actually die like OpenOffice did - it's gonna be a race then I suppose\r\n> \r\n> Not really. OpenOffice died because the original project's development slowed down to a crawl while the fork developed faster than OO ever did.\r\n> \r\n> That would not be the case with a fork of audacity done purely remove an **opt-in** setting. The fork would likely be playing catch-up with the original constantly. A better comparison would be something like Firefox and the fork Waterfox.\r\n\r\nSo your solution is playing chicken with the FOSS community rather than listening to criticism? =||= welp, if the dev team is in support of this form of telemetry.... you know what time it is\r\n\r\n![image](https://user-images.githubusercontent.com/33670677/117529787-e3fe9680-af96-11eb-883c-068345a58744.png)\r\n =||= > > > > You've gone about this all wrong. You need to understand that the community is in charge here, not you, and come to us humbly, asking how to make amends and build trust. The first step would be closing this pull request and committing to not adding any telemetry to Audacity. A second step could be setting your new hires to work addressing longstanding complaints from the wider FOSS community about Audacity forking dependencies and making it hard to integrate Audacity's build system with Linux distributions' packaging policies. Audacity does not exist in a vacuum. It is far bigger than the regular contributors and active users on the forum. It is one part of a large ecosystem of interdependent software.\r\n> > > \r\n> > > \r\n> > > Also friendly reminder to the new Team Members, that in case of a fork - Audacity could actually die like OpenOffice did - it's gonna be a race then I suppose\r\n> > \r\n> > \r\n> > Not really. OpenOffice died because the original project's development slowed down to a crawl while the fork developed faster than OO ever did.\r\n> > That would not be the case with a fork of audacity done purely remove an **opt-in** setting. The fork would likely be playing catch-up with the original constantly. A better comparison would be something like Firefox and the fork Waterfox.\r\n> \r\n> So your solution is playing chicken with the FOSS community rather than listening to criticism?\r\n\r\nA few hundred angry Karen's ranting on a GitHub issue does not equate to the entire community surrounding Audacity.\r\n\r\nI'd be quite willing to bet that the majority of Audacity users don't care. Remember we still live in a world where more people use Facebook than desktop Linux. The concerns expressed here are extremist in nature and niche. =||= > Not really. OpenOffice died because the original project's development slowed down to a crawl while the fork developed faster than OO ever did.\r\nThat would not be the case with a fork of audacity done purely remove an opt-in setting. The fork would likely be playing catch-up with the original constantly. A better comparison would be something like Firefox and the fork Waterfox.\r\n\r\nTake a look at the [contributors on GitHub](https://github.com/audacity/audacity/graphs/contributors). It's mostly 4 people. This situation has attracted a huge amount of attention, including by skilled software developers, some of whom (like myself) have years of experience building complex audio software. We have the means to fork Audacity and take it in a different direction even if those 4 developers stick with Muse Group. It would be really sad if it came to that. I don't want it to go that way. They haven't merged this, nor any telemetry, yet. They can start building trust by:\r\n\r\n1. Committing to not adding telemetry to Audacity.\r\n2. Explaining how the decision to implement this was made.\r\n3. Work with the community to change their decision making process to ensure nothing like this happens again.\r\n =||= @eylles Very helpful to insult my comment as \"Karen tier\" just because you disagree without explaining why.\n\n---\n\n@chrismahoney I don't understand what you mean by that, can you elaborate?\nI sometimes use Audacity to cut up songs or voiceovers, but I don't need it professionally or on any major capacity. Isn't that the average use case for this software?\n\nWhat does my geography (Germany) have to do with any of this or am I missing a metaphor?\n\nI get that my opinion of \"don't take the backlash too seriously\" is not very popular, but I really couldn't understand what the backlash is about.\n\nExtra dependencies and networking is a completely separate concern, but that doesn't seem to be the issue judging from the comments. I feel like most commenters are just enraged because their open source ethos clashes with the desire to make data driven decisions by using telemetry.\n\nSince the tracking is optional and opt in, nothing changes for the user, so aside from technical considerations, how could this possibly be bad?\n\nI honestly don't get that and I'd like to understand it.\n\n---\n\n@logan2611 \nA: Only data from consenting users would be included in the data set though.\n\nB: Windows/Mac isn't affected by this and I would guess that that's still the majority of the users because at least for Windows there isn't really a good alternative (don't know for mac). =||= Why does telemetry literally gets added to every single thing? Don't you think we're getting tracked enough like that? Why do you want to know everything? You should not see what we're doing and how we're using the app. =||= > A few hundred angry Karen's ranting on a GitHub issue does not equate to the entire community surrounding Audacity.\r\n> \r\n> I'd be quite willing to bet that the majority of Audacity users don't care. Remember we still live in a world where more people use Facebook than desktop Linux. The concerns expressed here are extremist in nature and niche.\r\n\r\nI'm sorry you feel that way, but all software has ethical and moral ramifications. Those creating and using FLOSS software are going to be incredibly interested in being both ethical and moral in the software that is produced, since FLOSS values are foundationally about software that is honest about itself and does as little harm as possible, while being open and available for all. \r\n\r\nClosed source, third party analytics solutions do not fall within those goals and leave the door for plenty of abuse, not necessarily from the Audacity developers, but from providing more compilable data for a megacorp entity that is known to use software unethically, providing data to governments and other corporations that might seek to do harm to marginalized people and communities.\r\n\r\nThis is absolutely a justified conversation to be having, even though the toxicity in some places is rather unwelcomed and disappointing. =||= @CiriousJoker\r\n\r\n> I honestly don't get that and I'd like to understand it.\r\n\r\nThen read the 800+ comments explaining that above. Yes, all of them. It does not seem that you have. =||= > I don't want to have to use Audacity through a VPN sheesh\r\n\r\nThen... Don't turn on the **opt-in** telemetry, and you won't have to. Simple. =||= > Since the tracking is optional and opt in, nothing changes for the user, so aside from technical considerations, how could this possibly be bad?\r\n\r\nHave you heard of Goodhart's Law, @CiriousJoker? If you switch from \"listening to community feedback and trying to make choices that satisfy people\" to \"trying to maximise some telemetry metric as a proxy for community satisfaction,\" then that metric will rapidly become useless for that purpose.\r\n\r\nBesides, making development decisions based off of Big Data:tm: is setting yourself up for failure, especially with open-source software. If your contributors don't have full and unrestricted access to the data you're making decisions off of, then you're going to be undercutting them at every turn. At that point, a fork would be inevitable.\r\n\r\n> Then... Don't turn on the opt-in telemetry, and you won't have to. Simple.\r\n\r\nSome people having telemetry on and others not means that the people with telemetry off will be silenced for being concerned about privacy. Given that these people often (but not always) use similar platforms, it might lead to support for those platforms being underestimated, as well as other annoying incorrect estimations/evaluations caused by this confounding factor. That means it'll mean the data collected is inaccurate and, well, that just defeats the purpose, doesn't it? =||= I might as well throw in my two cents: I like my privacy.\r\n\r\nIf you include telemetry, I'd prefer it to be an option in the settings, which is only enabled when the user navigates to it and turns it on (NOT ever prompting on startup, etc.) =||= Privacy concerns are not \"extremist in nature and niche.\" =||= @CiriousJoker\r\n\r\n> A: Only data from consenting users would be included in the data set though.\r\n\r\nYes.\r\n\r\n> B: Windows/Mac isn't affected by this and I would guess that that's still the majority of the users because at least for Windows there isn't really a good alternative (don't know for mac).\r\n\r\nWindows and Mac users are affected by this since they are the only people to have builds that have telemetry in them. As mentioned by several other people, this degrades the value of the telemetry as a large portion of the user base just isn't included. \r\n\r\nI'm not against telemetry, I just don't think that this PR is doing it right. In my opinion, it should be self hosted, completely transparent and as anonymous as possible. Ideally there would also be a way to toggle what is collected, but not a lot of projects do that.\r\n\r\n =||= > > Anyone who posts a pro-analytics comment who does not wish to\r\n> > immediately out themselves as a hypocrite should include their IP address in their comment.\r\n> > Either it is \"safe and anonymous information\" or it isn't, you can't have it both ways.\r\n> \r\n> it's off by default and completely opt in. I honestly don't understand the issue. if you don't like it, you literally don't have to _do anything_ to not share your data, because it _isn't_.\r\n> My IP is also 49.183.159.93 by the way, not that this does anything because the security risk of a simple IP address is greatly overstated anyway.\r\n\r\nGood old \"i have nothing to hide so i dont care for privacy\"\r\n\r\nEdit: https://github.com/y4my4my4m/audacity-without-telemetry\r\nStarting on this because, guess we'll have to, feel free to join in. =||= > I'd be quite willing to bet that the majority of Audacity users don't care. Remember we still live in a world where more people use Facebook than desktop Linux. The concerns expressed here are extremist in nature and niche.\r\n\r\nThis is all the more reason to care as somebody that cares enough to be replying here.\r\n\r\nQuick thought: I always thought it was subversive for Audacity to have the name that it does, as if the open source community had the audacity to release a professional competitor to crap like Cool Edit Pro -> Adobe Audition. I _never_ expected the name to carry such irony where there was audacity enough to square up against that community by acquiring the software, this is just weird. =||= @MarinaGryphon \nI haven't heard of this law but it's an interesting read. However, I don't think it applies here. I don't think the goal of this telemetry is to get metrics to optimize for but rather to understand which effects & features are most popular (and then optimize those depending on real feedback and needs).\n\nI definitely think the data should be public and that self hosted analytics should be used instead of Google/Yandex. Much of the outrage seems to be about telemetry in general though and not just the provider choice, that's why I was confused.\n\nAlso, you could normalize the statistics if you know how many users you have for each platform (which they probably have data on already). =||= > Also, you could normalize the statistics if you know how many users you have for each platform (which they probably have data on already).\r\n\r\nYou fundamentally cannot get representative statistics of how many people use software on Linux. This is a feature, not a bug. Linux users get most of their software through their distribution's package manager, not the application developer. =||= > You fundamentally cannot get representative statistics of how many people use software on Linux. This is a feature, not a bug. Linux users get most of their software through their distribution's package manager, not the application developer.\n\nDo you think there's a disparity between feature popularity? As for bug reports, Linux users will report them and include logs themselves, but Windows/Mac users probably won't. In that case, it just improves Windows/Mac bug reporting without affecting the already good Linux bug reporting.\n\nI doubt that the inaccuracy of the data set actually impacts the quality given the specific type of data collected. =||= Yay, the thumbs down finally broke 3000!\r\n\r\n> Privacy concerns are not \"extremist in nature and niche.\"\r\n\r\nI'm immediately reminded of this one story:\r\nhttps://www.islam21c.com/politics/does-spying-make-you-feel-safer/\r\n\r\n> Umar said, \u201cThis is the house of Rabi\u2019ah ibn Umayyah ibn Khalaf, and they are inside drinking wine right now! What do you think?\u201d Abdur Rahman said, \u201cIndeed, I think we have done what Allah has prohibited for us. Allah Almighty said, \u2018Do not spy,\u2019 (49:12) and we have spied on them.\u201d Umar turned away and he left them alone.\r\n\r\nAnd then that whole bit with Noah and Ham...\r\n(Not that I think the techy computery crowd that'd be on this thread would be all that interested in theological moralizings of these old dead white(according to the US census!) men, just a not-quite-random example of the value of privacy being recognized even before the Industrial Revolution) =||= > You fundamentally cannot get representative statistics of how many people use software on Linux. This is a feature, not a bug.\r\n\r\nYou can, using telemetry, that is the entire point of this PR. What has gone utterly bad is the *how* part. Why Google and Yandex of all places, instead of using stuff like Firefox's Telemetry infrastructure, is beyond me. =||= > there's no other good FOSS program to fill in audacity's use case, that of a \"simple\" Audio Editor\r\n\r\nI think there are few other audio editors out there. I use my own, [Eisenkraut](https://github.com/Sciss/Eisenkraut), but that hardly covers even a fraction of the functionality of Audacity (for example, doesn't offer volume breakpoint editor or independent tracks, doesn't feature Nyquist etc.), it's basically constrained to what I need in my work, though I'm open to additions. =||= > \r\n> Those who hate tracking enough to never use a program again because it adds some analytics as an opt-in feature: Why the heck are you commenting on GitHub, a Microsoft website?\r\n> \r\n\r\nWhataboutism, strawman argument and  false equivalence in one post! Just because platform A does thing X, platform B doing X doesn't make it right. Besides browsers sandbox a lot internally, have adblockers and scriptblockers because people disliked telemetry this much.  \r\n\r\nSuch smokescreens only derail any meaningful discussions.\r\n =||= > Yay, the thumbs down finally broke 3000!\r\n> \r\n> > Privacy concerns are not \"extremist in nature and niche.\"\r\n> \r\n> I'm immediately reminded of this one story:\r\n> https://www.islam21c.com/politics/does-spying-make-you-feel-safer/\r\n> \r\n> > Umar said, \u201cThis is the house of Rabi\u2019ah ibn Umayyah ibn Khalaf, and they are inside drinking wine right now! What do you think?\u201d Abdur Rahman said, \u201cIndeed, I think we have done what Allah has prohibited for us. Allah Almighty said, \u2018Do not spy,\u2019 (49:12) and we have spied on them.\u201d Umar turned away and he left them alone.\r\n> \r\n> And then that whole bit with Noah and Ham...\r\n> (Not that I think the techy computery crowd that'd be on this thread would be all that interested in theological moralizings of these old dead white(according to the US census!) men, just a not-quite-random example of the value of privacy being recognized even before the Industrial Revolution)\r\n\r\nThank you, now I have religious justification why this PR is bad.\r\n\r\nWithout getting into the weeds about morality, there seems to be a widely agreed upon right to privacy as a human right.  =||= > 1. Telemetry is strictly optional and disabled by default.\r\n\r\nIf this would be strictly optional and disabled by default for users of a free software, this would be an isolated, non-mainline branch that would never be filed as a pull request against trunk.\r\n\r\nAs @crsib likely is a knowledgeable software developer it is highly likely that they know how software works and what the consequences are and how this is _not_ in favor to Audacity users.\r\n\r\n> (which we completely understand)\r\n\r\nSure otherwise this PR would have never been filed, despite even stayed open longer than 48 hours.\r\n\r\n---\r\n\r\nThere is better utility for users doing bug reports than telemetry even on less accessible platforms . So if you really feel about improving that, could you elaborate what makes you, @CiriousJoker want adding Telemetry to Audacity to enable users?\r\n\r\nTelemetry is not user participation in a software project. It's the opposite. And it is really hurting to see it here, as free software development has the potential to actually give answer to such problems, like the support problem in commercial software development. =||= Don't know if it's been mentioned yet and I don't feel like reading all those hundreds of comments, so I'm gonna mention it here: the screenshot makes the \"accept\" button more pronounced. A common dark pattern, sure, but one that stands against GDPR regulations. Might want to rethink that. =||= Telemetry is unnecessary for a project like this. If Audacity crashes for someone, they can just create a new issue about it. If you don't want to support a specific OS version, create an issue and let the community decide.\r\n\r\n> Just to reiterate, telemetry is completely optional and disabled by default.\r\n\r\nYour concept literally shows that the \"Send usage data\" is the focused button, which is nothing but a dark pattern. With this layout, the majority of users will not make a conscious choice and instead choose the big blue button on the right. =||= > Don't know if it's been mentioned yet and I don't feel like reading all those hundreds of comments, so I'm gonna mention it here: the screenshot makes the \"accept\" button more pronounced. A common dark pattern, sure, but one that stands against GDPR regulations. Might want to rethink that.\r\n\r\nWhile rethinking, perhaps _privacy by design_ is important as this is the actual software development and it affects the design of the software (which includes the user interface (UI) but goes far beyond it, like how the code is organized, which libraries are used or taken in etc.).\r\n\r\nOnly given thought, the user is actually the primary  concern of the developers here.\r\n\r\n> (which we completely understand) =||= Reminder: Poll https://www.strawpoll.me/45241130/r =||= Screenshot: Please note that \"Personal data or sensitive information\" includes the IP address.  If you collect it you cannot write what you are currently writing.\r\nSee also: https://ec.europa.eu/info/law/law-topic/data-protection/reform/what-personal-data_en\r\n\r\nAlso, what others say: This is still a \"dark design pattern\".   =||= > Reminder: Poll https://www.strawpoll.me/45241130/r\r\n\r\nQuite offtopic, but i think it would be a great idea for github to implement some sort of poll system for this kind of debates over PRs.\r\n\r\nIt would be extremly useful. =||= Also, a unique identifier will always make it pseudonymous at best, and this cannot be called anonymous then.\r\n\r\nBut this is not the point I want to emphasize. The whole practice of tracking should not be included here (or pretty much anywhere). =||= > A few hundred angry Karen's ranting on a GitHub issue does not equate to the\n> entire community surrounding Audacity.\n\n> I'd be quite willing to bet that the majority of Audacity users don't care.\n> Remember we still live in a world where more people use Facebook than\n> desktop Linux. The concerns expressed here are extremist in nature and niche.\n\nThis is probably the most disappointing response to these concerns I\nhave seen in quite some time. \"They've already taken my freedom and\nprivacy anyway, so what's the point?\" is a truly upsetting stance to\nsee. Not caring is not the same as agreeing. We cannot knowingly stand\nby and allow others to spy on people without their explicit consent.\nAnd honestly, they don't need to be spied on anyway.\n\nOur concern is more that despite this data collection being utterly\nuseless, they're still doing it anyway - and not for the reasons they\nsay, either. It is quite evidently just for the sake of data mining, as\nevidenced by their choice to use closed source platforms owned by\ncompanies that are quite literally known for selling people's digital\nexistence around like it's nothing.\n\nThese things have ethical issues attached, and really paints a bad\nimage on the character of the new maintainers. If, as a community, we\ncannot trust the new maintainers to make decisions with our best\ninterests at heart, and it seems that they pertain more to computer\nindustry than computer science, we are left with no choice but to\nexpress how we feel and work for change.\n =||= > We cannot knowingly stand by and allow others to spy on people\r\n\r\nIt's not spying. It's telemetry. They do not care what's on your PC or what your name is, or what your favourite colour is. They are recording stats only relevant to Audacity. The data is anonymous. No personal information is collected. We're talking about the same kind of information that almost every website, **including this one**, gather about usage patterns already. There is nothing nefarious about this, it's just useful information for product managers to make decisions about the direction of a project.\r\n\r\n> without their explicit consent.\r\n\r\nWhat part of \"opt-in\" does everyone in this thread find so hard to understand?\r\nJust so we're clear, in case there's any confusion, \"opt-in\" is short for \"opting in\", opting is to make a choice.\r\nOpt-in means that this will be off by default.\r\nTelemetry will not be enabled unless **you** deliberately choose to enable it, and go do so.\r\n\r\nSo you can relax. No one will be spying on you. Take off the tin foil hat.\r\n\r\n =||= > So you can relax. No one will be spying on you. Take off the tin foil hat.\r\n\r\nCan we stop using the term telemetry, and call it what it is: tracking. And stop to be naive that a for-profit company's only goal is to improve the software? They need to make it profitable, so this is the entry point to connecting it to future paid subscription cloud whatever service AND/OR selling behavioural data to whoever can use them to build whatever models, if not for advertising then perhaps to build a better commercial product. Point.\r\n\r\nAnd as for networking at all or not - stop reading here if you just think this is tinfoil hat - an audio editor is also a journalistic tool. Why on earth do you want to open the possibility that as soon as the \"basic telemetry\" has been extended in some future version, the data thus obtained (not necessarily by the vendor, but whoever manages to hack the connection) can be used to identify people who have been editing particular sounds, interviews, whatever.\r\n\r\nThere is simply no good reason to add this. =||= > > You fundamentally cannot get representative statistics of how many people use software on Linux. This is a feature, not a bug.\r\n> \r\n> You can, using telemetry, that is the entire point of this PR. What has gone utterly bad is the _how_ part. Why Google and Yandex of all places, instead of using stuff like Firefox's Telemetry infrastructure, is beyond me.\r\n\r\nYou can't, as has been explained at least 4 times above. It's FOSS, and (many of) the downstream users strip out tracking. \r\n\r\nHas anyone got a promising fork yet? =||= > The data is anonymous. No personal information is collected.\r\n\r\nThe data is not anonymous in any legal sense that is compliant with GDPR and other consumer protection laws worldwide; the data processor is Google Analytics and/or Yandex, both of which will record a variety of data and metadata including IP addresses, which are not only pseudonymous but considered personally identifiable information. While not \"personal\" in a sense, when you're a major advertising company already collecting lots of user data, crossing information and finding out who you are is trivial.\r\n\r\n> We're talking about the same kind of information that almost every website, **including this one**, gather about usage patterns already. There is nothing nefarious about this, it's just useful information for product managers to make decisions about the direction of a project.\r\n\r\nThe mere fact there exist websites that may not comply does not make your argument valid. \r\n\r\n> What part of \"opt-in\" does everyone in this thread find so hard to understand?\r\n> Telemetry will not be enabled unless **you** deliberately choose to enable it, and go do so.\r\n\r\nDark patterns are frowned upon (see PR description), and implicit tracking acceptance (see code) is not consent (see [fungiboletus' comment](https://github.com/audacity/audacity/pull/835/files#r628124998)).\r\n =||= > Dark patterns are frowned upon (see PR description), and implicit tracking acceptance (see code) is not consent (see [fungiboletus' comment](https://github.com/audacity/audacity/pull/835/files#r628124998)).\r\n\r\nThis is mistaken. Dark patterns are not frowned upon - they are illegal. 57 Mil might be small change for Google - would be it small change for Musecore? =||= @mindinsomnia The [ad hominems](https://en.wikipedia.org/wiki/Ad_hominem) towards people in this discussion voicing their concerns on *who* (e.g. Google and Yandex) will be using your data besides the project maintainers/developers (e.g. Muse Group) in a closed system - that is used to collect large amounts of data based on profiles, which are (also) derived from an IP address and can be identified across many websites and locations - is not helping your point across at all.\r\nPlease do not conflate that with the topic of *if* there is some form of tracking/telemetry.\r\n\r\nTrying to discredit other people's factual assertions based on an [appeal to tradition](https://en.wikipedia.org/wiki/Appeal_to_tradition) (e.g. \"everyone is being tracked by everything by now anyways\") or an [appeal to hypocrisy](https://en.wikipedia.org/wiki/Tu_quoque) (e.g. \"why are you even using github, it also tracks you?\") is not providing any valid argument *for* this PR being merged. =||= > This is mistaken. Dark patterns are not frowned upon - they are illegal.\r\n\r\nUnfortunately not everything that's usually considered dark patterns are explicitly made illegal. I'm not very well versed on GDPR legalese but I'm not sure a \"default/highlighted action button\" of accepting is an illegal dark pattern in this instance. =||= What happened to the IPs? **In the original post you mentioned both services collecting IP information.** This isn\u2018t mentioned any more in the updated post, but I find this a bit suspicious. I honestly doubt that there is a way to disable that. So please be honest and mention it! I don't like this way of dealing wih criticism.\r\nThat\u2018s also opposing the statement in the screenshot \u2013 **IPs are both personal data and yield to an estimated location information**. =||= @ElementW \r\n\r\n> Unfortunately not everything that's usually considered dark patterns are explicitly made illegal. I'm not very well versed on GDPR legalese but I'm not sure a \"default/highlighted action button\" of accepting is an illegal dark pattern in this instance.\r\n\r\nIt is. =||= The toll for the introductory post counts 3750 negative emojis and 252 positive emojis. Those are pretty staggering numbers, and if you can't see the writing on the wall and continue with this implementation **against the will of 93% of your userbase**, we will have to assume that Audacity is no longer fit to serve its user's needs and instead serves Muse, Google and Yandex. We had a good run, folks. =||= Telemetry, CLAs... Closed source incoming? =||= > @ElementW\r\n> \r\n> > Unfortunately not everything that's usually considered dark patterns are explicitly made illegal. I'm not very well versed on GDPR legalese but I'm not sure a \"default/highlighted action button\" of accepting is an illegal dark pattern in this instance.\r\n> \r\n> It is.\r\n\r\nWell, to be sure, companies are doing their best to \"interpret\" the boundary here. Attached is the cookie selection of one of Germany's national newspapers. Tell me if you don't find it obvious that you \"should\" click the black button (\"accept all data collection\").\r\n\r\n![Screenshot from 2021-05-08 13-04-52](https://user-images.githubusercontent.com/131300/117538116-e8619880-b004-11eb-89db-844ee33556fa.png)\r\n =||= > Has anyone got a promising fork yet?\r\n\r\nI am waiting on an official response from Audacity team before doing any work on that.\r\nLet's give them the benefit of the doubt, you know.. innocent until proven guilty.\r\nSure, not a lot of hope for them to go in the right direction, but surprises happen sometimes.\r\n =||= I would vote to support the falkTX fork, if it will be necessary.  =||= > I am waiting on an official response from Audacity team before doing any work on that.\r\n\r\nPlease, call it **Audience** and I promise I will work on the logo if you need one! =||= off topic but i feel like github could really do with threads (similar to how reddit does it?) because the amount of different discussion in these replies is very overwhelming\r\nalso my poor inbox........  =||= > > Has anyone got a promising fork yet?\r\n> \r\n> I am waiting on an official response from Audacity team before doing any work on that.\r\n> Let's give them the benefit of the doubt, you know.. innocent until proven guilty.\r\n> Sure, not a lot of hope for them to go in the right direction, but surprises happen sometimes.\r\n\r\n@falkTX Man, call it \"honesty\" if you go ahead with that, pwweease ;P =||= > \r\n> \r\n> > My IP is also 49.183.159.93 by the way\r\n> \r\n> How did you enjoy [PRED-313 (JAV porn) that you downloaded using BitTorrent a week ago?](https://iknowwhatyoudownload.com/en/peer/?ip=49.183.159.93)\r\n\r\n\ud83d\ude02 thanks I did have a good chuckle ahaha\r\nsadly not me though, since I'm on CG nat and several hundred connections share my IP at any one time. =||= ![michael-jackson-eating-popcorn-gif](https://user-images.githubusercontent.com/31383123/117540784-1cdb5180-b011-11eb-8485-b8ab42967d13.gif)\r\n =||= I think this a good time to take a hard stance against automatic upload of tracked data (\"telemetry\" is a word used to sugar coat).  =||= > Is telemetry opt-in only or do users have to disable it manually once they update to the next release?\r\n\r\nIt is opt-in.\r\nOn first run with this PR, you are asked if you would like to opt in. It is a binary choice, opt in or opt out. Your choice is remembered and you are not prompted again, but can change choice option in Preference settings should you wish to. =||= > This nonsence, but still no bug fixes to Jack support.... Really?\r\n\r\nJack support is broken in Audacity 3.0.2.\r\nI fixed it here: https://github.com/audacity/audacity/commit/b4b5cc812483b311627bba48e26b91ae389ce713\r\n\r\nA bit too late now, but I wish that GitHub users would observe basic GitHub etiquette. =||= > Disabled by default, a user must manually and without nagging explicitly opt-in to telemetry themselves.\r\n\r\nYes it is opt-out by default.\r\nThere is a one time dialog  that asks if you would  like to opt-in. If you choose not to opt in, that's it, no nags. =||= > It's not opt-in if the default is on.\r\n> \r\n> https://github.com/audacity/audacity/pull/835/files#diff-38452b2ab9b100d5046eb855410add20e6158dbc69533301bfc15f6d0913d3efR93-R94\r\n\r\nThat's not correct. You are misreading the code. It is opt out by default. Telemetry is only enabled if you explicitly opt in.\r\nIf you don't believe me, please test it yourself. =||= > > Disabled by default, a user must manually and without nagging explicitly opt-in to telemetry themselves.\r\n> \r\n> Yes it is opt-out by default.\r\n\r\nThis is misleading.\r\nThe current pop-up has the \"yes\" more prominently than the \"no\".\r\n\r\n![image](https://user-images.githubusercontent.com/1334853/117542218-a25e0200-b00f-11eb-8712-88ffc25fae8a.png)\r\n\r\nThis is a GDPR violation. And makes it look as the \"yes\" should be default and preferred.\r\nPlease change that.\r\n\r\nAlso there is some oddity with https://github.com/audacity/audacity/pull/835/files#r628437539 where while the tracking preference is set to false at the start, later on the fallback value is true.\r\n\r\n =||= > \r\n> \r\n> > Is telemetry opt-in only or do users have to disable it manually once they update to the next release?\r\n> \r\n> It is opt-in.\r\n> On first run with this PR, you are asked if you would like to opt in. It is a binary choice, opt in or opt out. Your choice is remembered and you are not prompted again, but can change choice option in Preference settings should you wish to.\r\n\r\nAs Steve says - and if you use Tools > Reset Configuration that will turn off the sending of Analytics as part of its factory reset of Preferences (I QA tested that bit a couple of days ago)\r\n =||= > > This nonsence, but still no bug fixes to Jack support.... Really?\r\n> \r\n> Jack support is broken in Audacity 3.0.2.\r\n> I fixed it here: [b4b5cc8](https://github.com/audacity/audacity/commit/b4b5cc812483b311627bba48e26b91ae389ce713)\r\n\r\nMy apologies at the time of writing I did not know my distro was stuck on v2.4.1. (the v3 won't build on most Linux distros, including Archlinux) You guys should look into de-vendoring wxWidgets\r\n\r\nIncidentally that doesn't change the fact that this PR is utter nonsense (not to mention complete unmaintainable spaghetti code) anyway you guys can do so much better than bending over and letting a megacorp feast on your users.\r\n =||= > This is misleading.\r\n> The current pop-up has the \"yes\" more prominently than the \"no\".\r\n\r\nThat is likely to be changed (as one of the QA testers involved I pointed that out to the Developer as part of my initial feedback)\r\n\r\n =||= ![image](https://user-images.githubusercontent.com/8123843/117542352-2912df00-b010-11eb-98ce-f8b486a6201b.png)\r\nBTW reposting the latest results cos the Devs are lurking\r\n\r\nOver 2000 responses in less than 24h. 50% of people don't want tracking. About 91% of people don't want Google tracking. =||= It might help the authors to ignore the shitstorm by drawing an analogy with teh following tweet. \r\n\r\nhttps://twitter.com/bgolus/status/1080213166116597760 \r\n\r\nPoint is some linux people are perenially outraged and the one's clamoring about forks are also the ones with EXACTLY 0 PRs.\r\n\r\nI do hope that you make the telemetry non-intrusive, only for essential use cases and mandatory so that correct data is collected. Please ignore the FUD-stricken sheeple. =||= > > > Disabled by default, a user must manually and without nagging explicitly opt-in to telemetry themselves.\r\n> > \r\n> > \r\n> > Yes it is opt-out by default.\r\n> \r\n> This is misleading.\r\n> The current pop-up has the \"yes\" more prominently than the \"no\".\r\n> \r\n> ![image](https://user-images.githubusercontent.com/1334853/117542218-a25e0200-b00f-11eb-8712-88ffc25fae8a.png)\r\n> \r\n> This is a GDPR violation. And makes it look as the \"yes\" should be default and preferred.\r\n> Please change that.\r\n> \r\n> Also there is some oddity with https://github.com/audacity/audacity/pull/835/files#r628437539 where while the tracking preference is set to false at the start, later on the fallback value is true.\r\n\r\n@falkTX also forgot to mention as has been repeated ad-infanitum throughout this PR \"anonymous\" is a misleading statement. It is not accepted that Googles session UUID's are anonymous and it is known that these cookies can be correlated with other data points in googles database to \"de-anonymise\" the user and determine who it is exactly. Sometimes the cookie and IP is enough for this process, for example if the user is using any google service from the same computer at the same time. =||= > Point is some linux people are perenially outraged and the one's clamoring about forks are also the ones with EXACTLY 0 PRs.\r\n\r\nNow into personal / group attacks here?\r\n\r\nPlease, stop this nonsense. Just because some of us have 0 PRs in audacity does not mean we do not matter or should not have a say in the matter.\r\nAs a developer, I take as personally responsibility to lead by example.\r\nCommon folks do not completely understand the implications of analytics and tracking. If they see some developers being okay with it, they will just trust it and go along with it as well.\r\nWhat a terrible example we give to these people.\r\n\r\nAlso, just because some of us have not directly contributed to Audacity, doesn't mean we are not involved.\r\nSome people here maintain the backends Audacity ends up talking to, to be more specific, JACK.\r\n\r\nWhat an awful statement to make...\r\n\r\n =||= > It might help the authors to ignore the shitstorm by drawing an analogy with teh following tweet.\r\n\r\n@asdf8dfafjk I really don't know why you're on the side of pro-tracking. I checked, your're not shown to have ever contributed to Audacity on your profile. What do you stand to gain from having yet another program listening to your activity? I mean maybe you believe this is going to help move development forward, but in the lengthy and heated discussion over the last 2 days I think it has been over stated by developers of various projects that the benefits of tracking is dubious at best.\r\n\r\nSo I have to ask, what's your angle here? =||= >\r\n> Point is some linux people are perenially outraged and the one's clamoring about forks are also the ones with EXACTLY 0 PRs.\r\n> \r\n> I do hope that you make the telemetry non-intrusive, only for essential use cases and mandatory so that correct data is >collected. Please ignore the FUD-stricken sheeple.\r\n>\r\n\r\nHi, I'm someone who uses Windows as their main OS and doesn't do any coding of any kind. A while back it turns out that I've had to make a GitHub account just for the sake of reporting bugs, problems or even adding in my own two cents to crap like this PR purely because it actively affects me, the end user. As the person who is using the app, I feel I have a right to kick up a fuss when something that is overtly shitty and bad is trying to get into the application I use at least once every week. \r\n\r\nStop making broad sweeping generalizations and stop trying to shut down everybody's right to speak out against things. Part of the beauty of community run and developed software like Audacity is that people like us (in theory) get a say in what does or doesn't get added to the program.  =||= With over 3000 thumbs down it is clear what people think about this. It's an audio editor, it shouldn't make any network connections at all. Let alone track users, specially when the tracking is done with parties like Google and Yandex. I don't care if it's opt-in or opt-out, tracking users doesn't belong in an open source audio editor. =||= Hello, I am also an end user on Windows.\r\n\r\nI don't want any telemetry, thank you!\r\n\r\n>It might help the authors to ignore the shitstorm by drawing an analogy with teh following tweet.\r\n\r\n>https://twitter.com/bgolus/status/1080213166116597760\r\n\r\n>Point is some linux people are perenially outraged and the one's clamoring about forks are also the ones with EXACTLY 0 PRs.\r\n\r\n>I do hope that you make the telemetry non-intrusive, only for essential use cases and mandatory so that correct data is >collected. Please ignore the FUD-stricken sheeple.\r\n\r\nWhat a terrible way to dismiss an entire segment of community by comparing apples to oranges. Audacity is FOSS for audio manipulation, not a game that more or less failed to meet it's own goals.\r\n\r\nI suggest you learn the difference, otherwise I'd be seriously concerned about your contributions. =||= > t's an audio editor, it shouldn't make any network connections at all.\r\n\r\nSecond =||= > \r\n> Hi, I'm someone who uses Windows as their main OS\r\n>\r\n\r\nAlso, just getting this in now before some smartarse tries to make a strawman over it AGAIN: yes, I'm using Windows and yes, it is indeed Windows 10. However, when I installed the OS, I took an extra hour to remove 90% of the crap that it comes with and disabled pretty much all of the telemetry and extraneous bullshit in it. Me using Windows does not make my argument against this PR any less valid, nor does the fact that I don't write code. =||= Privacy is a universal human right, so if you don't respect it, there's no reason to respect you. You broke \"etiquette\" the moment you tried turning a FOSS project into a spyware delivery platform for a russian panopticon. =||= > mandatory so that correct data is collected.\r\n\r\n@asdf8dfafjk I don't think Muse acquired Audacity only to purposefully destroy its userbase. Muse is not in the position to force anyone to do anything. If they want to retain their userbase and avoid another LibreOffice/OpenOffice situation, they have no choice but to respect their users wishes by honoring the preferences. \r\n\r\nAlso, please don't use personal insults as a way to voice your disagreement. =||= How is telemetry looking on this PR? Seems a lot of people have given very useful feedback.  =||= I have collected statistics which show a large number of people don't want statistics collected. Of course opponents to this view who are pro data collection seek to discredit my poll by claiming that data collection is biased and provides an incomplete view, so cannot be trusted for making a decisions about data collection. https://www.strawpoll.me/45241130/r =||= Here's an easy way the audacity fork can get a quick development the original lacks, upstream the patches from every distro, that will even make it easier for the fork's adoption. =||= TBH regardless of the outcome of this PR I am tempted to contribute to the dependency de-vendoring of any fork that emerges, so I can get some bug fixes on Arch. =||= As a developer, I can understand the want to add telemetry. This does not change the fact that the public has obviously spoken. Listen to them. _They_ are your users. I personally believe that adding things like telemetry in this form is a gateway to more data. The fact that they are using google makes this far worse.\n\nAdding a custom _networking_ library to an _offline_ audio editor has got to raise some eyebrows, including mine. Take a step back, and listen to these comments. Simply put, you would lose a large portion of your users, including myself.\n\nTo those who are pro telemtry, I can once again understand why it seems like this will be a good change. As I said previously, this can be a gateway into more data collection. A counter argument to this is that _we already live in a world which collects our data, what would one more app do?_ As a user of audacity, I can say **I simply don't want an audio editor I use in my free time as a hobby, to have data on me in any way**. Especially if it is sent to google.\n\nPlease take a step back and reconsider this PR. =||= ### PUBLIC APPEAL\r\n**of NGO\r\n\u00abUkrainian Liberation\u00bb**\r\n\r\n**_Dear representatives of:\r\n\u2022 Free Software Foundation;\r\n\u2022 \u00abMuse Group\u00bb company;\r\n\u2022 Community of the \u00abAudacity\u00bb project;\r\n\u2022 Free Software Community;\r\n\u2022 other concerned communities and organizations!_**\r\n\r\n---\r\nOur NGO is deeply concerned by the implementation of telemetry in the code of free audio software \u00abAudacity\u00bb. In our opinion, such actions not only restricts anyone\u2019s natural right to liberty, but it also threatens to split the \u00abAudacity\u00bb\u2019s Community.\r\nAt the beginning of May of this year, several international media reported that free and open-source audio software \u00abAudacity\u00bb was bought by the \u00abMuse Group\u00bb company on April 25th, 2021. [Here](https://www.prosoundnetwork.com/business/audacity-acquired-by-muse-group) is one of the articles as an example.\r\n\r\nAround the same time, the following [post](https://github.com/audacity/audacity/pull/835) appeared on \u00abGitHub\u00bb. The post was made by a user [crsib](https://github.com/crsib), who, judging by the context, is a representative of the \u00abMuse Group\u00bb company, aka new owners of the \u00abAudacity\u00bb. In this post, Mr. @crsib (or according to the information from the personal profile on \u00abGitHub\u00bb, Dmitrii Viedienko, from Saint-Petersburg, Russian Federation), is justifying the implementation of telemetry.\r\n\r\nSpecialists from the PR department of the NGO \u00abUkrainian Liberation\u00bb analyzed the text of the post and found not only contradictions but also signs of manipulation, which, according to our NGO, were included. Below you can find the results of our analysis of the crsib's post, which we received tonight from our PR specialists:\r\n\r\n> \u00ab0) \u201cTelemetry is **strictly optional and disabled by default**. No data is shared **unless you choose to opt-in and enable telemetry**\u201d, but at the same time, \u201cIt is difficult for us to estimate the size of the user base accurately\u201d which raises the question: if the telemetry is disabled by default, how is it supposed to help estimate the size of the user base if most of the user base will never enable it?\r\n> 1) \u201cWe do not incorporate cross-site tracking, limiting the ability to **identify the user by both Google and Yandex**\u201d, but the next thing we read is:\r\n> \u2022 \u201eYandex would only **receive the \u2018application opened\u2019** event to help us estimate the size of the user base\u201c;\r\n> \u2022 \u201eGoogle would only receive:\r\n> \t\ta. Session start and end events;\r\n> \t\tb. Errors for debugging;\r\n> \t\tc. File formats used for import and export;\r\n> \t\td. OS and Audacity versions;\r\n> \t\te. Use of effects, generators, and analysis tools **to prioritize future improvements**\u201c.\r\n> \u2014 which makes us think: what is this collection of information, if not an attempt to identify the user's machine (that is, the user himself)? Specifically, we are concerned about point \"e\", where the alleged informational text is trying to explain the situation. The form of an information message _excludes_ such verbal constructions by definition.\r\n> 2) \u201eWe will **consider replacing Google and Yandex** with another service if we find one that fulfills our requirements - **thanks for the suggestions and keep them coming**\u201c. In our subjective opinion, this message is intended primarily to convince the general public that telemetry is the only acceptable way to gather information (same can be seen in the next paragraph, which we will come to). \u201eAudacity\u201c like any other free software, has a powerful Community, that submits dozens, hundreds, or maybe even thousands (due to the popularity of the program) of bug reports on \u201eGitHub\u201c, thematical forums, and other similar platforms. Manipulation, which, in our subjective opinion, the new owners used, questions the effectiveness of this method of communication at the level \"developer-user\", which in all previous years has been effective and efficient, leading to the conclusion, that individual and/or legal entities responsible for the development of \u201eAudacity\u201c do not trust users, their bug reports, and prefer to collect information on their own by means that are completely unacceptable both from the point of view of the community of FSF and from the standpoint of common sense. The last sentence, in bold, is, in our opinion, an attempt to please the Community (thank you, you're doing great, we value your opinion, - but then, again, it's unclear why they picked \u201eYandex\u201c and \u201eGoogle\u201c with no prior discussion with, you know, the Community).\r\n> 3) \u201eAudacity is widely used across several platforms, but **we have no information on the application stability**\u201c \u2014 going back to what was said above, how about numerous bug reports and other similar feedback accumulated during the entire existence of the program?.. In our subjective opinion, here it\u2019s the same as in the previous paragraph: it seems that the Community is not trusted, all user messages about errors and crashes of the program are not seen as a sufficient source for developers.\r\n> 4) \u201eWe **need a way to make informed decisions about which OS versions to support**. For example, **can we raise the minimum version of the macOS to 10.10 to update the wxWidgets to the latest version?**\u201c \u2014 again, in our subjective opinion, manipulation (same as in paragraphs 2 and 3: we have forums, Community, reports, and messages about bugs).\r\n> 5) \u201eWe have a **known issue** with the new file format introduced in Audacity 3.0. We found it **with the great help of the community members on our forum. However, there is no way for us to estimate the impact of these issues on users. Is it just a random case? Do we need to rush the work on the recovery tool or help the users one by one? Or do we need to rethink the file format to make it safer and more easily recoverable?**\u201c \u2014 here the author of the initial post not only promotes the ultimate need for telemetry but also admits his (or somebody else\u2019s) incompetence as a programmer. In other words, we believe that in this message the author or authors of the initial post admit that they do not understand how to correct the error mentioned in the post, and therefore, as they say, they introduce telemetry\u00bb.\r\n\r\nIt is important to note, that specialists from the PR department of the NGO \u00abUkrainian Liberation\u00bb do not claim their conclusions to be the only possible truth. They should be perceived taking into account that every person (or group of people united by one idea, like our NGO, for example) are entitled to their own opinion, even if it is not correct.\r\n\r\nBut let\u2019s go back to the initial issue.\r\n\r\n[\u00abMuse Group\u00bb](https://www.musegrp.com/) is a company that has representatives in Hong Kong, Shanghai, and Sydney, Australia.\r\n\r\nYou can also contact them via messengers, which are far from the free software (\"wechat\" and \"weibo\").\r\n\r\nThe author of the initial post on \u00abGitHub\u00bb under the nickname crsib is from Russian Federation, the \u00abMuse Group\u00bb company is (as we might guess) from China. In our opinion, both of these countries can hardly be called completely free and democratic. We are doing our best to leave the political and territorial aspects out of this conversation, but here we are forced to dwell on this point. We sincerely apologize to the Community for emphasizing this, but we believe that without a full and comprehensive understanding of the situation, it will be hard to understand the conclusion that we came to. Moreover, [\u00abWikipedia\u00bb agrees with us. In turn, it refers to authoritative sources and their studies from different years, such as this one from the \u00abFreedom House\u00bb](https://en.wikipedia.org/wiki/Freedom_in_the_World). In our opinion, this partly explains the use of non-free platforms \u00abYandex\u00bb (Russia) and \u00abGoogle\u00bb to collect the data, as well as why there has been no previous discussion with the Community.\r\n\r\n(By the way, we still are not fully sure, how (and from whom) the abovementioned \u00abMuse Group\u00bb **bought a free and open project \u00abAudacity\u00bb**. We are asking the representatives to provide an explanation regarding this issue. This letter should also be considered as a request for relevant public information from the \u00abMuse Group\u00bb company: **how and from whom is it possible to purchase a free and open project?**)\r\n\r\nAll the above cannot help but cause significant concern about the future of \u00abAudacity\u00bb - an audio editor that we all know, love, and actively use.\r\n\r\nWithout resorting to any subjective analysis, we ask members of the Community to pay attention to the history of activity of the user crsib on the \u00abGitHub\u00bb. We deliberately do not draw any conclusions.\r\n\r\nThis situation with the \u00abAudacity\u00bb brought another split in the community, all this despite the still-fresh memory of \u00abThe Code of Conduct\u00bb among Linux kernel developers, and, as we see it, bullying of RMS and FSF, which, in general, causes new conflicts in our Community (NGO \u00abUkrainian Liberation\u00bb considers itself a part of the Community, because we fully share its values and spread them at our home country, Ukraine, as much as we are allowed to by current social, political, economic and other circumstances).\r\n\r\nNGO \u00abUkrainian Liberation\u00bb also expresses its deep concern at the reaction of individual users to this situation. Everywhere we see proposals to create a fork of \u00abAudacity\u00bb based on the latest available version, free from telemetry. We believe that this measure is acceptable, but it is extreme (when all other solutions failed). It will inevitably deepen the division in the Community, as such an approach has both active supporters and opponents. Unfortunately, people often forget that the Idea is more important than people and their personal opinions. We are convinced that the fork at this stage will lead to two parallel programs - free and imbued with telemetry - and then the \u00abAudacity\u00bb Community will simply split in two, three, and so on. NGO \u00abUkrainian Liberation\u00bb believes that this is what supporters of non-free components in the software want. This will significantly weaken us.\r\nIn our opinion, we still have a chance to save our favorite program. With this goal, we introduce the hashtag #saveaudacity. We would like to ask those who agree with our position and our concerns to spread the information about the situation with the \u00abAudacity\u00bb by using this (or any others, at the discretion of the Community) hashtag. As an NGO, we see our main current task in spreading awareness and objective information that, unfortunately, is relevant to the \u00abAudacity\u00bb audio editor.\r\n\r\nWe call on the Community to understand our concerns and to help us. FSF Community has always been strong in unity, but today we are divided over political, gender, racial, and all sorts of other stereotypes that do not apply and are not even related to the Free Software. Some individuals believe that their opinion is more important than the Idea of Freedom and Unity of Community. With all due respect, we find this position destructive.\r\n\r\nWe ask the Community for help also because we do not have programmers among our volunteers, and we cannot conduct an audit of the \u00abAudacity\u00bb code for backdoors and vulnerabilities included (or not included).\r\n\r\n**Please, help.**\r\n\r\n-----\r\n_The entire text of this Appeal is a purely subjective opinion about the situation from representatives of NGO \u00abUkrainian Liberation\u00bb. This text does not claim to be an undeniable truth and objectivity. We deliberately do not draw any conclusions, leaving this prerogative to the Community. Without blaming anyone, we present our vision of a situation that might differ (and might be different) from objective reality.\r\n\r\nWith this letter, we ask FSF to assess the situation with \u00abAudacity\u00bb and, if there is such legal possibility, start integrating NGO \u00abUkrainian Liberation\u00bb into the FSF as an associate member or any other form that will allow us to interact and fight together against modern challenges. We understood [the call](https://framatube.org/videos/watch/be21cdc4-5783-4c20-8f3f-49eb3d7aa91d) of RMS perfectly and we strive to be useful. Only together we can stand and fight against those who bring evil and discord. We are open to a conversation:  ukrliberation@mail2tor.com. We will view letters in English, Ukrainian, Russian, and Belarusian._\r\n\r\n**_With sincere respect\r\nand with apologies\r\nfor excessive emotionality \u2014_**\r\n\r\n_**Bohdan Kovalchuk,\r\nChairman (\u21160) of the NGO \u00abUkrainian Liberation\u00bb,\r\nas well as the entire team of this NGO.**_\r\n\r\n-----\r\n**Original PDF file with a signature and a stamp of NGO \"Ukrainian Liberation\" [is available on our website](https://ukrliberation.org.ua/docs/0-21.pdf).**\r\n\r\n**Translated from Ukrainian by [Dara Sereda.](seredache2000@tutanota.com)**\r\n\r\n-----\r\n### CAUTION!!!\r\n**We were extremely mistaken with tagging the wrong \"Muse Group\" (thanks to POLYJITTER and others it had been noticed). I would like to also note, that words about location in China were not meant to hurt or upset anyone, as they had no intent to  spread racial stereotypes. We were trying to make a comment about the non-free policies that the country leads. \r\nWe won't change the initial text, as we fully acknowledge our mistake. Thank you, attentive readers, who were able to catch inaccuracies in the text and help us fix them! \r\n**We think that this is an awesome example of how the Community can work together!**\r\nHere is the correct link to the [correct MUSE group](https://mu.se/).\r\nThe \"Muse Group\" situated in China, Hong Kong and also Syndey, Australia, \u2014 please accept our sincere apologies. That was 100% our mistake. That happens when emotions of people got the best of us. We are terribly messed up with a couple of Muse Groups.\r\nSorry everyone, who feel harmed with the previous post.**\r\n### Please, ignore all written about \"Muse Group\" from China \u2014 the innocent one. =||= @ngo-ukrainian-liberation Is this a known organization? I've never heard of you before, just seems like you want to slither your way into the FSF? =||= > \r\n> \r\n> @ngo-ukrainian-liberation Is this a known organization? I've never heard of you before, just seems like you want to slither your way into the FSF?\r\n\r\nThey have a youtube channel active since 2017. =||= > > @ngo-ukrainian-liberation Is this a known organization? I've never heard of you before, just seems like you want to slither your way into the FSF?\r\n> \r\n> They have a youtube channel active since 2017.\r\n\r\nDoesn't really mean much. =||= > > @ngo-ukrainian-liberation Is this a known organization? I've never heard of you before, just seems like you want to slither your way into the FSF?\r\n> \r\n> They have a youtube channel active since 2017.\r\n\r\nWe are done with \"YouTube\" now, just like any other proprietary platform. And (we hope) that's our so-called \"contribution\" to the GitHub, which now belongs to Microsoft\u00ae\u00a9\u2122. :-) =||= > The author of the initial post on \u00abGitHub\u00bb under the nickname crsib is from Russian Federation, the \u00abMuse Group\u00bb company is (as we might guess) from China. In our opinion, both of these countries can hardly be called completely free and democratic. We are doing our best to leave the political and territorial aspects out of this conversation, but here we are forced to dwell on this point. We sincerely apologize to the Community for emphasizing this, but we believe that without a full and comprehensive understanding of the situation, it will be hard to understand the conclusion that we came to.\r\n\r\n@ngo-ukrainian-liberation No, they're just a corporation, and corporations are known to have unethical interests in the pursuit of profit. People's nationalities don't dictate their value or worthiness. You're xenophobic and racist. Stay focused =||= @ngo-ukrainian-liberation https://www.musegrp.com/ is not the Muse Group that acquired Audacity - it's https://mu.se/ =||= > @ngo-ukrainian-liberation https://www.musegrp.com/ is not the Muse Group that acquired Audacity - it's https://mu.se/\r\n\r\nIndeed - and it appears the correct Muse Group is in Limassol, Cyprus:\r\n\r\nhttps://www.linkedin.com/company/muse/\r\n\r\nHardly any worthwhile information for inflammatory personal smearing.\r\n\r\nAll I'm saying is the argument that nationality = how bad or good someone is, kinda doesn't hold very much weight when you can't even research your hate correctly... =||= Since this is making network connections now, will I be able to order pizza with just a voice recording? =||= > \r\n> \r\n> > It's not opt-in if the default is on.\r\n> > https://github.com/audacity/audacity/pull/835/files#diff-38452b2ab9b100d5046eb855410add20e6158dbc69533301bfc15f6d0913d3efR93-R94\r\n> \r\n> That's not correct. You are misreading the code. It is opt out by default. Telemetry is only enabled if you explicitly opt in.\r\n> If you don't believe me, please test it yourself.\r\n\r\nRead the code again.\r\n\r\n`S.Id (wxID_YES).AddButton (acceptButtonTitle)->SetDefault ();`\r\n\r\nThe default button in the UI is opt-in. You could be forgiven for not even noticing the other button; it is so inconspicuous. This is what everyone is referring to as a \"dark pattern\" and a GDPR violation. If you simply hit enter or the space bar, or click the only button that jumps out at you, you unwittingly opt in. You can't use any software or any websites any more without getting hit at least once and probably repeatedly with a nagging pop-up asking you to subscribe, agree, register, enable a \"feature\", etc. etc. etc. It's beyond tiresome. I can't even tell you how many websites I've set up cosmetic filtering rules and custom styles on to wholly disable this kind of functionality. We all do the same thing: get rid of the nag as fast as possible with as little thought as possible, because ultimately our attention and productivity does have a budget. \r\n\r\nWhile I'm on a rant, I might was well pile this on. For them to so quickly try to slide something in under the radar that's not at all innocuous or consistent with preceding philosophy, and to only present community-oriented messaging after being called out in a very public way, is beyond a red flag. It speaks volumes about how they intend to operate and how they conceptualize the users. It tells us they intend to get away with whatever they can. That damage is already done. Even doing a 180 now doesn't change that.\r\n\r\nI am *wholly* against any kind of telemetry. Not only is its usefulness dubious, but I consider that to be beside the point. I don't want to be surveilled. I don't want data about me to be collected, compiled, tracked and analyzed. Not by a person, not by a machine. Not personally, not pseudonymous, not anonymously. Not for profit-oriented reasons, and not for ostensibly constructive reasons. That's not why I downloaded the software. It's not something I'm volunteering to do. It's not something I will ever offer any kind of honest, genuine consent to.\r\n\r\nI don't necessarily think telemetry is a thing that shouldn't exist at all. I think it should be a separate software component that has to be added and enabled affirmatively by a user. Approach it that way and find out how much value the users really find in telemetry.  =||= > Since this is making network connections now, will I be able to order pizza with just a voice recording?\n\nAt least that would be kinda helpful. =||= The comments on the PR is a hormesis response. It is a dose dependent over reaction to software tracking. Non one complains about tracking in VS Code, because it already had it. Add a little bit of tracking to a well known standalone open source desktop app and bam, here comes the \"overeaction\" meant to inoculate the system (open source software as a whole) to worse intrusions. \r\n\r\nThese comments, while they may seem like an overreaction to some, are a REALLY good thing for the community and I hope that the moderates who are OK with some telemetry can see why this discussion, in this format, with this intensity, is important. =||= > Non one complains about tracking in VS Code, because it already had it\r\n\r\nWhat a bunch of crap.\r\nAll the people that made https://github.com/VSCodium/vscodium/ would like a word.\r\n =||= @kuberlog Actually, the fact that VSCode is Chromium-based and has tons of telemetry built into it is part of the reason why I still use `vim`. \r\n\r\n@falkTX Thanks for pointing out that fork! I'm gonna try it out. =||= @polyjitter **THANK YOU!!!** It's been corrected above. ;-) =||= ### CAUTION!!!\r\nWe were extremely mistaken with tagging the wrong \"Muse Group\" (thanks to POLYJITTER and others it had been noticed). I would like to also note, that words about location in China were not meant to hurt or upset anyone, as they had no intent to  spread racial stereotypes. We were trying to make a comment about the non-free policies that the country leads. \r\nWe won't change the initial text, as we fully acknowledge our mistake. Thank you, attentive readers, who were able to catch inaccuracies in the text and help us fix them! \r\n**We think that this is an awesome example of how the Community can work together!**\r\nHere is the correct link to the [correct MUSE group](https://mu.se/). =||= > The comments on the PR is a hormesis response. It is a dose dependent over reaction to software tracking. Non one complains about tracking in VS Code, because it already had it. Add a little bit of tracking to a well known standalone open source desktop app and bam, here comes the \"overeaction\" meant to inoculate the system (open source software as a whole) to worse intrusions.\r\n> \r\n> These comments, while they may seem like an overreaction to some, are a REALLY good thing for the community and I hope that the moderates who are OK with some telemetry can see why this discussion, in this format, with this intensity, is important.\r\n\r\n@kuberlog Only the **closed-source** version of VSCode (i.e. the one you download from Microsoft) has tracking. If you compile it from source, it's free of it. =||= > The comments on the PR is a hormesis response. It is a dose dependent over reaction to software tracking. Non one complains about tracking in VS Code, because it already had it. Add a little bit of tracking to a well known standalone open source desktop app and bam, here comes the \"overeaction\" meant to inoculate the system (open source software as a whole) to worse intrusions. \n> \n> \n> \n> These comments, while they may seem like an overreaction to some, are a REALLY good thing for the community and I hope that the moderates who are OK with some telemetry can see why this discussion, in this format, with this intensity, is important.\n\n@kuberlog I understand your point, but the fact is vscode already had it. As someone said, vscode uses chromium which is well known to use telemetry and collect user data by default. That is once again known and documented to be a part of the vscode model. This differs from audacity, which for the 20+ years it had been around, has never even had networking. =||= Is museCY Holding LTD. a nonprofit, and if so, where is it registered as one? =||= ### The \"Muse Group\" situated in China, Hong Kong and also Syndey, Australia, \u2014 please accept our sincere apologies. That was 100% our mistake. That happens when emotions of people got the best of us. We are terribly messed up with a couple of Muse Groups.\r\nSorry everyone, who feel harmed with the previous post.\r\nPlease, ignore all written about \"Muse Group\" from China \u2014 the innocent one. =||= It seems that MuseCY Holding LTD is a for-profit corporation. Does Muse own the trademark \"Audacity\" or any other intellectual property related thereto? =||= > Also, just because some of us have not directly contributed to Audacity, doesn't mean we are not involved.\r\nSome people here maintain the backends Audacity ends up talking to, to be more specific, JACK.\r\n\r\nLikewise, I have contributed to several parts of the infrastructure that Audacity depends on, sometimes working directly with Audacity users to fix bugs affecting us both:\r\n  * [PipeWire](https://gitlab.freedesktop.org/pipewire/pipewire/-/issues/788)\r\n  * [PortAudio](https://github.com/PortAudio/portaudio/pull/504)\r\n  * [libsndfile](https://github.com/libsndfile/libsndfile/issues/470)\r\n\r\nSo just because I don't have any commits in the Audacity code repository does not mean I have not contributed anything to Audacity before.\r\n\r\nIronically, the Audacity developers' bad habit of forking dependencies [created an obstacle to getting one of those bug fixes out to users](https://bugzilla.redhat.com/show_bug.cgi?id=1939749#c6). =||= Hello there!\r\nThe initial post by Ukrainian Liberation was deleted and the account was banned, so some people might not see the changes that were added. \r\nHere they are:\r\n### CAUTION!!!\r\nWe were extremely mistaken with tagging the wrong \"Muse Group\" (thanks to POLYJITTER and others it had been noticed). I would like to also note, that words about location in China were not meant to hurt or upset anyone, as they had no intent to spread racial stereotypes. We were trying to make a comment about the non-free policies that the country leads.\r\nWe won't change the initial text, as we fully acknowledge our mistake. Thank you, attentive readers, who were able to catch inaccuracies in the text and help us fix them!\r\nWe think that this is an awesome example of how the Community can work together!\r\nHere is the correct link to the correct MUSE group.\r\nThe \"Muse Group\" situated in China, Hong Kong and also Syndey, Australia, \u2014 please accept our sincere apologies. That was 100% our mistake. That happens when emotions of people got the best of us. We are terribly messed up with a couple of Muse Groups.\r\nSorry everyone, who feel harmed with the previous post.\r\nPlease, ignore all written about \"Muse Group\" from China \u2014 the innocent one. =||= Please stay focused, don't feed oder replicate trolls, refrain from all-caps or all-bold, avoid ad hominems, ableist slurs etc. =||= > Please stay focused, don't feed oder replicate trolls, refrain from all-caps or all-bold, avoid ad hominems, ableist slurs etc.\r\n\r\nThank you, corrected)\r\n =||= Did the person \"Aaron Spike\" who created the Audacity Logo, assign the copyright to it to Tony Berman of  Berman Entertainment and Technology Law? There is a trademark registration for the Audacity Logo under that name.\r\n\r\nWhat is the connection between Tony Berman and MuseCY Holding LTD.? =||= If you want telemetry ... don't use Google or Facebook or Apple or Microsoft or Yandex (WTF?) or similar.\r\n\r\nYou can do a one-time check at the first start after a fresh installation or update to gather the information you want after the user allows it. You can write that code yourself.\r\n\r\nI wonder how people before that telemetry non-sense knew what work to prioritise, what OS version to drop and so on ... =||= > Did the person \"Aaron Spike\" who created the Audacity Logo, assign the copyright to it to Tony Berman of Berman Entertainment and Technology Law? There is a trademark registration for the Audacity Logo under that name.\r\n\r\nFirstly, this has nothing to do with this pull request. It is not a code review in any shape or form, is unrelated to this pull request and does not belong here on GitHub.\r\n\r\nSecondly, the current version of the Audacity logo was not created by Aaron Spike, it was created by me, using Gimp, and I have  the original Gimp files to prove it.\r\n\r\nThirdly, yes, Audacity has permission to use the logo that I created, just  as Audacity had permission to use the older logo on which it was based, and the even older version on which that was based. =||= > is unrelated to this pull request\r\n\r\nI would say that this inquiry is related to the pull request, since this pull request may result in a fork, and the legal issues regarding using the original Audacity logo in said fork. =||= It has all been said already, but I feel that an additional voice in opposition to this PR may help somewhat. I've been using Audacity since elementary school in 2005. It's been installed on any system where I've needed to record audio. It would be trivial for me or anyone else to switch to a fork that doesn't include telemetry. I use Pale Moon and VSCodium for that explicit reason. It's true that most people won't care. Chrome is still the dominant browser after all. But enough people clearly do care that I hope this PR gets closed soon, rather than merged. If it is merged it will take me three package manager commands to switch to something else and never look back.  =||= Since the CMake option to enable telemetry is opt-in (disabled by default), removing telemetry from Audacity is as simple as building it without including any telemetry-related options.\r\n\r\nIn case the Audacity team merges this PR, I made a repository that will automatically build the app without telemetry (work in progress): https://github.com/SpheeresX/audacity-notrack =||= > Since the CMake option to enable telemetry is opt-in (disabled by default), removing telemetry from Audacity is as simple as building it without including any telemetry-related options.\r\n> \r\n> In case the Audacity team merges this PR, I made a repository that will automatically build the app without telemetry (work in progress): https://github.com/SpheeresX/audacity-notrack\r\n\r\nThat is actually an argument against this PR. The vast majority of Linux distributions will compile audacity with the option disabled therefore missing the point of having telemetry in the first place. =||= Basically I think optional (opt in) telemetry to improve Audacity is OK. But why the hell with this Google crap? It is exactly the opposite the FLOSS community want to have. =||= > That is actually an argument against this PR. The vast majority of Linux distributions will compile audacity with the option disabled therefore missing the point of having telemetry in the first place.\r\n\r\nWindows (and MacOS?) users download the build (with telemetry built-in) from Audacity's website, and these operating systems hold the majority of the OS market share. =||= I have a suggestion for a more respectful approach to telemetry. Instead of doing this blanket telemetry on Audacity users minus those who are using Linux distribution packages, do limited scope remote usability tests on people who explicitly want to contribute to Audacity. For example [read in Tantacrul voice]:\r\n\r\n> We're trying to declutter the main toolbar. We think it probably has too many magnifying glasses, but we don't know which ones people use frequently. We won't remove any of the features there, but we are considering moving them to a menu or another part of the user interface so they don't distract you from features that are used frequently. \r\n> We want your help to figure out which magnifying glasses people actually do use. All you have to do to participate is download these builds and use Audacity as you normally do. When you close these builds of Audacity, it will send us data about which magnifying glasses you clicked. We plan to collect this data over the next two weeks, then we will open a forum thread/GitHub issue/whatever discussion medium to discuss how to interpret it and how we could improve the design of Audacity. If you want to stop participating in this experiment at any time, you can go to Edit -> Preferences -> Telemetry and disable the data collection. Alternatively, you can uninstall the build and reinstall the official release build from https://www.audacityteam.org/download/ The builds are signed with the GPG key available here [link to public key].\r\n> This data is sent encrypted over SSL to our server at https://telemetry.audacityteam.org/ where you can see the aggregated, anonymous data and download a copy in the machine-readable CSV/JSON/whatever format so you can do your own analyses. No IP addresses nor any kind of personally identifiable information are included in the recorded data. The source code for these builds is available at [link to Git branch in code repository] and the code running on the telemetry server is available at [link].\r\n\r\nIf you take this approach, I think you could actually get Linux users to enthusiastically participate. If you start by doing your best to respect users' consent and privacy, I think you could get much more useful data and use it to improve Audacity. =||= > \r\n> \r\n> > Did the person \"Aaron Spike\" who created the Audacity Logo, assign the copyright to it to Tony Berman of Berman Entertainment and Technology Law? There is a trademark registration for the Audacity Logo under that name.\r\n> \r\n> Firstly, this has nothing to do with this pull request. It is not a code review in any shape or form, is unrelated to this pull request and does not belong here on GitHub.\r\n> \r\n> Secondly, the current version of the Audacity logo was not created by Aaron Spike, it was created by me, using Gimp, and I have the original Gimp files to prove it.\r\n> \r\n> Thirdly, yes, Audacity has permission to use the logo that I created, just as Audacity had permission to use the older logo on which it was based, and the even older version on which that was based.\r\n\r\nIs \"permission to use the logo\" the same as \"permission to trademark the logo\"? =||= # Data Collection vs Telemetry in Audacity\r\n\r\nAudacity PR #835 is a mess on many levels. Problems that exist with this PR are\r\nstated reasons for implementing telemetry:\r\n\r\n- Lack of stability information.\r\n- Unknown userbase size.\r\n- Development and support decisions.\r\n- Resolving a known issue with unknown impact on users.\r\n\r\nIn addition, the stated information that will be gathered via a telemetry\r\ninterface are stated as:\r\n\r\n- Application open information (Yandex)\r\n- Session start / end events (Google)\r\n- Debug information / errors (Google)\r\n- File format information (Google)\r\n- Operating System Version (Google)\r\n- Audacity version (Google)\r\n- Other tools used by the user (Google)\r\n- IP Address (Google & Yandex)\r\n\r\nThe vast majority of this information, however does not need to be gathered\r\nusing telemetry, and in fact, using telemetry would likely lead  to mis-leading\r\ninformation or a lot of unusable information being gathered that would not\r\nassist the development process.\r\n\r\nBefore going into the reasons telemetry is not appropriate for addressing the\r\nmajority of this information, consideration should be given to how telemetry is\r\ngenerally used in large open source projects.\r\n\r\n## Telemetry in Open Source\r\n\r\nThere are projects that use Telemetry.  However, in many cases the\r\nimplementation of Telemetry is well documented, and frequently goes through an\r\nexhaustive approval process before being implemented.\r\n\r\nThe following provides an overview of telemetry handling in several open source\r\nprojects.\r\n\r\n### Case: The Linux Foundation\r\n\r\n**The Linux Foundation** introduced their [Telemetry data collection and usage\r\npolicy](https://www.linuxfoundation.org/telemetry-data-policy/) in October \r\nof 2019.  The policy makes it clear that there are many items that need to be\r\nconsidered before implementations are approved.  These considerations include\r\n(but are not limited to):\r\n\r\n1. Individual data privacy: does the data track or identify the user? If it\r\n   doesn't could it still include personal information that is subject to laws\r\n   and regulations?\r\n\r\n2. Data confidentiality: does the data result in any business-sensitive\r\n   information being sent to the project, or a third party? If there was a\r\n   consent dialog, what guarantees that the user was authorized to grant\r\n   consent?\r\n\r\n3. Awareness of collection: does the software guarantee that no data is gathered\r\n   before consent has been given?  Is it opt-out or opt-in? Can the consent\r\n   notice be bypassed?\r\n\r\n4. Security of the collection mechanism: does the \"phone home\" mechanism itself\r\n   open security vulnerabilities to the application? Is there still a\r\n   vulnerability if the user does not opt-in to the data gathering?\r\n\r\nIn order to deal with all of this information, the Linux Foundation requires\r\nmember applications submit to a review by providing:\r\n\r\n- The specific data to be collected.\r\n- Demonstrate the data is fully anonymized, and does not contain any data about\r\n  an end user, or information that could be sensitive.\r\n- The manner in which users are notified of the details of the data collection,\r\n  use and distribution. Meeting requirement of consent before information is\r\n  gathered.\r\n- The manner in which the information is to be stored and use by the project.\r\n- Security mechanisms used to ensure the collection of information will no\r\n  result in unintentional collection, or security vulnerabilities.\r\n\r\nFollowing all this guidance, the information is submitted to a review panel of\r\nThe Linux Foundation's legal team for review.\r\n\r\n### Case: KDE\r\n\r\nThe KDE project introduced telemetry into their Plasma environment approximately\r\na year ago.  In so doing, they developed a [Telemetry\r\nPolicy](https://community.kde.org/Policies/Telemetry_Policy) that is applied to\r\nall applications in the KDE environment.  This is a rough summary of the policy:\r\n\r\n- Transparency:\r\n    - Data is shared in a way that (a) is easy to understand, (b) is precise and\r\n      complete, (c) is locally available without network connection.\r\n    - Any changes to the gather must be highlighted during the release\r\n      announcement.\r\n\r\n- Control:\r\n    - Telemetry is **always** opt-in. It is off by default, and only enabled by\r\n      explicit user action.\r\n    - Telemetry settings can be changed at any time, and are prominent in the\r\n      user interface of the application.\r\n    - Telemetry settings are independent of any other settings, features or\r\n      functionality.\r\n    - Applications must honor system-wide telemetry settings.\r\n    - Detailed documentation must be provided on the operation of the Telemetry\r\n      settings.\r\n\r\n- Anonymity:\r\n    - Nothing that is considered personal information is gathered, especially\r\n      where regulations such as the GDPR are concerned.\r\n    - No unique devices, installation or user ID's are used.\r\n    - Data is stripped of any unnecessary details, and downsampled appropriately\r\n      before transmission.\r\n    - Network operation data (such as IP Addresses) are not stored with the\r\n      telemetry data.\r\n\r\n- Minimalism:\r\n    - Only gather the absolutely minimal information needed.\r\n    - Collected data must have a clear purpose.\r\n    - Data is downsampled to the maximum extent possible before transmission.\r\n    - Relevant correlations between individuals bit of data should be computed\r\n      at the source whenever possible.\r\n    - Data collection is stopped when corresponding questions have been\r\n      answered.\r\n\r\n- Privacy:\r\n    - Never transmit any user content, or hints at user content (ie, file names,\r\n      URL's, etc.)\r\n    - Gather only system information specific to the installation / environment\r\n      **independent** of how the application/machine/installation is used.\r\n    - Gather statistical usage data of an installation / application.\r\n\r\nIn order to use telemetry information in a KDE project, all of the above must be\r\nmet, and a public review is passed.  This review process is repeated for every\r\nrelease if there are any changes to the information being gathered.  Received\r\ndata is regularly audited for violations of this policy. If there is a\r\nviolation, the data is deleted and collection is suspended until compliance can\r\nbe re-established.  To date, only [four KDE\r\napplications](https://community.kde.org/Telemetry_Use) use telemetry data.\r\n\r\n### Case: GitLab\r\n\r\nOn October 23rd of 2019 GitLab announced that they were making [changes to their\r\nTerms of Service](https://gitlab.com/gitlab-org/gitlab/-/issues/34833) that\r\nincluded the addition of JavaScript on their website that would gather\r\ninformation to be used by GitLab and possibly sent to third parties.  The code\r\nwould be both open source and proprietary.\r\n\r\nThey stated that they would update their Privacy Policy to indicate what\r\ninformation was being gathered, and where it was being sent.\r\n\r\nUsers of GitLab immediately took to the issue that was opened to track the\r\nannouncement and wrote a number of messages of concern about the information\r\nthat was being gathered, and the lack of control about how the information was\r\nbeing used.\r\n\r\nOn October 29th, GitLab sent out a letter that explained the following:\r\n\r\n> So, what happened? In an effort to improve our user experience, we decided to implement user behavior tracking with both first and third-party technology. Clearly, our evaluation and communication processes for rolling out a change like this were lacking and we need to improve those processes. But that\u2019s not the main thing we did wrong.\r\n\r\n> Our main mistake was that we did not live up to our own core value of collaboration by including our users, contributors, and customers in the strategy discussion and, for that, I am truly sorry. It shouldn\u2019t have surprised us that you have strong feelings about opt-in/opt-out decisions, first versus third-party tracking, data protection, security, deployment flexibility and many other topics, and we should have listened first.\r\n\r\n### Other Cases\r\n\r\nIn an earlier post I documented the policies, processes and information gathered\r\nby Firefox, including the Glean tool the Mozilla foundation specifically created\r\nfor gathering this information.\r\n\r\nSomething that wasn't discussed as a significant point was Firefox's\r\ntransparency and user's control in terms of their telemetry gathering.  Any user\r\ncan see what information has been sent to Mozilla without having to dig through\r\ntheir Telemetry Portal.  Just open \"about:telemetry\", and the last two weeks of\r\npings is available for users to see and verify that none of the information\r\nbeing sent to Mozilla is sensitive.  Also users have a degree of control over\r\nwhat information is being gathered through a series of check boxes available in\r\nthe Privacy & Security portion of the Preferences menu.\r\n\r\n* * * \r\n\r\nAlso contained in the comments on this PR is a discussion with one of the main\r\ndevelopers of Ardour, in which we discuss the information that they gather, and\r\nthe limited usefulness of this information, and the processes and decision\r\nmaking that went into adding it to Ardour.\r\n\r\n### Telemetry Conclusion\r\n\r\nWhen implemented properly in large projects, there is far more consideration\r\ngiven to the process and procedures needed to make certain that appropriate\r\nsafeguards are implemented to protect end user's privacy and anonymity.  Further,\r\nthe consideration for safeguarding against sensitive information being\r\ncommunicated is also required. On top of this, legal and / or public review of\r\ntelemetry information being gathered is a routine process in these projects.\r\n\r\nWhen the input of the community is not considered, problems such as that issues\r\nthat GitLab created for themselves do serious damage to their perception in the\r\ncommunity.\r\n\r\n## Data Collection in Open Source\r\n\r\nThere is actually a long history of data collection in open source projects.\r\nWhere data collection differs from telemetry is often in the frequency and / or\r\nthe amount of detailed information that is gathered.\r\n\r\n### OS Hardware Profiles\r\n\r\nUbuntu, several of the \\*BSD distributions, and others have been\r\nbuilding hardware profile databases for years.  This is typically done as a\r\none-time, completely voluntary data collection performed during the Operating\r\nSystem installation.\r\n\r\nAn example of this is the [NYC\\*BUG\r\ndmesgd](https://dmesgd.nycbug.org/index.cgi?do=index) which has allowed users to\r\nupload copies of their dmesg logs into a database since 2004.  All of the\r\ninformation contained in the database is anonymized, there is no personally\r\nidentifying information.\r\n\r\nSystem76 and RedHat Enterprise Linux take a different approach.  They include\r\ntools that are used only on the basis of support needs.  These tools gather\r\nsystem logs, hardware profiles, detailed configuration information and system\r\ncoredumps into a single file.  This file is then attached to support requests\r\nthrough a secured system.\r\n\r\nUbuntu has made one of the more controversial implementations of data collection\r\nvia it's Ubuntu Report tool.  It gathers system information and sends reports to\r\nUbuntu including: Ubuntu version, OEM/Manufacturer, Device model number, BIOS\r\ninfo, CPU details, GPU details, Installed RAM, Partition Info, Display(s)\r\ndetails, Auto-login status, Live Patching status, Desktop environment, Display\r\nserver, and Timezone.\r\n\r\nWhile not containing direct personally identifying information, some of the\r\ninformation could be sensitive in a number of environments.  The user is\r\nprompted during installation to disable (opt-out) of the data collection, and is\r\nallowed to preview the data before it is sent, while making the decision. The\r\ndata gathering system is a standalone package that can be completely removed\r\nfrom the system in environments where having installed would be deemed an issue.\r\n\r\n### Application Crash Reporting\r\n\r\nNumerous systems, including Ubuntu, RedHat Enterprise Linux, and others have\r\nfeatures that can be enabled to allow semi-automated submission for crash\r\nreports with debug information.  This allows targeted collection of information\r\nwhich the user likely feels more comfortable in submitting the information.\r\n\r\nAdditionally, this can be used much in the same way as the System76 and RedHat\r\ntools for generating logs and debug information that the user can submit as part\r\nof a support request.\r\n\r\n### Software Popularity\r\n\r\nUbuntu, Debian, Arch Linux, and other distributions contain a package which is\r\nnot installed or enabled by default that allow users to send information about\r\nthe applications they are using on their system.\r\n\r\nThe information is restricted to: package name, how recently it has been used,\r\nand how recently it has been updated.  This approach keeps to the approach of\r\nsending minimal information, devoid of personally identifying information.\r\n\r\nSince this software is not activated unless specifically installed by the end\r\nuser or system administrator, there is a fairly high confidence that potentially\r\nsensitive information is not being communicated.\r\n\r\n### Data Collection Conclusion\r\n\r\nThere is a long standing tradition of data collection when it comes to the open\r\nsource world.  However, many Linux distributions have taken a stance of data\r\ngathering on an \"as needed\" basis (with the notable exception of Ubuntu).\r\n\r\nSystems like \\*BSD's NYC\\*BUG are completely voluntary, and users specifically\r\ntake the time to upload log files by their own choice.\r\n\r\nTools like those provided by RedHat Enterprise Linux and System76 are\r\nspecifically designed to be used in tracing problems and resolving issues.  They\r\nare only used at  the discretion of the end user or system administrator who is\r\nseeking support.\r\n\r\nPopularity polling is a system that has been made available in several\r\ndistributions, however it is typically not installed by default.  Instead users\r\nthat are willing to share information about their usage habits may install and\r\nenable this functionality.\r\n\r\nThe only notable substantial outlier (at lest that I know of) with regards to\r\ndata collection is Ubuntu, which installs a default collection system.  This\r\nsystem, however, allows the user to opt-out on the first boot of their system\r\nafter installation.  It also offers the user the chance to actually see the\r\ninformation that is gathered to be sent to Canonical before it is sent.\r\n\r\n## Audacity's Telemetry Justification\r\n\r\nThis brings us back to the proclaimed need for telemtry in Audacity.  First\r\nlet's look at the reasons:\r\n\r\n### Lack of stability information\r\n\r\nIt's difficult to see how telemetry information as proposed would be able to\r\naffect this without gathering a lot of information about the environment in\r\nwhich the user is operating their system.  The declared \"OS\" information would\r\ncertainly be more than just the OS version?  It would be necessary to know a\r\nlot of information about the underlying hardware configuration.  Gathering such\r\ndetailed information (such as system board, cpu, firmware version, disk\r\nconfiguration, ram, etc.) could be considered by many users to be sensitive\r\ninformation.\r\n\r\nA better indicator for stability issues would be to have a reporting system that\r\nallowed users to submit reports when instability actually occurs.  This targets\r\nthe information to specific issues, instead of having an overly broad collection\r\nof information that makes the location of this information like finding a needle\r\nin a haystack.\r\n\r\n### Unknown userbase size\r\n\r\nThis is probably one of the least worthwhile arguments put forward for the\r\naddition of telemetry information. The problem with this justification is that\r\nthe implementation of telemetry collection is broken by design.\r\n\r\nThis is a feature that the user has the choice to disable by default.  That\r\nalone guarantees a level of inaccuracy of the information being gathered.  To\r\nmake matters worse, there is the option to compile the application without\r\nenabling telemetry at all.\r\n\r\nIn this situation the information gathered by telemetry is very likely to be\r\nhighly inaccurate.  It will never be clear which Linux distributions disable\r\ntelemetry during package builds.  It will never be clear what percentage of the\r\nuser base opt's out of the telemetry when they are offered the option.\r\n\r\nThere are much better ways to gather this information.  As noted in the\r\n**Software Popularity** section, many Linux distributions already collect\r\nanonymized information regarding package installation and usage.  This\r\ninformation is often freely available from the distributions.\r\n\r\nOutside of the Linux ecosystem many of the distribution points for packages\r\n(including, I would believe) GitHub and Audacity's own websites keep download\r\nstatistics for the package.  Many of these sites also gather client platform\r\ninformation during the download process.\r\n\r\nOverall these sources of information would paint a more accurate picture than\r\nrelying on the automated gathering of information with unknown levels of\r\naccuracy.\r\n\r\n### Development and support decisions.\r\n\r\nDevelopment and support decisions that are based on potentially highly flawed\r\nstatistics from telemetry gathering (as outlined in **Unknown userbase size**)\r\nwill likely lead to bad decision making, and only serve to disenfranchise a\r\nportion of the current user base.\r\n\r\nDirectly polling the user base is a far better way to gather information about\r\nthe direction to take for development.  Audacity has a support forum with over\r\n150,000 users, and several mailing lists with a high number of users.  Certainly\r\nusers that are so invested in the software to take the time to sign up for a\r\nforum, or add their email address to an email list are the users that should be\r\ntargeted for development decisions.\r\n\r\nOther ways of gathering information could be open, public, anonymous polls\r\noperated from Audacity's website.\r\n\r\n### Resolving a known issue with unknown impact on users.\r\n\r\nThis is a situation where it is difficult to understand how this information\r\ncould be used in resolving an issue.  First, it is something that really\r\nshouldn't be the basis for making a decision on whether to resolve an issue or\r\nnot.\r\n\r\nThe primary motivation for resolving an issue should be whether or not there is\r\na security assessment.  Any features that is not working as designed needs to be\r\nassessed in the light of potential risk to the stability of a users system.  This\r\nis first and foremost.  The higher the chance that a issue can be exploited by\r\nany potential bad actor the higher the need to fix the issue.\r\n\r\nBasing the decision to resolve an issue on the basis of user impact is the wrong\r\nway to go about supporting an issue.  User impact should be considered to be\r\nequal to a threat assessment when users report the issue, and document the\r\nseverity as having a significant impact on the user base.\r\n\r\n## The Proposed Telemetry Implementation\r\n\r\nAs stated earlier, the proposed implementation of telemetry in Audacity is\r\nhighly problematic.  But the nature of the problems with the chosen path here\r\nare much deeper.\r\n\r\n### Inaccurate Information\r\n\r\nAs stated above, the information being gathered is very likely to be highly\r\ninaccurate due to numerous factors.  The number of users that will opt-out of\r\ntelemetry will never be known.  The number of downloads that have been built\r\nwith the telemetry completely disabled will never be known.\r\n\r\nBecause of these fundamental flaws, the data should be considered GIGO (garbage\r\nin, garbage out).\r\n\r\n### Lack of Policy Information\r\n\r\nNo consideration, or research appears to have been done to develop a Privacy\r\nPolicy that can be applied to telemetry information.  Large open source projects\r\nlike **The Linux Foundation**, **KDE**, and **Firefox** have developed processes\r\nfor the approval of telemetry implementation that involve legal and public review\r\nbefore any implementation is made.\r\n\r\nThere is no process proposed by the Audacity team to ensure that the information\r\nbeing gathered conforms to any regulatory requirements.\r\n\r\n### Choice of Third Party Service Providers\r\n\r\nMany security and privacy experts warn of using Google and Yandex's systems.\r\nThese systems are known to be used for extensive data mining.  The implementation\r\nof these systems gather personally identifiable information (at a minimum IP\r\naddresses) through Audacity is not an acceptable standard.\r\n\r\n### The lack of consideration of Open Source Alternatives\r\n\r\nAt a minimum there are three Open Source alternatives that should be considered\r\nfor the implementation of a telemetry system.  The three that are known at this\r\ntime are [Mozilla Glean](https://github.com/mozilla/glean),\r\n[Matomo](https://matomo.org/) and\r\n[Plausible Analytics](https://github.com/plausible/analytics) all of these options are\r\nopen source licensed tools, and have statements of GDPR compliance.  Several of\r\nthem also cover CCPA and PECR compliance as well.\r\n\r\n## Conclusion\r\n\r\nThis document has attempted to do the kind of research that the Audacity team\r\nshould have done before beginning work on implementing telemetry in Audacity.\r\nThis research has included:\r\n\r\n- Looking at successful telemetry implementations in large open source projects\r\n- Looking at a case where a large open source project went wrong with changes to\r\n  their telemetry implementation\r\n- Looking at alternative data collection techniques that could be implemented to\r\n  largely the same effect as the proposed telemetry implementation\r\n- Looking at the deep flaws in the proposed telemetry implementation\r\n- Looking at the lack of communication around the proposed telemetry\r\n  implementation\r\n- Looking at alternative choices for implementing a telemetry system that would\r\n  be more respectful of user privacy\r\n- Looking at alternatives for gathering some of the information outside of using\r\n  telemetry\r\n\r\nBecause of of all of the concerns outlined in this document, it is proposed that\r\nthe implementation of Telemetry in Audacity be set aside until a more thorough\r\ninvestigation and discussion can take place that will address many of the issues\r\nraised in this document.\r\n\r\nThis document was researched and written in under 12 hours.  The Audacity Team\r\nshould recognize that just the amount of issues brought up with a very short\r\nreview dictates that there are issues that need a lot more research in order to\r\nbe properly and thoroughly addressed.\r\n =||= @SndChaser I wish comments could be pinned or something. That is a great writeup. =||= > @SndChaser I wish comments could be pinned or something. That is a great writeup.\r\n\r\nThanks.  I was inspired last night when someone else pointed to one of my comments as \"perfect\" and I kept thinking \"there's so much more that should be documented about this issue...\" =||= > > @SndChaser I wish comments could be pinned or something. That is a great writeup.\r\n> \r\n> Thanks. I was inspired last night when someone else pointed to one of my comments as \"perfect\" and I kept thinking \"there's so much more that should be documented about this issue...\"\r\n\r\nCan you dump the markdown under a repository like\r\n\r\nhttps://github.com/SndChaser/audacity-data-collection\r\n\r\nso the rest of us don't lose it in this increasingly unmanageable thread? As has been noted a few times here there's a tendency for threads like this to cycle endlessly. =||= > > > @SndChaser I wish comments could be pinned or something. That is a great writeup.\r\n> > \r\n> > \r\n> > Thanks. I was inspired last night when someone else pointed to one of my comments as \"perfect\" and I kept thinking \"there's so much more that should be documented about this issue...\"\r\n> \r\n> Can you dump the markdown under a repository like\r\n> \r\n> https://github.com/SndChaser/audacity-data-collection\r\n> \r\n> so the rest of us don't lose it in this increasingly unmanageable thread? As has been noted a few times here there's a tendency for threads like this to cycle endlessly.\r\n\r\nI'll point out that it will look better rendered as actual Markdown, where the hard line breaks will be treated as just spaces. =||= @rob-sanders \r\n\r\n> Can you dump the markdown under a repository like\r\n> \r\n> https://github.com/SndChaser/audacity-data-collection\r\n> \r\n> so the rest of us don't lose it in this increasingly unmanageable thread? As has been noted a few times here there's a tendency for threads like this to cycle endlessly.\r\n\r\nSure: https://github.com/SndChaser/AudacityTelemetryComments\r\n\r\nI'll add for @aaaaaa123456789, the files are the original Markdown versions of the document and a couple of comments I posted earlier. =||= @SndChaser Great, thank you. I think the link has a good chance of staying current as the thread rolls on. =||= Excellent further input! Put a lot of things way more eloquently than I ever could. =||= Why are you ruining one of the best pieces of audio software available? =||= popping in to say @SndChaser you did a really good job with that comment and i really appreciate what you said :) =||= > popping in to say @SndChaser you did a really good job with that comment and i really appreciate what you said :)\r\n\r\nThank you @tilda . =||= I am seeing some great summaries and it really feels like the debate is wrapping up?\r\n\r\nYet I am still seeing code review about coding style in the god damn chat. Why are we still doing this, can we wrap this up and get this god damned PR closed, please. \r\n\r\nBased on the lack of engagement from the OP I don't think even the Devs wanna touch this thing anymore, so maybe, reviewer's, you should call it a night, I think you might be wasting your time at this point? =||= Closing this will resolve Issue #846  =||= Well...\r\n\r\n#846 is subtle =||= > I am seeing some great summaries and it really feels like the debate is wrapping up?\r\n\r\nYes. To sum up those summaries: Just don't do it!\r\n\r\n> Yet I am still seeing code review about coding style in the god damn chat. Why are we still doing this, can we wrap this up and get this god damned PR closed, please.\r\n\r\nSorry about nitpicking those details. Didn't know when I started my review that it was so bad I barely could count review comments in one hand even without nagging about the style.\r\n\r\nBut yes: Please close this PR.\r\n\r\n> Based on the lack of engagement from the OP I don't think even the Devs wanna touch this thing anymore, so maybe, reviewer's, you should call it a night, I think you might be wasting your time at this point?\r\n\r\nIt's one point simply chiming in to the discussion stating your opinion, but some slightly different when you had a closer look at the subject matter beforehand. Gives that comment a completely different weight. And yes: Could have called it a day, just reviewing the UI changes. =||= https://opentelemetry.io/\r\nthis is better =||= @BenBE\r\n\r\n> It's one point simply chiming in to the discussion stating your opinion, but some slightly different when you had a closer look at the subject matter beforehand. Gives that comment a completely different weight. And yes: Could have called it a day, just reviewing the UI changes.\r\n\r\nI personally appreciate the thorough code review.  Just the excessive whitespace and EOL comments tell me that the coding standards for this project are not being adhered to by the new developers.\r\n\r\nAnd, pointing out the actual issues in the code where the telemetry and network-manager implementation are concerned undermine numerous claims made by the original submitter of this PR. =||= The fact that this is still ongoing blows my mind. =||= > Just the excessive whitespace and EOL comments tell me that the coding standards for this project are not being adhered to by the new developers.\r\n\r\nI opened a new issue to discuss automated code formatting: #847. =||= I'm appalled to see that despite significant user feedback, this PR still hasn't been rejected.\r\n\r\nAs written, there are legal, security and privacy problems with this PR. The vendoring of so many dependences is also a pretty terrible code-smell.\r\n\r\nAdditionally, telemetry that will be disabled by the overwhelming majority of distros means that any data gathered will be inconclusive at best, if not outright misleading. There is no good argument for proceeding. =||= Who is Spyrou Kyprianou, the person who apparently purchased the Audacity trademark from Dominic Mazzoni in 29 december 2020? =||= This change is like **literally** 40 times more controversial than the second most controversial change **ever** and its still not rejected. unbelievable.\r\n<img src=\"https://i.imgur.com/TCoUN8C.png\"> =||= > This change is like **literally** 40 times more controversial than the second most controversial change **ever** and its still not rejected. unbelievable.\r\n\r\nHas anyone made a joke about the audacity of the situation?  =||= > Has anyone made a joke about the audacity of the situation?\r\n\r\nOnly like 5 times already. =||= > > Has anyone made a joke about the audacity of the situation?\r\n> \r\n> Only like 5 times already.\r\n\r\nI think that's a conservative estimate of the audacious level of audacity puns... =||= https://assignments.uspto.gov/assignments/q?db=tm&sno=78352743\r\nWhy was there a 4 month gap between the trademark apparently being purchased and the announcement of this \"acquisition\"? =||= Hello everyone and I am bagging for a piece of your attention.\r\n\r\nYesterday (UTC+3) NGO \"Ukrainian Liberation\" made a [Public Appeal](https://ukrliberation.org.ua/docs/0-21.pdf) trying to get some information from the \u201cMuse Group\u201d company and bring attention of Community to the topic, and after we posted it we found out (BTW, **with the help of attentive readers** \u2013 NGO \"Ukrainian Liberation\" says \"Thank you!\" once again for that), that **we tagged the wrong company**, the [wrong](https://www.musegrp.com/en/) \"Muse Group\". The right one is [here](https://mu.se/). \r\n\r\nWe were shocked and ashamed of our mistake, and we added the correct link to the website along with an apology within the first 30 minutes. Unfortunately, by that time the post was already blocked and we are not sure how many of you were able to see it. Now the account is also flagged (we are not sure why), but we are waiting for a Feedback from the Support Team. \r\n\r\nNow to the interesting part. \r\n\r\nThis mistake got us thinking: how could 7 people who were checking the article did not notice such a mistake? \r\n\r\nWell, it turns out that all 7 people were using [DuckDuckGo](https://duckduckgo.com/), which, if you search for \u201cMuse Group\u201d, shows the other company. Now, despite our principles of not using Google at all, we tried using [Google](https://www.google.com/) for the same search, and viola! It was on the first search page, right after [\"Muse\" rock band](https://en.wikipedia.org/wiki/Muse_(band)).\r\n\r\nWhile looking at results from DuckDuckGo (BTW, we tried a lot of different requests like [this](https://duckduckgo.com/?q=muse+group&t=hc&va=u&ia=web), [this](https://duckduckgo.com/?q=%22muse+group%22%2B%22audacity%22&t=hc&va=u&ia=web), [this](https://duckduckgo.com/?t=ffab&q=%22muse+group%22%2B%22audacity%22%2B%22official+website%22&ia=web), [this](https://duckduckgo.com/?q=%22muse+group%22%2B%22audacity%22%2B%22website%22&t=ffab&ia=web), etc.) we found [a Wikipedian article](https://wikipedian.net/en/Muse_Group-0246428048) in which it is said that the \"Muse Group\" was founded a few days before they bought \"Audacity\". \r\n\r\nWe decided to use \"[Wayback Machine](http://web.archive.org/)\" to look what was up with their website before. We found out that the website \"mu.se\" used to [belong to some Swedish company or a group of people not connected to \"Audacity\" or any other free software at all](https://web.archive.org/web/20190116125440/http://www.mu.se/). \r\n\r\nAnd now you can easily see that the first news of just-created \"Muse Group\" was [posted in 10-01-2021](https://mu.se/newsroom/tpost/su6elie391-musescore-36-introduces-new-fonts-and-en), but the point is that the website \"mu.se\" itself [required authorization to check it's content even in March, 2021](https://web.archive.org/web/20210316092542/http://mu.se/). The \"Newsroom\" place of the website \"mu.se\" has [only one snapshot on \"Wayback Machine\" even today (dated by March, the 7th)](https://web.archive.org/web/20210507125351/https://mu.se/newsroom).\r\n\r\nWe were not the only one who noticed this situation, so here is [a pretty neat article](https://www.gearnews.com/free-recording-software-audacity-acquired-by-firm-behind-musescore-and-ultimate-guitar/) about it.\r\n\r\nWe are not going to make any conclusions. That\u2019s up to the Community.\r\n\r\nBy the way, NGO \"Ukrainian Liberation\" would like to apologize for a terrible mistake they made. Here's what Bohdan Kovalchuk, the \u21160 of NGO \"Ukrainian Liberation\", says:\r\n\r\n> We checked our appeal and our conclusions about seven or eight times, but did not take into account that Google shows completely different results than DuckDuckGo. This is one hundred percent our mistake, and I want to apologize once again to the Community, to the \"Music Groups\", which we mentioned in the publication. Unfortunately or fortunately, the principles on which the Ukrainian Liberation NGO is based do not allow us to conduct research using (in our opinion) unethical search platforms. Now our account is flagged, or banned, or something like that, and we don't understand why. Excuse us, please. We tried to influence the situation until it was too late. We have already suffered the enormous moral consequences of our mistake and are morally ready for the next ones. I hope that our unfortunate mistake will be a lesson not only for us (it has already become a great lesson for us...), but also for those members of the Community who will continue to try doing a little research and understand what is happening. We are sorry. Please, forgive us, but we can't promise that it won't happen again: we are only humans, there are only seven of us in the organization. Thanks.\r\n\r\nBy the way, [there is an updated version of NGO's Public Appeal](https://ukrliberation.org.ua/docs/0-21.pdf). If you're still seeing the previous one, just refresh the page. \r\n\r\nAnd the last interesting for today: a user @orenwatson had just uploaded a comment just above this one. You may want to check it also. ;-)\r\n\r\nHowever, the question remains open: **how and from whom could an open, free Audacity project be purchased?** It is really very interesting for us.\r\n\r\n---\r\n\r\nUPD (12:00 AM, UTC+3): Here are [public apologies to the \"wrong\" \"Muse Group\"](https://ukrliberation.org.ua/docs/3-21.pdf) written by Bohdan Kovalchuk, NGO \"Ukrainian Liberation\".\r\n\r\n---\r\n\r\n_Thank you very much for your attention and sorry for bothering the Community._ =||= My speculation is that an open source project can be taken over by paying off or sneaking into contributor positions. Intel and NSA have tried multiple times to push out old leadership and sneak in vulnerabilities into Linux. =||=  I have been given confirmation from Dominic Mazzoni (by Email) that he did indeed sell the trademark. The 4 month gap has not been explained however. =||= > I have been given confirmation from Dominic Mazzoni that he did indeed sell the trademark. The 4 month gap has not been explained however.\r\n\r\nThat is strange. =||= In that case, it is likely that any fork of the project, that uses the name \"audacity\" would be subject to trademark lawyers sending cease and desist letters and other such amoral behaviour. =||= There can be legitimate uses of networking in an audio application, for example Mixxx can lookup music metadata on MusicBrainz at the user's explicit request with each network connection. But seeing the reckless way this pull request vendors libcurl and now seeing that there has been literally no response from any maintainer on a pull request fixing a security vulnerability (#700) for *6 months* until a [bizarre comment](https://github.com/audacity/audacity/issues/699#issuecomment-835332181) today, I am awfully concerned about any networking functionality added to Audacity. If you add *any* networking functionality, gate it all behind a CMake option so networking libraries are not even built or linked. =||= Can't sue who you can't find.\r\n\r\nMisappropriation of open-source projects is a breach of social contract in which case there is no moral obligation to adhere to laws when obtaining a resolution. =||= I'm against. I will create my own fork =||= > no response from any maintainer on a pull request fixing a security vulnerability (#700) for 6 months\r\n\r\nUnfortunately, looking at the open pull requests and issues, this seems to be the norm here. I was shocked to learn that such a widely used application is maintained by so few people. I thought the Mixxx team was tiny but it has more people and is a much more niche application. I understand the Audacity team has limited capacity, but how could the team grow if you ignore people who are trying to help? The least you could do when someone opens a pull request is leave a quick comment like \"Hi, thanks for contributing! We're really busy working on X, Y, and Z right now so it may be a bit before we're able to review this. Feel free to ping us in a couple weeks if we don't respond.\"\r\n\r\nThis makes it even more concerning that you have hired a new developer with little to no background in FOSS. It's not like they're hiding. A quick web search can find [results](https://lists.linuxaudio.org/listinfo/linux-audio-dev/) easily. =||= This reminds me of a song I heard called [TELEMETRY SHOULD NOT BE ADDED TO THIS GREAT PROJECT](https://github.com/audacity/audacity/issues/846) =||= It would be ironic if an angry fork attracted more developers than the original project purely out of spite\r\n\r\n =||= > It would be ironic if an angry fork attracted more developers than the original project purely out of spite\r\n\r\nIt would not be purely out of spite. It would also be because the original developers have been negligent at fostering the growth of the developer community. =||= What is this masonic horseshit? you'll just be forked.\r\nCongrats, you accomplished absolutely nothing, except pissing people off! =||= Maybe we should write a new audio editor in Rust instead of forking Audacity. That way we would not have to deal with forked dependencies and a hacky build system.\r\n\r\n.\r\n.\r\n.\r\n\r\nI'm only half joking. =||= Now, that would be well described by \"the audacity\".\u00a0 =||= It is important for the people pushing for this feature to realize that the backlash they are getting is not just due to the implementation details or \"tinfoil hats\" being against telemetry out of principle. The context matters.\r\n\r\nAudacity was very recently \"acquired\" by Muse Group, a company that was just recently founded itself. However, neither the [Audacity website](https://www.audacityteam.org/audacity-musescore-announcement/), nor the [Muse Group website](https://mu.se/), nor [Tantacrul's video](https://youtu.be/RMWNvwLiXIQ) properly explain how that was done or what that even means. There is hardly any information on who is behind Muse Group. The [Wikipedia page on Muse Group](https://en.wikipedia.org/wiki/Muse_Group) currently seems quite fishy and also does not give any details. When a free, open source project that has existed for about 20 years is suddenly, and without any explanation, taken over by a company, that is reason for concern in itself.\r\n\r\nA community developed free and open source project does not have any financial interests, so the intention is simply in creating the _best_ software possible. A company naturally has to put financial interests first, so the focus _will_ shift to create the most _profitable_ software, not necessarily the _best_ software. With this, there comes the danger of paid-for features, monetizing of user data, dropping of cross-platform compatibility and many other worrying issues for the existing user base. Hence, Muse Group should be very aware of the fact that people will watch closely as to what changes they are pushing for.\r\n\r\nWith this context in mind, it should be clear that a pull request with 5500+ lines of new code and dependencies, which came out of the blue, without any prior consultation with the community, from a developer who is obviously associated with Muse Group, but has previously not contributed to the project, is reason for concern. However, if the pull request was a long sought-after feature, that would probably be okay. That is not the case, however. Instead, this pull request implements a feature that not only _no one_ has ever asked for, but it is also one that has serious negative legal and moral implications. Not only because it is about tracking user's data, but also because it attempts to do so in an atrocious way. \r\n\r\nAdd on top that the positive benefits of this are, at best, questionable, while the potential issues are huge. To name just a few, more code means more potential bugs and security vulnerabilities, more need for QA, bug fixing and maintenance, bigger download size, harder packaging for Linux distributions and many more.\r\n\r\nTherefore, this is not just about whether or not someone agrees to the collection of usage data. This is about a questionable over-take of an open-source project, about horrible decisions and timing, horrible implementation and horrible communication all bundled up into one huge disaster. Even if this pull request will not be merged due to the pressure of the community, the trust in Muse Group and the future of the Audacity project has already sustained damage that most likely can not be repaired.\r\n\r\nIf you want to fix this, don't just replace Google with Matomo. If you want to fix this, don't just remove this pull request. If you want to fix this, you need to answer _a lot_ of questions and expose the motivations and details behind the overtake, this feature and many more. You owe it to a project that has been successful for twenty years. You owe it to a loyal and hard-working community. You owe it to us. You owe it to yourself. =||= > It is important for the people pushing for this feature to realize that the backlash they are getting is not just due to the implementation details or \"tinfoil hats\" being against telemetry out of principle. The context matters.\r\n> \r\n> Audacity was very recently \"acquired\" by Muse Group, a company that was just recently founded itself. However, neither the [Audacity website](https://www.audacityteam.org/audacity-musescore-announcement/), nor the [Muse Group website](https://mu.se/), nor [Tantacrul's video](https://youtu.be/RMWNvwLiXIQ) properly explain how that was done or what that even means. There is hardly any information on who is behind Muse Group. The [Wikipedia page on Muse Group](https://en.wikipedia.org/wiki/Muse_Group) currently seems quite fishy and also does not give any details. When a free, open source project that has existed for about 20 years is suddenly, and without any explanation, taken over by a company, that is reason for concern in itself.\r\n> \r\n> A community developed free and open source project does not have any financial interests, so the intention is simply in creating the _best_ software possible. A company naturally has to put financial interests first, so the focus _will_ shift to create the most _profitable_ software, not necessarily the _best_ software. With this, there comes the danger of paid-for features, dropping of cross-platform compatibility and many other worrying issues for the existing user base. Hence, Muse Group should be very aware of the fact that people will watch closely as to what changes they are pushing for.\r\n> \r\n> With this context in mind, it should be clear that a pull request with 5500+ lines of new code and dependencies, which came out of the blue, without any prior consultation with the community, from a developer that is obviously associated with Muse Group, but has previously not contributed to the project, is reason for concern. However, if the pull request was a long sought-after feature, that would probably be okay. That is not the case, however. Instead, this pull request implements a feature that not only _no one_ has ever asked for, but it is also one that has serious negative legal and moral implications. Not only because it is about tracking user's data, but also because it attempts to do so in an atrocious way.\r\n> \r\n> Add on top that the positive benefits of this are, at best, questionable, while the potential issues are huge. To name just a few, more code means more potential bugs and security vulnerabilities, more need for QA, bug fixing and maintenance, bigger download size, harder packaging for Linux distributions and many more.\r\n> \r\n> Therefore, this is not just about whether or not someone agrees to the collection of usage data. This is about a questionable over-take of an open-source project, about horrible decisions, horrible implementation and horrible communication all bundled up into one huge disaster. Even if this pull request will not be merged due to the pressure of the community, the trust in Muse Group and the future of the Audacity project has already sustained damage that most likely can not be repaired.\r\n> \r\n> If you want to fix this, don't just replace Google with Matomo. If you want to fix this, don't just remove this pull request. If you want to fix this, you need to answer _a lot_ of questions and expose the motivations and details behind the overtake, this feature and many more. You owe it to a project that has been successful for twenty years. You owe it to a loyal and hard-working community. You owe it to us. You owe it to yourself.\r\n\r\nBravo. =||= This pull request still hasn't been denied? I don't see any reason for the hold-up.\r\n\r\nRegardless of the outcome of this discussion if the governance of this project is inactive then a fork is necessary. =||= > Add on top that the positive benefits of this are, at best, questionable, while the potential issues are huge. To name just a few, more code means more potential bugs and security vulnerabilities, more need for QA, bug fixing and maintenance, bigger download size, harder packaging for Linux distributions and many more.\r\n\r\nAdd on top a history of forking dependencies and not even trying to upstream patches, responding rather flippantly to Linux packagers' concerns (#625), and [causing problems](https://bugzilla.redhat.com/show_bug.cgi?id=1939749#c6) which end up falling on the developers of other applications sharing dependencies to resolve. =||= > But seeing the reckless way this pull request vendors libcurl and now seeing that there has been literally no response from any maintainer on a pull request fixing a security vulnerability (#700) for _6 months_ \r\n\r\nActually that's a huge message on its own. Noone cares to have a look at fixing a security vulnerability but there is time to create pull request for telemetry. Honestly I don't think that this is only to improve anything for users but to prepare some \"pay with your data\" shit like with many other services out there. And even if the introduction is honest the priority list is really really bad. Why is \"implement telemetry\" higher in the list than \"fix security vulnerabilities\". I can tell you something about user preferences even without any telemetry in place: Your users want to have security vulnerabilities fixed with top priority! =||= Would be great if the trollish comments would stop..\r\nThis is a serious matter.\r\nThe more of them there are, the less inclined everyone else is from participating in an actual, honest, serious discussion.\r\n\r\nThe whole thing might just be ignored because most people commenting do so in a very unfriendly manner.\r\nSome anger is understandable, but if we are not civil and decent it is unreasonable to ask the other party to be that for us.\r\n =||= > Would be great if the trollish comments would stop..\r\n\r\nStupid pull requests beget stupid comments. =||= I would suggest to rename the PR as _Make possible for users to help the project by contributing anonymous usage if they want to_, this way the answers of people responding _I'm against_ with epidermal reaction like if they were on twitter would look funny at best.\r\n\r\nI can understand how the original title can be triggering when not reading the explanations that came after the title, but well, as a people I believe we can read more than 140 characters\u2026 =||= > I would suggest to rename the PR as _Make possible for users to help the project by contributing anonymous usage if they want to_, this way the answers of people responding _I'm against_ with epidermal reaction like if they were on twitter would look funny at best.\r\n\r\nPlease read the discussion, it has already been established that the information being sent is not anonymous. =||= Here is yet another point against adding any networking capabilities to Audacity whatsoever. Audacity uses a vendored copy of FFmpeg. As documented in issue #398, Audacity was using FFmpeg version 2.2.2 until pull request #741 was merged only 4 days ago. FFmpeg 2.2.2 was [released 2014-05-04](https://git.videolan.org/?p=ffmpeg.git;a=shortlog;h=n2.2.2).\r\n\r\nRemember that [recent blog post](https://signal.org/blog/cellebrite-vulnerabilities/) by the lead developer of Signal demonstrating a proof-of-concept exploit in widely used software? It strongly implied that was accomplished by exploiting a vulnerability in an old version of FFmpeg from 2012, likely with a specially formatted media file. That was exploited to achieve execution of arbitrary code by the attacker.\r\n\r\nConsidering Audacity is an extremely widely used application, there would be a lot of incentive for a malicious actor to use it to launch an attack on Audacity users' computers. The Audacity maintainers (not merely the new people from Muse Group) have already demonstrated they are not trustworthy for maintaining the security of Audacity. Adding a novel attack surface, especially in a very reckless way by vendoring libcurl, is a horrible idea.  =||= > Why is \"implement telemetry\" higher in the list than \"fix security vulnerabilities\".\r\n\r\nNo new dependencies should be added to Audacity before cleaning up this mess with vendored dependencies. This should be the very top priority above any new features or UX improvements because it is crucial for security. =||= Security does not pay bills and does not make for flashy news. So it ends up ignored most of the time, until a leak of some sorts happen.\r\nThis is a systemic problem. =||= Speaking of Signal, do you think it uses telemetry? Is it unusable crap?\r\n\r\n(Please don't take this off topic debating the merits of Signal versus other messaging systems. That's not the point here.) =||= wtf has that to do with anything, or relevant at all?\r\nyou are part of the problem here, please shut up =||= I apologize for bringing that last point up. It's not very relevant. Please don't respond to it and drag this off topic. =||= When will a decision be made about this PR? I'm very curious how the maintainers weight the over 3000 thumbs down this PR has received. =||= > When will a decision be made about this PR? I'm very curious how the maintainers weight the over 3000 thumbs down this PR has received.\r\n\r\nIf you have the monitor upside down you could see it as over 3000 thumbs up for something you can't understand. =||= > When will a decision be made about this PR? I'm very curious how the maintainers weight the over 3000 thumbs down this PR has received.\r\n\r\nWow, the users are ASKING you NOT to do this and NONE of the Audacity Team seems to care about its users, so now you're going to go through with it? =||= To Muse Group:\r\n\r\nPeople are ready to maintain fork of Audacity if this PR\u200c gets accepted. Most of your users do _not_ want telemetry either! Therefore, if this PR gets accepted, _your investment in Audacity would be near useless_. That's all. =||= A lovely thing about OSS: there are things called _forks_ which branch off the original project! Many people do this when the original project goes awry (such as LibreOffice and MATE, forks of OpenOffice.org and GNOME 2). This project is close to going haywire and _**MANY**_ people stated that they **will** fork and maintain Audacity if this PR gets accepted. So, if you want to maintain a large user base, Muse Group, close this PR and you won't become OpenOffice.org soon. =||= They are now probably thinking about ways to get around this telemetry thing and implement something else that satisfies their business model needs.\r\nThey clearly showed us their mentality regarding not caring about people and ultimately, about the community.\r\nMentalities like that are hard to change, they are generally toxic.\r\nIt's obvious that we as users who care about privacy need alternatives to edit our whale, monkey, voice and other personal recordings.\r\nSo also if they won't commit this patch, I've had enough about their disrespectful and not engaging behavior towards humans.\r\n\r\n**Get this shit that has nothing to do with an audio program out of here**. =||= > ways to get around this telemetry thing\r\n\r\nI'd guess it's more like \"trying to assess the impact of a fork, and how likely it would be that it happens\", and \"what Plan B would be like if it happens\".\r\nI don' trust that they'll do anything good (kind of pessimistic, but anyway...) and I'm ready to start using a fork.\r\n\r\nI only remember one case in which a company reverted a decision to include telemetry in free software -- Gitlab. =||= Audacity is music software, which does not need or require a network stack.\r\nAudacity is NOT a web browser, which does need and require a network stack. =||= > They clearly showed us their mentality regarding not caring about people and ultimately, about the community.\r\n\r\nI keep seeing this argument but the simple truth is:\r\n\r\n* This pull request is a draft, not some guaranteed merge action.\r\n* The developers taking their time to think about the best course of action from here on out. Not immediately responding to the dogpiling that's going on in this PR, shouldn't be misconstrued as \"they don't care\", especially considering how helpful the community at large has been (speaking as a lurker).\r\n\r\nAFAIK, some of the people involved in this PR actually read every single post here, and are evaluating how to tackle the telemetry issue in a way that would work out for both the devs and the users. =||= I just got banned off of the Audacity discord. Not for being rude, pushy, or invasive - but for pointing out that their \"good luck finding people to maintain a fork\" comments were a little strange and disconcerting.\r\n\r\nI really, _really_ wanted to assume negligence instead of malintent, and tried to have an open conversation with the maintainers. I was met with rudeness, snyde comments, pompous behavior (\"good luck, you can't just take over a 20 year project so easily\", \"good luck finding translators\", etc.).\r\n\r\n# The devs have no interest in listening to anyone. Let's fork it already. =||= @DaVince \r\n\r\n> This pull request is a draft, not some guaranteed merge action.\r\n\r\nIt was not a draft when it was posted. It was converted to one after the initial backlash.\r\n\r\nThis was also requested directly by Tantacrul, the new owner of Audacity, and coded/submitted by a Muse Group employee.\r\n\r\nThey have every intent to merge this. =||= > their \"good luck finding people to maintain a fork\" comments\r\n\r\n@Qix- Did they really say that? There's not even a need to maintain any fork - all it takes to disable telemetry is to build Audacity from source and distribute the clean binaries. =||= @SpheeresX Yes. It's not paraphrasing, either. =||= > @DaVince\r\n> \r\n> > This pull request is a draft, not some guaranteed merge action.\r\n> \r\n> It was not a draft when it was posted. It was converted to one after the initial backlash.\r\n> \r\n> This was also requested directly by Tantacrul, the new owner of Audacity, and coded/submitted by a Muse Group employee.\r\n> \r\n> They have every intent to merge this.\r\n\r\nIf they had every intent, it would not have been reverted to a draft. Don't think they're not taking this seriously. =||= > > their \"good luck finding people to maintain a fork\" comments\r\n> \r\n> @Qix- Did they really say that? There's not even a need to maintain any fork - all it takes to disable telemetry is to build Audacity from source and distribute the clean binaries.\r\n\r\nThis is true, however more antifeatures will _likely_ be added (and in that case, fork time!). =||= @DaVince They are not taking it seriously. Tantacrul said in the discord that he's waiting for this to blow over. =||= > @DaVince They are not taking it seriously. Tantacrul said in the discord that he's waiting for this to blow over.\r\n\r\nHow is that any indication of them not taking it seriously? That's a wise course of action when you're being dogpiled on. Meanwhile, it creates some space to rethink how to tackle the feature instead.\r\n\r\nI feel like I'm contributing too many posts to this way-too-long PR already, and I'm not sure it's going anywhere, so I'm pulling out of this conversation. But maybe keep a basic modicum of trust that the people who have been working on this project for years are out to find the right solution that works for everyone. =||=  @DaVince\r\n\r\n> If they had every intent, it would not have been reverted to a draft. Don't think they're not taking this seriously.\r\n\r\nI'm reading the reversion to a draft state as more of WIP cycle as coding errors / issues are worked out.  I am not seeing this as the intent to revert the code completely and close out this PR. =||= Apart from the legal/privacy/ethical issues what concerns me the most they are giving zero response to the technical concerns raised in the code reviews. That alone convinces me to support whatever popular non-Muse fork emerges. =||= > But maybe keep a basic modicum of trust that the people who have been working on this project for years are out to find the right solution that works for everyone.\r\n\r\nThat's exactly what I did, and they gave me every reason to believe this is not some innocent ordeal. =||= \r\n> But maybe keep a basic modicum of trust that the people who have been working on this project for years are out to find the right solution that works for everyone.\r\n\r\nThe only way to \"...find the right solution...\" would be to start from scratch.  The code that is being worked on is flawed from it's initial intent, and is broken by design.  Those are issues that cannot be coded around. =||= > But maybe keep a basic modicum of trust that the people who have been working on this project for years are out to find the right solution that works for everyone.\r\n\r\nThat trust has already been broken for many. It is up to the maintainers (old and new) to work towards restoring it. I have suggested multiple times throughout this discussion specific steps they could take to build trust. I am awfully concerned that they have not taken any of those steps in days. The most basic step would be a simple comment saying that they commit to not using Google Analytics nor Yandex. All that takes is one sentence. And that's just the first step to demonstrate this is going in the right direction. =||= > Tantacrul said in the discord that he's waiting for this to blow over.\r\n\r\nThis is a bad idea. This will not blow over until a response is provided. If it is a bad response, it will blow up even bigger. =||= Again, for those that aren't \"developers\", in software development you don't add code that is not necessary to the main functionality of the application. This PR is attempting to turn a really great and working perfectly fine right now \"audio application\" INTO a \"web browser\" (with who knows what down the road and a bunch of **new security issues as it using your network**) Currently this software does not use the network or internet. =||= > @DaVince They are not taking it seriously. Tantacrul said in the discord that he's waiting for this to blow over.\r\n\r\ncan you post a screenshot of this please?\r\n\r\nI disagree with discord ToS, so I cannot join. =||= Tantacrul must have said that after he kicked me from his discord, as I did not see it. =||= > can you post a screenshot of this please?\r\n\r\nNope. I was banned. I know for a fact some others in this thread are in there and can post some screenshots, however (assuming they haven't also been banned). I won't tag them so as to not 'out' them to the hostile Audacity team.\r\n\r\nI encourage them to copy the logs and take screenshots, though. Conversations in there would be very interesting to the people here, and I don't want to be the one shouting out hearsay. =||= > Again, for those that aren't \"developers\", in software development you don't add code that is not necessary to the main functionality of the application. This PR is attempting to turn a really great and working perfectly fine right now \"audio application\" INTO a \"web browser\"\r\n\r\nadding network features does not mean making it a browser. browsers nowadays are a full OS, with not just networking, font and image rendering, but also audio and video playback, camera and usb access, gps and others sensors, p2p communication, screensharing... errr what else, whatever the main PC can do, the browser will likely do it too (maybe not now, but in due time for sure) =||= Nevermind, I forgot I took a screenshot of an older conversation yesterday that had (some of) the relevant bits.\r\n\r\n# EDIT: They are trying to censor this. Please don't let them.\r\n\r\n![image](https://user-images.githubusercontent.com/885648/117585849-eb4bae80-b114-11eb-8af3-62857ef40244.png)\r\n\r\n\r\n---\r\n\r\nHere is what was edited into this comment.\r\n\r\n> [Moderated: I'm 100% certain that you do not own the copyright on that conversation, and I'm astounded, given the current context, that you feel it's OK to redact your own identity in that picture while displaying personal identifiable information about others.]\r\n\r\nConversation cannot be copyrighted, and everyone knows who each of the un-censored people are as they are maintainers of this project and/or celebrities (in the case of Tantacrul). I protected the non-maintainers who were trying to raise concern with you and have a conversation before you banned us, because they are _not_ well known people and _not_ celebrities. I've not revealed anything other than your intent - much less private information. Those named on there do not even give your Discord IDs, in which you need the nonce number in order to contact anyway.\r\n\r\nDon't be dumb. =||= First, if it is true that they are really waiting for this to \"blow over\", then I think it is likely that they will eventually close this PR for further comments. We should probably agree on an alternative place to keep the conversation going pretty soon, so that killing the conversation here will not kill the conversation in general.\r\n\r\nSecond, can someone link to the mentioned Discord? I could not find an Audacity Discord or a mention of such anywhere. =||= Also, At this point it would be wise for us to create our own discord or channel for communication, as this PR's comment section is of course subject to being potentially deleted by Muse Group. =||= thanks! though that is a bit unclear/dubious about intentions.\r\n\r\nletting things cool down is always a good thing, dont make decisions or say things under pressure.\r\n\r\nwe should still press them for a proper response to all of this though. their community deserves better than this =||= Perhaps an IRC channel on say Freenode, rather than a discord?\r\n =||= is it possible to archive all comments in this PR? A lot of useless comments (admittedly I contributed a few) but some very good ones as well =||= > Perhaps an IRC channel on say Freenode, rather than a discord?\r\n\r\n#audacity already exists, we can use that? =||= > thanks! though that is a bit unclear/dubious about intentions.\r\n\r\nYes, of course. All I can say is, it's clear (to me) based on the _rest_ of the very long conversation that took place in there (aside from that screenshot) that they aren't doing it as a \"cooldown\" period. They're actively hiding from the problem and waiting for things to quiet down enough to move forward.\r\n\r\nThis was also clear to me as the development discussion about this PR was still taking place in the development channels by both the OP as well as the rest of the maintainers, talking about changes being made to the code in order to merge it later.\r\n\r\n> is it possible to archive all comments in this PR?\r\n\r\nYes, sort of. https://web.archive.org/web/*/https://github.com/audacity/audacity/pull/835 =||= I'd like to give my two cents on the matter, being an Audacity user but also a software engineer.\r\n\r\nI don't think telemetry per se is a bad thing, for me it wildly depends on how it's done and what for. There are always cases of abuse, whether it be overreaching forcing it on people without an option to opt-out (e.g., the way Microsoft does it with Windows 10 for example) or the myriad of trackers many websites employ to track users actions so advertisers can target them better (where the worse possible outcome would be a price hike on something because they'd know that particular user would buy it because it's important for them).\r\n\r\nBut, when used for the betterment of the product itself it's something really useful and metrics of all kinds are present in all phases of software development, even during prototyping. I'm going to simplify things, but lets say you have two low fidelity prototypes for a new program, you present them to a series of (willing) participants and see how they use them, how long it takes them to accomplish tasks, what their opinions are, there's a whole lot of things that can be measured there already!\r\n\r\nAfterwards you get to see how they did, which was more effective, more efficient, more intuitive, etc. This is as old as 1986, when John Brooke created his System Usability Scale thing. Then there'd be high level prototypes, more interviews, different kinds of metrics, etc.\r\n\r\nAll of that before an actual app is even done! Obviously not everybody does things that way, and I'm kind of going off track, but I wanted to let you all know that metrics can be useful towards creating a good program.\r\n\r\nThe thing is, how would you translate that to a finished product already? Or an ongoing one? Obviously forcing participation is not the way to go (imagine someone approaching you in the street making you use their prototype or else), and doing it surreptitiously is even worse.\r\n\r\nSo in my eyes, whatever is done (generally speaking, not talking about Audacity concretely), should be done with the consent of the users and ideally be an opt-in situation. From what I read over at @crsib's original post it would be opt-in and disabled by default, so if that's the case so far so good for me.\r\n\r\nNow, what to track actually? Because that's a slippery slope, broadly speaking you'd want to keep it to a minimum, but tracking things that would be important for the betterment of the app itself.\r\n\r\nTo my mind comes Microsoft again, any of you remember the changes Office had throughout its versions? The amount of toolbars it used to have and how things changed with Office 2007? (That's when the ribbon was introduced, which has come a long way since then too, but that's another matter).\r\n\r\nThey had an enormous amount of data from real users, already prior to introducing the ribbon, but I mention it because I remember seeing a presentation on what led to the creation of the ribbon (MIX08 it was, I think there are videos in YouTube for those willing to see it and I'd highly recommend them even if they're dated) and all that data was really useful! They allowed them to know which functions where used more, which weren't used at all, which where so hidden people didn't even know about (think about it, what do we use in an office suite and what is it capable of doing haha).\r\n\r\nAll that came from telemetry, same with how many steps it took to do something and waaaaay more things (I'd say they captured way too much, but that's not the general point I'm trying to make).\r\n\r\nBeing able to see that your users use a function a lot, but it's hidden under several clics may make you think \"okay, let's see if we can make it more accessible, more intuitive\". Or maybe, \"wow, they're really using that function and we're even working on it that much, let's do some sprints on it and see how we could improve it\".\r\n\r\nOr even, \"oh... many users are making that mistake before accomplishing what they wanted to do, should we do something about it?\" (because you could see correlation of actions too, where you click at one moment and where you click next). It's another tangent, but in my experience the first thing that comes to my mind is the \"exporting\" to PNG for example in GIMP, I'd go to \"Save\" or \"Save as\" instead many times.\r\n\r\nAfter all that I've said, my position on telemetry would be good, I like things I use the most to be priorized over others maybe. Besides, Audacity being open source, we (or those with knowledge and inclination) can know what's being measured so we don't have to trust it's going to be something when it's not. Yes, it's a big pull request, and it's just that, a request open for comments one way or another and I'm sure the whole thing would be refined before shipping it in a subsequent release (if it's integrated that is).\r\n\r\nPlus, if it's off by default there's nothing to worry about in my mind for those who don't want to take part into shaping the next versions. And if it ended up overreaching or whatever there would also be the possibility of building some binaries without the telemetry code (e.g., if using Google's and/or Yandex's systems is unacceptable).\r\n\r\nThe bottom line is, just don't think of metrics as a bad thing, at least acknowledge they can be used for good too. Yes, many times they're used for not so amicable things like those examples I wrote at the beginning, but not always. And while doing surveys like I mentioned is also another possibility, it isn't as representative of the real usage and certainly not as informative for developers.\r\n\r\nAs long as Audacity remains open source and the focus is to improve its usability, user experience, interface, etc. I'm good for it.\r\n\r\nPS. Sorry for the long text, I started writing and it ended up being massive. =||= I found this, which may help: https://stackoverflow.com/questions/16198351/get-list-of-comments-from-github-pull-request\n\nOn 5/9/2021 13:52, jxu wrote:\n\n> is it possible to archive all comments in this PR? A lot of useless comments (admittedly I contributed a few) but some very good ones as well\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, [view it on GitHub](https://github.com/audacity/audacity/pull/835#issuecomment-835874142), or [unsubscribe](https://github.com/notifications/unsubscribe-auth/ABZZJCCLI2KFFJ33Q5V2FRLTM3RZTANCNFSM44C5SLTA). =||= I took the liberty of archiving the first ten pages (~~up until and including the comment above me~~ updated with some newer comments) on web archive. They're in JSON format but at least they won't be deleted.\r\n\r\n1. https://web.archive.org/web/20210509200616/https://api.github.com/repos/audacity/audacity/issues/835/comments?per_page=100\r\n2. https://web.archive.org/web/20210509200704/https://api.github.com/repos/audacity/audacity/issues/835/comments?per_page=100&page=2\r\n3. https://web.archive.org/web/20210509200823/https://api.github.com/repos/audacity/audacity/issues/835/comments?per_page=100&page=3\r\n4. https://web.archive.org/web/20210509200831/https://api.github.com/repos/audacity/audacity/issues/835/comments?per_page=100&page=4\r\n5. https://web.archive.org/web/20210509200837/https://api.github.com/repos/audacity/audacity/issues/835/comments?per_page=100&page=5\r\n6. https://web.archive.org/web/20210509200852/https://api.github.com/repos/audacity/audacity/issues/835/comments?per_page=100&page=6\r\n7. https://web.archive.org/web/20210509200853/https://api.github.com/repos/audacity/audacity/issues/835/comments?per_page=100&page=7\r\n8. https://web.archive.org/web/20210509200849/https://api.github.com/repos/audacity/audacity/issues/835/comments?per_page=100&page=8\r\n9. https://web.archive.org/web/20210509200941/https://api.github.com/repos/audacity/audacity/issues/835/comments?per_page=100&page=9\r\n10. https://web.archive.org/web/20210509204502/https://api.github.com/repos/audacity/audacity/issues/835/comments?per_page=100&page=10 =||= Welp that was quick. They [deleted](https://github.com/audacity/audacity/pull/835#issuecomment-835873323) the screenshot. Oh no! Anyway.\r\n\r\nLol @ the comment about \"copyright\", and yes, I'm going to show the names (not handles) of the maintainers of the project. Might I suggest reading this article: https://en.wikipedia.org/wiki/Streisand_effect\r\n\r\n- Here it is mirrored on Imgur. https://i.imgur.com/y5zVq02.jpg\r\n- Here it is archived. https://web.archive.org/web/20210509201749/https://i.imgur.com/y5zVq02.jpg\r\n\r\nI suppose I'll be blocked from posting here soon. I'll update the thread in @SndChaser's repository if I am.\r\n\r\nEDIT: Just a few minutes after the screenshot was posted and they censor my comment the PR is closed. Okay. =||= @Qix- and I was going to do the low-tech method of expanding all the comments and saving a raw HTML file :P Your method is a lot more programmatic =||= Over 3000 thumbs down? We're closing this PR. We've taken on board 'no Google' and 'no Yandex' and Muse are now looking for a good alternative (thanks to those who recommended other open source solutions by the way). Please understand that this will take a little time to organize and a concrete plan will be published soon - at any rate this week. =||= I will be setting up a fork soon too then, thank you for closing.\r\n =||= > Over 3000 thumbs down? We're closing this PR. We've taken on board 'no Google' and 'no Yandex' and Muse are now looking for a good alternative (thanks to those who recommended other open source solutions by the way).\r\n\r\nThank you  =||= @falkTX You're the most qualified to fork IMO, and a number of us have mentioned you in discord already hoping you'd fork too. Can you do so really quick even if it's not a modified version so that we can star/watch?\r\n\r\nEDIT: nevermind, forked here: https://github.com/KXStudio/audacity =||= > Over 3000 thumbs down? We're closing this PR. We've taken on board 'no Google' and 'no Yandex' and Muse are now looking for a good alternative (thanks to those who recommended other open source solutions by the way). Please understand that this will take a little time to organize and a concrete plan will be published soon - at any rate this week.\r\n\r\nThank you for making an effort to listen to the community somewhat! =||= > \r\n> \r\n> > They clearly showed us their mentality regarding not caring about people and ultimately, about the community.\r\n> \r\n> I keep seeing this argument but the simple truth is:\r\n> \r\n>     * This pull request is a draft, not some guaranteed merge action.\r\n> \r\n>     * The developers taking their time to think about the best course of action from here on out. Not immediately responding to the dogpiling that's going on in this PR, shouldn't be misconstrued as \"they don't care\", especially considering how helpful the community at large has been (speaking as a lurker).\r\n> \r\n> \r\n> AFAIK, some of the people involved in this PR actually read every single post here, and are evaluating how to tackle the telemetry issue in a way that would work out for both the devs and the users.\r\n\r\n\"The devs\" managed to work on Audacity for 20 years without needing telemetry, or networking features at all. If a brand new developer is going to introduce new features, libraries, and bloat, there better be a damn good reason for it. =||= > > > They clearly showed us their mentality regarding not caring about people and ultimately, about the community.\r\n> > \r\n> > \r\n> > I keep seeing this argument but the simple truth is:\r\n> > ```\r\n> > * This pull request is a draft, not some guaranteed merge action.\r\n> > \r\n> > * The developers taking their time to think about the best course of action from here on out. Not immediately responding to the dogpiling that's going on in this PR, shouldn't be misconstrued as \"they don't care\", especially considering how helpful the community at large has been (speaking as a lurker).\r\n> > ```\r\n> > \r\n> > \r\n> > AFAIK, some of the people involved in this PR actually read every single post here, and are evaluating how to tackle the telemetry issue in a way that would work out for both the devs and the users.\r\n> \r\n> \"The devs\" managed to work on Audacity for 20 years without needing telemetry, or networking features at all. If a brand new developer is going to introduce new features, libraries, and bloat, there better be a damn good reason for it.\r\n\r\nYes! I 1000% agree with what you are saying =||= @crsib \r\n\r\n> Over 3000 thumbs down? We're closing this PR. We've taken on board 'no Google' and 'no Yandex' and Muse are now looking for a good alternative (thanks to those who recommended other open source solutions by the way). Please understand that this will take a little time to organize and a concrete plan will be published soon - at any rate this week.\r\n\r\nI hope you look at some of the comments here a lot more carefully, I have seen some rather extensive work (some of which I did myself) that indicates there were a lot more issues with the underlying concepts that you were trying to achieve with this code.  There really needs to be a concerted effort to understand the implications that adding a set of features such as telemetry involve, not just the technological aspect. =||= > @falkTX You're the most qualified to fork IMO, and a number of us have mentioned you in discord already hoping you'd fork too. Can you do so really quick even if it's not a modified version so that we can star/watch?\r\n\r\nStill need to check and investigate the CI build.\r\nIn any case keep an eye on https://kx.studio/News/ and I will be announcing it there when there is something to see.\r\nI had forked for my personal GH account, but it is better to use https://github.com/KXStudio/audacity.\r\n\r\nThe main question now is if it is possible to keep the audacity name as-is (because the build will be identical, as-is, just with no tracking).\r\nAs much as Muse Group want to be good people, I think that might be crossing a line on my side.\r\n\r\n@crsib is it okay to keep audacity name for builds which are identical in every way except tracking completely disabled? =||= @falkTX You'll probably need to change the name. Audacity is [GPL license](https://github.com/audacity/audacity/blob/master/LICENSE.txt), and as someone else in the Discord (not mentioning who) pointed out, \"Audacity\" is trademarked. That trademark changed ownership sometime last year and they took 4 months to announce it. The deal of the trademark transfer was not really outlined per my knowledge.\r\n\r\nPerhaps you don't 'need' to, but you certainly want to - especially since Muse Group doesn't seem to be cooperative with the OSS community. =||= > @crsib is it okay to keep audacity name for builds which are identical in every way except tracking completely disabled?\r\n\r\nBetter yet, do you commit to providing official release builds for all supported operating systems built without tracking/telemetry? I am aware that you do not currently provide official Linux builds but work on this in progress (#843). Do you commit to providing official Linux builds built without tracking when you introduce official Linux builds? This is easy to do with GitHub Actions' matrix feature. If you need help with that I am happy to help.\r\n\r\nI for one think we will probably not need a fork if this is done. =||= > > @crsib is it okay to keep audacity name for builds which are identical in every way except tracking completely disabled?\r\n> \r\n> Better yet, do you commit to providing official release builds for all supported operating systems built without tracking/telemetry? I am aware that you do not currently provide official Linux builds but work on this in progress (#843). Do you commit to providing official Linux builds built without tracking when you introduce official Linux builds? This is easy to do with GitHub Actions' matrix feature. If you need help with that I am happy to help.\r\n> \r\n> I for one think we will probably not need a fork if this is done.\r\n\r\nI'm working on this in case they will add some form of telemetry (which based on what @crsib said, they will): https://audacity-notrack.github.io/ =||= What part of \"NO TELEMETRY\" don't you understand?\r\nTelemetry means collection of users' data, this has no place in a Free/Libre world.\r\nDespite at least 90% (EDIT: the majority) of the comments saying \"we don't want telemetry\" and then you saying \"Muse are now looking for a good alternative\" explained everything: You are not listening to the community.\r\n\r\nAnd for the record, \"looking for an alternative\" is not a winning point for us, it's a losing one in which it's clear now that we completely lost power of choice over this amazing program. =||= > Despite at least 90% of the comments saying \"we don't want telemetry\" and then you saying \"Muse are now looking for a good alternative\" explained everything: You are not listening to the community.\r\n\r\nto be fair, a few expressed consent of telemetry with self-hosted servers being ok.\r\nthere is a division on this specific issue. =||= The right amount of telemetry tracked in a manner that is fair and can be trusted could do good, this is just not it. Perhaps something as \"simple\" as a \"Send crash report\" button if Audacity crashes. =||= I want to reiterate my concern for how the decision to even start working on this was made and how this pull request has been handled. It is *not* normal for FOSS projects to have no public discussion of major changes to the code before any code is written. If you do not make significant changes to your decision making process, including how the roadmap for development is decided, you should anticipate more contentious pull requests like this. Again, I strongly recommend that every Audacity maintainer, old and new, read all three of these blog posts about the Rust community's growth through a highly contentious issue:\r\nhttps://aturon.github.io/tech/2018/05/25/listening-part-1/\r\nhttps://aturon.github.io/tech/2018/06/02/listening-part-2/\r\nhttps://aturon.github.io/tech/2018/06/18/listening-part-3/\r\n\r\nFurthermore I want to reiterate my earlier suggestion to enable telemetry/tracking only in special builds made for enthusiastic testers who specifically want to provide this data to assist in the development of Audacity. @unfa mentioned this idea in his [YouTube video](https://www.youtube.com/watch?v=jK7eHuGDAtM) about this as well. I think these users would accept much more invasive data gathering for these special builds than average users, which could help you get better information to improve Audacity. You could also likely get Linux users to participate in this. =||= > Over 3000 thumbs down? We're closing this PR. We've taken on board 'no Google' and 'no Yandex' and Muse are now looking for a good alternative (thanks to those who recommended other open source solutions by the way). Please understand that this will take a little time to organize and a concrete plan will be published soon - at any rate this week.\r\n\r\nThis is rather frustrating. While it is appreciated that the PR has finally been closed, your take-away is worrying. The vast majority of comments here has made it clear that tracking and the code bloat that comes with it is neither needed nor wanted. But you're basically saying outright that you will have another stab at this. What you _should_ take on board instead:\r\n\r\n- no tracking, full stop\r\n- no huge PR without any prior discussion\r\n- no features that no one has ever asked for\r\n- no unnecessary code bloat =||= @falkTX \r\n\r\n> to be fair, a few expressed consent of telemetry with self-hosted servers being ok.\r\n> there is a division on this specific issue.\r\n\r\nYes, I think there might be a better way to move forward and make a tool that could accomplish the Audacity Team's goals without infringing on other's privacy.\r\n\r\nMy thought is what if instead of being built into the application directly, there was an extension system.  The extension system could allow the user to install things like a \"support tool\" that only provides crash reporting / debug info.  A \"feedback tool\" could provide more usage based information.  A \"cloud export tool\" could enable users to be able to send files to whatever cloud based storage they wanted. (This last item is something that Steve Daulton mentioned being requested by users before.)\r\n\r\nThe idea is that having this kind of system would keep this code off users systems unless they **specifically** decided to download and install it.\r\n\r\nOf course, this doesn't directly address the infrastructure side of things...that is another issue that needs to be worked on. =||= > My thought is what if instead of being built into the application directly, there was an extension system.\r\n\r\nExtensions add complexity. It is an annoying maintenance burden to keep API/ABI compatibility between the host application and externally maintained/installed extensions. I suggest using compile options with CMake instead. =||= @Be-ing \r\n\r\n> Extensions add complexity. It is an annoying maintenance burden to keep API/ABI compatibility between the host application and externally maintained/installed extensions. I suggest using compile options with CMake instead.\r\n\r\nIt does add complexity, however it has many advantages:\r\n\r\n1. There's no lock-in on platforms where users generally don't build the code on their own (ie, Mac and Windows)\r\n2. It doesn't require access to GitHub to submit new extensions\r\n3. It puts more control over the code that's installed on their system in the user's hands.\r\n3. A marketplace type system could take some pressure off the developers to chase after features that they don't feel should be in the Audacity core\r\n4. It could provide Muse Group / Others with a way to provide \"value added\" add-ons\r\n =||= > The right amount of telemetry tracked in a manner that is fair and can be trusted could do good, this is just not it. Perhaps something as \"simple\" as a \"Send crash report\" button if Audacity crashes.\r\n\r\nCrash reports are indeed a form of analytics and telemetry, so I hope everyone fighting against any form of analytics and telemetry are willing to debug based on hearsay... =||= > > The right amount of telemetry tracked in a manner that is fair and can be trusted could do good, this is just not it. Perhaps something as \"simple\" as a \"Send crash report\" button if Audacity crashes.\r\n> \r\n> Crash reports are indeed a form of analytics and telemetry, so I hope everyone fighting against any form of analytics and telemetry are willing to debug based on hearsay...\r\n\r\nYou can use coredumps for when an application crashes and save them locally.\r\nIt is then up to the user to upload those, or not.\r\n\r\nUsers can have a choice if we give it to them.\r\n =||= Mentioned this on a twitter post from a linux mag asking tantacrul to give an interview.\r\nGot blocked.\r\n![image](https://user-images.githubusercontent.com/1571683/117588317-dd9d2580-b122-11eb-9df7-a7441f380b07.png)\r\n =||= @falkTX \r\n> You can use coredumps for when an application crashes and save them locally.\r\n> It is then up to the user to upload those, or not.\r\n> \r\n> Users can have a choice if we give it to them.\r\n\r\nThat's why I like the idea of an extension system...it gives the user the choice... Kind of the ultimate \"opt-in\" - it doesn't exist until the user adds it...  If they decide they don't want it, they remove it. =||= @Tantacrul why did you ban users from your official discord when they were trying to have a conversation with the maintainers?\r\n\r\nI'm seeing a pattern here.\r\n\r\n---\r\n\r\n![image](https://user-images.githubusercontent.com/885648/117588494-ec380c80-b123-11eb-8a32-3285c1879b88.png)\r\n\r\nYou should probably not speak this way to an army of people who are upset with you for violating their privacy. Good thing Github edits are public, though.\r\n\r\nEDIT: he deleted the comment, lol. [Saved that too.](https://github.com/SndChaser/AudacityTelemetryComments/issues/2#issuecomment-835905864). =||= > \r\n> \r\n> > Mentioned this on a twitter post from a linux mag asking tantacrul to give an interview.\r\n> > Got blocked.\r\n> \r\n> Ha. Yeah, you were following all my conversations and posting the same nonsense on all of them. I felt like not having to put up with that so I blocked you.\r\n\r\nI posted two comments.\r\nNot like I spewed conspiracy theory or spammed. =||= As a contributor to a project with such a large audience Tantacrul needs to have better developed soft skills.\r\n\r\nDefinitely this situation is a stressful one, but stress management is a helpful feat still. Crucial even.\r\n\r\nOtherwise we can't really completely trust someone this unstable. =||= I opened a new issue to discuss how to clean up Audacity's dependency management: #853.\r\n\r\nI think everything that needs to be said about this issue has been said already. I suggest locking the discussion now. =||= @be-ing Consider x-posting to the fork. https://github.com/KXStudio/audacity\r\n\r\nEDIT: Issues aren't enabled yet actually - @falkTX can you fix that? =||= > As a contributor to a project with such a large audience Tantacrul needs to have better developed soft skills.\r\n> \r\n> Definitely this situation is a stressful one, but stress management is a helpful feat still. Crucial even.\r\n> \r\n> Otherwise we can't really completely trust someone this unstable.\r\n\r\nEveryone needs to back down.  This PR is closed.  It's back to the drawing board to see where things go...  Muse Group now have a chance to address the concerns that have been brought up in this PR.  There is no reason to target anyone on the dev team. =||= > Definitely this situation is a stressful one, but stress management is a helpful feat still. Crucial even.\r\n\r\nI\u2019d even say Tantacrucial!\r\n(Sorry)\r\n\r\n\r\nOn a serious note, I also think that telemetry should be implemented as an optional plugin or available only in a separate build for enthusiasts. Matters like supporting old OSX systems can be resolved with a poll. =||= This whole \"muse group\" situation is really sketchy in my opinion. =||= I'm glad the maintainers have closed this for now. I do hope they come to their senses and abandon this idea completely. There is no need for tracking or a network stack in an audio editor. =||= Incidentally, I'm doing what I can to make sure each of the community's requests are being heard but bear in mind that although I may be heading up the design and prioritisation of features, I'm not all-powerful and the solutions are not in my gift to give. That goes for the creator of this PR too. Best I can do is try to push for an outcome that will please as many people as possible. =||= > Best I can do is try to push for an outcome that will please as many people as possible.\r\n\r\nThe PR votes and this comment thread seem to have made what that would be pretty clear. Thanks for the follow-up.\r\n\r\nEdit: @Tantacrul, I will encourage you to clarify what your role on the Audacity project is, though. Your YouTube announcement video title declares you to be \"in charge of Audacity\", and your Twitter bio says you are \"the head of MuseScore and Audacity\". Both suggest that if you decided there should not be telemetry or a network layer added to Audacity, it would indeed be a gift you could give.\r\n =||= > a concrete plan will be published soon\r\n\r\nWhere will this be published? The Audacity forum (if so, in what category)? In a new GitHub Issue? One of the email lists? =||= This is closed, but this does _**NOT**_ mean that the Muse Group will not add telemetry. Tantacrul requested telemetry in the Muse Group Discord server (Discord? FOSS? Doesn't match at all!) so I do not believe they will give up. =||= @foreverxml fwiw Discord is super common even among FOSS communities. It has a lot of issues, including its nature, being so vehemently proprietary that they've even spoken against client modifications like BetterDiscord that are based on the code of the official application, but hey, we're on GitHub, which is also almost completely proprietary.\r\n\r\nDiscord's a really useful place to get friends together and build communities and communicate, whatever its nature in licensing, and it's a perfectly valid choice for people who want half-decent, sustainably scaling chat, so I think that picking on it is a little undue.\r\n\r\nThat said, yeah, @Tantacrul definitely needs to offer a statement of clarification on this. The whole situation feels more than a little uncomfortable. =||= I would also like a full explanation given ideally to the press, perhaps the Register for example, of:\r\n- the origins of Muse Group, a for-profit corporation in Cyprus\r\n- who really are their primary shareholders\r\n- how they bought the trademark \"audacity\" and\r\n- what happened between buying the trademark at end of Dec 2020 and announcing this at April 2021. =||= > > Best I can do is try to push for an outcome that will please as many people as possible.\r\n> \r\n> The PR votes and this comment thread seem to have made what that would be pretty clear. Thanks for the follow-up.\r\n> \r\n> Edit: @Tantacrul, I will encourage you to clarify what your roll on the Audacity project is, though. Your YouTube announcement video title declares you to be \"in charge of Audacity\", and your Twitter bio says you are \"the head of MuseScore and Audacity\". Both suggest that if you decided there should not be telemetry or a network layer added to Audacity, it would indeed be a gift you could give.\r\n\r\nSure. I propose the roadmap and many of the features (with help from others on our team) and I work with the community who collaborate on these things in addition to their own goals. I've been doing the same thing for MuseScore for a while now. However, because I'm in charge of Audacity and MuseScore, this does not mean that I run Muse. I work for Muse. Regarding Telemetry: this is a requirement that Muse have for every app in their ecosystem so they can determine how the changes we make are performing. I did not (as someone said above) 'request' it.\r\n\r\nNow that this telemetry thing has kicked off, I'm trying my best to achieve a resolution that annoys as few people as possible. Then I want to get back to the roadmap so everyone can see what things we are planning and have the opportunity to comment on them. All I'm interested in is working on the design and feature set of Audacity.\r\n\r\nSomeone else is asking why we only announced recently, having started in late November. Answer is easy: transitions take time. A team needed to be hired. Skills needed to be learned. We needed to get to know the community and we all had to do a lot of research. Also... that announcement video took about a month to write and edit too.\r\n\r\nI know I'm not answering every question people have asked here. I feel it's best to first get to the telemetry announcement as fast as possible and take it from there. The announcement _should_ happen this week. =||= Just because Muse owns the name of Audacity does not mean the community will have to automatically follow along, especially for self imposed nonsense like \"this is a requirement that Muse have for every app in their ecosystem so they can determine how the changes we make are performing.\" \r\n\r\nI hope distro maintainers make the right choice and patch out or use a fork getting rid of this nonsense. =||= > Regarding Telemetry: this is a requirement that Muse have for every app in their ecosystem so they can determine how the changes we make are performing. I did not (as someone said above) 'request' it.\r\n\r\nAnd here we arrive at why all this got started: this was requested by Muse Group.\r\n\r\nHowever, it looks like Muse Group may have to come to understand that the community that uses Audacity does not want this.\r\n\r\nPerhaps they'll have to arrive at a compromise? Or simply back down, in this case. =||= @Tantacrul\r\n\r\n> Regarding Telemetry: this is a requirement that Muse have for every app in their ecosystem so they can determine how the changes we make are performing. I did not (as someone said above) 'request' it.\r\n\r\n> Now that this telemetry thing has kicked off, I'm trying my best to achieve a resolution that annoys as few people as possible. \r\n\r\nI tried earlier to make certain that the depth of this issue is understand from the perspective of the open source community by providing a set of cases.  I'm afraid that document got buried in the landslide of comments on here.  Please have a read through the copy here: https://github.com/SndChaser/AudacityTelemetryComments/blob/main/DataCollectionVsTelemetry.md\r\n\r\nIt's a long document, nearly 10 pages, and yet it really on scratches the surface of how divisive the topic of telemetry is in the open source community.  I understand that Muse Group's primary applications so far have been on mobile platforms, and non-open source.  The concept of how to work with the open source community at large is a very foreign concept (I am, in fact, surprised things didn't blow up this way with the MuseScore community).\r\n\r\nMy best suggestion to the Muse Group is to slow things down...  Make small changes first, go through the backlog of issues, PR's and bugs.... Tackle those first while doing research to understand how to tackle larger changes in a way that will work for the community at large.\r\n =||= > @Tantacrul\r\n> \r\n> > Regarding Telemetry: this is a requirement that Muse have for every app in their ecosystem so they can determine how the changes we make are performing. I did not (as someone said above) 'request' it.\r\n> \r\n> > Now that this telemetry thing has kicked off, I'm trying my best to achieve a resolution that annoys as few people as possible.\r\n> \r\n> I tried earlier to make certain that the depth of this issue is understand from the perspective of the open source community by providing a set of cases. I'm afraid that document got buried in the landslide of comments on here. Please have a read through the copy here: https://github.com/SndChaser/AudacityTelemetryComments/blob/main/DataCollectionVsTelemetry.md\r\n> \r\n> It's a long document, nearly 10 pages, and yet it really on scratches the surface of how divisive the topic of telemetry is in the open source community. I understand that Muse Group's primary applications so far have been on mobile platforms, and non-open source. The concept of how to work with the open source community at large is a very foreign concept (I am, in fact, surprised things didn't blow up this way with the MuseScore community).\r\n> \r\n> My best suggestion to the Muse Group is to slow things down... Make small changes first, go through the backlog of issues, PR's and bugs.... Tackle those first while doing research to understand how to tackle larger changes in a way that will work for the community at large.\r\n\r\nWow. Thanks!\r\n\r\nI apologise but I did miss this. Incidentally, there was some anger on the MuseScore forums too although we actually announced it upfront, which I feel came across as much more transparent. In this instance, a communication error led to a first-pass PR being made public which wrong-footed us all and prevented us from announcing it first to gauge reactions. It looked bad when it was discovered like it was. =||= > Regarding Telemetry: this is a requirement that Muse have for every app in their ecosystem so they can determine how the changes we make are performing. I did not (as someone said above) 'request' it.\r\n\r\nHoo-boy, that's not going to appease anyone at all. But thanks for the response, @Tantacrul. =||= @Tantacrul\r\n> I apologise but I did miss this. Incidentally, there was some anger on the MuseScore forums too although we actually announced it upfront, which I feel came across as much more transparent. In this instance, a communication error led to a first-pass PR being made public which wrong-footed us all and prevented us from announcing it first to gauge reactions. It looked bad when it was discovered like it was.\r\n\r\nNo apology necessary, I figured it might have been buried, or I posted it when you were (possibly) sleeping. ;)\r\n\r\nYes, clear communication is always a good first step.  IMO - there will always be noise around a topic this controversial, it's something that really should be expected. That puts the onus on the proposers to really approach the topic with serious and deliberate forethought.  That's something that didn't happen in this case. =||= While I'm sad that you have succumbed to the telemetry FUD vocal-sheeple-crowd that would not get the best feature prioritised, I wonder if anyone has recommendations (on unrelated note) to allow only whitelisted apps to connect to the network?\t  =||= I'll bring in a quote from [someone who might know a thing or two about managing a huge FOSS project](https://www.tag1consulting.com/blog/interview-linus-torvalds-open-source-and-beyond-part-2) (emphasis mine):\r\n> The other big thing is that you have to be open. And I mean that in multiple ways. It's really easy to create some kind of \"clique\" of people, where you have an inner cabal that discusses things in private, and then you see really only the end result (or the fringe work) in the open, because all the important stuff happened inside a company or within a core group of people, and outsiders have a hard time breaking into that clique, and often have a hard time even seeing what is going on in that core group because it was so private and exclusive.\r\n> It's one of the reasons I really like open mailing lists. Not some \"by invitation\" list. Not something you even have to sign up to participate in. Really open. And pretty much all the development discussions should be there.\r\n> And finally, I think \"open\" is important in the sense of honesty. You don't want to play politics behind peoples back. *Be open about your motivations, be open about why you do things and what you do.* You don't have to like everybody you work with, and they don't have to like you, but *if people are open about what they are aiming for and what they do*, you don't necessarily have to always be best buddies - the most important thing is that you can trust each other.\r\n> Because trust matters. A lot.\r\n\r\nThere has been a lack of transparency about what exactly the motivations for introducing telemetry are. If you are open about what exactly you are trying to accomplish, and start the discussion there rather than starting with 5500 lines of code already written, we may be able to help you figure out a way to do it in a way that is acceptable to the community. The caveat is that if your goals are directly opposed to the community's interests, we'd have to go our separate ways. So let's start with identifying what are the goals that might be accomplished using telemetry. From there, we can discuss the least invasive way to do that. That's how you can build trust. You may be surprised how much you can learn with a more focused approach to collecting data. It may be easier to find the needles when the haystack isn't so big. =||= @Tantacrul\r\n\r\nHopefully you are still lurking...  An issue that really should be worked on before telemetry is even approached again is de-vendoring the libraries that are being included in Audacity.  This is actually a massive issue....even bigger than I realized until a few minutes ago.\r\n\r\nCurrently there are only three of the top 100 Linux distributions shipping Audacity 3.x (Fedora, Mageia and OpenSUSE).  There are literally 97 other distributions out there that are still shipping Audacity 2.x (including: Arch, Debian, Ubuntu, Manjaro, and Mint).  Even if telemetry had been added it would have been irrelevant in the Linux world because the vast majority of the distributions can't ship the 3.x releases as they are because there are issues building it.\r\n\r\nThe reason is because Audacity is relying on specific libraries that they are bundling with the application, instead of working with the current releases of those libraries.  This mistake was going to be made again in this PR by vendoring libcurl as part of the implementation for the network-manager layer.\r\n\r\nThe likely reason this happened is because many of these libraries aren't natively part of Windows and MacOS.  So, the vendoring approach was taken in order to handle those platforms.\r\n\r\nThe way to fix this isn't going to be easy... The approach that would likely be the best would be to (a) de-vendor the libraries, (b) modify the build system to produce Flatpaks versions for MacOS and Windows.  This way the Flatpaks can include the libraries (and the most current version of them), while Linux versions can build against the native libraries. (At least this is my initial idea for fixing it -- others may have better ideas.)\r\n\r\n =||= @SndChaser please take the discussion about devendoring dependencies to #853. =||= > I apologise but I did miss this.\r\n\r\nNot to stir the pot, but @SndChaser's comment was posted directly in the Audacity discord group within minutes of you interacting with the very same channel.\r\n\r\nGoing to be blunt: I don't believe you. I think you saw it and either chose not to read it, or you're trying to save face.\r\n\r\nOf course nobody can read minds, so this is pure speculation. Either way, none of this is sitting right with me. It really feels like Muse is trying to save face here whilst still trying to keep ulterior motives under wraps.\r\n\r\nThe trust is permanently gone. =||= I will emphasize that Muse is in no position to \"require\" telemetry in a free software program, as all users are empowered to take and modify this software as we see fit, by the GNU GPLv2. Therefore, if we do not want telemetry, there will be no telemetry =||= > > I would suggest to rename the PR as _Make possible for users to help the project by contributing anonymous usage if they want to_, this way the answers of people responding _I'm against_ with epidermal reaction like if they were on twitter would look funny at best.\r\n> \r\n> Please read the discussion, it has already been established that the information being sent is not anonymous.\r\n\r\n@mcilrain I'm not sure many people reacting there are knowing how GitHub works. This is a pull request, and then, a draft. If the data was not as anonymous as the stated goal said, then what people must ask for the proposed draft to be rewritten, or submit proposed change to fix the issue. Some people submitted suggestions indeed. I'm all concerned by those google and other things I've seen, but eh, that's a PR, the concern would be if that gets merged unmodified, not if the details of the implementation are made open to discussion\u2026\r\n\r\nThere are clearly communication mistakes and problematic things in the former proposed draft, but here we are not on twitter and things are expected to be discussed politely and _edited_\u2026 We're not there to do crowded harassment and satisfy our own ego building-up our feeling of being better at judging this or that.\r\n\r\nWe're there to _help_ people making good software, including how to properly protect user data. That's because we are expected to _help_ the place is open to discussion. If pull-request threads were not for helping, GitHub would just be another social emotion dealing platform. =||= @illwieckz please don't jump in at the end of a long contentious discussion ignoring even the most recent comments. =||= @Be-ing this is indeed addressing recent comments [like the one by asdf8dfafjk](https://github.com/audacity/audacity/pull/835#issuecomment-836093515) one hour ago: by reminding this is GitHub, it also means this is even not a place to ask for firewall recommendations\u2026 =||= @illwieckz this being GitHub has no bearing on the reality that the new maintainers of the project have no reason not to accept this PR outside of the outcry that is being raised, seeing as the whole telemetry package is being added on their command. \r\n\r\nIf the acceptance or rejection of this PR was actually based on the soundness of its content in relation to creating good software, it would have been rejected fast enough to not receive any comments at all.\r\n\r\nAnd telemetry has now been indicated, by @Tantacrul, to be a required component according to Muse. This means that unless they choose to listen due to this outcry, the telemetry will be added, which invalidates any claim you are making about GitHub's functionality being relevant to the situation. =||= > this being GitHub has no bearing on the reality that the new maintainers of the project have no reason not to accept this PR outside of the outcry that is being raised, seeing as the whole telemetry package is being added on their command.\r\n\r\nI'm aware of this. I have read many of the comment there. But that's weird, people are acting like if they were on facebook, the best example being @Be-ing just downvoting comments because of not being happy when seeing this or that comment he probably didn't expected, despite I just [confirm what he said](https://github.com/audacity/audacity/pull/835#issuecomment-836105118) 40 minute ago and my comments were an addition on that topic so we are just agreeing\u2026\r\n\r\nThis is not a place for the concern of being happy or unhappy. =||= @illwieckz I think you make a fundamental misunderstanding about the nature of GitHub, and that of software development as well. Not all decisions that go into creating software are technical, they are often done on the basis of personal preference, intentional constraints, morals, ethics, and even financial interest.\r\n\r\nAt the end of the day, every tool humankind uses is an attempt to gain the means to happiness. That a modification to one such tool causes this level of unhappiness, no matter what the underlying reason may be, is plenty enough to take such a minimally intrusive action as making a comment on a PR on GitHub.\r\n\r\nYou're right, this isn't Facebook or Twitter. But that does not mean that projects are not driven by human goals, and therefore human emotions. =||= I don't think a philosophical discussion about the nature of GitHub is helping anything right now. =||= > I think you make a fundamental misunderstanding about the nature of GitHub, and that of software development as well.  [\u2026] You're right, this isn't Facebook or Twitter. But that does not mean that projects are not driven by human goals, and therefore human emotions.\r\n\r\nI know very well what you've said, [I even do conferences on those topics](https://unvanquished.net/building-a-community-as-a-service/) and [I know a bit about software development](https://github.com/illwieckz). It looks like most of the reactions about what I said are more focused on what people believe about me and less about what I said\u2026 I'm not there to discuss that. I have said what I assumed was useful to say in the matter of making this a better place for making useful contributions on the topic, not to start a thread about the nature of my own feelings, that was pretty the contrary, I wanted to lower the effect of feelings on the discussion. It looks like I can't help lowering the biases induced by feelings, then see you again. =||= I don't think that there is anything irrational or emotional in not wanting software to send user data to Google and Yandex. I think this is a matter of morality. It is immoral to send user data to exploitative ad networks-- even if they don't realize that it is a bad idea to click a \"yes\" button to doing so; as you are then attempting to exploit their trust in you. =||= The Audacity maintainers have already agreed to not send data from Audacity users to Google Analytics or Yandex. So I don't think discussing that point any further is helpful. =||= The fact is, that they currently send data from Musescore users to ad networks. =||= So, what about renaming this PR the same way the PR description was edited? This would help lowering the misunderstanding from outside people to better focus on topic.\r\n\r\nI suggested to rename to something like \u201dMake possible for users to help the project by contributing anonymous usage if they want to\u201d instead of \u201cBasic telemetry for the audacity\u201d. This would help to make the thread constructive.\r\n\r\nAnd if such suggested title doesn't fit well what is done, it means what is left to do is known, which is constructive as well. =||= The data sent is not anonymous, by the legal definition in GDPR. =||= Okay I think it's time to lock this discussion. Nothing is being added anymore that hasn't been repeated many times already. =||= > 1. Telemetry is **strictly optional and disabled by default**. No data is shared unless you choose to opt-in and enable telemetry.\r\n\r\nAwesome! Opt-in is the right way to do telemetry.\r\n\r\n> ![image](https://user-images.githubusercontent.com/2660628/117440186-6312b100-af3c-11eb-884e-3db660a0cc1f.png)\r\n\r\nThis is bad. Anyone who worked in IT for a reasonable amount of time knows how people tend to click highlighted buttons. Telemetry should be neutral, so don't highlight any button.\r\n\r\n> 1. Audacity is widely used across several platforms, but we have no information on the application stability.\r\n\r\nThis is poorly phrased. The first half mentions usage by platform, while the second half mentions stability. Did you mean \"stability by platform\", so based on the combination of usage and stability you know how to set priorities in fixing issues?\r\n\r\n> 2. It is difficult for us to estimate the size of the user base accurately.\r\n\r\nThis is bad. Opt-in telemetry will never tell you anything accurate about the true size of the user base.\r\n\r\n> 3. We need a way to make informed decisions about which OS versions to support. For example, can we raise the minimum version of the macOS to 10.10 to update the wxWidgets to the latest version?\r\n\r\nNice, this is a valid reason for telemetry. At the same time, you still can't tell if the collected telemetry is representative. This is why doing telemetry right is critical if you want more data - and it's still not fleshed out properly.\r\n\r\n> 4. We have a known issue with the new file format introduced in Audacity 3.0. We found it with the great help of the community members on our forum. However, there is no way for us to estimate the impact of these issues on users. Is it just a random case? Do we need to rush the work on the recovery tool or help the users one by one? Or do we need to rethink the file format to make it safer and more easily recoverable?\r\n\r\nThis looks like the wrong approach because new features for version X don't warrant the effort of adding telemetry. They're supposed to be tested by the community, especially by those who can provide quality feedback.\r\n\r\n> 1. We do not incorporate cross-site tracking, limiting the ability to identify the user by both Google and Yandex.\r\n\r\nWhy use these in the first place? An opt-in mechanism will limit the number of reports from the get go, because most people don't want telemetry features enabled. Why not start a telemetry service of your own, and see how it scales?\r\n\r\n> 2. Yandex would only receive the \u201capplication opened\u201d event to help us estimate the size of the user base.\r\n> 3. Google would only receive:\r\n>    a. Session start and end events;\r\n>    b. Errors for debugging;\r\n>    c. File formats used for import and export;\r\n>    d. OS and Audacity versions;\r\n>    e. Use of effects, generators, and analysis tools to prioritize future improvements;\r\n\r\nThese are fundamentally wrong. If someone enables telemetry and chooses Yandex, it means you only get the \"application opened\" event, which is useless in determining anything useful about Audacity's performance, stability and environment (OS). This makes it look like you want to determine market share more than anything.\r\n\r\n> 4. We will consider replacing Google and Yandex with another service if we find one that fulfills our requirements - thanks for the suggestions and keep them coming.\r\n\r\nThis is completely wrong. Surely you are aware that feeding data into data-hogging companies is unacceptable for a lot of people. The point of telemetry should be to improve the development process, so if you want to maximize the amount of useful data to enable that, make the right choice from the beginning. Why complicate things by working with two different platforms, then migrate to another? It takes time and effort to handle those, so do that for your own service, which will also make more people happy and forthcoming with the telemetry feature.\r\n =||= For UX issues such as a UI where nobody can find a specific tool, telemetry won't tell you a single damn thing unless you're doing extremely invasive eye- or mouse-tracking, and frankly, I'm not even sure if robust libraries exist for such a thing on anything that isn't an Electron app. It will not actually help anything insofar as UX improvements any more than asking for feedback or doing proper first-time user testing. For crashes and bugs, there's always the classic crash reporter that so many apps already use.\r\n\r\nYou know what telemetry *is* useful for, though? Market share. I guarantee that Ultimate Guitar wants telemetry because it makes them look good to potential investors by demonstrating how much of a \"market share\" their new \"brand\" (Audacity) has, and how much time people spend using the app. Anyone who has actually worked with telemetry data knows this, including myself. In a very distant second, it can tell you if anyone is actually using a niche platform and if it's worth supporting at all - but again, that's mostly a side-effect of knowing your market share rather than a direct benefit.\r\n\r\nLeave the telemetry at the door, apologize, and hope the FOSS community forgives the project over the next year. Maybe even consider removing telemetry from MuseScore as a sign of good-will.\r\n\r\nIf _not adding telemetry_ is unacceptable, then we can effectively consider this app \"free as in beer\" rather than \"free as in freedom\" as it's clear that this project no longer belongs to the community with a company shepherding it, but to a business more interested in taking over projects and talking down to the community. More of a Google than a Linux Foundation. =||= > So, what about renaming this PR the same way the PR description was edited? This would help lowering the misunderstanding from outside people to better focus on topic.\r\n> \r\n> I suggested to rename to something like \u201dMake possible for users to help the project by contributing anonymous usage if they want to\u201d instead of \u201cBasic telemetry for the audacity\u201d. This would help to make the thread constructive.\r\n> \r\n> And if such suggested title doesn't fit well what is done, it means what is left to do is known, which is constructive as well.\r\n\r\nNo because the hundreds of comments and thousands of downvotes belong to this PR as it was posed (and even before its text was made \"more nice\"). The PR is closed. Start over with a new discussion of the planned changes. =||= The actual edited PR description also quotes the original PR description, nothing prevents the poster to do the same with the title.\r\n\r\nAnyway, you're right, this PR is closed. So my PR title suggestion is now more about the title of the PR to be created after this one, and such talk must happen before the creation of the next PR, obviously.\r\n\r\nFrom such clear statement about intentions (and not about means only like the initial PR title) it becomes possible de produce both a roadmap and ways to control the objectives are met. =||= > Regarding Telemetry: this is a requirement that Muse have for every app in their ecosystem so they can determine how the changes we make are performing. I did not (as someone said above) 'request' it.\r\n\r\n-- [Tantacrul](https://github.com/audacity/audacity/pull/835#issuecomment-836069326)\r\n\r\n> For UX issues such as a UI where nobody can find a specific tool, telemetry won't tell you a single damn thing unless you're doing extremely invasive eye- or mouse-tracking [...]. You know what telemetry _is_ useful for, though? Market share. I guarantee that Ultimate Guitar wants telemetry because it makes them look good to potential investors by demonstrating how much of a \"market share\" their new \"brand\" (Audacity) has, and how much time people spend using the app.\r\n\r\n -- [StarWitch](https://github.com/audacity/audacity/pull/835#issuecomment-836200904)\r\n\r\n@StarWitch \r\nThank you very much, this hits the nail on the head.\r\n\r\n@Tantacrul \r\nPlease see the above. That's what a lot of people here assume, simply because it logically makes sense. If we just look at the [Muse Group's product](https://mu.se/muse-products) page, we can see they indeed do love to boast numbers. This is something you _have_ to be open about, even if that means the community will disagree. Further, one huge question that is still on the table is _how_ Muse Group has even \"acquired\" Audacity, a free and open source project. Are the core maintainers, or some of them, now on Muse Group's pay roll? Who exactly is Muse Group and what is their vision for Audacity? What rights and power does Muse Group have over Audacity, exactly? All of this is confusing and should be cleared up - it is _directly_ relevant to the discussion at hand. For example, what if Muse Group won't back down about tracking, but the community won't either? \r\n\r\n\r\n =||= > Further, one huge question that is still on the table is how Muse Group has even \"acquired\" Audacity, a free and open source project. Are the core maintainers, or some of them, now on Muse Group's pay roll? Who exactly is Muse Group and what is their vision for Audacity? What rights and power does Muse Group have over Audacity, exactly? All of this is confusing and should be cleared up - it is directly relevant to the discussion at hand. For example, what if Muse Group won't back down about tracking, but the community won't either?\r\n>\r\nThis. Exactly how does one \"acquire\" a GPL project? Because from my understanding, it belongs to the contributors and only to the contributors. =||= > Further, one huge question that is still on the table is how Muse Group has even \"acquired\" Audacity, a free and open source project. Are the core maintainers, or some of them, now on Muse Group's pay roll? Who exactly is Muse Group and what is their vision for Audacity?\r\n\r\nThis is one of the most important questions about the future of Audacity.\r\n\r\nFor example, in 2010 the owner of the Nexuiz name sold it to a company, but the actual developers of the Nexuiz open source game were in fact contributors from the community and not involved in the deal. The new owner of the Nexuiz name released a game in 2012\u2026 without success, even Xbox 360 servers were shut down in 2013\u2026 Those who were developers of the original Nexuiz game before the selling of the name had to continue the development under another name ([Xonotic](https://xonotic.org/)) since the name was acquired by the other company. But while Xonotic is still more popular than the new Nexuiz the name transfer deal was about, it never recovered its visibility and reputation (even the French Wikipedia deleted the Xonotic page [three times](https://fr.wikipedia.org/wiki/Xonotic) because of lack of visibility). I even met people who mistakenly believed Xonotic was the non-community project\u2026\r\n\r\nAnother story with similar effects even if the turn of events was different: old time contributors to OpenOffice had to pick a new name ([LibreOffice](https://www.libreoffice.org/)) when Oracle acquired the name in 2010 as part of Sun's catalog without interest for the development of the software itself. 10 years later, I've heard that there is still people to download outdated OpenOffice, as much as the ones downloading LibreOffice. I even met people not knowing about LibreOffice this year.\r\n\r\nSo, someone got the Audacity name, but what about the community?\r\n\r\nI'm not in favor of a fork, because if Muse Group owns the Audacity name, the fork will never recover the decade old reputation of Audacity and recognition, there may even be people deleting the pages about the community fork every three years on third-party website like Wikipedia because of lack of reputation (so, chicken and egg problem). And the Audacity-named software would just lose all the contributions, owning the name of a dead project, like owning dead Nexuiz and dead OpenOffice.\r\n\r\nThis would be bad for Muse Group, bad for Audacity developers, bad for Audacity users. A fork would be bad for everyone and it would hurt the world for decades.\r\n\r\nSo, the real problem is, how to make Muse Group and Audacity community reconcile themselves. Maybe Muse Group may give up on this or that data that is not worth the loose of the contributors and users for example, and well, as people we may help Muse Group to know what must not be done and what is best to do. For sure I would not recommend users to give up on data protection. It's often better to know less about users but to keep the users.\r\n\r\nOn the other hand there is probably a place for an opt-out way to contribute some anonymous usage data to help making the software better, but yes that must be opt-out and truly anonymous. =||= > This. Exactly how does one \"acquire\" a GPL project? Because from my understanding, it belongs to the contributors and only to the contributors.\r\n\r\n> This is one of the most important questions about the future of Audacity.\r\n\r\nI agree and have therefore opened an [issue asking for clarification on the acquisition](https://github.com/audacity/audacity/issues/855). That should be a better place to discuss this topic than a closed PR for a tracking feature.\r\n =||= > 10 years later, I've heard that there is still people to download outdated OpenOffice, as much as the ones downloading LibreOffice. I even met people not knowing about OpenOffice this year.\r\n\r\nUrm, outdated? Personally I prefer Libreoffice, but after oracle screwed it up for a few years it went to Apache foundation, most recent stable release: 4.1.9 (February 7, 2021; 2 months ago) =||= How to \"acquire\" an open source project: buy out all the people who have\ncommit access\n\nOn Mon, May 10, 2021, 5:33 AM Julien ***@***.***> wrote:\n\n> This. Exactly how does one \"acquire\" a GPL project? Because from my\n> understanding, it belongs to the contributors and only to the contributors.\n>\n> This is one of the most important questions about the future of Audacity.\n>\n> I agree and have therefore opened an issue asking for clarification on\n> the acquisition <https://github.com/audacity/audacity/issues/855>. That\n> should be a better place to discuss this topic than a closed PR for a\n> tracking feature.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/pull/835#issuecomment-836466532>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AB46VXQXSRXMSKSI6BH4JKLTM6R6PANCNFSM44C5SLTA>\n> .\n>\n =||= OK this PR is closed. But its link has been plastered all over the internet. I suggest to the devs this thread be locked. As I see it being a hotbed for drama for the foreseeable future. =||= I would like to highlight one post by @SndChaser which might also have been lost to the torrent of comments:\r\n\r\nhttps://github.com/audacity/audacity/pull/835#issuecomment-835897610\r\n\r\nThe suggestion to make this not a compile-time decision but a plugin makes this much more OK for me. I am on the \"absolutely not tracking period\" train, and I think that that suggestion above can suit _both things at the same time_. The main Codebase would not be doing any networking. But people (and not just developers!) could opt-in to tracking very transparently.\r\n\r\nI also think that crash reporting should be equally decoupled from the main codebase, if technically possible.\r\n =||= I haven't read the whole thread, but @crsib have you considered using other analytics solutions that don't sell user data? There are various such existing solutions. =||= @domsson Wow, I hadn't actually seen that site. It does not surprise me at all that download numbers and market share and put above the actual features of the apps. It is very clear where their priorities lie just from this, and their main site only confirms this.\n\nAudacity may very well be in the slaughtering house now.\n\nAnd please, core contributors, don't paint me or others in this thread as some kind of \"outsiders\" to Audacity. I've personally casually used it as a tool for over a decade. For you to turn around and tell your userbase that their opinions don't matter is extremely damning concerning the direction of this whole conversation and the FOSS community in general. =||= I have used audacity for decades and am very disappointed. =||= OMG, this is the most hilarious virtue signaling thread I have seen in my entire life. Look at the bold statement making basement dwelling famiu. \r\n\r\n> This. Exactly how does one \"acquire\" a GPL project? Because from my understanding, it belongs to the contributors and only to the contributors.\r\n\r\nEveryone, lest  this be forgotten, it's important to know  that famiu has, you guessed, exactly 0 commits. https://github.com/audacity/audacity/pulls/famiu. \r\n\r\nI hope all toxic losers who are in this thread (I guess all telemetry FUD spreaders) are losers like him.  =||= Not all contributions are code, you know? Also, GPL/AGPL and pretty much any other license is not about developers. It's about giving the general population rights. Look for the \"four basic freedoms\", if you need clarification. =||= > I have used audacity for decades and am very disappointed.\r\n\r\nThis PR was rejected, before your comment, what are you disappointed about? =||= can this just be locked already? there's not much else anyone can really contribute to the discussion... =||= @asdf8dfafjk\r\n\r\n> Everyone, lest this be forgotten, it's important to know that xxxx has, you guessed, exactly 0 commits.\r\n\r\nYou talked about commits on this project, but some people there only have like a handful of commits in a single repo and a handful of issues created on the whole GitHub over 10 years, others only have code related to school evaluations\u2026 And may have said others do not understand how GitHub works or how software development works\u2026\r\n\r\nThis is what happens when people confuses GitHub with Twitter. =||= > \r\n> \r\n> OMG, this is the most hilarious virtue signaling thread I have seen in my entire life. Look at the bold statement making basement dwelling famiu.\r\n> \r\n> > This. Exactly how does one \"acquire\" a GPL project? Because from my understanding, it belongs to the contributors and only to the contributors.\r\n> \r\n> Everyone, lest this be forgotten, it's important to know that famiu has, you guessed, exactly 0 commits. https://github.com/audacity/audacity/pulls/famiu.\r\n> \r\n> I hope all toxic losers who are in this thread (I guess all telemetry FUD spreaders) are losers like him.\r\n\r\n@IGBC is that you drunk again? :D\r\n(https://github.com/audacity/audacity/pull/856#issuecomment-836856813)\r\n\r\nI had a good laugh I have to say :))\r\n =||= @Martin-Eckleben  Nah I only have the one account, that one wasn't me. Besides I am _anti_ tracking @asdf8dfafjk is firmly pro. =||= I'm disappointed I wasn't the target of a clearly troll personal attack on my commit history.  =||= > OMG, this is the most hilarious virtue signaling thread I have seen in my entire life. Look at the bold statement making basement dwelling famiu.\r\n> \r\n> > This. Exactly how does one \"acquire\" a GPL project? Because from my understanding, it belongs to the contributors and only to the contributors.\r\n> \r\n> Everyone, lest this be forgotten, it's important to know that famiu has, you guessed, exactly 0 commits. https://github.com/audacity/audacity/pulls/famiu.\r\n> \r\n> I hope all toxic losers who are in this thread (I guess all telemetry FUD spreaders) are losers like him.\r\n\r\nOh wow. it seems nobody hugged you while you were growing up... That's just sad, buddy. It would be nice though if you kept that shitty personality of yours to yourself, that would save yourself a lot of embarassment =||= > OMG, this is the most hilarious virtue signaling thread I have seen in my entire life. Look at the bold statement making basement dwelling famiu.\r\n> \r\n> > This. Exactly how does one \"acquire\" a GPL project? Because from my understanding, it belongs to the contributors and only to the contributors.\r\n> \r\n> Everyone, lest this be forgotten, it's important to know that famiu has, you guessed, exactly 0 commits. https://github.com/audacity/audacity/pulls/famiu\r\n> \r\n> I hope all toxic losers who are in this thread (I guess all telemetry FUD spreaders) are losers like him.\r\n\r\nOh wow! You work for Microsoft or something? Because there's reason to worry about \"annonymous\" telemetry (hint: not annonymous). Also, please keep your horrible personality to yourself. This is GitHub, and not Twitter. =||= > @asdf8dfafjk\r\n> \r\n> > Everyone, lest this be forgotten, it's important to know that xxxx has, you guessed, exactly 0 commits.\r\n> \r\n> You talked about commits on this project, but some people there only have like a handful of commits in a single repo and a handful of issues created on the whole GitHub over 10 years, others only have code related to school evaluations\u2026 And may have said others do not understand how GitHub works or how software development works\u2026\r\n> \r\n> This is what happens when people confuses GitHub with Twitter.\r\n\r\nOr moved to GitLab after Github got bought. =||= Yep, time to close this. But will it be closed? =||= I don't see why there is so much backslash. We have this on browsers, which do process much more private informations than an audio editor.\r\n\r\nIt's opt-in anyway. If you don't want to share data either don't opt-in or compile it for yourself without the module :)  =||= Read the backlog if you want to know why.\r\nNot all of us are complicit and don't care. The amount of add-ons needed to make browsing the web a proper experience clearly shows browsers are not a model to follow.\r\n =||= > I don't see why there is so much backslash.\r\n\r\nBecause the negative aspects very much outweigh the downsides. Read the discussion for more details.\r\n\r\n> We have this on browsers, which do process much more private information than an audio editor.\r\n\r\nAnd even with browsers there are enough people quite angry with the situation. But given the implications there (about 4 days for custom builds to remove tracking, when building from source on your own hardware and not everybody can manage this) there's unfortunately not much alternatives to choose from. But that's a different topic.\r\n\r\n> It's opt-in anyway.\r\n\r\nThat's what the PR officially says. The actual patch had several issues that inverted this logic and thus made it active by default as well as anti-patterns that coerced the user to just click thru to enable it.\r\n\r\nOh, and that telemetry was neither anonymous (use of known advertiser services) nor was it limited to actual telemetry only: The PR includes an UUID per user, thus allows for tracking of installations.\r\n\r\n> If you don't want to share data either don't opt-in or compile it for yourself without the module :)\r\n\r\nWhich brings us back to the browsers: Have you actually tried to build Audacity from source? Do you think this is a sustainable solution for the average user?\r\n\r\nOverall there are much better alternatives to baking telemetry directly into the core application. One for example is having telemetry added by a plugin that the user consciously installs. This also has the advantage that everything the telemetry monitors would also be available by official APIs for other plugins to use. Doing it that way also guarantees the agreement to the collection of personalizable information under GDPR in conscious, informed and voluntary. =||= > Read the backlog if you want to know why.\r\n> Not all of us are complicit and don't care. The amount of add-ons needed to make browsing the web a proper experience clearly shows browsers are not a model to follow.\r\n\r\nYeah sorry, not possible with this amount of comments. :/ =||= @BenBE alright, I see your point. I expected that the description was accurate. I have read some of the comments and it felt not really substantial what people complained about.\r\n\r\nMaybe it's worth reworking this patch and run the collection on servers of the project instead of third party ones.\r\n\r\nI do see a large benefit of collecting crash informations for example, since audacity isn't really that stable to begin with. There's room for improvement. =||= > \r\n> \r\n> I don't see why there is so much backslash. We have this on browsers, which do process much more private informations than an audio editor.\r\n> \r\n> It's opt-in anyway. If you don't want to share data either don't opt-in or compile it for yourself without the module :)\r\n\r\nA doing bad things doesn't justify when B does bad things. =||= > @BenBE alright, I see your point. I expected that the description was accurate. I have read some of the comments and it felt not really substantial what people complained about.\r\n\r\nThere's lots of virtue signalling in the comments, unfortunately.\r\n\r\n> Maybe it's worth reworking this patch and run the collection on servers of the project instead of third party ones.\r\n\r\nThis PR introduces a full network stack into an application that successfully managed without one for over 20 years. Thus introducing one really should have a very good reason and given the expected overall quality of the collected information the data ain't the compelling reason in this matter. There are simply too many threads attached that negatively affect the quality of the collected data, thus there's much easier and worthwhile methods to produce even better statistics to base your decisions on.\r\n\r\nRemains the part regarding crash reports:\r\n\r\n> I do see a large benefit of collecting crash information for example, since audacity isn't really that stable to begin with. There's room for improvement.\r\n\r\nOne of the few points that I agree. Unfortunately even here you don't really need to introduce networking into the core application. To give one example: `htop` simply gives a backtrace, some basic information required for a bug report and instruction how to help to make the backtrace more informative (basically: How you call `objdump` - or its equivalent - on your platform so you can attach that file to the bug report). This gives the option for the user to opt-in sending the bug report and still manages to respect the freedom of the user to not being tracked by the application. If you want to make it more friendly for beginners you could even use a separate application that pops up just when the main application crashed (like Firefox and several other tools do), but even then the main application does not need any linkage to any networking stack.\r\n\r\nAnd FWIW: The information that `htop` asks the user to provide usually helps to pin down the exact line of the crash within about 20 minutes, even when handling the `objdump` file by hand. Could be more convenient to do, but the fact is, that the actual bug reporting can and should be fully offline. =||= Seriously please close this pr. I think most of the possible arguments against this have already been established and I hope all the team work in favor of the comunity =||= @Daniel34M \r\n\r\n> Seriously please close this pr. I think most of the possible arguments against this have already been established and I hope all the team work in favor of the comunity\r\n\r\n[It has already been closed.](https://github.com/audacity/audacity/pull/835#issuecomment-835880865) I do, however, think it would be a good idea to lock the PR to prevent anyone from posting yet more comments; I agree that pretty much every possible argument on all sides has been made and we probably crossed that point a day or two ago. =||= Please, see our response:\r\n\r\nhttps://github.com/audacity/audacity/discussions/889 =||= "], ["836", "Breakpad integration", "Vitaly Sverchinsky", "vsverchinsky", "06/15/21, 07:56:49 PM", "Adds crash reporting to Audacity\r\n\r\nCrash reporting allows developers to have more details on the current problems in Audacity, understand whether they are platform/OS version specific, etc.\r\n\r\nImplementation is based on Google's [BreakPad](https://chromium.googlesource.com/breakpad/breakpad/) library, and consists of a few modules: \r\n * breakpad library: via conan (https://github.com/audacity/conan-recipes)\r\n * crashreports library: provides some functionality to configure and start breakpad in a platform-independent way\r\n * crashreporter: is a small GUI application that should be shipped along with Audacity, used to send reports to remote server when app crash occures. Provides short summary on crash. Sending is optional, user may decline sending a report, by pressing \"Don't send\" button. Optionally, user may also leave a short commentary on that issue.\r\n \r\n By default, these modules are ignored until USE_BREAKPAD option is provided.\r\n \r\n![image](https://user-images.githubusercontent.com/20165230/121231118-b0b26e80-c898-11eb-875d-bdbc2afc21aa.png)\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "Is this going to be optional / opt-in?\r\nIntegrating an open-source tool with google services will make a lot of people quite unhappy and overall just lose trust on it. =||= I don't think this sends data to a Google server. IIUC Breakpad requires the project using it to set up their own server. =||= Another :-1: here. Why the sudden interest in adding Google dependencies for analytics and user tracking? =||= Well it's gonna be self-hosted so I'm not sure how bad this is, at least it won't be sending data directly to Google =||= I don't see this being particularly useful, automatic crash handlers in OSS is a rarity and crashes in software like Audacity tend to be pretty easily reproducible as there's not much going on so the gain from getting dumps would be minimal.\r\n\r\nAlso can we talk about how this adds 800+ new files? Why? Importing the breakpad library this way is fucking stupid. =||= Automatic crash reporting is very useful. Most users won't go through the trouble of learning how to use GDB to make a good bug report.\r\n\r\nBut yes, please stop vendoring dependencies. That has collateral impact beyond Audacity. =||= can this be turned off? =||= > can this be turned off?\r\n\r\nIt is not even on yet. There is no need to turn it off once it is merged though, it can actually be quite useful.\r\n\r\nI had wrong ideas initially about this, was not sure about implications of using breakpad.\r\nThis one does not need to rely on google servers.\r\n\r\nif you really want nothing to do with google, you might as well stop using the web.\r\nupcoming quic/http3 is basically a google creation, so the web will be served on a protocol engineered at google. =||= > \r\n> crashes in software like Audacity tend to be pretty easily reproducible as there's not much going on so the gain from getting dumps would be minimal.\r\n\r\nIf only that were the case - a good example is P1 Bug 2700 which was not easily reproducible - and there have been many others over the years (I took over as the main QA tester following the death of Gale Andrews).\r\n\r\nAnd very few users bother to (or even know how to) send crash logs to us sadly.\r\n\r\n =||= I would appreciate a toggle that is built-in to Audacity, or, that could be changed prior to compiling Audacity, so that end-users can disable this functionality if they wish to do so.\r\n\r\nI fully understand the importance of crash reporting, and making it automatic helps to streamline the Crash Report Submission Process.\r\nBut.\r\nThat shouldn't mean that the option to disable such functionality shouldn't be included.\r\n\r\nI value my privacy and If I decide that I don't want to share crash logs with the Audacity Development Team then that decision should be down to ME, and not the developers of Audacity.\r\n\r\nIt is my hardware, and my system, and I want to have the choice to decide whether or not my system reports crashes or not.\r\n\r\nI hope that you will listen to my feedback and consider it quite heavily when deciding how to further proceed with these commits.\r\n\r\nThank you for taking the time to read what I have to say, and have a good day.\r\n\r\nTOGLK.\r\n =||= > I would appreciate a toggle that is built-in to Audacity, or, that could be changed prior to compiling Audacity, so that end-users can disable this functionality if they wish to do so.\r\n> \r\n> I fully understand the importance of crash reporting, and making it automatic helps to streamline the Crash Report Submission Process.\r\n> But.\r\n> That shouldn't mean that the option to disable such functionality shouldn't be included.\r\n\r\nIn due course when a build becomes available I will be QA testing this.  One thing I will be looking for is an option in the crash report for sending or not sending a crash report.  I, for example, almost never send crash reports to Microsoft - as I can opt out of that at crash-time (most of mine are deliberate QA crashes anyway to test resilience and Recovery - and bug fixes.)\r\n\r\n\r\n\r\n\r\n =||= I am generally pro breakpad. If its between this and #835 I choose this. Its library shown to have a lot of benefits. Incidentally Steam uses it in their client, and I think they have had a lot of success with it. =||= Yeah from what I can tell with some brief research, this one actually seems fine since it doesn't appear (on first glance?) to send anything to Google. From what I can tell, it requires the developer to have their own server for minidump files to be sent to.\r\n\r\n...Which begs the question as to why they can't run telemetry stuff on their own servers but *can* run crash reporting stuff. Hm. Either way, I think the core concern here isn't privacy but stuff more strictly related to the development of Audacity itself (which I obviously can't as easily speak for)\r\n\r\nObviously anything Google coming near a FOSS project is not ideal but as IGBC said, if something *must* be added that's bearing that brand name then this is arguably the better one (outside of the ideal option of \"none\" of course). =||= anyone ever consider this is a bait and switch?\r\n\r\nThey got us angry at Analytics so we'd be OK with breakpad \ud83d\ude06 ? =||= Hah, that's a fun thought. I'd agree but this one popped up on the same day only 4 hours after the telemetry PR, which probably isn't enough time\r\n\r\nBesides this is serving a completely different purpose anyway =||= yea sadly its clear their plan was to install both. Clearly they want a near clickstream from this program. Its very marketing adjacent.  `</offtopic>` =||= Please observe that a crash report is sent only if the CMake variable CRASH_REPORT_URL is defined, but it is not defined in this pull request.\r\n =||= Crash reporting will be enabled only for the RC builds. It is technically impossible to do it otherwise anyway. \r\n\r\nSending the generated crash report will be an opt-in. The report will be sent to the self hosted Sentry instance. =||= Why only RC builds, seems like there could be valuable reports out in the wild in release builds. Heaven knows the audio world has some wacky machine configurations. =||= > if you really want nothing to do with google, you might as well stop using the web.\r\n> upcoming quic/http3 is basically a google creation, so the web will be served on a protocol engineered at google.\r\n\r\nAnd this is exactly why this is a problem - if people can't use the web anymore without using google protocols or software, then we don't have a free and open web anymore.\r\n\r\nThe same is true for my favorite audio editing software. All of my four albums were produced with audacity. There must be a way to get proper crash reports without giving the biggest technology monopoly even more power. =||= As far as I know, the Breakpad is deprecated and will not evolve, for example, it will not support new types of OS and processors. So, is recommended to use Crashpad https://chromium.googlesource.com/crashpad/crashpad/+/refs/heads/main/doc/overview_design.md =||= > As far as I know, the Breakpad is deprecated and will not evolve, for example, it will not support new types of OS and processors. So, is recommended to use Crashpad https://chromium.googlesource.com/crashpad/crashpad/+/refs/heads/main/doc/overview_design.md\r\n\r\nIsn't Crashpad distributed under Apache License 2.0 (which is incompatible with GPLv2)? =||= > > As far as I know, the Breakpad is deprecated and will not evolve, for example, it will not support new types of OS and processors. So, is recommended to use Crashpad https://chromium.googlesource.com/crashpad/crashpad/+/refs/heads/main/doc/overview_design.md\r\n> \r\n> Isn't Crashpad distributed under Apache License 2.0 (which is incompatible with GPLv2)?\r\n\r\nGot it what the problem is, thank you. =||= I'm still asking for fixes for internationalization.\r\n\r\nAmong my many comments here, I also suggested improvements in comments, and also the source code tree reorganization (making the crashreporter folder less nested).\r\n\r\nI would still like those changes, but I won't let them delay approval.\r\n =||= "], ["837", "Use of banned function", null, "reitwick-prakash", "05/09/21, 06:55:22 AM", "Description- \r\nI would like to point out the use of banned function **\"lstrcpynW\"** in the Audacity code. Due to the usage of this function, Buffer overflow may be possible.\r\n\r\n![banned function](https://user-images.githubusercontent.com/83694224/117110475-c7e6d380-ada3-11eb-8df5-adc9f222fbc4.PNG)\r\n![banned 2](https://user-images.githubusercontent.com/83694224/117111086-bbaf4600-ada4-11eb-91a5-3a3cd4c8cf9b.PNG)\r\nSolution-\r\nAs a replacement **\"StringCchCopyA\"** function which comes under (strsafe.h) can be used.\r\n\r\n\r\n\r", "Please include file names and line numbers. =||= I used Ghidra to export the C code from the .exe. In that file I was able to loacte the use of lstrcpynW function.\r\n-- Just drag and drop the .exe file in Ghidra to open.\r\n![image](https://user-images.githubusercontent.com/83694224/117207066-29915700-ae11-11eb-98a1-707729fd0d4e.png)\r\n![image](https://user-images.githubusercontent.com/83694224/117207207-50e82400-ae11-11eb-9c54-f3439c43ca83.png)\r\n\r\nCode - [audacity-3.0.2.exe .zip](https://github.com/audacity/audacity/files/6430177/audacity-3.0.2.exe.zip)\r\n\r\n*****\r\nAnother banned function **(MNLS_lstrcpyW)**-\r\nThis one I found on opening the audacity code from git on Visual Studio Code.\r\n**File name- mapinls.h**\r\n**Line Number -175**\r\n![image](https://user-images.githubusercontent.com/83694224/117217937-e38fbf80-ae1f-11eb-8798-d964ae4cd618.png)\r\n\r\nSolution - \r\nSame as the last one.\r\n =||= By decompiling you're looking at symbols from the whole Audacity, including libraries it links to. It's straightforward to check that `lstrcpyW` is actually never used in Audacity code (rightfully so, given that it's a Win32 thing). That symbol is being brought in by some dependency, at first glance it looks like it's `libnyquist`. =||= Understood. Thank you!! =||= "], ["838", "Update SQLite to 3.35.5", "Dmitry Vedenko", "crsib", "05/05/21, 03:42:40 PM", "This update contains to important features (fixes):\n\n1. Improved performance of WAL mode locking primitives in cases where there are hundreds of connections all accessing the same database file at once\n\n2. In WAL mode, if a writer crashes and leaves the shm file in an inconsistent state, subsequent transactions are now able to recover the shm file even if there are active read transactions. Before this enhancement, shm file recovery that scenario would result in an SQLITE_PROTOCOL error.", "NaN"], ["839", "Cmake changes", "Paul Licameli", "Paul-Licameli", "05/06/21, 02:15:22 PM", "The long promised/threatened changes to CMake scripts, to support more separation of modules and libraries from Audacity, and also to generate a graph of dependencies as a side effect at configuration time.\r\n\r\nLeland especially, please review.  If satisfied, please rebase and merge.  Please don't squash, I'd rather keep the separated commits in the history.\r\n\r\nOthers are welcome to comment or ask questions.\r", "I have force-pushed onto more recent master.\r\n\r\nI added /D NOMINMAX for Windows builds as Dmitry asked.\r\n\r\nI changed the location of the generated .dot file as Leland asked.\r\n\r\nI removed the commit for new file library/CMakeLists.txt so there is no conflict with Dmitry's telemetry branch.  I can make that change later.\r\n\r\nI do not agree that it is necessary to remove the call to dot at configuration time.  If that program is not present, nothing happens and configuration still succeeds.  If it is present, it recreates a useful graph every time you reconfigure, with negligible cost.  I like having the graph done automatically in configuration, rather than as part of a build after configuration.\r\n\r\n =||= Thanks, but sorry, I just did the NOMINMAX part wrong and now Windows build is broken.  I'll fix that.\r\n =||= Hey wait, did you amend the commit for me?  I'm confused how that happened.\r\n =||= Oh, I see I force-pushed the corrected branch, and then you merged it while I was waiting for the build to finish!  So all's well that ends well.\r\n =||= "], ["840", "please upstream your patches to PortAudio", "Be", "Be-ing", "05/11/21, 10:23:52 AM", "Fedora currently has a [patch](https://src.fedoraproject.org/rpms/portaudio/blob/rawhide/f/portaudio-audacity.patch) for its [PortAudio](https://github.com/PortAudio/portaudio) package to support Audacity. This was inconvenient to rebase on the recent PortAudio release. The PortAudio maintainers have been more active since moving code to GitHub a few months ago.", "If you're up to it, I'd also appreciate review of my [rewrite of PortAudio's CMake implementation](https://github.com/PortAudio/portaudio/pull/461) :) =||= cc @uklotzde =||= The new PortAudio 19.7 release brings major bug fixes for macOS 11 and using PipeWire through the JACK API, so I suggest updating to that as well. =||= I have recently updated the `portaudio-audacity.patch` in Fedora and also fixed an issue with the build options:\r\n\r\nhttps://src.fedoraproject.org/rpms/portaudio/c/5c1adf2a43eecf0206bba22d737b22738e293fe3 =||= As far as I am aware, the only change in Audacity's fork of PortAudio that isn't in upstream PortAudio is a small [extension to the OSS host API](https://src.fedoraproject.org/rpms/portaudio/blob/rawhide/f/portaudio-audacity.patch). What is the purpose of this? On Linux, OSS has been deprecated for so long that I've never even heard of anyone using it. However I think it is used on BSDs. There have been requests for adding support for the sndio BSD sound server to PortAudio but this has not been implemented.\r\n\r\nAre there any other changes in Audacity's fork that should be upstreamed? =||= Here are the patches in lib-src/portaudio-v19:\r\n  * 16bit.patch: bug fix for https://bugzilla.audacityteam.org/show_bug.cgi?id=193 for Windows DirectSound API. Upstream PR: https://github.com/PortAudio/portaudio/pull/570\r\n  * jack.patch: implements JACK support on Windows. This is a lot of code added... I don't think this is necessary? Isn't JACK is used as an ASIO driver on Windows? @falkTX do you have any comments on this?\r\n  * linkage.patch: adds `extern C` to pa_util_unix.c... I am unclear why this is needed.\r\n  * mmefix.patch: one-liner fix for comparing pointer address instead of dereferencing pointers for Windows MME API. Upstream PR: https://github.com/PortAudio/portaudio/pull/571\r\n  * nonascii.patch: fixed upstream already: https://github.com/PortAudio/portaudio/pull/372\r\n  * portaudio-srcdir.patch: patch to Makefile.in, will be obsoleted by my upstream CMake PRs https://github.com/PortAudio/portaudio/pull/461 https://github.com/PortAudio/portaudio/pull/561\r\n  * ringbuf.patch: another patch to Makefile.in, also will be obsoleted\r\n  * vs2015.patch: two one-liners to fix building with MSCV2015... who is building with MSCV2015 anymore? Upstream it if you want to I guess :shrug: \r\n  * wasapi-fix.patch: I'm not sure what this is for. The Git history is not very helpful. I'm not sure if it can be split from the patch below?\r\n  * wasapi-loopback.patch: Seems to add support for loopback devices with Windows WASAPI API. Substantial code added. I leave it to @lllucius who wrote the patch to upstream this novel feature.\r\n \r\nI'm puzzled where the [OSS patch in Fedora](https://src.fedoraproject.org/rpms/portaudio/blob/rawhide/f/portaudio-audacity.patch) came from. =||= > \r\n> \r\n> Here are the patches in lib-src/portaudio-v19:\r\n> \r\n>     * 16bit.patch: bug fix for https://bugzilla.audacityteam.org/show_bug.cgi?id=193 for Windows DirectSound API. Upstream PR: [PortAudio/portaudio#570](https://github.com/PortAudio/portaudio/pull/570)\r\n> \r\n\r\nNot sure this is appropriate (as written) for upstream.  It looks to me like the fix made was strictly to correct the reported behavior.  I'm not entirely sure it would be satisfactory for all users of portaudio.\r\n\r\n>     * jack.patch: implements JACK support on Windows. This is a lot of code added... I don't think this is necessary? Isn't JACK is used as an ASIO driver on Windows? @falkTX do you have any comments on this?\r\n> \r\n\r\nAudacity doesn't support ASIO due to Steinberg licensing concerns.\r\n\r\nWhat this patch does is add dynamic loading of the Jack libraries at runtime.  That way we could build Audacity without having to link against Jack.  Many moons ago I tried to get it upstreamed, but it never went anywhere.\r\n\r\n>     * linkage.patch: adds `extern C` to pa_util_unix.c... I am unclear why this is needed.\r\n> \r\n\r\nNot sure why either, but you could remove it and try to rebuild to see what happens.  Possibly an issue on Windows or Mac.\r\n\r\n>     * mmefix.patch: one-liner fix for comparing pointer address instead of dereferencing pointers for Windows MME API. Upstream PR: [PortAudio/portaudio#571](https://github.com/PortAudio/portaudio/pull/571)\r\n> \r\n\r\nDefinitely should have gone upstream...thanks for doing so.\r\n\r\n>     * nonascii.patch: fixed upstream already: [PortAudio/portaudio#372](https://github.com/PortAudio/portaudio/pull/372)\r\n\r\nYep, we could drop this.\r\n\r\n> \r\n>     * portaudio-srcdir.patch: patch to Makefile.in, will be obsoleted by my upstream CMake PRs [PortAudio/portaudio#461](https://github.com/PortAudio/portaudio/pull/461) [PortAudio/portaudio#561](https://github.com/PortAudio/portaudio/pull/561)\r\n\r\nYep, we could drop this.\r\n\r\n> \r\n>     * ringbuf.patch: another patch to Makefile.in, also will be obsoleted\r\n> \r\n\r\nYep, we could drop this.\r\n\r\n>     * vs2015.patch: two one-liners to fix building with MSCV2015... who is building with MSCV2015 anymore? Upstream it if you want to I guess \ud83e\udd37\r\n> \r\n\r\nYep, we could drop this.\r\n\r\n>     * wasapi-fix.patch: I'm not sure what this is for. The Git history is not very helpful. I'm not sure if it can be split from the patch below?\r\n> \r\n\r\nI \"sort of\" remember this one.  When we were first starting to include WASAPI support in Audacity we were experiencing some premature stoppages in playback/recording.  It might be appropriate for upstream, but we'd need to remove it and try to recreate the original issue. (if we can find it.)\r\n\r\n>     * wasapi-loopback.patch: Seems to add support for loopback devices with Windows WASAPI API. Substantial code added. I leave it to @lllucius who wrote the patch to upstream this novel feature.\r\n> \r\n\r\nDon't believe it is upstreamable.  It is a \"total hack\" specifically for Audacity that gives Windows users a loopback feature where you can record what you're playing back.  Not sure it's appropriate for general use since there's a few caveats to it's usage.\r\n\r\n> \r\n> I'm puzzled where the [OSS patch in Fedora](https://src.fedoraproject.org/rpms/portaudio/blob/rawhide/f/portaudio-audacity.patch) came from.\r\n\r\nI'm guessing that Fedora could drop that patch since Audacity commit b106de1.\r\n =||= > * linkage.patch: adds `extern C` to pa_util_unix.c... I am unclear why this is needed.\r\n\r\nThe midi playback code uses `PaUtil_GetTime` to keep in sync with audio playback.  I did replace it with `Pa_GetStreamTime` in #210, but I can't remember if there was a reason Audacity didn't use that approach.  In any case, without that patch, the midi code fails to build on some platforms. =||= The [OSS patch in Fedora](https://src.fedoraproject.org/rpms/portaudio/blob/rawhide/f/portaudio-audacity.patch) adds an API which was [rejected upstream in 2008](https://music.columbia.edu/pipermail/portaudio/2008-February/008314.html) (see also https://github.com/PortAudio/portaudio/issues/21 https://github.com/PortAudio/portaudio/issues/169). However it seems the alternative API proposed by @RossBencina in that old mailing list post to add a `PaHostApiTypeId` field to the `PaStreamInfo` struct has not been implemented. I suspect changing to that alternative API would require a bit of refactoring in PortMixer.\r\n\r\nThe full patch is not in lib-src/portaudio-v19 but rather [lib-src/portmixer/portaudio.patch](https://github.com/audacity/audacity/blob/master/lib-src/portmixer/portaudio.patch) even though it is a patch for the PortAudio code. That patch also seems to have other distinct changes as well. The PortAudio code in lib-src/portaudio-v19 seems to already have that patch applied. =||= Yea, all of those \"patch\" files are the way we used to manage the patches to third party libs.  Now we just depend on git commit logs to keep track of them.\r\n\r\nThere has been \"some\" discussion about getting rid of the control of hardware mixers in Audacity.  If we did that, then the entire portmixer code could be deleted.  If you want to pursue that discussion, you might want to bring it up on the -devel mailing list so that the whole team can respond.\r\n =||= > Now we just depend on git commit logs to keep track of them.\r\n\r\nOf what Git repositories? =||= Audacity's =||= Do you mean this [Git repository](https://github.com/audacity/portaudio)? I don't see any commits from Audacity developers in that repository, nor pull requests, nor issues. It looks like it is just a fork of upstream PortAudio that hasn't been updated. =||= > There has been \"some\" discussion about getting rid of the control of hardware mixers in Audacity. If we did that, then the entire portmixer code could be deleted. If you want to pursue that discussion, you might want to bring it up on the -devel mailing list so that the whole team can respond.\r\n\r\nI searched the audacity-devel archive but did not find anything about this. Could you link to the discussion? =||= > \r\n> \r\n> > There has been \"some\" discussion about getting rid of the control of hardware mixers in Audacity. If we did that, then the entire portmixer code could be deleted. If you want to pursue that discussion, you might want to bring it up on the -devel mailing list so that the whole team can respond.\r\n> \r\n> I searched the audacity-devel archive but did not find anything about this. Could you link to the discussion?\r\n\r\nIt was a private discussion among various team members.\r\n\r\n =||= Why do you have private discussions about public code? =||= Looking at the [Fedora RPM spec file](https://src.fedoraproject.org/rpms/audacity/blob/rawhide/f/audacity.spec#_144) for Audacity, it looks like it builds with the vendored PortAudio currently even though the Fedora PortAudio package has that patch specifically for Audacity...\r\n\r\ncc @imciner2 =||= > The midi playback code uses PaUtil_GetTime to keep in sync with audio playback.\r\n\r\nPaUtil_GetTime is defined in [src/common/pa_util.h in PortAudio](https://github.com/PortAudio/portaudio/blob/master/src/common/pa_util.h). This header is not installed by the build system as confirmed by checking the packages installed by Fedora's portaudio-devel package:\r\n```\r\n\u276f rpm -ql portaudio-devel\r\n/usr/include/pa_jack.h\r\n/usr/include/pa_linux_alsa.h\r\n/usr/include/pa_unix_oss.h\r\n/usr/include/portaudio.h\r\n/usr/include/portaudiocpp\r\n/usr/include/portaudiocpp/AutoSystem.hxx\r\n/usr/include/portaudiocpp/BlockingStream.hxx\r\n/usr/include/portaudiocpp/CFunCallbackStream.hxx\r\n/usr/include/portaudiocpp/CallbackInterface.hxx\r\n/usr/include/portaudiocpp/CallbackStream.hxx\r\n/usr/include/portaudiocpp/CppFunCallbackStream.hxx\r\n/usr/include/portaudiocpp/Device.hxx\r\n/usr/include/portaudiocpp/DirectionSpecificStreamParameters.hxx\r\n/usr/include/portaudiocpp/Exception.hxx\r\n/usr/include/portaudiocpp/HostApi.hxx\r\n/usr/include/portaudiocpp/InterfaceCallbackStream.hxx\r\n/usr/include/portaudiocpp/MemFunCallbackStream.hxx\r\n/usr/include/portaudiocpp/PortAudioCpp.hxx\r\n/usr/include/portaudiocpp/SampleDataFormat.hxx\r\n/usr/include/portaudiocpp/Stream.hxx\r\n/usr/include/portaudiocpp/StreamParameters.hxx\r\n/usr/include/portaudiocpp/System.hxx\r\n/usr/include/portaudiocpp/SystemDeviceIterator.hxx\r\n/usr/include/portaudiocpp/SystemHostApiIterator.hxx\r\n/usr/lib64/libportaudio.so\r\n/usr/lib64/libportaudiocpp.so\r\n/usr/lib64/pkgconfig/portaudio-2.0.pc\r\n/usr/lib64/pkgconfig/portaudiocpp.pc\r\n```\r\n\r\npa_util.h is not listed in the [PortAudio documentation](http://files.portaudio.com/docs/v19-doxydocs/group__public__header.html) either. Audacity is using a private function of PortAudio. This should be fixed. =||= There are obviously inconsistencies. The .spec file for Fedora requires portaudio-devel as a build requirement, but instead uses a custom, bundled version. The installed executable does not depend on libportaudio as confirmed by ldd. =||= Built with `-Daudacity_use_portaudio=local` =||= `-Daudacity_use_portaudio=system` doesn't even pass the CMake configure stage. Debian has a [patch](https://salsa.debian.org/multimedia-team/audacity/-/blob/master/debian/patches/0004-cmake-use-system-portaudio.patch) to fix that and another [really ugly hack](https://salsa.debian.org/multimedia-team/audacity/-/blob/master/debian/patches/0002-PATCH-Fix-building-against-the-system-portaudio-libr.patch) for the missing PaUtil_GetTime symbol. =||= I tried building with #870 and the patch below with `-Daudacity_use_portaudio=system` but building without `EXPERIMENTAL_MIDI_OUT` defined does not work.\r\n```\r\ndiff --git a/cmake-proxies/CMakeLists.txt b/cmake-proxies/CMakeLists.txt\r\nindex 35250773c..c3ffc4710 100644\r\n--- a/cmake-proxies/CMakeLists.txt\r\n+++ b/cmake-proxies/CMakeLists.txt\r\n@@ -13,7 +13,7 @@ addlib( expat              expat       EXPAT       YES   YES   \"expat >= 2.1.0\"\r\n addlib( lame               lame        LAME        YES   YES   \"lame >= 3.100\" )\r\n addlib( libsndfile         sndfile     SNDFILE     YES   YES   \"sndfile >= 1.0.28\" )\r\n addlib( libsoxr            soxr        SOXR        YES   YES   \"soxr >= 0.1.1\" )\r\n-addlib( portaudio-v19      portaudio   PORTAUDIO   YES   YES   \"\" )\r\n+addlib( portaudio-v19      portaudio   PORTAUDIO   YES   YES   \"portaudio-2.0\" )\r\n addlib( sqlite             sqlite      SQLITE      YES   YES   \"sqlite3 >= 3.32.0\" )\r\n \r\n # Optional libraries\r\n@@ -36,7 +36,7 @@ if (NOT USE_MIDI AND\r\n endif ()\r\n \r\n \r\n-addlib( portmixer          portmixer   PORTMIXER   NO    YES   \"\" )\r\n+#addlib( portmixer          portmixer   PORTMIXER   NO    YES   \"\" )\r\n if (NOT USE_PORTMIXER AND\r\n    \"EXPERIMENTAL_AUTOMATED_INPUT_LEVEL_ADJUSTMENT\" IN_LIST\r\n       EXPERIMENTAL_OPTIONS_LIST )\r\ndiff --git a/src/Experimental.cmake b/src/Experimental.cmake\r\nindex 30c01792a..ad0cc9374 100644\r\n--- a/src/Experimental.cmake\r\n+++ b/src/Experimental.cmake\r\n@@ -121,7 +121,7 @@ set( EXPERIMENTAL_OPTIONS_LIST\r\n    # RBD, 1 Sep 2008\r\n    # Enables MIDI Output of NoteTrack (MIDI) data during playback\r\n    # USE_MIDI must be defined in order for MIDI_OUT to work\r\n-   MIDI_OUT\r\n+   #MIDI_OUT\r\n \r\n    # JKC, 17 Aug 2017\r\n    # Enables the MIDI note stretching feature, which currently\r\n```\r\n\r\nThe build fails with:\r\n```\r\n../src/AudioIO.cpp: In member function \u2018virtual void AudioIO::StopStream()\u2019:\r\n../src/AudioIO.cpp:2452:4: error: \u2018mMidiPlaybackTracks\u2019 was not declared in this scope; did you mean \u2018mPlaybackTracks\u2019?\r\n 2452 |    mMidiPlaybackTracks.clear();\r\n      |    ^~~~~~~~~~~~~~~~~~~\r\n      |    mPlaybackTracks\r\n```\r\n\r\nThat's as much work as I'm willing to put into cleaning up this technical debt. =||= So it seems that mmefix.patch is the only reasonable patch from Audacity to upstream to PortAudio. The use of the private PaUtil_GetTime API is Audacity's problem to solve, which I have opened a new issue for (#871). I'll close this now. =||= Pa_GetStreamTime and PaUtil_GetTime are different clocks running at \n(slightly) different rates. If you replaced one with the other, then you \neither created or fixed a problem.\n\n \u00a0\u00a0\u00a0 -Roger\n\nOn 5/11/21 12:05 AM, Pokechu22 wrote:\n>\n>       * linkage.patch: adds |extern C| to pa_util_unix.c... I am\n>         unclear why this is needed.\n>\n> The midi playback code uses |PaUtil_GetTime| to keep in sync with \n> audio playback. I did replace it with |Pa_GetStreamTime| in #210 \n> <https://github.com/audacity/audacity/pull/210>, but I can't remember \n> if there was a reason Audacity didn't use that approach. In any case, \n> without that patch, the midi code fails to build on some platforms.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub \n> <https://github.com/audacity/audacity/issues/840#issuecomment-837760743>, \n> or unsubscribe \n> <https://github.com/notifications/unsubscribe-auth/AALLUHGFXRDN55EGLJPHH2LTNCUHJANCNFSM44H6ZK2A>.\n>\n =||= "], ["842", "Update pl.po from Transifex", "Grzegorz Pruchniakowski", "Gootector", "05/07/21, 09:48:52 AM", "Update pl.po from Transifex\r\nThe next package of fixes.\r\n\r\nGreetings,\r\nGootector\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "Thank you! =||= "], ["843", "Generate AppImage on GitHub Actions", "Peter Jonas", "shoogle", "06/16/21, 03:00:16 PM", "Fixes #695. Supersedes #172. See https://appimage.org/.\r", "libjpeg.so.8 missing - Fedora 33 =||= Ideally that separate script file should work to build locally as well as on CI. Simply factoring it out to a separate file would be a good first step. =||= "], ["844", "Please clarify copyright policy", "Hanns Holger Rutz", "Sciss", "08/13/21, 12:26:40 PM", "In order not to extend the already long comment thread on [#835](https://github.com/audacity/audacity/pull/835) - within it is buried now a post by @workedintheory\r\n\r\nhttps://github.com/audacity/audacity/pull/835#issuecomment-834203391\r\n\r\nmentioning multiple times CLAs (contributor license agreements) and the idea to have a \"flexible\" license, dual-licensing etc.\r\n\r\n> Part of our commitment to open source is a commitment to transparency. Being fully transparent, the CLA of the open source projects we support does grant some form of flexibility in licensing. But what does this mean?\r\n> \r\n> I will use the example of MuseScore. The MuseScore CLA does allow for the possibility to dual license the source code as GPL and proprietary, so long as it remains also available under GPL.\r\n> \r\n> But why would we ever want to do this? How could this possibly be in service of the user and user choice?\r\n> \r\n> [...] it is good to have more flexible options for limited scenarios such as alternative licensing for a specific build for a specific platform to solve a specific issue (ex: excluded from platform due to GLP as in VLC case).\r\n> \r\n> In more simple terms, we view the potential of dual licensing as an insurance policy in order to ensure availability for the user on the platform of their choice.\r\n\r\nAs it stands, and regarding my understanding of the mechanisms of CLA, there _has never been_ a CLA system in place for this project. The contribution rules simply state the contributions _must be compatible with GPL_. No further rights were obtained from contributors through the regular channel of pull requests.\r\n\r\nSince the project is decades old, and lists several contributors (perhaps a handful being responsible for the vast majority of commits ; but also the original authors Dominic Mazzoni and Roger Dannenberg not visible in the GitHub UI), could you clarify if and how you intend to add a CLA to the project? When Muse Group obtained the control of Audacity, did you obtain the licensing rights from all the main contributors, and how do you intend to deal with commits made by persons in the past that did not sign any CLA?", "Using CLAs to enable [proprietary relicensing is not okay](https://sfconservancy.org/blog/2020/jan/06/copyleft-equality/). =||= > Using CLAs to enable [proprietary relicensing is not okay](https://sfconservancy.org/blog/2020/jan/06/copyleft-equality/).\r\n\r\nWell, this is more or less the spirit of [MuseScore's CLA](https://musescore.org/en/cla), so I would not be surprised if this comes to Audacity soon. =||= > Well, this is more or less the spirit of MuseScore's CLA, so I would not be surprised if this comes to Audacity soon.\r\n\r\nMuseScore's CLA is the worst possible kind of CLA. It gives MuseScore unilateral authority to license the code however they want with no strings attached. That's like an MIT license but even worse because only MuseScore has the legal authority to make proprietary versions. If any CLA like this comes to Audacity, it should be forked, regardless of what happens with the telemetry issue. =||= > If any CLA like this comes to Audacity, it should be forked, regardless of what happens with the telemetry issue.\r\n\r\nYeah, agreed. `AuditCity` incoming ... =||= If there are _any_ existing contributors unwilling to sign such a CLA, the Muse Group would have to remove all of their contributions somehow before introducing such a licensing change. That includes all contributors, not just the main developers, unless their changes are so trivial that they can be considered uncopyrightable (something like fixing a single misindented line would count as this). Otherwise, the unwilling contributors can file a lawsuit against the group for copyright infringement, as they'd be infringing the contributors' copyright by violating the GPL. =||= It is virtually impossible to impose a CLA on a 20 year old project with many contributors that has not had one before. =||= > unless their changes are so trivial that they can be considered uncopyrightable (something like fixing a single misindented)\r\n\r\nI'm doing such kind of audit on another project to switch a wiki from a non-free license (because of a non-commercial clause) to a free license, 5 years later I'm still at it, so given the size of the audacity code this is probably unlikely to happen, because doing this costs a lot.\r\n\r\nIn theory everything is possible\u2122, but in real world, with time passing, salaries to pay, priorities to focus on other things, it's hardly doable. =||= Potential proprietary versions of Audacity also would have to deal with making sure all dependencies can allow for such thing.\r\nwxWidgets allows this, which is the biggest dependency.\r\n\r\nthen following https://github.com/audacity/audacity/blob/master/cmake-proxies/CMakeLists.txt: (assuming the use of shared libraries, as allowed by LGPL)\r\n\r\nlame - yes\r\nlibsndfile - yes\r\nlibsoxr - yes\r\nportaudio-v19 - yes\r\nsqlite - yes\r\nffmpeg - yes (though it needs special attention to not build GPL elements)\r\nlibid3tag - no, GPLv2+\r\nlibmad - no, GPLv2+ (but they allow the purchase of commercial licenses)\r\nlibnyquist - yes? while libnyquist itself is fine, it uses fftw\r\nlibvamp - yes? PluginInputDomainAdapter.cpp uses fftw which would need to be unused\r\nlibogg - yes\r\nlibvorbis - yes\r\nlibflac - yes\r\nlv2 - yes\r\nportmidi - yes\r\nportmixer - yes\r\nportsmf - yes\r\nlibsbsms - no, GPLv2? GPLv3?\r\nsoundtouch - yes\r\ntwolame - yes\r\n\r\nSo 3 dependencies can't be used in a potential commercial build: libid3tag, libmad and libsbsms.\r\nSome attention is required on the use of fftw, which is GPL. On a quick look it seems to be not used at all.\r\n\r\nSomething curious I found out of this little research - due to libsbsms being GPLv3, the final Audacity binary is under GPLv3 terms already.\r\nToo late for the GPLv3 move because of VST3 :sweat_smile: \r\n\r\nEDIT: This is confusing https://github.com/claytonotey/libsbsms/blob/main/LICENSE vs https://github.com/claytonotey/libsbsms/blob/main/COPYING =||= > EDIT: This is confusing https://github.com/claytonotey/libsbsms/blob/main/LICENSE vs https://github.com/claytonotey/libsbsms/blob/main/COPYING\r\n\r\nGood catch! Opened an issue.\r\n\r\nhttps://github.com/claytonotey/libsbsms/issues/1 =||= They clarified the license @falkTX \r\n\r\nwithin https://github.com/claytonotey/libsbsms/commit/99691ede536f8d44b619472ce7126f15e2e32512 due to https://github.com/claytonotey/libsbsms/issues/1 =||= "], ["846", "TELEMETRY SHOULD NOT BE ADDED TO THIS GREAT PROJECT!!!!", "jahway603", "jahway603", "05/09/21, 12:35:21 AM", "TELEMETRY SHOULD NOT BE ADDED TO THIS GREAT PROJECT!!!!\r\n\r\nTELEMETRY SHOULD NOT BE ADDED TO THIS GREAT PROJECT!!!!\r\n\r\nTELEMETRY SHOULD NOT BE ADDED TO THIS GREAT PROJECT!!!!\r\n\r\nTELEMETRY SHOULD NOT BE ADDED TO THIS GREAT PROJECT!!!!\r\n\r\nTELEMETRY SHOULD NOT BE ADDED TO THIS GREAT PROJECT!!!!\r\n\r\nTELEMETRY SHOULD NOT BE ADDED TO THIS GREAT PROJECT!!!!\r\n\r\nTELEMETRY SHOULD NOT BE ADDED TO THIS GREAT PROJECT!!!!\r\n\r\nTELEMETRY SHOULD NOT BE ADDED TO THIS GREAT PROJECT!!!!\r\n\r\nTELEMETRY SHOULD NOT BE ADDED TO THIS GREAT PROJECT!!!!\r\n\r\nTELEMETRY SHOULD NOT BE ADDED TO THIS GREAT PROJECT!!!!\r\n\r\nTELEMETRY SHOULD NOT BE ADDED TO THIS GREAT PROJECT!!!!\r\n\r\nThanks", "this issue literally achieves nothing LOL (should probably lock this too, while you're at it) =||= "], ["847", "automated code style checking and linting", "Be", "Be-ing", "05/10/21, 10:58:10 AM", "As demonstrated by https://github.com/audacity/audacity/pull/835#pullrequestreview-655027290 new developers do not automatically know how to keep code in a consistent style. I don't think anybody likes making noise about this in code reviews; it's better to let automated tools handle it and talk about the substantive changes. There are plenty of automated tools to do this. One of them should be run on CI to catch code style issues before merging.\r\n\r\nI recommend using [pre-commit](https://pre-commit.com/) to catch these issues before even committing and advising new contributors to set this up. For C++ formatting, I suggest using clang-format with pre-commit. This can be set up to use clang-format only on the diff of the commit instead of needing to mass reformat the entire file and add a bunch of noise to the commit diff. On Mixxx, there is a [GitHub Actions workflow](https://github.com/mixxxdj/mixxx/blob/main/.github/workflows/pre-commit.yml) which uses pre-commit to clang-format and [variety of other automated code quality checks](https://github.com/mixxxdj/mixxx/blob/main/.pre-commit-config.yaml) only on the changed code. The GitHub Actions job uploads a patch with the automatic corrections as a GitHub Actions artifact so new developers can simply download that and apply the patch, then set up pre-commit locally to avoid future issues. There is a [separate GitHub Actions workflow](https://github.com/mixxxdj/mixxx/blob/main/.github/workflows/build-checks.yml#L88) which uses clang-tidy and clazy, which notably take approximately the same time to run as a full build and cannot use compiler caching.", "cc @Holzhaus who set this up for Mixxx. =||= Besides the formatting of the code usually the much greater issue is catching subtle bugs, like the integer overflow in multiplication. Given I've been working on various FLOSS projects over the years (GeSHi, htop, RRD, \u2026) there always was the problem of not only getting the formatting right (smallest elephant in the room), but also check for these issues. From experience I found that, apart from locally run tools like [cppcheck](http://cppcheck.sourceforge.net/) you really want some external tooling like Coverity or LGTM to have a look at the code. Also having your build system able to create explicit debug builds with ASAN, TSAN, UBSAN and friends enabled, while forcing a zero-warning policy for code (at least `-Wall -Wextra -Werror -pedantic`, plus some specifics like e.g. `-Wformat=2` that aren't included in `-Wall` unfortunately).\r\n\r\nAlso providing people a tool to automagically format their code according to some baseline code style with a script maintained in the repository is a good start. But don't expect people to setup pre-commit hooks and other utilities just for some random PR they do: This will not work.\r\n\r\nThus while `clang-tidy` or `astyle` might be on the side of reasonable choices, anything that needs more than some `package-manager isntall tool` to setup will likely cause rejection to use that tool.\r\n\r\nAnother tool I'd suggest is [IWYU](https://github.com/include-what-you-use/include-what-you-use), which greatly helps to reduce the number of headers included senselessly. And on a side-note: You might want to define a clear order in which headers should appear. In my projects I found that alphabetical order, with system headers before project headers (own module header goes first before everything else) usually works quite nicely. =||= Can we set this up in one of the forks as a demonstration? Even assuming that #835 is resolved without splitting the project it could be a long time before that resolution comes about and they (or whatever fork) can merge changes even if the workflow is only on the demo. =||= Given that just pulling the sources and having all dependencies installed (except for that custom vendored wxWidgets version) this already FTBFS in the `cmake` step (demanding a custom, development version that you can't install on Ubuntu 20.04 LTS without jumping through hoops - which I don't intend to do), And yes, I've read why they want that version not available anywhere in the usual places.\r\n\r\nAnd given the state of their build system and the way stuff is botched in there it's a waste of time trying to improve working with the system, unless the build system is cleaned up and improved first. =||= > don't expect people to setup pre-commit hooks and other utilities just for some random PR they do: This will not work.\r\n\r\nIn my experience, it actually does work quite well. Maintainers can simply tell contributors to download and apply the patch generated by GitHub Actions. Some don't and never respond, but those generally have more serious issues anyway.\r\n\r\nBy the way, thanks for htop :heart: It's usually one of the first packages I install after setting up a new Linux system. =||= > You might want to define a clear order in which headers should appear. In my projects I found that alphabetical order, with system headers before project headers (own module header goes first before everything else) usually works quite nicely.\r\n\r\nclang-format can take care of this. =||= I'm not sure if I'm missing something about the build, but why _isn't_ the patched wxWidgets in lib-src like all the other major dependencies?\r\n\r\nCouldn't it compile the library into the audacity executable like most smaller libraries, saving us the conflict with other wxWidgets versions and allowing a cmake build from source? =||= > > don't expect people to setup pre-commit hooks and other utilities just for some random PR they do: This will not work.\r\n> \r\n> In my experience, it actually does work quite well. Maintainers can simply tell contributors to download and apply the patch generated by GitHub Actions. Some don't and never respond, but those generally have more serious issues anyway.\r\n> \r\n\r\nIf you have some ready patch they can apply to clean up this is a good way to go. But for anything more complex (and be it getting some explicit version of a random library you have to tell the build system about in a non-obvious way) you'll have quite a few people calling it quits.\r\n\r\n> By the way, thanks for htop  It's usually one of the first packages I install after setting up a new Linux system.\r\n\r\nGlad to hear. :heart:\r\n\r\nNB: The build system in `htop` is `autotools` (we had a look at `cmake`, but in the end decided against because of compatibility with some platforms we need to support) and there are several libraries you can optionally chose to include for certain features (e.g. `libsystemd`, `libsensors`). The stand there is basically: If possible it's a compile-time dependency (and without much code, quite a bit is possible in that regard) only and at runtime things are checked if they are really available. Thus `htop` always uses the system libraries (and headers). =||= > I'm not sure if I'm missing something about the build, but why _isn't_ the patched wxWidgets in lib-src like all the other major dependencies?\r\n\r\nJust did a `git clone` and hoped for the build system to pick it up from the installed system package. With the default Ubuntu one it complained about it needing the custom patched one and after installing that one (3.1.5 from some repo where someone built it) it picked up on that new version but complained about not finding `wxWidgets_LIBRARIES` and `wxWidgets_INCLUDEDIRS`. And that was the point when the amount of debugging I wanted to invest into a simple build from source ended.\r\n\r\n> Couldn't it compile the library into the audacity executable like most smaller libraries, saving us the conflict with other wxWidgets versions and allowing a cmake build from source?\r\n\r\nDon't. wxWidgets is large enough that their maintainers already split it up into various sub-projects. You could go about building it statically, but then you'd end up having to compile all of its dependencies as static as well (which I'd call good luck with GTK3+) \u2026\r\n\r\nSo the FTBFS issue here is that setting up the wxWidget stuff to be found while using that custom version is non-trivial and just allowing to build with the system-installed (3.0.x) libraries should work (and be it with a warning about the stability issues).\r\n\r\n2ct =||= Let's stay on topic. Please take discussion about the wxWidgets fork to #625. =||= > > don't expect people to setup pre-commit hooks and other utilities just for some random PR they do: This will not work.\r\n> \r\n> In my experience, it actually does work quite well. Maintainers can simply tell contributors to download and apply the patch generated by GitHub Actions. Some don't and never respond, but those generally have more serious issues anyway.\r\n> \r\n> By the way, thanks for htop  It's usually one of the first packages I install after setting up a new Linux system.\r\n\r\nOne of the Mixxx devs here. I agree with this. We use `pre-commit` for quite a while. For long-term contributors/devs it's pretty nice because you can just set it up locally and stop caring about code style anymore. It takes care of it automatically on each commit. And it also prevents you from adding a big \"reformat code\" commit at the end, which makes the git history harder to read, because if you set it up locally every commit is clean in terms of code style.\r\n\r\nFor drive-by contributions, the CI setup is nice because it warns you about code style issues (and some of these may not even be visible in the GitHub diff, e.g. trailing whitespace). For these contributors, the CI automatically creates a patch that can be downloaded and applied with `git apply < pre-commit.patch`.\r\n\r\nSure, there are some contributors that don't do this and ignore your request to apply the patch and just abandon the PR instantly after opening it. But this would also happen if you don't have `pre-commit` and point out code style issues manually during review. And tbh, if you do point out them manually you'll likely pile up a large number of code style related review comments that may be even more intimidating to new contributors compared to a single message \"please apply this patch\".  =||= I am closing this.\r\n\r\nI do not want petty white space wars creeping into the mix of all the other things to discuss now.\r\n\r\nReopen this idea in a few months after temperature at this GitHub project has cooled down, and after the more \"substantive changes\" like vendoring are fairly discussed.\r\n =||= Whitespace changes is the smallest part in linting. The much more important part (yet less visible usually) is about looking for patterns that usually are signs of bugs, bad practices or risks of security issues creeping in. =||= BenBE I would favor more cleanups of compilation warnings.  A more valuable suggestion.\r\n\r\nSee the CMake function audacity_append_common_compiler_options in cmake-proxies/cmake-modules/AudacityFunctions.cmake that sets up some compilation flags applied pervasively.\r\n\r\nSee the -W options for clang builds.  I recall it was I that added -Werror=dangling-else : that's an example of a programmer error that might compile with unintended change of meaning.  So I made it a build-breaker after I did a review that discovered a dangling-else.  (Which was not in fact erroneous, still I put the extra curlies in.)\r\n\r\nDo you want to nominate more -W flags like those?  Better, do it and clean up some warnings?  Be my guest, make a pull request.\r\n\r\nDo you want to clean other things in our build system?  Suggest it.  Modestly.  Respectfully of the efforts I and my colleagues on this team have put in.  Not with loaded language like \"the state of their build system and the way stuff is botched in there\" please.\r\n\r\nAnd thank you.\r\n\r\n =||= > BenBE I would favor more cleanups of compilation warnings. A more valuable suggestion.\r\n\r\nACK. Will have a look at this once #853 has been taken care of and Linux builds of master are more friendly to casual contributors. Right now I'm packed enough with other FLOSS projects I maintain thus the amount of work I can put in for such contributions is quite low \u2026\r\n\r\n> See the CMake function audacity_append_common_compiler_options in cmake-proxies/cmake-modules/AudacityFunctions.cmake that sets up some compilation flags applied pervasively.\r\n\r\nMy minimum suggestion for the flags to use is:\r\n- `-Wall`: All basic warnings\r\n- `-Wextra`: Some more of the relevant warnings\r\n- `-pedantic`: Ensure ISO C compliance and warn about non-compliances\r\n- `--std=c++17`: Use C++ 17 language standard\r\n- `-Wshadow`: Warn about shadowing of variables/functions/other symbols\r\n- `-Wpointer-arith`: Warn about situations where pointer arithmetic on void types or NULL is performed\r\n- `-Wcast-qual`: Warn when type qualifiers or removed due to type casts\r\n- `-Wstrict-prototypes`: Enforce prototype definitions to match their declarations\r\n- `-Wmissing-prototypes`: Enforce function definitions to be announced by proper prototype declarations\r\n- `-Wno-missing-field-initializers`: Ensure all fields to be initialized\r\n- `-Wformat=2`: Extensive checking for format strings\r\n- `-Wswitch-default`: Ensure that switch always has a default case\r\n- `-Wswitch-enum`: Ensure all cases for a enum type are handled in a switch statement\r\n- `-Wcast-align`: Ensure proper alignment of data access when typecasting\r\n- `-Wbad-function-cast`: Warn on function casts to incompatible function types\r\n- `-Wstrict-overflow=5`: Strict integer overflow checking\r\n- `-Winline`: Warn when a function marked for inlining cannot be inlined\r\n- `-Wundef`: Warn if an undefined identifier is evaluated in an `#if` directive\r\n- `-Wnested-externs`: Warn about `extern` declarations inside functions\r\n- `-Wunreachable-code`: Warn about unreachable code\r\n- `-Wlogical-op`: Warn about suspicious uses of logical operators in expressions\r\n- `-Wfloat-equal`: Warn about floating point values used in equal comparisons\r\n- `-Wstrict-aliasing=2`: Warn about code that might break strict alising rules\r\n- `-Wredundant-decls`: Warn about redundant declarations inside the same scope\r\n- `-Wmisleading-indentation`: Warn about indentation where statements seem to belong to a block they don't belong to based on their indentation\r\n\r\nFor debug builds also the following flags should be present:\r\n- `-fsanitize=address,undefined`: Warn about OOB memory access and undefined behaviour\r\n- `-ggdb3`: Extended debug symbols\r\n- `-Og`: Like `-O2`, but no reordering of basic blocks, thus making debugging much more comfortable\r\n- `-Werror`\r\n\r\n> See the -W options for clang builds. I recall it was I that added -Werror=dangling-else : that's an example of a programmer error that might compile with unintended change of meaning. So I made it a build-breaker after I did a review that discovered a dangling-else. (Which was not in fact erroneous, still I put the extra curlies in.)\r\n\r\nFor this `-Wmisleading-indentation` should be included.\r\n\r\n> Do you want to nominate more -W flags like those? Better, do it and clean up some warnings? Be my guest, make a pull request.\r\n\r\nNomination list above. Will take a look at fixing warnings once it's no longer a PITA to build from source \u2026\r\n\r\n> Do you want to clean other things in our build system? Suggest it. Modestly. Respectfully of the efforts I and my colleagues on this team have put in. Not with loaded language like \"the state of their build system and the way stuff is botched in there\" please.\r\n> \r\n> And thank you.\r\n\r\nI'd appreciate if the build system could be structured a bit more logically and provide some additional hints for overrides. Like for wxWidgets hinting on some easy way to override to disable it forcing to use the use of the custom wxWidget lib. Also notes on providing custom paths for libs, like is common for `autotools` using `--with-libname=/usr/local/mystuff/libname` would be appreciated.\r\n\r\nApart from this I'm low on spare resources for major contributions as I have several FLOSS projects I maintain or are a regular contributor of. =||= I suggest to move the last few comments to a new issue, because compiler warnings are distinct from pure code style issues because they can be signs of actual bugs. Debating this in a closed issue about code style doesn't do the topic justice and it's likely that devs miss out on the discussion.  =||= I concur.  Locking the comments now.\r\n =||= "], ["848", "Survey on globally distributed software engineering", null, "AsWali", "05/09/21, 05:20:29 PM", "Hey there. \r\n\r\nWe are doing a survey on globally distributed software engineering focused on open source projects. If you have some spare time we would really appreciate your response. The form takes about 10 minutes. Thanks in advance!\r\nSurvey can be found [here] [Spam link removed]\r\n\r\n\r", "I don't think this is the place for that kind of post, surely it would be better to post that kind of thing on Reddit or whatever. =||= Closed as spam. =||= "], ["849", "Update pl.po from Transifex", "Grzegorz Pruchniakowski", "Gootector", "05/09/21, 03:02:29 PM", "Update pl.po from Transifex\r\nProbably the last package of fixes for old translations.\r\n\r\nGreetings,\r\nGootector\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "Thanks once again. =||= Thanks, James!\r\nFinally, I was able to finish the verification of the polish translation \ud83d\ude01 =||= "], ["850", "Audacity Team not listening to Audacity community that they do not want Telemetry in this application they use", "Josh G", "jg777", "05/09/21, 03:37:10 PM", "**Describe the bug**\r\nThe Audacity Team continues to not listen to the Audacity community when they have been very clear in PR #835 that they do not want Telemetry in this application they use.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to PR #835 \r\n2. See #835 that there are currently 3,310 thumbs DOWN ratings regarding this PR.\r\n3. See #835 that there are currently 1,065 comments in this PR.\r\n4. See #835 that tons of Audacity users and the Audacity community does not want Telemetry added to Audacity.\r\n\r\n**Expected behavior**\r\nFor PR #835 to be closed and that no Telemetry be implemented.\r\n\r\n**Screenshots**\r\nN/A\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: [e.g. Mac High Sierra, Ubuntu 18.04, Windows 10]\r\n - Version [e.g. Audacity 2.5.1]\r\n - (if relevant) Sound Device [e.g. Windows WASAPI, USB Sound card]\r\n\r\n**Additional context**\r\nIf the Audacity Team wants to still have a user base then they will listen to the people actually using Audacity.", "I made a [comment](https://github.com/audacity/audacity/pull/835#issuecomment-835829214) describing this to the Muse Group, who apparently do not know about all the forks people are going to make. =||= While providing feedback is very welcome, repeatedly posting your opinion over and over again is considered spamming, and undermines the cause that you intend to promote. =||= "], ["851", "Audacity Team not listening to Audacity community that they do not want Telemetry added into Audacity", "Josh G", "jg777", "05/09/21, 08:50:24 PM", "Describe the bug\r\nThe Audacity Team continues to not listen to the Audacity community when they have been very clear in PR #835 that they do not want Telemetry in this application they use.\r\n\r\nTo Reproduce\r\nSteps to reproduce the behavior:\r\n\r\nGo to PR #835 \r\n\r\n1. See #835 that there are currently 3,310 thumbs DOWN ratings regarding this PR.\r\n2. See #835 that there are currently 1,065 comments in this PR.\r\n3. See #835 that tons of Audacity users and the Audacity community does not want Telemetry added to Audacity.\r\n\r\nExpected behavior\r\nFor PR #835 to be closed and that no Telemetry be implemented.\r\n\r\nScreenshots\r\nN/A\r\n\r\nAdditional information (please complete the following information):\r\n\r\nOS: [e.g. Mac High Sierra, Ubuntu 18.04, Windows 10]\r\nVersion [e.g. Audacity 2.5.1]\r\n(if relevant) Sound Device [e.g. Windows WASAPI, USB Sound card]\r\nAdditional context\r\nIf the Audacity Team wants to still have a user base then they will listen to the people actually using Audacity.", "This is a REAL issue, so please stop closing my bug reports. =||= @jg777 This is, in fact, a real issue. =||= > @jg777 This is, in fact, a real issue.\r\n\r\nAgreed. I had to open this issue as they closed Issue #850  =||= You can stop creating useless issues now.  =||= https://github.com/audacity/audacity/pull/835#issuecomment-835880865 closed this issue \r\n\r\n =||= "], ["852", "The end of audacity.h", "Paul Licameli", "Paul-Licameli", "05/10/21, 05:05:23 AM", "Remove the old Audacity.h header file...\r\n    \r\n... instead, do all that it did either with macros in header files of more\r\nlimited use, or in CMake where there are declarations that really must be\r\npervasive.\r\n    \r\nThis will be a useful preliminary for later refactoring work to make separate\r\nlibraries.\r\n    \r\nSee also commit 19312e4 where similar was done for Experimental.h.\r", "> Would it make sense to rename this file? With the inclusion of macros like MAX_AUDIO, it isn't really about Memory any more?\r\n\r\nI agree maybe not the best new home for the macros, but it was an expedient to help the main thing of this branch, elimination of another header.\r\n\r\nMemoryX.h began a miscellany of old stuff to accommodate certain compilers and imperfect C++ standard library implementations,  that should go away with better standard implementations.\r\n\r\n\r\n =||= I recommend to incorporate the output of `git describe` in the GUI and logs so it is easy for developers to know exactly what code users are running. We have been working towards this on Mixxx.\r\n\r\ncc @Holzhaus and @daschuer =||= > I recommend to incorporate the output of `git describe` in the GUI and logs so it is easy for developers to know exactly what code users are running. We have been working towards this on Mixxx.\r\n> \r\n> cc @Holzhaus and @daschuer\r\n\r\nI won\u2019t comment on the merits of the suggestion, but I think it is not directly relevant to review of this pull request. =||= > \r\n> \r\n> I recommend to incorporate the output of `git describe` in the GUI and logs so it is easy for developers to know exactly what code users are running. We have been working towards this on Mixxx.\r\n> \r\n> cc @Holzhaus and @daschuer\r\n\r\nThis is already being done.  Check the Commit ID in Help -> About Audacity -> Build Information. =||= "], ["855", "Request for clarification on Muse Group's involvement and vision for the Audacity project", "Julien", "domsson", "05/11/21, 04:48:17 PM", "Both the [Audacity website](https://www.audacityteam.org/audacity-musescore-announcement/) as well as [Muse Group's website](https://mu.se/muse-products) states that Muse Group has acquired Audacity. However, hardly any details have been given. The information given on the [Wikipedia page on Muse Group](https://en.wikipedia.org/wiki/Muse_Group) is also vague and questionable at best. All we have to work with is this quote from Tantacrul's video: \r\n\r\n> Audacity has just joined Muse Group, a collection of brands that includes another popular open source music app called MuseScore, which I\u2019m currently in charge of.\r\n\r\nThis raises several important questions. To name a few:\r\n\r\n - Is it even possible for a company to acquire a free and open source project licensed under the GPL?\r\n - How exactly did Muse Group acquire Audacity?\r\n - What rights and power does Muse Group legally have over the Audacity project?\r\n - Can Muse Group even legally claim ownership over the project or do they simply own the trademarks to the name and logo?\r\n - Who exactly is behind Muse Group; what roles do these people have?\r\n - What are Muse Group's visions and goals for Audacity?\r\n - How does Muse Group plan on going about putting these goals and visions into practice?\r\n - How does Muse Group plan on handling situations where they want a new feature but the community rejects it (see [PR 835](https://github.com/audacity/audacity/pull/835))?\r\n - Are any of the core maintainers and team members of Audacity now on the pay roll of Muse Group?\r\n - What is the project father's and core maintainer's role and view of these events?\r", "I'm specially interested in the questions about defining the relationship between Muse Group and external developers like contributors who have their own interest, will and schedule.\r\n\r\nBecause to speak about myself [one of my main concern and interest](https://github.com/audacity/audacity/pull/835#issuecomment-836355997) for Audacity right now is to never see a split of efforts and other waste like I have seen so many time in other projects, either because one group has the name and the other group the workforce, either because of disagreements between parts, either because of lack of interest in being part of a whole.\r\n\r\nWithout much information I assume it's good and welcome if Muse Group can put paid people on making Audacity better and putting Audacity in places it's not there yet, but defining relationship with the community seems to be an important point to address to begin with. Hello people. =||= I'm also curious about this. \"Acquiring\" an open-source project that's licensed under the GPL2 -- or licensed under an open-source license at all -- seems really sketchy to me. (Is it even legal under the GPL to do something like that to begin with?) The lack of information about the acquisition, supposedly from a company who holds a stance that Audacity will remain \"free and open-source\", is also suspect. I think that we as the community have a right to know a lot more than what the company has provided us. If Muse Group -- whoever they are because I've never heard of them -- are trying to put on the face of transparency and trustworthiness, they're failing big time at it. =||= After answering these questions, I think it would be beneficial to work with the community towards written, specific policies on shared governance. I'll point to the [Fedora Council Charter](https://docs.fedoraproject.org/en-US/council/) as a positive example of a for-profit company supporting a community project. RedHat employs a few select people to work on Fedora full time and pays for Fedora's infrastructure, but for the most part the project is run by and for its community. I've been using Fedora for 15 years and never felt concerned that RedHat's involvement with the project was harmful or in conflict with the community. =||= The only thing that I can think of is, that the **name** \"Audacity\" (which is a trademarked name, AFAIK) was sold. I cannot think of any legally possible way of really selling a GPLed source with more rights to/for the buyer than to anyone else would have/retain who aqcuired the source by other means (by e.g. just downloading the source).\r\nSo, the fork \"FOSS-Audacity\" most probably cannot keep this name but would be fine if named \"Aefkaa\" (Audio editor formally known as Audacity)...\r\nEdit: Same as with Libre-/OpenOffice. =||= The \"Audacity\" logo trademark was filed in March 2021:\r\nhttps://tmsearch.uspto.gov/bin/showfield?f=doc&state=4808:oh9d5r.2.12\r\n\r\nIn case that link throws a session error, also refer to:\r\nhttps://www.trademarkelite.com/trademark/trademark-owner/MUSECY%20SM%20LTD. =||= > I'm also curious about this. \"Acquiring\" an open-source project that's licensed under the GPL2 -- or licensed under an open-source license at all -- seems really sketchy to me. (Is it even legal under the GPL to do something like that to begin with?)\r\n\r\n@ethindp Indeed it's possible to acquire an open-source project and it's fully legal (and is not necessarily harmful), GPL2 has nothing to do with this, GPL2 is mostly about making sure the copy you get once under GPL2 will still be GPL2 forever in your hands (even if yourself don't agree with this).\r\n\r\nA company can acquire the name, hence the brand and trademark. It's not the project per se, but a project with its renowned brand is as fragile as a newborn again, so yes selling the brand makes huge part of acquiring a project. Selling only a brand [already happened in the past](https://en.wikipedia.org/wiki/Xonotic#Development) with some other projects, though it appears that's not what is happening with Muse Group and Audacity there, there is multiple articles on the web clearly stating about taking care of the open source side of Audacity, the freeness of it, improving it ([1](https://mu.se/newsroom/tpost/6dhedma301-muse-group-acquires-audacity-expanding-c), [2](https://www.musictech.net/news/industry/audacity-acquired-muse-group-ultimate-guitar-musescore/), [3](https://www.minimachines.net/actu/muse-group-rachete-le-logiciel-audacity-99063)) and even testimony from a developer who joined the team to work on Audacity (and one who know about open source), one who already worked for another open source software previously acquired by Muse Group: [Muse Score](https://musescore.org/). So time will tell, but for now we can't assume it's bad per se, and don't look harmful at first glance (though they may still have to learn a bit about some expectations of open source users given #835). That can be good if they behave well.\r\n\r\nA company can also hire the key developers of a project, hence owning the workforce. A company can hire project heads, acquiring the decision. That can be good if they behave well.\r\n\r\nIn some case (if the sellers got copyright assignment) it may even be possible for a company to buy the copyright of the open source project with right to remove the GPL2 itself. That would not be good if that happened but I doubt it would happen with Audacity, and that's not what Muse Group does with MuseScore they acquired before anyway. So that part looks safe.\r\n\r\n> So, the fork \"FOSS-Audacity\" most probably cannot keep this name but would be fine if named \"Aefkaa\" (Audio editor formally known as Audacity)...\r\n\r\n@Locutus74 A fork would be the worst thing for everyone ([see my comment there](https://github.com/audacity/audacity/pull/835#issuecomment-836355997)), after a decade [Xonotic](https://xonotic.org/) never recovered the Nexuiz coverage after the Nexuiz trademark was sold, after a decade [LibreOffice](https://www.libreoffice.org/) haven't recovered yet the other half of users using OpenOffice because they don't own the OpenOffice trademark\u2026 Such a fork would be bad for users, for audacity as a project, and for Muse Group. No one has something to gain from a fork. This only have to be done on last resort.\r\n\r\nIf MuseGroup seems to have to learn a bit about open source communities, for now all they did were mistakes they can fix and learn from, they didn't tried to harm the project intentionally yet. =||= @illwieckz ... nope, a fork is not necessarilly the worst thing for everyone. LibreOffice is the very best example for this.\r\n\r\nAnd BTW: What you described is exactly **not acquiring a GPLed project**. It's aqcuiring just **the name**, only. \r\n\r\nWhy? Just because the company which aqcuired the project does not have any more rights on it as anyone else who has the source-code. With the name it's a different thing, though.\r\n\r\nAnd the name may be more important in the first place. But not on the long run... =||= I think that what is being lost in all this is the simple question:\r\nWho are these people really, behind the organization known as Ultimate Guitar, or WSM Group, or Muse Group, or MuseCY Holding LTD.?\r\nWho owns the for-proft company called MuseCY Holding LTD?\r\nPersonally, I would not trust their motives until this information is revealed. =||= At least at a first glance \"MuseCY Holding LTD.\" seems to be a typical letterbox (money laundry?) company in Cyprus. \r\nIt therefor most probably is impossible to find out the real owner. And yes, this looks a little bit (more) shady, now... =||= > At least at a first glance \"MuseCY Holding LTD.\" seems to be a typical letterbox (money laundry?) company in Cyprus.\r\n> It therefor most probably is impossible to find out the real owner. And yes, this looks a little bit (more) shady, now...\r\n\r\nBefore we all loose our heads, there's plenty of legal and reasonable reasons to form a shell company.\r\n\r\nAlso wasn't it determined in 835 that MuZe Group is not affiliated with MuseCY?\r\n =||= > Also wasn't it determined in 835 that MuZe Group is not affiliated with MuseCY?\r\n\r\nMaybe. I must admit, that I did lost track after hundreds of posts in 835... =||= > @illwieckz ... nope, a fork is not necessarilly the worst thing for everyone. LibreOffice is the very best example for this.\r\n\r\n@Locutus74 This is not contradictory. My opinion is that the Xonotic fork was the best thing that happened to Nexuiz, in term of direction. The LibreOffice fork is very successful and can be named among the most successful fork in history.\r\n\r\nBut the sad reality around this is even if the fork was the best thing that happened to Xonotic, Xonotic never recovered its recognition and reputation 10 years later, French Wikipedia even [deleted three times the Xonotic page](https://fr.wikipedia.org/wiki/Xonotic) because of lack of recognition.\r\n\r\nThe sad reality is that even if LibreOffice is one of the more successful fork in history, half of the users still use OpenOffice, most of them probably don't know LibreOffice about at all, 10 years later, and I verified this around me.\r\n\r\nForking is engaging oneself for a full time job. This is just wasting time for every parts.\r\n\r\nXonotic didn't have the choice to lose the brand. LibreOffice didn't have the opportunity to keep the brand.\r\n\r\nNote that LibreOffice is a special situation. LibreOffice was based on GO-Office which was an enhanced OpenOffice (basically all the Microsoft docx/xslx things were implemented in GO-Office first), at the time, and before LibreOffice existed, almost all Linux distributions shipped GO-Office under OpenOffice name. It was like, OpenOffice with GO-Office patches. But after all that Oracle buying and other details, the definitive split from OpenOffice was inevitable. LibreOffice suffered from the lose of the name, but they already had the workforce from before Oracle bought OpenOffice wen acquiring Sun.\r\n\r\nSo yes LibreOffice is a perfect example of successful fork, but also the perfect example that even after a decade such fork can't recover the same brand recognition and only gets something like half the users\u2026\r\n\r\nAt this point nothing in MuseGroup acting makes a fork inevitable. They clearly made a mistake, but they can learn from it. No door is closed.\r\n\r\n> And the name may be more important in the first place. But not on the long run...\r\n\r\nBoth Xonotic and LibreOffice examples show that a long run of 10 years is not long enough.\r\n\r\nAnyway this thread is about getting answers from MuseGroup. At this point we need answers from MuseGroup and they made many people angry, but they did not made any unrecoverable mistake that would make a fork inevitable yet\u2026 So better not be responsible for greater harm than they did by causing the fork oneself. At least, MuseGroup didn't forked, and they had right to, that's a notable thing to notice, that means they don't want to split the community. =||= > what Muse Group does with MuseScore\r\n\r\nMuse Group has imposed a CLA on MuseScore. That's another topic though. Let's discuss that in #844. =||= @IGBC I have determined, by emailing Dominic Mazzoni and perusing puiblically available records, that the trademark, \"Audacity\" is owned by MuseCY Holding Ltd., and it was purchased through their legal representative, Tony Berman. So MuseCY Holding Ltd. incorporated in Cyprus is definitely the correct company.\r\n\r\nIf any employees, management, or legal counsel of MuseCY Holding Ltd. are reading this. I urge you to reveal the whole truth about this company, its ownership and leadership. =||= > Muse Group has imposed a CLA on MuseScore. That's another topic though. Let's discuss that in #844.\r\n\r\nThey have **WHAT?**\r\n\r\nIf I would have contributed there I would not sign this but asking them to remove my contribution... They're not on ones right mind... (I really need to clarify if I possibly can except them from using/linking against/derive from my GPLed code (with a lawyer, obviously).) =||= While I don't like CLAs, CLAs can sometime be required even to do free software and get it used. That can be surrealistic, but\u2026 well, that's true, you can read that [testimony](https://mediaarea.net/blog/2018/03/20/Why-we-changed-MediaConch-license) (edit: english link).\r\n\r\nThe developer of the open source [MediaInfo](https://mediaarea.net/en/MediaInfo) and [MediaConch](https://mediaarea.net/MediaConch) explained that he submitted to a call for project, the specifications required GPLv3+/MPLv2+ licenses. His free and open source application was compatible to both GLPv3+ and MPLv2+ (his code was BSD, so compatible with and much more permissive than GLPv3+ and MPLv2+), but he would not have been to submit if he did not have any CLA, because the specification was not to be compatible GPLv3+/MPLv2+, but to be GPLv3+/MPLv2+\u2026 So, the CLA allowed him to relicense from BSD to GPLv3+/MPLv2+ the code he delivered. Otherwise it would have been required for him to rewrite all the code he is not author from scratch, despite being under permissive BSD. This is a true story. =||= I have begun editing the wikipedia page for muse group to insert the correct date of its formation, namely july 2020, not april 2021. (I have citations proving this, of course.) =||= ![image](https://user-images.githubusercontent.com/6403276/117709159-9bb1c500-b19e-11eb-91c0-7b218aa86c13.png)\r\n =||= So, the number of months in which MuseCY Holdings Ltd aka \"muse group\" operated in secret is raised from 4 to 8, as they did not reveal company's existence until 8 months after its actual formation. =||= They are currently attempting to stop another company, Cantab Risk Research Limited , from using the name \"audacity plus\". This is how I know the name of their legal counsel, Tony Berman of Berman Entertainment and Technology Law (BEAT-LAW).\r\nhttps://ttabvue.uspto.gov/ttabvue/v?pno=91267301&pty=OPP =||= First of all, I want to address @illwieckz comment about forking. LibreOffice is *way* more successful than OpenOffice. Libre is the default office software for all the major distros. I don't know the numbers for sure, but I would be **extremely** surprised if OO had maybe 5% of the users Libre has at this point. I don't know of any distro that still includes OpenOffice over LibreOffice. The fork has gone incredibly well.\r\n\r\nHonestly, forking Audacity should definitely be on the table. So what if they have the name? Coming up with a name isn't that hard. Sure, it'd be a blow to the project, but taking that known blow over the unknown damage this company could cause seems like the logical course of action (if it comes down to it, of course -- we still have to wait and see if the company responds in any way). The major distros would almost certainly switch over to the new fork within a very short period of time, as that's where all the work and improvements would be done. If all they've done is acquire the name, then they can't stop anything else. I'm also interested in the fact that they've registered the logo -- my initial assumption would be that someone in the community created that logo under some sort of license (maybe CC?) and contributed it to the project. Perhaps it was the original founder of the project who made it, in which case they could sell the copyright to it. But again, I think it's best to make sure this can't ever happen again. Who knows if they will sell the name and logo to someone else down the line? Making some kind of Audacity Foundation (with whatever the new name would be) and assigning the name and logo to them, to be run by the community, seems like the best safety net.\r\n\r\nNo matter what the company says, remember that they are a for-profit. Their motive lies in making money, not in making good free software. Their bank account will always come first over the community. If they have the correct ideals then open source and making money can go hand in hand with everyone benefiting, but they've not shown any indication of that so far... so I'm definitely hesitant to trust anything they say.\r\n\r\n(Oh, for that petty person who thinks if you don't have GitHub commits you're not allowed to have an opinion -- I moved to GitLab when Micro$oft bought GitHub. And most of my open-source contributions are on there or on the GNOME GitLab instance.) =||= > Making some kind of Audacity Foundation (with whatever the new name would be) and assigning the name and logo to them, to be run by the community, seems like the best safety net.\r\n\r\nThis is somewhat like what Blender does. =||= > (Oh, for that petty person who thinks if you don't have GitHub commits you're not allowed to have an opinion -- I moved to GitLab when Micro$oft bought GitHub. And most of my open-source contributions are on there or on the GNOME GitLab instance.)\r\n\r\nAt least you don't say others don't know how free software or GitHub works. Not having a commit and claiming to know better at the same time is the suspect thing. =)\r\n\r\n[Edit: I don't have a commit on audacity as well, but I do believe to know a bit the topic discussed there, though I'm open to contradictions and don't assume contradiction is necessarily wrong or misinformed just because I would not like it\u2026] =||= @illwieckz \r\n> While I don't like CLAs, CLAs can sometime be required even to do free software and get it used.\r\n\r\nI am sorry, but I regard this to be a \"false flag argument\". If a software-project is GPLvX and the source is delivered as BSD everything **is** fine. You even can directly link against it. The only obligation is to name the authors in the \"about\"-screen and/or at some other prominent location. Maybe in the manual. So there is simply **no reason at all to enforce the source-contribution to be pure GPL**, too. The main project still is and will be GPLed. However: If one would address **me** for one of my libraries to be specifically GPLed (most already are either LGPL, GPL or some (a very few) BSD, BTW...) then off course I would offer double licensing. **But ... for ALL users...** \r\n\r\nIf I can't do that, because I am not **the** single one author, I would contact (at best knowledge) all other authors to negotiate double-licensing. If I can't do that -- maybe because I just can't reach or even know all the authors -- I would simply say: Stay with the license as it is or ... get lost...\r\n\r\n> you can read that testimony (edit: english link).\r\n\r\nOriginal post was reading: \"use a translator to translate to your native language...\"\r\n\r\nGuess what my native language might be... yours is (I guess from syntax and grammar) French. And \"english\" in this context is written \"English\"... You don't mind, that I regard the original text being slightly offensive in this context, do you?\r\n\r\n> [Edit: I don't have a commit on audacity as well, but [...]]\r\n\r\nI don't have a single commit on Github. But, I have a (stone-aged, single...) commit on Audacity and I am in the FOSS-business for about 30+ years, now, starting on Sourceforge (grumpy old man). I -- however -- never felt that a github-commit would be some sort of quality mark... Esp. not after Github being acquired by Microsoft. My code bled into VLC, the Gimp, LMMS and others, being mainly DSP-related  and/or real-time-related \"stuff\". This account however was specifically created to be able to discuss this particular topic. The source isn't (and never will be) here... just call me a paranoid... I would be proud of it. =||= > Guess what my native language might be\r\n\r\nI'm not assuming you're the only one on earth reading that thread neither this thread is about you. =||= > I'm not assuming you're the only one on earth reading that thread neither this thread is about you.\r\n\r\nFine. So, we can just discuss the main topic, again? =||= > I have begun editing the wikipedia page for muse group to insert the correct date of its formation, namely july 2020, not april 2021. (I have citations proving this, of course.)\r\n\r\n@orenwatson Thank you for your efforts! As long as there is no statement from Muse Group or the people in charge of Audacity, we might as well collect as much information as we can. In this vein, would it be helpful to try and make a list of all people we _know_ are involved with (employed by) Muse Group? For now, I am only aware of:\r\n\r\n- [Tantacrul](https://github.com/Tantacrul) - UI/UX, \"in charge\"\r\n- [crsib](https://github.com/crsib) - Programmer\r\n- [workedintheory](https://github.com/workedintheory) - Head of Strategy =||= > in some case (if the sellers got copyright assignment) it may even be possible for a company to buy the copyright of the open source project with right to remove the GPL2 itself.\r\n\r\nNo, this is not possible. The company may choose to develop a closed source version and release that under a different license, but they have no ability to revoke a license granted already. This is a key part of the GPL. Anyone who has used the software may use it, may distribute it, and may modify it and distribute the modifications, provided they comply with the requirements of the GPL. \r\n\r\nIf the company purchased the copyright from all original contributors (a practical impossibility at this point), they could themselves breach the GPL, as they would be using the code as the owners of it, rather than as licensees - but they could not revoke other people's valid licenses, and they could not prevent others from using and sharing their GPL'd versions.  =||= > > in some case (if the sellers got copyright assignment) it may even be possible for a company to buy the copyright of the open source project with right to remove the GPL2 itself.\r\n> \r\n> No, this is not possible. The company may choose to develop a closed source version and release that under a different license, but they have no ability to revoke a license granted already.\r\n\r\n@Blu3wolf Please don't extrapolate on other people words. I never said such company would be able to retroactively remove GPL2 on something delivered. It looks like you assumed words at the end of my sentence, words I never wrote. I never added \u201cretroactively\u201d at the end of the sentence.\r\n\r\nI never wrote those words about retroactivity because I even made it clear some sentence before in the same post you quoted it is not possible to revoke a license granted already:\r\n\r\n> GPL2 is mostly about making sure the copy you get once under GPL2 will still be GPL2 forever in your hands (even if yourself don't agree with this)\r\n\r\n- \u201cThe copy you get once under GPL2 will still be GPL2 forever\u201d \u2192 not possible to revoke a license granted already.\r\n- \u201ceven if yourself don't agree with this\u201d \u2192 even if the company buying copyrights and/or getting CLA signed don't don't agree with this.\r\n\r\nClearly, what have been GPL2 is GPL2 forever, but the ones who may buy copyrights, obtain CLA etc. have rights to add new licenses to the existing code (that would be dual licensing, even with non-free licenses) and have rights to legally publish new version with code that was never GPL2 and will never be, meaning the users can't backport the change to the GPL2 version they got first.\r\n\r\n> If the company purchased the copyright [\u2026] they could not revoke other people's valid licenses, and they could not prevent others from using and sharing their GPL'd versions.\r\n\r\nThis is exactly what I said. We were just agreeing on that topic, so better not assume contradiction first.\r\n\r\nThis is exactly why CLAs can be problematic and people can be concerned about it.\r\n\r\nA company can't buy the copy you already got in the past, but a company can buy almost everything about the future of the software: the name, the brand, the recognition, the workforce, the decision, and the right to change license for the future code.\r\n\r\nOf course people can share their GPL'd version, but we can't assume those GPL'd versions will carry the brand, the recognition, the workforce and the decision. For example LibreOffice carried the workforce and the decision but did not carried the brand and had to build up recognition from scratch.\r\n\r\nThis is pretty problematic, and history shows that even among most successful forks may have hard time to fully recover. I'm not happy with this, but to properly deal with a problem we have to look at things the way they are and not the way we want them to be. =||= Hey everyone.\r\nOur account was flagged on the previous PR, so this message is aimed to let us understand if we are able to comment this PR. Nevermind and have a perfect day! ;-) =||= > ... but the ones who may buy copyrights, obtain CLA etc. have rights to add new licenses to the existing code (that would be dual licensing, even with non-free licenses)...\r\n\r\nErm, not quite... They cannot change the license of existing code. They however could republish the old code using a dual-license model (would not make too much sense for them) and they could **try** to add new code using a non-free license.\r\n\r\nWhy only \"try\"? \r\n\r\nIf there only remains one single line of code of which they do not have a CLA and which is originating as GPL before they added their shiny new stuff, then everything they add for new automatically becomes licensed under GPL, too (key word is \"derivative work\").\r\n\r\nGPL is predatory in this regard: This is one of the main security features built into the GPL because RMS had foreseen situations like this. That twist is all but new... \r\n\r\n> ... but to properly deal with a problem we have to look at things the way they are and not the way we want them to be...\r\n\r\nI really would like stress and second this. =||= > They cannot change the license of existing code.\r\n\r\nI did not said change, I said _add_.\r\n\r\n> They however could republish the old code using a dual-license model\r\n\r\nThat's exactly what I said: \u201c_add new licenses to the existing code (that would be dual licensing [\u2026])_\u201d\r\n\r\nAnyway, we are focusing on details about each other words, not about the specific questions related to Muse Group acquisition of Audacity. So we're loosing our time each other.\r\n\r\nIf something is not perfect in someone's word or may induce misinterpretation, this looks pretty minor compared to the topic, and those minor things can be handled later if they become non-minor at some point anyway. =||= I don't know where [this poster](https://discuss.pixls.us/t/libre-arts-ultimate-guitar-launches-muse-group-and-acquires-audacity/24795/4) got this information and if it is accurate...\r\n\r\n> It has not been widely publicized, but Muse group acquired rights to code contributions from many of the major contributors to the codebase. This doesn\u2019t negate the GPL license, but would probably permit them greater control and maybe the ability to make a non-GPL version, but they haven\u2019t suggested they are interested in that. If they did that, it would kill off the huge user support community and volunteer coder staff, and because the 3.0 codebase is still available, it could be forked from there or their latest GPL release. They may have plans to require license assignment from future third-party contributors, which might reduce the volunteer developer community, but it is not super-active anyway. I\u2019m sure there are bug fix contributions that have not completely been acquired\u2013from anonymous contributors, contributors who have died, and others who are just unfindable, but these would mostly have been reviewed, revised, and committed by identifiable team members who did license their contributions. There could be an issue with these contributions if Muse wanted to roll a pro version not under the GPL. It might require a substantial code audit if they wanted to do this which would be a huge obstacle, but If they tried that and somebody complained, it would mean the un-acquired code would then be clearly identified, and Muse could just pull it out or rewrite it or pay the contributor relicense it. =||= https://mu.se/newsroom/tpost/3dkxig59m1-muse-group-launches-to-support-music-tec\r\n\r\n> Executive roles and company leadership of Ultimate Guitar will transition into similar roles in Muse Group with no other major structural or operational changes within the individual portfolio companies. =||= @illwieckz and @Locutus74 \r\n\r\nJust a quick reminder that this issue is about clearing up Muse Group's involvement and vision for the project. The details of copyright, while still to some degree very relevant here, are probably better discussed in detail over at [844](https://github.com/audacity/audacity/issues/844). =||= Do we need a seperate issue for demanding that the people behind MuseCY Holdings Ltd and/or MuseCY SM Ltd. identify themselves and stop hiding behind Cypriot shell companies? This is not honest and open conduct. \r\nEdit: An proprietary software developed under such circumstances would be considered highly suspect for being malware of some kind, of course here code can be audited, but if this program begins communicating with closed-source code at Muse...\r\n =||= > Do we need a seperate issue for demanding that the people behind MuseCY Holdings Ltd and/or MuseCY SM Ltd. identify themselves and stop hiding behind Cypriot shell companies?\r\n\r\nI don't think so. After all, one of the questions listed is: _\"Who exactly is behind Muse Group; what roles do these people have?\"_\r\n\r\nI've got to say, I'm quite astonished that there is still _no_ reply from _any_ of those who do have at least _some_ of the answers. =||= You're going to have to rely on public statements from https://mu.se/ and what you can work out for yourselves form publicly available information.  \r\n\r\nBeyond that, rely on actual behaviour of people actively working on Audacity.  You can't tell that from immediate actions over the short term, only from longer term.\r\n\r\nWe use GitHub issues for issues with code.  If someone closes this, it will be closed and locked pretty quickly.  I'm converting this to a discussion so that it can stay open, at least for now.\r\n\r\n =||= "], ["856", "Linkage", "Paul Licameli", "Paul-Licameli", "05/10/21, 02:46:56 PM", "Prepare many things to keep linking on Windows after the executable gets split up.\r\n\r\nAnother preliminary chore , but also a sweep touching many lines in the second commit.\r\n\r\nPlease review the first commit, and glance over the second and confirm I'm only adding AUDACITY_DLL_API in many places.\r", "Out of curiousity could someone explain how the AUDACITY_DLL_API decorator on structs and functions effects linking? I am new to how linking on windows works =||= > Out of curiousity could someone explain how the AUDACITY_DLL_API decorator on structs and functions effects linking? I am new to how linking on windows works\r\n\r\nMSVC requires every symbol exported from a DLL to be explicitly declared or it won't be usable from linked code. Alternatively setting the [`WINDOWS_EXPORT_ALL_SYMBOLS`](https://cmake.org/cmake/help/latest/prop_tgt/WINDOWS_EXPORT_ALL_SYMBOLS.html#prop_tgt:WINDOWS_EXPORT_ALL_SYMBOLS) property on the CMake target can take care of that automatically. =||= > Verified PR is clean of any code for purposes other than those described in the PR.\r\n\r\n@IGBC, I am warning you once that I will treat all of your comments on my pull requests as unwelcome spam, and summarily delete them, if after 24 hours, I do not see an apology to my colleague Steve Daulton for the bullying tone you took in this comment.\r\n\r\nhttps://github.com/audacity/audacity/issues/699#issuecomment-835600912\r\n\r\nIf you want to be a serious participant in the conversation about Audacity, approach the established team members with more humility and respect.\r\n\r\nAs all serious participants should treat each other.\r\n =||= > I approve this pull request.\r\n> \r\n> To table for later, some discussion of using different macros to document which interfaces are at least heading in the direction of becoming stable reusable APIs and which ones are highly in flux still.\r\n\r\nStability and good documentation of the interfaces for modules may be a task for later.  My exploratory restructurings accomplished as a side effect the identification of the classes and functions that must become part of the interfaces (at least those that are not inline) because MSVC requires this annotation so that things will link.\r\n\r\nSo the scan for the _API macros will help separate what needs more careful documentation from what is implementation detail.\r\n\r\nWhen a module is separated, AUDACITY_DLL_API will have to be searched-and-replaced with some other macro appropriate to the new module, like MOD_LABEL_TRACK_API.  See commit 9fb3252 where I caused CMake to generate the definitions of those macros.\r\n\r\n> \r\n> I think it is really important to now document in the wiki (or in a doxygen topic document so it stays with the code) the bigger reasoning for this change, the use of PROHIBITED, the requirements on compiler/C++ version. Perhaps some documentation too of where interfaces are beginning to stabilise? This change needs to be understood in context.\r\n> \r\n> PROHIBITED feels (based on my coding style) like extra inconvenience in development. However, if locking more and more things down for safety becomes ubiquitous, then PROHIBITED is just idiom, part and parcel of developing in Audacity - something every Audacity developer must learn once. So I have no problem with it, provided we are heading towards systematic safer development with well documented rationale. The danger I see is in (a) transition, having a higgledy piggledy mix of what is done safely and what isn't that is harder to work with (b) rationale only known/understood by the developer (you, Paul) who is making the code safer.\r\n\r\n\r\nPROHIBITED is just a macro that expands to\r\n= delete\r\nWhich since C++11 causes a compilation error when overload resolution chooses the function declared with it.  It's the proper way now to guarantee that a class is no-copy by making such declarations of copy construction and assignment.\r\n\r\nWhy do I use the macro?  It began with that naked-new cleanup years ago.  I wanted an easy textual scan for all uses of the delete keyword, to verify there are not naked deletes that should be fixed with smart pointers and RAII idiom.  This macro just keeps those uses of = delete out of the textual scan.\r\n\r\nIt's not really about \"safety\" unless that term includes non-leakage of memory.\r\n\r\n =||= > \r\n> \r\n> > Verified PR is clean of any code for purposes other than those described in the PR.\r\n> \r\n> @IGBC, I am warning you once that I will treat all of your comments on my pull requests as unwelcome spam, and summarily delete them, if after 24 hours, I do not see an apology to my colleague Steve Daulton for the bullying tone you took in this comment.\r\n> \r\nOh, you didn't know Paul?  Lauren is a member of the open source S.W.A.T. team and is our new PR auditor.  She takes her commitment to Audacity VERY seriously too since she's been a (self appointed) \"member\" for all of a few days.  I hope she can commit the years upon years that the rest of the team has put into the project.\r\n =||= By all means @IGBC, keep an eye on pull requests being opened. But sarcastic code reviews and comments don't help anything (that goes for both sides). =||= > > > Verified PR is clean of any code for purposes other than those described in the PR.\r\n> > \r\n> > \r\n> > @IGBC, I am warning you once that I will treat all of your comments on my pull requests as unwelcome spam, and summarily delete them, if after 24 hours, I do not see an apology to my colleague Steve Daulton for the bullying tone you took in this comment.\r\n> \r\n> Oh, you didn't know Paul? Lauren is a member of the open source S.W.A.T. team and is our new PR auditor. She takes her commitment to Audacity VERY seriously too since she's been a (self appointed) \"member\" for all of a few days. I hope she can commit the years upon years that the rest of the team has put into the project.\r\n\r\nI share your sense of frustration.  But I will also allow those who know something about code (and this one might), and who want to offer serious suggestions (rather than presuming to dictate to us how we must do things), a chance to change their tone.  So I'm withholding my own sarcasm.\r\n\r\nI don't want an epic argument about etiquette starting here either.  So please, enough said from us, unless @IGBC has an answer.\r\n\r\nThe pull request, meanwhile, is merged (by me) after your examination of it.\r\n =||= > > Verified PR is clean of any code for purposes other than those described in the PR.\r\n> \r\n> @IGBC, I am warning you once that I will treat all of your comments on my pull requests as unwelcome spam, and summarily delete them, if after 24 hours, I do not see an apology to my colleague Steve Daulton for the bullying tone you took in this comment.\r\n> \r\n> [#699 (comment)](https://github.com/audacity/audacity/issues/699#issuecomment-835600912)\r\n> \r\n> If you want to be a serious participant in the conversation about Audacity, approach the established team members with more humility and respect.\r\n> \r\n> As all serious participants should treat each other.\r\n\r\nApologies to @SteveDaulton for the tone I took with him in  [#699 (comment)](https://github.com/audacity/audacity/issues/699#issuecomment-835600912). Full disclosure I was actually drunk when I posted that. I consider it a lesson learnt I probably shouldn't log into GitHub at all when not in a professional mindset. I wish to also extend my apologies to anyone else who felt attacked or unwelcome because of my conduct in #699\r\n\r\n> > > Verified PR is clean of any code for purposes other than those described in the PR.\r\n> > \r\n> > \r\n> > @IGBC, I am warning you once that I will treat all of your comments on my pull requests as unwelcome spam, and summarily delete them, if after 24 hours, I do not see an apology to my colleague Steve Daulton for the bullying tone you took in this comment.\r\n> \r\n> Oh, you didn't know Paul? Lauren is a member of the open source S.W.A.T. team and is our new PR auditor. She takes her commitment to Audacity VERY seriously too since she's been a (self appointed) \"member\" for all of a few days. I hope she can commit the years upon years that the rest of the team has put into the project.\r\n\r\nWell ouch. But mostly not untrue. In #835 I did point out that I would be monitoring all commits from now on. And I promise you I will not be going away in a few days either. I don't consider it some sort of open source SWAT manouvour either. I think its an important roll in the foss community.\r\n\r\nAs for my remark in my code audit. It is not intended sarcastically or with malice, only as a notice to anyone who looks at this PR and sees 1000 lines changed that they have been checked and that we don't need a repeat of #835. Nobody (especially me) wants all that drama to happen again. \r\n\r\nSo in summary. apologies to @SteveDaulton  and @Paul-Licameli. I am here to help. Message received, I will take a more relaxed tone with the community from here on out.\r\n\r\nBack on topic I am pleased an exited to see work commencing on extracting some of the dependencies out of the binary, and if anyone is interested in handing out work packets I am more than happy to go do some boilerplate work. =||= I accept your apology, on my own behalf.  I won't speak for Steve.\r\n\r\nAs for watching the commits, you may have noticed a big line count in this one.  True.  But as you see, it was one of those boring routine sweeps of things.  Nothing like the inclusion of a whole new library.\r\n\r\n =||= "], ["858", "Meta Issue: Issue Labels", "SEGFAULT", "IGBC", "05/22/21, 12:42:42 PM", "Can we get some Issue labels, so we can more quickly filter between bugs, feature requests, etc?\r\n\r\nI would really like to be able to keep an eye on just bugs, for one thing it'll make it way quicker to pick out something to code on. But as of right now we don't have any way of filtering them in GitHub.\r", "Hi! We will be going in that direction soon. For now, bugs are tracked using https://bugzilla.audacityteam.org/ =||= @IGBC - Do you want to propose some issue labels?\r\n\r\nMy thoughts are that GitHub issues will become issues that we actually are able to and expect to close, whereas GitHub discussions (newly opened up) will be ongoing discussions open to different points of view.  The distinction between actual QA bug work (in bugzilla) and general open to anyone to add to wish list and questions and ideas (here on GitHub) is one reason we've in the past kept bugzilla as a closed invitation only platform.  People have to understand what we mean by P2, P3, Enh: and how we work, for their contributions to be useful there.\r\n\r\nFYI the issue labels we have in Bugzilla are:\r\n\r\n* Repeatable, RepeatableAll (i.e. all platforms), Locale, Accessibility, MoonPhase, Enhancment.\r\n* Slow, 64Bit, JACK, AudioUnits, WASAPI, NoteTrack, LV2....\r\n =||= I think starting with high level labels: bug, feature request, suggestion, etc is the place to start, then as groups working on such things identify areas where subdivision is needed create a new set of sub labels. In my work below the category I usually split by module, but being new to the audacity code base I don't know how applicable modules are. =||= So I've added more labels.\r\nProbably the two most important are bug and bug-distro.\r\n\r\nThe distinction is that 'bug' is used for platforms we build and test for, and 'bug-distro' is for distros or variants that we don't yet build and test for.\r\n\r\n@IGBC - How do you want to handle the next step for this issue, either:\r\n* Close it since there now are some labels on most GitHub issues\r\n* Convert this issue to a general discussion of future bug handling (and so move it to discussions and retitle)\r\n* Some other option. =||= I've adding labels.  I think the meta-issue is addressed now.  Closing. =||= "], ["859", "community usability testing contributions", "Be", "Be-ing", "05/11/21, 03:30:57 PM", "@clarissalimab has recently worked with several different projects to create [templates](https://github.com/clarissalimab/ux) for contributors to organize and document usability tests. Watch her [presentation](https://framatube.org/videos/watch/02151d79-d422-4012-a547-e01c9e54c7f7) about this from Libreplanet 2021. Would this be something that would be welcome for Audacity?\r\n\r\ncc @Tantacrul", "Oh! Very nice :)\r\n\r\nWe'll be doing a lot of this. One of my favourite parts of the job. =||= "], ["860", "Icon for Audacity from Papirus icon theme for Linux (Open Source) ", "Lu\u00eds Eduardo Ribeiro Guerra", "luisrguerra", "05/11/21, 11:21:31 PM", "### Icon from [Papirus](https://github.com/PapirusDevelopmentTeam/papirus-icon-theme) Open Source (GPL-3.0 License) icon theme for Linux \r\n**Credit:** Icon made by [Varlesh](https://github.com/varlesh)\r\n\r\nThe Audacity icon looks bad. The Papirus icon would leave the application with a new look, much more modern and beautiful. Users would definitely approve that change. The Papirus theme has a great quality, all icons are in vector format (SVG) and aligned to the pixel grid for each resolution.\r\n\r\n16x16 PNG:\r\n![16](https://user-images.githubusercontent.com/31783838/117718261-41bafa80-b1b2-11eb-8c23-03067632bec0.png)\r\n22x22 PNG:\r\n![22](https://user-images.githubusercontent.com/31783838/117718274-454e8180-b1b2-11eb-888b-47ff9e36a471.png)\r\n24x24 PNG:\r\n![24](https://user-images.githubusercontent.com/31783838/117718283-48497200-b1b2-11eb-81cd-d15c88fc7d6f.png)\r\n32x32 PNG:\r\n![32](https://user-images.githubusercontent.com/31783838/117718298-4c758f80-b1b2-11eb-8f03-163263580162.png)\r\n48x48 PNG:\r\n![48](https://user-images.githubusercontent.com/31783838/117718327-526b7080-b1b2-11eb-974b-178b242c8ab2.png)\r\n64x64 PNG:\r\n![64](https://user-images.githubusercontent.com/31783838/117718358-5bf4d880-b1b2-11eb-823e-8766176a4cfd.png)\r\n96x96 PNG:\r\n![96](https://user-images.githubusercontent.com/31783838/117718373-60b98c80-b1b2-11eb-8f5c-8940d3c896b7.png)\r\n128x128 PNG:\r\n![128](https://user-images.githubusercontent.com/31783838/117718384-63b47d00-b1b2-11eb-9985-56b6e1155baa.png)\r\n256x256 PNG:\r\n![256](https://user-images.githubusercontent.com/31783838/117718395-67480400-b1b2-11eb-9809-a15da85a189d.png)\r\n\r\n**Vector Images:**\r\n16x16 SVG\r\n![16](https://svgshare.com/i/X9K.svg)\r\n22x22 SVG:\r\n![22](https://svgshare.com/i/X7y.svg)\r\n24x24 SVG:\r\n![24](https://svgshare.com/i/X9M.svg)\r\n32x32 SVG:\r\n![32](https://svgshare.com/i/X9L.svg)\r\n48x48 SVG:\r\n![48](https://svgshare.com/i/X7c.svg)\r\n64x64 SVG:\r\n![64](https://svgshare.com/i/X7x.svg)\r\n\r\n![AudacityLogoWithName](https://user-images.githubusercontent.com/31783838/117719224-84c99d80-b1b3-11eb-9512-1eaa493e3f65.png)\r", "I was tempted to commit this in order to troll Tantacrul, when he looks at Audacity again tomorrow morning, but I couldn't bring myself to do that.\r\n\r\nThis is almost certainly going to just get closed presently.  Please have a [look at the forum](https://forum.audacityteam.org/viewforum.php?f=67) where we curate the many icons.  That's the correct or best place to post a new icon proposal.\r\n\r\nHave a look too at the comment about [the cherry on the cake](https://wiki.audacityteam.org/wiki/Design_Topics#Graphic_Design).  What we really need is systematic improvement of Audacity UX.  Changes to the logo if/when they happen are likely to happen at the same time as improvements to UX, in a way that is consistent with that.\r\n\r\n\r\n\r\n\r\n =||= "], ["861", "Using WxWidgets Qt backend?", "Filipe Coelho", "falkTX", "05/11/21, 01:41:47 PM", "This is more of a question rather than a feature request.\r\nAs Musescore is done in Qt and Muse Group is hiring Qt developers, seems the interest is on Qt things.\r\nAudacity is an old codebase, changing the entire toolkit is not a good decision at this point, too much core elements rely on WxWidgets.\r\nIf everyone working in the codebase is familiar with the same toolkit (say Qt) it makes the overall process much smoother.\r\n\r\nNow with that said, WxWidgets has a WIP Qt backend.\r\nFind more details in https://wiki.wxwidgets.org/WxQt\r\n\r\nSo I am opening this ticket to bring a discussion around this topic.\r\nI see a few clear benefits from such move:\r\n\r\n1. Easier to maintain, as less platform-specific solutions are needed (whatever WxWidgets does not do, Qt will)\r\n2. Consistent look across all platforms (Qt allows custom themes)\r\n3. More integrated into what Muse Group devs are working with right now.\r\n\r\nI am not just opening a ticket to request things, I actually went ahead and spent some hours to try this out.\r\nThere are a few places in Audacity where code needs to be adapted, but it is only a few days work maximum.\r\nI was able to hack around in a few places in Audacity code to make everything build and run.\r\nAs a bonus, I threw in my own custom color palette and style that I use in Carla.\r\nHere are a few screenshots to show the result:\r\n\r\n![Screenshot_20210510_233946](https://user-images.githubusercontent.com/1334853/117733850-2b309580-b1ea-11eb-9888-60801dc4b0fa.png)\r\n\r\n![Screenshot_20210510_234834](https://user-images.githubusercontent.com/1334853/117733890-400d2900-b1ea-11eb-892a-a3148ca4041c.png)\r\n\r\nnative file dialog through qt:\r\n\r\n![Screenshot_20210510_234937](https://user-images.githubusercontent.com/1334853/117733988-67fc8c80-b1ea-11eb-933c-c88c8409898a.png)\r\n\r\n![Screenshot_20210510_235118](https://user-images.githubusercontent.com/1334853/117734085-a2fec000-b1ea-11eb-879d-574136f2b43f.png)\r\n\r\nColors can be changed of course, I just like this style in particular. It is a slightly modified Fusion theme from Qt.\r\n\r\n\r\nNow the main question is... is there interest on this?\r\n\r\nWxWidgets Qt backend is still work-in-progress yes, but on the other hand Audacity does not need the entire thing.\r\nFixing WxWidgets Qt side (and then submitting patches upstream) could be a way forward here.\r\n\r\nLooking forward to comments and/or opinions.\r", "> Consistent look across all platforms (Qt allows custom themes)\r\n\r\nTo clarify, does the theme come from Qt or wxWdigets? Sharing a Qt theme between Audacity and MuseScore could be an interesting idea. =||= Theme is from Qt side.\r\nQt themes are done in C++, but there are a few \"theme engines\" like https://github.com/tsujan/Kvantum/tree/master/Kvantum that allow for SVG asset rendering.\r\n\r\nEDIT: An extra note worth considering, is that Qt allows for applying CSS-like stylesheets on top of application widgets. So as long as each widget object name is defined, one can theme things with CSS :star_struck:  =||= The wxQT backend is somewhat minimal currently - and if I recall only one main group was contributing to it for their own app support. There are many places in it that may end up just not working because parts haven't been implemented (one major place that hasn't been implemented is the OpenGL support and `wxGLCanvas`). =||= Also, switching to the wxQT backend is a lot more work for packaging on Linux than just switching to QT, since linux distros don't build anything other than the wxGTK backend normally. =||= From what I have tested and saw in the code, a lot of stuff already works. Some drawing issues seem to be due to transparency being used, so perhaps the ghosting is fixed by a simple Qt::WA_OpaquePaintEvent in the right places.\r\nI didnt check OpenGL related things, is Audacity using those?\r\n\r\nOn a somewhat related topic...\r\nI do not know what are Muse Group plans for Audacity, looking at the recent commits it seems to me the intention is to make an engine out of Audacity to be usable on some new GUI (is that what QML is for?)\r\nDoing a brand new GUI from scratch is a lot of work, compared to fixing up something that mostly works already.\r\nThe fact that the same style could be applied to Musescore and Audacity (while retaining Audacity's iconic UI) is worth a lot.\r\n =||= There's also the much requested \"Audacity for mobile\" to consider. Does wxQt support Android or iOS yet? The last time I looked, it didn't. =||= Desktop widgets make no sense for mobile, and the current design does not fit well into touch input.\r\nSo even if WxWidgets + Qt could be made to work on mobile, a brand new Ui is needed there. Start with the simple stuff than slowly add as much as possible from the main Audacity. =||= "], ["862", "Types: fix missing #include <limits>", "Be", "Be-ing", "05/14/21, 08:24:03 PM", "This is required to build on Fedora 34.", "Is there a reason this has not been merged yet? =||= No especial reason.  It's done now in master.\r\n =||= "], ["863", "remove todo.txt", "Be", "Be-ing", "05/25/21, 06:29:41 PM", "This has not been updated since 2012. I presume nothing in it is relevant anymore.", "Closing due to imposition of CLA #932 =||= "], ["865", "audacity.desktop: add Keywords field", "Be", "Be-ing", "05/25/21, 06:29:36 PM", "upstreaming a patch from Debian\r\nhttps://salsa.debian.org/multimedia-team/audacity/-/blob/master/debian/patches/0001-Add-keywords-to-desktop-file.patch", "Closing due to imposition of CLA #932 =||= "], ["870", "AudioIOBase: add missing #include <portaudio.h>", "Be", "Be-ing", "05/25/21, 06:29:13 PM", "Building with the system portaudio does not work without this.", "ping =||= you need to sign the CLA first =||= There's a CLA for Audacity now? Are you confusing it with MuseScore? =||= #932\r\n\r\nedit: snipped garbage added by my mail client =||= Oh dear. Well, I'll close my PRs then. I will not stand for my code being allowed to be relicensed as proprietary software. =||= "], ["871", "AudioIO uses private PaUtil_GetTime API of PortAudio", "Be", "Be-ing", "08/12/21, 01:15:30 PM", "PaUtil_GetTime is defined in [src/common/pa_util.h in PortAudio](https://github.com/PortAudio/portaudio/blob/master/src/common/pa_util.h). This header is not installed by the build system as confirmed by checking the files installed by Fedora's portaudio-devel package:\r\n```\r\n\u276f rpm -ql portaudio-devel\r\n/usr/include/pa_jack.h\r\n/usr/include/pa_linux_alsa.h\r\n/usr/include/pa_unix_oss.h\r\n/usr/include/portaudio.h\r\n/usr/include/portaudiocpp\r\n/usr/include/portaudiocpp/AutoSystem.hxx\r\n/usr/include/portaudiocpp/BlockingStream.hxx\r\n/usr/include/portaudiocpp/CFunCallbackStream.hxx\r\n/usr/include/portaudiocpp/CallbackInterface.hxx\r\n/usr/include/portaudiocpp/CallbackStream.hxx\r\n/usr/include/portaudiocpp/CppFunCallbackStream.hxx\r\n/usr/include/portaudiocpp/Device.hxx\r\n/usr/include/portaudiocpp/DirectionSpecificStreamParameters.hxx\r\n/usr/include/portaudiocpp/Exception.hxx\r\n/usr/include/portaudiocpp/HostApi.hxx\r\n/usr/include/portaudiocpp/InterfaceCallbackStream.hxx\r\n/usr/include/portaudiocpp/MemFunCallbackStream.hxx\r\n/usr/include/portaudiocpp/PortAudioCpp.hxx\r\n/usr/include/portaudiocpp/SampleDataFormat.hxx\r\n/usr/include/portaudiocpp/Stream.hxx\r\n/usr/include/portaudiocpp/StreamParameters.hxx\r\n/usr/include/portaudiocpp/System.hxx\r\n/usr/include/portaudiocpp/SystemDeviceIterator.hxx\r\n/usr/include/portaudiocpp/SystemHostApiIterator.hxx\r\n/usr/lib64/libportaudio.so\r\n/usr/lib64/libportaudiocpp.so\r\n/usr/lib64/pkgconfig/portaudio-2.0.pc\r\n/usr/lib64/pkgconfig/portaudiocpp.pc\r\n```\r\n\r\npa_util.h is not listed in the [PortAudio documentation](http://files.portaudio.com/docs/v19-doxydocs/group__public__header.html) either. Audacity is using a private function of PortAudio. This prevents linking Audacity to packages of PortAudio.\r\n\r\nThe code that uses PaUtil_GetTime is guarded by an #ifdef:\r\n```\r\n#ifdef EXPERIMENTAL_MIDI_OUT\r\n// return the system time as a double\r\nstatic double streamStartTime = 0; // bias system time to small number\r\n\r\nstatic double SystemTime(bool usingAlsa)\r\n{\r\n#ifdef __WXGTK__\r\n   if (usingAlsa) {\r\n      struct timespec now;\r\n      // CLOCK_MONOTONIC_RAW is unaffected by NTP or adj-time\r\n      clock_gettime(CLOCK_MONOTONIC_RAW, &now);\r\n      //return now.tv_sec + now.tv_nsec * 0.000000001;\r\n      return (now.tv_sec + now.tv_nsec * 0.000000001) - streamStartTime;\r\n   }\r\n#else\r\n   static_cast<void>(usingAlsa);//compiler food.\r\n#endif\r\n\r\n   return PaUtil_GetTime() - streamStartTime;\r\n}\r\n#endif\r\n```\r\n\r\nSo I tried building with the `-Daudacity_use_portaudio=system -DUSE_PORTMIXER=OFF` CMake options and the patch below to use the system PortAudio without Audacity's PortMixer fork which requires Audacity's PortAudio fork to build and without MIDI support:\r\n```\r\ndiff --git a/cmake-proxies/CMakeLists.txt b/cmake-proxies/CMakeLists.txt\r\nindex 35250773c..c3ffc4710 100644\r\n--- a/cmake-proxies/CMakeLists.txt\r\n+++ b/cmake-proxies/CMakeLists.txt\r\n@@ -13,7 +13,7 @@ addlib( expat              expat       EXPAT       YES   YES   \"expat >= 2.1.0\"\r\n addlib( lame               lame        LAME        YES   YES   \"lame >= 3.100\" )\r\n addlib( libsndfile         sndfile     SNDFILE     YES   YES   \"sndfile >= 1.0.28\" )\r\n addlib( libsoxr            soxr        SOXR        YES   YES   \"soxr >= 0.1.1\" )\r\n-addlib( portaudio-v19      portaudio   PORTAUDIO   YES   YES   \"\" )\r\n+addlib( portaudio-v19      portaudio   PORTAUDIO   YES   YES   \"portaudio-2.0\" )\r\n addlib( sqlite             sqlite      SQLITE      YES   YES   \"sqlite3 >= 3.32.0\" )\r\n \r\n # Optional libraries\r\n@@ -36,7 +36,7 @@ if (NOT USE_MIDI AND\r\n endif ()\r\n \r\n \r\n-addlib( portmixer          portmixer   PORTMIXER   NO    YES   \"\" )\r\n+#addlib( portmixer          portmixer   PORTMIXER   NO    YES   \"\" )\r\n if (NOT USE_PORTMIXER AND\r\n    \"EXPERIMENTAL_AUTOMATED_INPUT_LEVEL_ADJUSTMENT\" IN_LIST\r\n       EXPERIMENTAL_OPTIONS_LIST )\r\ndiff --git a/src/Experimental.cmake b/src/Experimental.cmake\r\nindex 30c01792a..ad0cc9374 100644\r\n--- a/src/Experimental.cmake\r\n+++ b/src/Experimental.cmake\r\n@@ -121,7 +121,7 @@ set( EXPERIMENTAL_OPTIONS_LIST\r\n    # RBD, 1 Sep 2008\r\n    # Enables MIDI Output of NoteTrack (MIDI) data during playback\r\n    # USE_MIDI must be defined in order for MIDI_OUT to work\r\n-   MIDI_OUT\r\n+   #MIDI_OUT\r\n \r\n    # JKC, 17 Aug 2017\r\n    # Enables the MIDI note stretching feature, which currently\r\n```\r\nbut this fails to build:\r\n```\r\n../src/AudioIO.cpp: In member function \u2018virtual void AudioIO::StopStream()\u2019:\r\n../src/AudioIO.cpp:2452:4: error: \u2018mMidiPlaybackTracks\u2019 was not declared in this scope; did you mean \u2018mPlaybackTracks\u2019?\r\n 2452 |    mMidiPlaybackTracks.clear();\r\n      |    ^~~~~~~~~~~~~~~~~~~\r\n      |    mPlaybackTracks\r\n```", "Debian hacks around this with a [really ugly hack](https://salsa.debian.org/multimedia-team/audacity/-/blob/master/debian/patches/0002-PATCH-Fix-building-against-the-system-portaudio-libr.patch) to just implement the PaUtil_GetTime function directly in src/AudioIO.cpp. =||= This fix will be easy, but I feel like that #853 should go first. The reason is - stuff like https://github.com/audacity/audacity/blob/master/src/AudioIO.cpp#L477 looks a bit spooky when you build against system library :) =||= Copying over a [comment](https://github.com/audacity/audacity/issues/840#issuecomment-838316089) from @rbdannenberg:\r\n> Pa_GetStreamTime and PaUtil_GetTime are different clocks running at\r\n(slightly) different rates. If you replaced one with the other, then you\r\neither created or fixed a problem.\r\n\r\nI for one will not bother figuring out whether that creates or fixes a problem. =||= My dear Be-ing, accept my apologies for the inconveniences caused you by the state of the source tree.\r\n\r\nPlease see the recently pushed c3babc1 which makes it possible once again to compile with EXPERIMENTAL_MIDI_OUT undefined.\r\n\r\nLet me explain that in the summer of 2017, for version 2.2.0, @Pokechu22 (a friend of Audacity then and now), Roger Dannenberg (the co-founder of Audacity and a portaudio contributor), Steve Daulton, I, and others worked hard together to make MIDI playback work cross-platform.  Getting the timing to work right on all platforms was difficult, especially in the case of Linux with ALSA.  It was Roger's hard work especially that led to the present expedient after much trial and error.\r\n\r\nThe EXPERIMENTAL_MIDI_OUT branch was at last made good enough to be turned on in production code by default.  But unfortunately, we were then negligent in ensuring the continued possibility to build the program with the same turned off.\r\n\r\nDoing so will now build and give you a version of Audacity without its MIDI playback capability.  But perhaps you and your users would find that restriction of functionality unacceptable.\r\n\r\nIf so, then propose a fix that preserves well synchronized MIDI playback on all platforms, as verified by testing.\r\n\r\n =||= Thanks for fixing the build without the `EXPERIMENTAL_MIDI_OUT` option and providing that context. I don't think that building without MIDI playback would be a good compromise. However, if this issue is solved, I think it would be a good compromise for Linux distribution packages to disable building with PortMixer and link to their system's PortAudio package.\r\n\r\n#210 looks like it may be a viable solution if it is rebased and updated for CMake.\r\n\r\nI am doubtful anyone would have seriously considered the present implementation using a library's private API in the first place if PortAudio was not vendored. =||= The current implementation was used without knowledge that it didn't work on all platforms; if I recall correctly, what I did was resurrect a lot of _very_ old code that already existed in Audacity, which had some design decisions that probably wouldn't have been made if written from scratch.\r\n\r\nI can't recall if there were timing/synchronization issues with `Pa_GetStreamTime` versus `PaUtil_GetTime`; I think there might have been but I don't remember doing extensive testing.  It would have been mentioned on the mailing list (but I don't have time to dig through that right now).\r\n\r\nIt's also worth noting that the reason audacity does the patch to PortAudio is because `pa_util.h` [has `extern \"C\"`](https://github.com/PortAudio/portaudio/blob/39bfe6c63df5b85bb651f16327e7386504089276/src/common/pa_util.h#L54-L57), but the actual implementations in [pa_win_util.c](https://github.com/PortAudio/portaudio/blob/39bfe6c63df5b85bb651f16327e7386504089276/src/os/win/pa_win_util.c) and [pa_unix_util.c](https://github.com/PortAudio/portaudio/blob/39bfe6c63df5b85bb651f16327e7386504089276/src/os/unix/pa_unix_util.c) do not have `extern \"C\"`.  IMO that's a bug in PortAudio, and I _think_ that linking with the system PortAudio would work if it were fixed (even if it is an internal API).  (This has almost certainly been discussed on the list before, but I don't remember the details and it's been a long time.) =||= > IMO that's a bug in PortAudio, and I think that linking with the system PortAudio would work if it were fixed (even if it is an internal API).\r\n\r\nI don't think it's a bug in PortAudio. Audacity is using a private API. There is no way to use this API when PortAudio is used normally; the header for the symbol is not installed and Audacity fails to link. =||= > It's also worth noting that the reason audacity does the patch to PortAudio is because pa_util.h has extern \"C\", but the actual implementations in pa_win_util.c and pa_unix_util.c do not have extern \"C\". IMO that's a bug in PortAudio,\r\n\r\nYou shouldn't need to put the extern on the function definition and the declaration. Putting it on the declaration in the header and then having that included in the file containing the definitions before the definitions should make the functions all have C linkage on every standards-compliant compiler.\r\n\r\n>  and I think that linking with the system PortAudio would work if it were fixed (even if it is an internal API). (This has almost certainly been discussed on the list before, but I don't remember the details and it's been a long time.)\r\n\r\nNo, I don't think it would be. PortAudio tells the linker exactly what it wants exposed through a `.def` file on Windows, https://github.com/PortAudio/portaudio/blob/master/cmake_support/template_portaudio.def, so only those functions are considered its public API and will be implicitly linked to. They do the same thing when building with autotools and specify the public linkage here: https://github.com/PortAudio/portaudio/blob/master/Makefile.in#L47. =||= "], ["872", "Create central entry point for build documentation", null, "BenBE", "05/11/21, 01:52:19 PM", "Given that building Audacity is non-trivial<sup>[[citation needed](https://xkcd.com/285/)]</sup> there should be a central document covering the basics of building the software, required dependencies like build tools and the general overview of things that need to be done, what settings there are available and so on.\r\n\r\nThus it would be great to have a central `BUILDING.md` or similar as entry point in the root directory of the source tree that covers the basics of building and referencing the other, platform-specific documentation in `<platform>/build.txt` as appropriate. This central document also should provide references to other important sources of information and where further help can be obtained. The purpose of this central document is to provide all necessary details to building the software so they are available offline given only the source tarball. The platform specific documents may supplement troubleshooting details for each platform as appropriate.\r\n\r\nThe build information also could provide references to how code contributions (`CONTRIBUTIONS.md` and `STYLEGUIDE.md`) should be handled.\r\n\r\nAnd while a Wiki to collect these information may be useful for quick contributions of tips&tricks for the build process it is largely unsatisfactory for someone who has to rely on the bare minimum of external sources. And given the debian-legal test for DFSG compliance you want to minimize reliance on external resources as much as possible.\r\n\r\nThis issue came about based on missing satisfaction with the overall build process and its documentation as discussed in several other issues, like #625, #835, #853.", "> Given that building Audacity is non-trivial[[citation needed](https://xkcd.com/285/)] there should be a central document covering the basics of building the software, required dependencies like build tools and the general overview of things that need to be done, what settings there are available and so on.\r\n\r\nThat would be here: https://wiki.audacityteam.org/wiki/For_Developers\r\nThough it is not always as up to date as we would like. =||= @SteveDaulton - An incorrect explanation for closing.\r\n\r\nThat link is not in the source tree, which BenBE is asking for in the text, though not spelling out in the issue title.  The correct link for justifying closing is this one, which IS in the source tree:\r\n\r\nhttps://github.com/audacity/audacity/blob/master/INSTALL \r\n\r\nIt does reference the other platform-specific docs, and there is enough difference between platforms that it is right that INSTALL delegates everything to those docs.\r\n\r\nOur policy is to (try to) provide one way of building, written up in the source tree, and then offer variations (such as WSL, signing on Windows, fetching the manual) in the wiki.  Our how to build documentation needs to be improved.  One approach is to treat the CI builds as the gold standard, since they are always working, and then document and date variations, with a caveat emptor warning, since build instructions, such as our long obsolete instructions for MinGW rot if there is no one actively using that build.\r\n\r\nI would be in favour of a new discussion topic on improving build instructions.  'Issues' by their nature need to get closed, whereas discussion topics can be ongoing.  I do think keeping build instructions in a good state is an ongoing discussion, is important, and so many different people have different needs from them.\r\n =||= > @SteveDaulton - An incorrect explanation for closing.\r\n> \r\n> That link is not in the source tree, which BenBE is asking for in the text, though not spelling out in the issue title. The correct link for justifying closing is this one, which IS in the source tree:\r\n> \r\n> https://github.com/audacity/audacity/blob/master/INSTALL\r\n\r\nFair enough. I had assumed that (upper case) INSTALL in the root directory was so obvious that he couldn't  mean that. Thanks for the correction. =||= Somehow missed that when looking through things \u2026 =||= "], ["875", "UX - Updated play at speed", "James Crook", "JamesCrook", "05/11/21, 12:26:48 PM", "This is an update to play at speed,  to allow negative speeds and looping.\r\n\r\n![PlayAtSpeed](https://user-images.githubusercontent.com/1621525/117813786-6cad5900-b25b-11eb-83bd-4361e1e00bd9.gif)\r\n\r\n_The icon for the play button changes in line with the speed (and direction).  (here x2, x3, x0.5, x-0.5 x-1)_  \r\n\r\n* Looping can be turned on or off whilst playing\r\n* Loop boundaries can be adjusted whilst playing, using the normal selection tool\r\n* The loop is 'healed' (using repair effect on a few samples) so that it does not click.\r\n* Speed can be adjusted whilst looping\r\n\r\nUse the normal play button on the transport toolbar for initial speed of x1, the play button shown here for most recently used speed.  You can click the x1 speed button during a play at speed to switch back to x1 (a bit like A/B playing) or the play at speed button during a x1 speed play to reselect x2, x0.5 or other preset.\r\n\r\nI would like to add 'drop down' options, on the play button, so that you can play-at-speed preserving or not preserving pitch, healing on/off etc.", "NaN"], ["883", "Keep !EXPERIMENTAL_MIDI_OUT compilable", "Paul Licameli", "Paul-Licameli", "05/12/21, 12:32:11 AM", "Keep !EXPERIMENTAL_MIDI_OUT compilable\r", "NaN"], ["886", "Fix precompiled headers", "Paul Licameli", "Paul-Licameli", "05/12/21, 06:02:29 PM", "   Fix builds with precompiled headers, which broke at 794f4e5\r", "NaN"], ["887", "[i18n] Issue with some strings", null, "Matthaiks", "05/14/21, 01:09:19 PM", "**Describe the bug**\r\nEven if the translation file is complete, Audacity will display some strings in English. \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Change Audacity's language to Dutch or Polish (or other 100% translated).\r\n2. See translated strings in English.\r\n\r\n**Expected behavior**\r\nFix these problematic strings.\r\n\r\n**Screenshots**\r\n![1](https://user-images.githubusercontent.com/3577122/118048015-ef2d3a00-b37b-11eb-842f-1511ac728017.png)\r\n\"Filter Curve\" is missing from audacity.pot, there's Filter Curve EQ, though.\r\n![2](https://user-images.githubusercontent.com/3577122/118048018-f05e6700-b37b-11eb-873a-e044a6bb077c.png)\r\n![3](https://user-images.githubusercontent.com/3577122/118048021-f0f6fd80-b37b-11eb-8a44-3ecc035949bd.png)\r\n\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Windows 10\r\n - Version Audacity 3.0.2", "See also Bugzilla bug https://bugzilla.audacityteam.org/show_bug.cgi?id=2741 =||= Appears to be fixed with   CMake Build #1684: Commit 9e70fa7 pushed by JamesCrook :  https://github.com/audacity/audacity/actions/runs/838439781\r\n\r\nSee bug testing comments in P2 Bug #2741:  https://bugzilla.audacityteam.org/show_bug.cgi?id=2741 =||= \"Interface\" seems to be fixed, \"Silence\" and \"Filter Curve\" are still in English, though. =||= @Matthaiks  - the Filter Curve is a different issue - see this open bug https://bugzilla.audacityteam.org/show_bug.cgi?id=2339\r\nBug 2339 - On second run of Audacity \"Filter Curve EQ\" gets changed to \"Filter Curve...\" in the Effect menu\r\n\r\nThere is a translation for Filter Curve EQ on first use you get \"Filterkurve-EQ\" - but on next launch of Audacity you get \"Filter Curve\" untranslated (this was the old name for the effect. =||= @Matthaiks  - and yes I still see \"Silence\" in the Erzeugen menu and not \"Stille\" =||= Reopened the issue due to the untranslated in \"Silence\" auf Deutsch =||= This is only in the Erzeugen (Generate) menu that it is not translated - the generator banner correctly  says \"Stille\" =||= > This is only in the Erzeugen (Generate) menu that it is not translated - the generator banner correctly says \"Stille\"\r\n\r\nI observed that too and it is very puzzling.\r\n =||= I have logged the untranslated \"Silence...\" as new P3 Bugzilla entry Bug #2778\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2778\r\nBug 2778 - In German in the Erzeugen menu (Generator menu) \"Silence...\" is untranslated\r\n\r\nI also noted that this affects other languages as @Matthaiks reports\r\n\r\nAnd as the \"Filter Curve\" issue is already logged as:\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2339\r\nBug 2339 - On second run of Audacity \"Filter Curve EQ\" gets changed to \"Filter Curve...\" in the Effect menu\r\n\r\nI shall close this GitHub thread =||= These translation issues are now fixed in the latest alpha test build for 3.0.3 =||= "], ["888", "Issue 887: Some strings didn't translate, though in catalogs...", "Paul Licameli", "Paul-Licameli", "05/13/21, 09:27:08 AM", "All examples were uses of the XC macro for strings with disambiguating contexts and this had never been correctly implemented.\r", "\"Silence\" remains untranslated in the Erzeugen menu (Generate menu)\r\n\r\nIt is properly translated to \"Stille\" in the generator title header.\r\n =||= "], ["890", "Module manager changes", "Paul Licameli", "Paul-Licameli", "05/16/21, 11:06:52 AM", "Various things cherry-picked out of my big misc-modules branch, related to the Module Manager.\r\n\r\nAmong these:\r\n\r\nenabling loading of modules that depend on other modules, without any explicit description of those dependencies;\r\n\r\nun-cluttering the simple protocol of symbols exposed by the modules, by eliminating special script pipe and track panel hijack hooks (alternative means can be found now for such things);\r\n\r\nremove link dependency of ModuleManager on the GUI-heavy ModulePrefs page that interacts with it;\r\n\r\nmake it possible for plug-in providers to be just another kind of module, so that built-in or non-built-in ones will not need to be implemented differently.\r\n\r", "Rebased, fixed build problems (I was relying on precompiled headers before), force pushed\r\n =||= "], ["891", "HTTP request to audacityteam.org fails", "Tim Lebedkov", "tim-lebedkov", "05/14/21, 10:09:56 AM", "**Describe the bug**\r\nI use Go to get the source code of the page https://www.audacityteam.org/download/windows/ to determine the current version of Audacity. It fails with \"bad status: 403 Forbidden\". If was not the case some weeks ago.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to https://ci.appveyor.com/project/tim-lebedkov/npackd\r\n2. Click on the first job\r\n3. Scroll down to 'Audacity'\r\n4. See error\r\n\r\n**Expected behavior**\r\nHTML is returned.\r\n\r\n**Screenshots**\r\nhttps://ci.appveyor.com/project/tim-lebedkov/npackd/build/job/oe2oighwecvjfbot#L376\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Windows (AppVeyor)\r\n - Version \r\n\r\n**Additional context**\r\n-", "This is a duplicate of a 'bug' reported elsewhere.\r\nThe resolution is to modify your script to go to [GitHub Releases](https://github.com/audacity/audacity/releases) instead. =||= "], ["894", "Bug 2778 - In German in the Erzeugen menu (Generator menu) \"Silence...\" is untranslated", "Paul Licameli", "Paul-Licameli", "05/14/21, 08:14:18 PM", "Residual issues in failure to translate all effect, generator, analyzer names in menus.\r\n\r\nIt affected effects whose translatable names included disambiguating context, or which were different (in English) from the internal names.  Filter Curve EQ and Silence were the only such.\r\n\r\nThis change had to modify PluginManager so Leland may want to look.\r", "NaN"], ["895", "Settings objects and example uses", "Paul Licameli", "Paul-Licameli", "05/17/21, 12:46:55 PM", "Introducing the classes that can eliminate widely separated duplication of literals for the path and default value of a preference.\r\n\r\nInstead global variables of these types will hold all the information in one place, and users of the variables are forced to have compile and link dependency on them -- a good thing to be explicit about at build time, avoiding the brittleness of the coincident literals.\r\n\r\nThere is also caching of preference values in memory.\r\n\r\nSome example uses.  The large, routine task of converting many other uses of gPrefs remains.\r\n\r\nThese examples also invert or break a few source file dependencies in a good way.\r", "> There are few minor comments, that could be addressed.\r\n> \r\n> Do we plan to extract settings into a library later on? It could be useful for all kinds of modules, so they don't have to link against Audacity directly.\r\n\r\nIf you study my big graph of intended libraries, you will see lib-preferences is one and very low-level.  It will be one of the first taken out.\r\n =||= "], ["896", "Bug2763: Certain Scriptable commands should push Undo stack...", "Paul Licameli", "Paul-Licameli", "05/16/21, 11:08:44 AM", "Fixes for Bug 2763.  The best text for the user-visible strings might be debated.\r\n\r\nCertain Scriptable commands in the Extra menu ought to push distinct undo states that do not merge with the previous state.\r", "NaN"], ["897", "Fine", null, "a-leut", "05/16/21, 12:14:34 PM", "Fine\r", "? =||= "], ["898", "Translate \"No\" into Russian", "Paul Licameli", "Paul-Licameli", "05/17/21, 09:52:07 AM", "Did I spell that right? :-)\r", "NaN"], ["900", "Bug 2782 - 8-bit FLAC samples are not imported correctly", null, "JohnColket", "07/17/21, 03:15:45 AM", "Originally reported on 18Sep20  as GitHub Issue #672\r\nhttps://github.com/audacity/audacity/issues/670\r\n\r\nThe OP sagamusix wrote\r\n>It seems like 8-bit FLAC samples are imported with a wrong amplification factor \r\n>to me it looks like the raw 8-bit values are interpreted as if they are from a \r\n>16-bit sample, so only the low 8 of 16 bits are ever used.\r", "This fix works for me. =||= Is it bit perfect with ffmpeg? =||= It would be nice to have this. =||= "], ["903", "More module preliminaries", "Paul Licameli", "Paul-Licameli", "05/18/21, 01:24:05 PM", "Various changes in CMake programming to allow libraries (distinct from extension modules), fix modules dependent on other modules, and save some object file space by stripping unneeded symbols\r", "I withdrew the first of these commits from #839 when you said it would conflict with your work, but here it is again.\r\n\r\nThe second is one I should have included in #839.\r\n\r\nI withheld the third of these until other discussion with you yesterday.\r\n =||= "], ["904", "Update pl.po from Transifex", "Grzegorz Pruchniakowski", "Gootector", "05/18/21, 09:45:42 PM", "Update pl.po from Transifex\r\n2 fixes.\r\n\r\nGreetings,\r\nGootector\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "NaN"], ["905", "Yet more module preliminaries", "Paul Licameli", "Paul-Licameli", "05/19/21, 10:30:52 AM", "List of modules in modules/CMakeLists.txt, to be lengthened;\r\n\r\nList of shipped modules to auto-enable in ModuleSettings.cpp, for now empty;\r\n\r\nCorrection to Windows build procedure, to put modules in the expected subdirectory;\r\n\r\nCorrection to the code of Audacity, as built by GitHub Actions for Linux, so that it finds and loads modules without need\r\nof any change in environment variables.\r", "NaN"], ["909", "Bug2764 Open Project... (under Scriptables in Extra menus) can corrupt a project", "Paul Licameli", "Paul-Licameli", "05/25/21, 12:09:01 AM", "Fixing Bug2764 (Open Project... under Scriptables can corrupt a project) by causing the Open Project... command to open a new project window when an .aup3 file is specified.\r\n\r\nBut also carefully implemented so that behavior of the command changes only in that case.  In other cases, which invoke\r\nimport code, still import the file into the existing project and add items to its undo history.\r", "Could we have a more descriptive PR title, please? =||= > Could we have a more descriptive PR title, please?\r\n\r\nBetter now?\r\n =||= "], ["910", "Update pl.po from Transifex", "Grzegorz Pruchniakowski", "Gootector", "05/20/21, 07:11:18 AM", "Update pl.po from Transifex\r\nChanges:\r\nAll 'at least' translated as 'przynajmniej'.\r\nAll 'selection' translated as 'zaznaczenie'.\r\nAnd a few small fixes.\r\nEND of fixes \ud83d\ude01\r\n\r\nGreetings,\r\nGootector\r\n\r\n# Pull Requests\r\n\r\nIf you are submitting a pull request, please read https://wiki.audacityteam.org/wiki/GitHub_Pull_Requests \r", "NaN"], ["911", "Finalise the crash reporting dialog for all OS.", null, "Tantacrul", "06/17/21, 09:51:58 AM", "NaN", "NaN"], ["912", "Create final strings. Create email to send to translators.", null, "Tantacrul", "06/17/21, 09:51:51 AM", "Also: encourage a move to Discord and a move away from mailing list.", "\"Also: encourage a move to Discord and a move away from mailing list.\"\r\nI'm against. I'm **also** MuseScore translator and reviewer over 10 years, so I have over 10 years of experience with your fantastic Team.\r\nI'm **also** EU citizen. When I wanted to delete my account (https://musescore.org/pl/user/13434) from MuseScore.org - You never answered my request, so I deleted MuseScore.com account only (https://musescore.com/user/7876). (Old) MuseScore.org accounts are 'undeletable' (???!!!). First - fix MuseScore.org website, next - write your claims.\r\nI value my privacy and I'm not going to use Discord, because you decide it does.\r\nI prefer Transifex (https://www.transifex.com/klyok/audacity/) and sending PR. =||= What about using matrix? It is privacy oriented and federated.\r\nhttps://matrix.org =||= "], ["913", "Check the preferences dialog for the new spectrogram view. Make any changes needed and take a note of strings.", null, "Tantacrul", "09/03/21, 08:01:10 AM", "NaN", "Which new Spectrogram view is that ?\r\n =||= The one being proposed by a community member - with the new colours. We need to sort out a few things first and then I'll flesh this card out. Sorry! I created this task to remind me to add more detail later.\r\n\r\nHowever, just to give you an idea of what I'm talking about: I understand that this new spectral view also requires a small number of string changes in Preferences. @jounih will need to look over it to make sure the design is fine. =||= > \r\n> \r\n> The one being proposed by a community member - with the new colours. \r\n\r\nOOH that's good - I did like that one\r\n\r\n\r\n =||= this seems like it's a leftover from 3.0.3 and no longer relevant. Closing it.  =||= "], ["914", "Make sure all final strings are in source.", null, "Tantacrul", "06/17/21, 09:51:14 AM", "NaN", "NaN"], ["915", "Affordance implementation", null, "Tantacrul", "09/21/21, 03:15:13 PM", " - [x] #1182\r\n - [x] #1183 \r\n - [x] #1181 \r\n - [x] #1195 ", "done (in scope of other tasks) =||= "], ["916", "App Image PR", null, "Tantacrul", "06/17/21, 09:51:09 AM", "Separate GitHub Actions scripts into separate files.", "NaN"], ["917", "Move GitHub Actions CI scripts into separate files.", "Peter Jonas", "shoogle", "06/10/21, 05:09:50 PM", "NaN", "@vsverchinsky, I'll do this later today or tomorrow unless you get there first, in which case feel free to assign it to yourself. =||= "], ["918", "Preliminary work to change the 3d party libraries management process", "Dmitry Vedenko", "crsib", "05/24/21, 01:53:54 PM", "To make dependencies easier to maintain and as an essential step towards the dependencies devendoring for Linux, we are changing the way we handle dependencies.\r\n\r\nWe will be using Conan as a package manager. For packages that are not yet available in `conan.io`, we will use a self-hosted Artifactory instance: https://artifactory.audacityteam.org/. Recipes are available at https://github.com/audacity/conan-recipes.\r\n\r\nUpdated build documentation is available in [BUILDING.md](BUILDING.md) file.\r\n\r\n---\r\n\r\nInitially, we've planned only to migrate wxWdigets in the first step.\r\nHowever, we had to add the following libraries as well:\r\n* `zlib`, as it is a common dependecy for `wxWidgets`, `lame` and `id3tag`.\r\n* `expat`, as `wxWidgets` and `Audacity` depend on it.  \r\n* `lame`, `id3tag`, as they depend on `zlib`.\r\n* `mad`. Well, it just happened.\r\nFor now, all the libraries except wxWidgets use `conan.io` packages. `wxWidgets` recipe is based on the Bincrafters but is heavily modified.\r\n\r\nIn the future, we plan to use custom recipes for `mad` and `id3tag`. The reason is that they use very outdated build scripts, which do not work on AppleSillicon machines even when cross-compiling.\r\n\r\n---\r\n\r\nWe use Docker to construct a clean Ubuntu 20.04 environment with the required packages to verify that we can build using system libraries only. We use this environment to check that Audacity builds with as many system packages as possible.\r\n\r\nTo define a Conan dependency, we have added `add_conan_lib` CMake function. This function allows to add a dependency using Conan with two possible system fallbacks:\r\n\r\n1. pkg_check_modules is invoked if `PGK_CONFIG ...` is present.\r\n2. find_package is invoked if `FIND_PACKAGE_OPTIONS` is present and `pkg_check_modules` has failed.\r\n\r\nIf `ALWAYS_ALLOW_CONAN_FALLBACK` is present - `audacity_obey_system_dependencies` will be ignored for the package.\r", ">  Will Artifactory be configured to allow anonymous access?\r\n\r\nI am wondering this as well. Will developers be able to build with the same builds of libraries locally that the official builds use? =||= > In the future, we plan to use custom recipes for mad and id3tag. The reason is that they use very outdated build scripts, which do not work on AppleSillicon machines even when cross-compiling.\r\n\r\nThese libraries seem to be abandoned for many years. @Holzhaus wrote a [CMakeLists.txt for libid3tag](https://github.com/mixxxdj/vcpkg/blob/2.3/overlay/ports/libid3tag/CMakeLists.txt) which may come in handy for you. Maybe you could fork these old libraries and host them under the Audacity GitHub organization? =||= > > Will Artifactory be configured to allow anonymous access?\r\n> \r\n> I am wondering this as well. Will developers be able to build with the same builds of libraries locally that the official builds use?\r\n\r\n@Be-ing @JamesCrook \r\n\r\nIt is already available :) The packages list is empty, because of some Artifactory limitations I wasn't able to overcome - it simply doesn't list packages with anonymous access. You can browse the list here: https://artifactory.audacityteam.org/ui/repos/tree/General/conan-local\r\n\r\nOr you can run \r\n\r\n```\r\nconan remote add audacity https://artifactory.audacityteam.org/artifactory/api/conan/conan-local\r\n```\r\n\r\nand play with wxwidgets build using:\r\n\r\n```\r\nconan install wxwidgets/3.1.3-audacity@\r\n```\r\n\r\n>Maybe you could fork these old libraries and host them under the Audacity GitHub organization?\r\n\r\nWe will have to :-) We have important patches in the build tree. Likely I will do that early on Monday\r\n\r\n =||= So does this branch make CMake automatically download the library binaries from Artifactory? If so, please document that and how to disable it. =||= > So does this branch make CMake automatically download the library binaries from Artifactory? If so, please document that and how to disable it.\r\n\r\n@Be-ing you mean you always want to build libraries from source? Ok, that's not a problem.\r\n\r\nFor package-maintainer-like cases, it is possible to share Conan cache, but given that they will be forcing everything to system libraries, I don't think that it is much of an issue really. =||= I don't want to build the entire dependency graph from source. The default behavior I expect from a build system is to first search the system for dependencies. I think this should be the same whether building Audacity locally or packaging it. I also want to be able to use the exact dependencies locally that are used for the official builds, which should be opt in.\r\n\r\nThe documentation distinguishes between \"local\" and \"system\" libraries. I understand what \"system\" libraries mean, but how does Conan fit into this? Does Conan automatically download builds of \"local\" libraries? =||= > I don't want to build the entire dependency graph from source. The default behavior I expect from a build system is to first search the system for dependencies. I think this should be the same whether building Audacity locally or packaging it. I also want to be able to use the exact dependencies locally that are used for the official builds, which should be opt in.\r\n\r\nThis behavior can be activated using `-Daudacity_lib_preference=system`. However, as I've mentioned earlier, this can be dangerous because there could be libraries with _official_ recipes from `conan.io` that will link to the Conan provided ZLib (or any other library), and you will have issues with the build. This is why this behavior is opt-in, not opt-out. \r\n\r\nIf you turn library preference to **system** and you have the matching library installed and properly configured by the system maintainers the Conan won't be used for the library at all. However, this will generally require you to install all the libraries and patched pkg-config files (if you are running Ubuntu)\r\n\r\n> The documentation distinguishes between \"local\" and \"system\" libraries. I understand what \"system\" libraries mean, but how does Conan fit into this? Does Conan automatically download builds of \"local\" libraries?\r\n\r\nFor the dependencies, that are using Conan - **local** will use Conan provided library. That means that the recipe for the library will be downloaded from `conan.io` or our Artifactory. If there are cached binaries for your system settings - the cached binaries will be downloaded. Otherwise, the dependency will be built locally on your machine. In both cases, your local cache will be checked first.\r\n =||= I'm still confused. Does `system` use Conan as a fallback if the library is not found on the system?\r\n\r\n> For the dependencies, that are using Conan - local will use Conan provided library. That means that the recipe for the library will be downloaded from conan.io or our Artifactory. If there are cached binaries for your system settings - the cached binaries will be downloaded. Otherwise, the dependency will be built locally on your machine. In both cases, your local cache will be checked first.\r\n\r\nI suggest renaming `local` to `conan`. To me, `local` implies that no network connections will be made. =||= > I'm still confused. Does `system` use Conan as a fallback if the library is not found on the system?\r\n\r\nThis is documented in this pull request, but I will further clarify it in the next commit. There is an option, that will force only using the system libraries. By default, if there is no system library - some fallback will be used.\r\n\r\n> I suggest renaming `local` to `conan`. To me, `local` implies that no network connections will be made.\r\n\r\nThis PR does not replace all of the dependencies. This option can be renamed to **vendored**, but this will be confusing as well.\r\n\r\nThe option will be renamed to Conan when the work on dependencies is complete =||= "], ["919", "New library for strings", "Paul Licameli", "Paul-Licameli", "05/27/21, 01:52:47 PM", "Separate a shared library from Audacity's source code tree.  But still to do -- correct the Linux build so that the library is installed in the correct folder.\r\n\r\nThis library may be re-used by the separate crash reporter executable.\r\n\r\nThe library contains string utilities, notably:\r\n\r\nThe classes Identifier and TaggedIdentifier<T> for wrapped string types that are used for internal purposes.\r\n\r\nThe class TranslatableString containing strings meant for the user to see.\r\n\r\nDefinitions of macros _, XO, etc. that mark strings for xgettext.\r\n\r\nNamespace Languages which contains functions for initializing translation catalogs.\r", "Now I have fixed the Linux installation.  lib-strings.so goes to the same place as the wxWidgets libraries.\r\n =||= "], ["920", "Separate shared library for strings and i18n for reuse by crash reporter", "Paul Licameli", "Paul-Licameli", "05/27/21, 01:52:47 PM", "NaN", "NaN"], ["923", "Review of dithering", "Paul Licameli", "Paul-Licameli", "05/27/21, 03:40:28 PM", "This branch doesn't yet provide a more general fix for https://bugzilla.audacityteam.org/show_bug.cgi?id=1572 but does other useful things.\r\n\r\nI reviewed all uses of CopySamples (the function in which all dithering happens) that are not in WaveClip or Sequence.  Dithering happens only when samples are copied from a wider sample format to a narrower one.\r\n\r\nIn some cases I hide the calls in SamplesToFloats where the destination was always float, or simplify to memcpy where source was also float.\r\n\r\nIn others I give some informal proof in comments why dither will never happen, or argued that it does properly happen in one unlikely case of import of old .aup projects.\r\n\r\nIn one place I disable dithering when recording to other than floating point format, which users won't do if they keep the default format.\r\n\r\nThere are some rewrites and simplifications of widely used functions that fetch from WaveTrack, almost always as floating point format, to make the proofs easier to verify.\r\n\r\nFinally there is some incidental review and cleanup in ImportAup.cpp.\r", "Rebased and force-pushed, and did some of James' suggestions (an assertion, a comment about the default, different initializer of gHighQualityDither)\r\n =||= "], ["926", "Create new system to pushing string changes and new strings.", null, "Tantacrul", "06/17/21, 09:51:01 AM", "People should be able to submit strings to the build at any point to enable early string freeze.", "NaN"], ["928", "Use Audacity patched versions of libmad and libid3tag", "Dmitry Vedenko", "crsib", "05/24/21, 08:11:05 PM", "libmad and libid3tag were unmaintained for a long time. Audacity had several patches in the source. The PR ensures, that Audacity still uses patched versions.", "NaN"], ["930", "Status bar message change", "Peter Sampson", "petersampsonaudacity", "05/25/21, 06:25:40 PM", "**Is your feature request related to a problem? Please describe.**\r\nA recent German-speaker on the Forum pointed out that \"Actual Rate\" in the Status bar was not clear in what it meant.  In German we have \"Aktuelle Rate\" which translates in English to \"Current Rate\" - see this Forum post: https://forum.audacityteam.org/viewtopic.php?f=70&t=118238\r\n\r\nThe same issue arose from a different Forum poster four years ago.  At that time Gale Andrews (RIP) suggested:\r\n>\"Would 'Sent Rate' for playback and 'Received Rate' when recording be any better?\"\r\nSee:  https://forum.audacityteam.org/viewtopic.php?t=94782\r\nAt the time the OP never responded and Gale sadly died not long after so this issue ran to ground, but I think Gale's suggestion is an excellent one that gives greater clarity of purpose, greater \"discoverability\" of what that rate data is about.\r\n\r\n**Describe the solution you'd like**\r\nchange the Status Bar \"Actual rate to be:\r\n- **Received Rate** for playback\r\n- **Sent Rate** when recording\r\n\r\nI created a Wiki>Wording entry for this, see:  https://wiki.audacityteam.org/wiki/Wording#Status_Bar\r\n\r\n\r", "\"Actual Rate: 44100 Hz\" is very clear to me - it is the actual (real) sample rate that Audacity is currently running.\r\n(It may differ from the \"Project Rate\" in certain cases).\r\n\r\nI've no idea what \"Received Rate for Playback\" or \"Sent Rate when recording\" mean - received from where? sent to where? =||= It's really only \"clear\" when you know what the \"Actual\" is referring to, probably once you've read the Manual.\r\nYou, Steve, only \"know\" beacuse you happen to know - not all users will be so insightful.\r\n\r\nAlternatives\r\n\r\n- **Sound Card Rate**\r\n\r\nor\r\n\r\n- **Playback Rate**\r\n- **Recording Rate**\r\n\r\n =||= If I was designing this from scratch I'd have a Toolbar for \"**Sound Card Rate**\"\r\n- not have it in the Status bar \r\n- and it would probably be \"off\" by default. =||= Closed as NOT-A-BUG.\r\nIt's a feature/change request, requested on the forum twice in the last five years, and (per Steve's comment) a contentious change, as people are used to the existing wording.  'Sound Card Rate' _is_ probably clearer than 'Actual rate', but it is not sufficiently that much clearer to merit  making the change at this time - and we'd probably need to argue through whether it should be 'Audio Device' rather than 'Sound Card'.  :-)  There are bigger fish to fry. =||= "], ["931", "Create PR that contains final strings for 3.0.3", null, "Tantacrul", "06/17/21, 09:50:51 AM", "After Paul's work is done, these strings can now be submitted and we'll be able to announce string freeze for translations.", "NaN"], ["933", "HTTP support", "Dmitry Vedenko", "crsib", "05/26/21, 11:19:35 AM", "Adds support for HTTP requests to Audacity. This is required for update checking and error reporting.\r\n\r\nHTTP layer is based on libcurl. \r\n\r\nOn Windows and macOS we use OS proved TLS layer. \r\nOn Linux, it is possible to build using system libcurl. By default - the OpenSSL version will be used.\r", "No networking in audacity! =||= "], ["934", "macOS builds: otool -D should not give absolute path of libraries", "Paul Licameli", "Paul-Licameli", "05/26/21, 01:18:42 PM", "A small modification to build procedures\r", "NaN"], ["935", "Make lib-network-manager an opt-in library", "Dmitry Vedenko", "crsib", "05/26/21, 02:41:48 PM", "After the discussion with @Paul-Licameli, it was decided to make networking completely opt-in.\r\n\r\nThis is controlled by the `audacity_has_networking` CMake option. \r\n\r\nThis option is off by default, but is enabled for CI builds", "NaN"], ["936", "Use expat version that builds with autotools", "Dmitry Vedenko", "crsib", "05/26/21, 04:45:21 PM", "Expat has an issue when building with CMake on BSD systems: https://github.com/libexpat/libexpat/issues/55\r\n\r\nThe workaround is an updated Conan recipe, that uses autotools on all platforms, except Windows", "NaN"], ["937", "Copy the library to the desired location after the build", "Dmitry Vedenko", "crsib", "05/28/21, 11:04:40 AM", "This handles a case, that only affects library developers. \r\n\r\nThere is a possibility, that after building the library it will not be copied to a correct location", "NaN"], ["938", "New utility library", "Paul Licameli", "Paul-Licameli", "06/02/21, 11:44:51 AM", "A very tiny library of very widely used constants and templates, defined entirely in header files.\r\n\r\nThis library is no dependent on any part of wxWidgets.\r", "NaN"], ["939", "Move GitHub Actions CI scripts into separate files", "Peter Jonas", "shoogle", "06/10/21, 05:09:50 PM", "Resolves: #917\r\n\r\nCreates separate Bash CI scripts for each OS to reduce the size of the main YAML workflow file and allow Bash syntax highlighting.\r\n\r\nThe CI scripts for each OS are further divided into a separate script for each stage (dependencies.sh, build.sh, package.sh) so that you can see exactly which stage failed in the GitHub Actions run log.\r\n\r\nAlso creates a separate YAML workflow for each OS so that you can download artifacts for the completed workflow while jobs from other workflows are still running. Previously all jobs were in one workflow so you had to wait for the slowest job to complete before you could download anything.\r\n\r\n---\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "In a slight change of direction, I decided to **remove** the separate scripts for each OS:\r\n\r\n- linux/dependencies.sh\r\n- linux/builds.sh\r\n- linux/package.sh\r\n- windows/dependencies.sh\r\n- windows/builds.sh\r\n- windows/package.sh\r\n\r\nAnd **instead use** a combined script for each OS, but split into more stages to reduce the size of each script file:\r\n\r\n- dependencies.sh\r\n- environment.sh\r\n- configure.sh\r\n- build.sh\r\n- install.sh\r\n- package.sh\r\n\r\nNow each individual script file contains the conditional code needed to account for any differences between platforms (Windows, macOS, Linux) during that stage of the build. This makes it easy to see differences between the platforms, and should encourage people to keep those differences to a minimum (i.e. people should try to edit the cross-platform CMake files instead of putting everything in the Bash scripts).\r\n\r\nThere are multiple commits currently but I will squash down to 1 commit once we have decided on the right approach. =||= > I expect, that the steps between platforms will diverge a lot soon. For example - code signing is different. Or building the installer.\r\n\r\nIdeally those steps should be performed within the CMake files, even if that involves creating a custom target that simply runs a platform-dependent script (e.g. a PowerShell script). If it is written properly then the custom target can be called after the Install step is complete to turn the `$DEST` folder into an AppImage / DMG / MSI installer archive.\r\n\r\n```\r\ncmake --build build\r\ncmake --build build --target install\r\ncmake --build build --target package\r\n```\r\n\r\nBut we might want to call the custom target something other than `package` to avoid confusion with CPack. (e.g. we could call it `archive` or `packageinstall` or something like that.)\r\n\r\n> At the moment, it looks like that only configure.sh has code reused between the branches\r\n\r\n`environment.sh`, `build.sh`, `install.sh` and `package.sh` also share code between platforms. In reality it is only `dependencies.sh` that is entirely different, but it is useful to compare what is installed on each platform.\r\n\r\n`package.sh` will be even more similar once the AppImage PR is merged because I will do the AppImage-specific steps inside CMakeLists.txt or inside a custom target as mentioned above. =||= > Ideally those steps should be performed within the CMake files\r\n\r\nI can't agree more\r\n\r\n> AppImage-specific steps inside CMakeLists.txt \r\n\r\nOk, I will update my branch to do it in a similar way than  =||= "], ["940", "Update UnusedStrings.h", "Jouni Helminen", "jounih", "06/03/21, 01:37:12 PM", "Added translatable strings for crash/error reporting and the new spectrogram colour preferences (https://github.com/audacity/audacity/pull/830)\r\n\r\nResolves: *https://github.com/audacity/audacity/issues/931*\r\n\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [ ] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "The label for the combo box for the choice of schemes needs to have an access key defined, eg XO(\"Sc&heme\").\r\nAnd translators will need to know which window this appears in so they can choose which letter to use as the access key. =||= David reminds us of important things.\r\n\r\nThe generated audacity.pot file contains comment lines with # that are not part of the strings.  For each string, the source code file or files that contain it is identified.  Is that the clue they have relied on to know when strings are from one choice control?\r\n\r\nIf so, then they lose that information if we generate audacity.pot during string freeze, before the strings have moved to the proper files.  The file UnusedStrings.h will be convenient for the designer to specify strings, but will be the file mentioned in the comments.\r\n\r\nOne solution may be that we make more use of the XC() form of the macro with a second, context string.  Use a distinct context string for each choice control.\r\n\r\n\r\n =||= I have added a commit to this branch.  I added the strings Vitaly needs, and I added & characters for the spectrogram color choices, and also for the \"Send\" and \"Don't Send\" buttons.\r\n =||= One more commit.  I reviewed Vitaly's branch and I saw \"Unknown assertion\" was also needed.\r\n =||= > I have added a commit to this branch. I added the strings Vitaly needs, and I added & characters for the spectrogram color choices, and also for the \"Send\" and \"Don't Send\" buttons.\r\n\r\nFor the scheme combo box it is the label, and not the choices which needs the access key. The latter should be removed. =||= Thank you David for correcting me.  So one more commit.\r\n\r\n\"Sche&me\" because S and C are already taken for mnemonics in SpectrumPrefs.cpp.  This might not be obvious to the UI designer.\r\n =||= Are you satisfied with all the new strings now, David?\r\n =||= > Are you satisfied with all the new strings now, David?\r\n\r\nIt would be probably be clearer to refer to spectrograms prefs, rather than spectrum prefs.\r\nI presume that it's going to be made clear to the translators that these strings refer to either additional items in existing windows or to items in new windows. =||= Ideally the spectrum prefs context should be added to the existing strings in SpectrumPrefs.cpp, and in many other source files, and contexts should be used more regularly for new strings.\r\n\r\nBut that would break existing translations.\r\n\r\nThe new contexts here will do until I think up a better way to get contexts into the existing strings.\r\n =||= "], ["941", "fix for P2 \"Bug 2769 - Nyquist effects cannot extend length of selected audio\"", "Roger B. Dannenberg", "rbdannenberg", "06/11/21, 09:58:18 PM", "Restore old behavior where Nyquist sound effects replace selection with\r\narbitrary length computed sound. (So as before, sound after the selection\r\nis shifted in time if the replacement sound is shorter or longer than the\r\noriginal selection.) If stereo is computed and one channel is shorter than\r\nthe other, the shorter channel is extended with zeros to match the length\r\nof the longer one.\r\n\r\nResolves: https://bugzilla.audacityteam.org/show_bug.cgi?id=2769\r\n\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["942", "Adds an option to force all the dependencies to be build from source", "Dmitry Vedenko", "crsib", "08/03/21, 10:02:03 AM", "Adds `audaicity_conan_allow_prebuilt_binaries` that will force all the Conan dependencies to be built from the source\r\n\r\nResolves: *(direct link to the issue)*\r\n\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "I found an undesired behavior for BUILD always, looking now how to get a work-around.\r\n\r\nBUILD always seems to prevent Conan using the local cache as well =||= "], ["943", "Use libjpeg-turbo as a wxWidgets dependecy", "Dmitry Vedenko", "crsib", "05/31/21, 09:08:18 AM", "Turns out, libjpeg is downloaded over plain HTTP from the official IJG site. It is now replaced with libjpeg-turbo.\r\n\r\nResolves: *(direct link to the issue)*\r\n\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["944", "Update pl.po from Transifex", "Grzegorz Pruchniakowski", "Gootector", "05/31/21, 09:28:44 AM", "Update pl.po from Transifex\r\n2 fixes.\r\n\r\nGreetings,\r\nGootector\r\n\r\nResolves: *(direct link to the issue)*\r\n\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["945", "Recommend incremental, self-contained commits for large changes...", "Paul Licameli", "Paul-Licameli", "09/03/21, 11:47:46 AM", "... And make the statements concise\r", "The original wording is verbose and not specific about what constitutes \"unnecessary changes.\"  I don't want that construed to mean you can't improve comments or readability or modernize the C++ idioms.  So I restate things rather in terms of effects on the program's behavior.\r\n =||= I like some of the changes but not all. My suggestions are here: https://docs.google.com/document/d/1H3hjFZ58e-wZyt00JoJgI9GXUfOEQ8_pek0jtAK2s1A/edit =||= \"Each commit does \u201cone thing\u201d and the commit message(s) meet these guidelines\" with a link.\r\n\r\nI don't like saying \"doing one thing\" because there are many ways you can count \"things,\" and it's not too bad to combine several small things into one reasonably sized commit.\r\n\r\nRather it's important not to combine so many things in one commit that they overwhelm a reviewer.  Yes, subjectivity there too.\r\n\r\nBut whatever \"things\" are contained in one commit, they are complete things, and complete in the sense I stated:  Each commit is known to build and run without known bad behavior.\r\n\r\nBesides aiding review, the splitting of a big change into increments that build and run make possible the bisection of bugs to some part of a large project, if bugs are discovered later.\r\n\r\n\r\n =||= "], ["946", "Issue 871: Let Audacity compile with unmodified portaudio sources...", "Paul Licameli", "Paul-Licameli", "08/13/21, 09:49:02 AM", "Resolves: https://github.com/audacity/audacity/issues/871\r\n\r\n... This may allow upgrade to the latest version of portaudio, which is\r\ndesirable for fixes and improvements, including the fixing of build warnings on\r\nMac about use of deprecated SDK functions.\r\n\r\nThe function PaUtil_GetTime() cannot be called.\r\n\r\nTo make a conservative fix that doesn't affect the fine tuning of timing,\r\nreplicate the implementation of that function directly in AudioIO.cpp, with\r\nall necessary conditional compilation branches.\r\n\r\nDon't attempt a fix with std::chrono, although that would be more nicely\r\nplatform independent.\r\n\r\nTesting should confirm that MIDI playback doesn't suffer any jittery timing,\r\nsuch as it did especially on Linux with ALSA, when the playback feature was\r\nunder development in 2017.\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "What version of portaudio this was tested with?\r\n\r\nWhat's the problem with PaUtil_GetTime()?\r\n\r\nWhat's the problem with std::chrono?\r\n\r\nThe description gives advice on how to deal with PaUtil_GetTime(), but it looks like advice is already incorporated in the PR. \r\n\r\nIt sounds like this has not been tested on Linux. Is that true?\r\n\r\nEverything looks reasonable in the code. The code was completely unexpected from the description though. I think a better description would be something like \"This change moves the old implementation of PortAudio's PaUtil_GetTime() into Audacity and renames it util_GetTime() because ...\"\r\n =||= > What's the problem with PaUtil_GetTime()?\r\n\r\nThis is a private API of PortAudio. I. e. it is not exposed in the PortAudio headers and is hidden in the shared library.\r\n\r\nUbuntu shipped Audacity with the following patch:\r\n\r\n```\r\n src/AudioIO.cpp | 10 +++++++++-\r\n 1 file changed, 9 insertions(+), 1 deletion(-)\r\n\r\ndiff --git a/src/AudioIO.cpp b/src/AudioIO.cpp\r\nindex 0187e39..bfb0848 100644\r\n--- a/src/AudioIO.cpp\r\n+++ b/src/AudioIO.cpp\r\n@@ -491,8 +491,16 @@ time warp info and AudioIOListener and whether the playback is looped.\r\n    #define ROUND(x) (int) ((x)+0.5)\r\n    //#include <string.h>\r\n //   #include \"../lib-src/portmidi/pm_common/portmidi.h\"\r\n-   #include \"../lib-src/portaudio-v19/src/common/pa_util.h\"\r\n    #include \"NoteTrack.h\"\r\n+#include <time.h>\r\n+\r\n+PaTime PaUtil_GetTime( void )\r\n+{\r\n+    struct timespec tp;\r\n+    clock_gettime(CLOCK_REALTIME, &tp);\r\n+    return (PaTime)(tp.tv_sec + tp.tv_nsec * 1e-9);\r\n+}\r\n+\r\n #endif\r\n``` =||= Note that the much fewer lines of code we need to add are to fix linkage when the library is compiled as C++ instead of C.  In src/os/unix/pa_unix_util.c\r\n\r\n`\r\n#ifdef __cplusplus\r\nextern 'C' {\r\n#endif\r\n`\r\n...\r\n`\r\n#ifdef __cplusplus\r\n}\r\n#endif\r\n`\r\n\r\nCould all of this be more easily fixed if only we can upstream a small change to portaudio?  Is there an error in build scripts that causes compilation in the wrong language?\r\n\r\n =||= > Could all of this be more easily fixed if only we can upstream a small change to portaudio?\r\n\r\nI don't think that this is a problem with PortAudio. It looks to be exclusively an Audacity issue. =||= One might argue the mistake is theirs, if it is possible to build the functions with linkage inconsistent with the declarations in the header file.\r\n\r\nBut if that is not an option, then these changes need a bit of testing to verify MIDI timing doesn't jitter on any of the platforms.\r\n =||= That seems like a better idea to me. As I recall, PortAudio reports the \ntime from PaUtil_GetTime() in callbacks. It's really a flaw in the \nabstraction that the system time reported in callbacks is not specified \nexcept in a hidden function. If you want to know how the time in \ncallbacks relates to anything else (e.g. MIDI), there's no way to \nrequest PortAudio's view of the current system time.\u00a0 I don't think \nthere's any reason to hide it.\n\n-Roger\n\nOn 5/31/21 8:47 AM, Dmitry Vedenko wrote:\n>\n>     Could all of this be more easily fixed if only we can upstream a\n>     small change to portaudio?\n>\n> I don't think that this is a problem with PortAudio. It looks to be \n> exclusively an Audacity issue.\n>\n> \u2014\n> You are receiving this because your review was requested.\n> Reply to this email directly, view it on GitHub \n> <https://github.com/audacity/audacity/pull/946#issuecomment-851467746>, \n> or unsubscribe \n> <https://github.com/notifications/unsubscribe-auth/AALLUHGJ7TFFFM3LPK4BPFDTQOAO7ANCNFSM45YNBKOA>.\n>\n =||= How exactly is one supposed to test this? On Linux, with an upstream/system portaudio, audacity doesn't build unless portmixer is disabled, and with portmixer disabled, midi interfaces no longer appear.\r\n\r\nIs there actually any way to test this solution on Linux as it's currently implemented? =||= Meged as a part of #1186  =||= "], ["948", "Adds lib-uuid", "Dmitry Vedenko", "crsib", "06/02/21, 02:41:54 PM", "Adds a small library to generate UUID values. This library will be used in Sentry error reporting\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "I'm done.  Fix that one doc comment and I'm happy.  Squash it and merge it.\r\n =||= "], ["950", "Add alpha-build-only crash-me buttons, for testing of crash reporting", "Paul Licameli", "Paul-Licameli", "06/08/21, 09:23:54 AM", "To assist the testing of https://github.com/audacity/audacity/pull/836\r\n\r\n- [x ] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [ x] I made sure the code compiles on my machine\r\n- [ x] I made sure there are no unnecessary changes in the code\r\n- [ x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [ x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["951", "Fix build time infinite recursion in CopyLibs.cmake", "Paul Licameli", "Paul-Licameli", "06/03/21, 01:40:48 PM", "Some builds were hanging in post-build steps because of infinite recursion when libraries have cyclic dependencies (possible with static libraries).\r\n\r\nThis can fix that.\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x ] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x ] I made sure the code compiles on my machine\r\n- [x ] I made sure there are no unnecessary changes in the code\r\n- [x ] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x ] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["952", "Error reporting to Sentry", "Dmitry Vedenko", "crsib", "06/08/21, 03:08:26 PM", "This pull request introduces an always-opt-in solution to send non-fatal errors to Sentry, such as errors while opening a project or an audio device. This feature will be only enabled if `audacity_has_networking` is on and `SENTRY_DSN_KEY`, `SENTRY_HOST` and `SENTRY_PROJECT` are defined. The latter will be passed via Secrets, so this functionality will be disabled for builds under the pull request itself.\r\n\r\nOptionally, the dialog allows an arbitrary comment to be attached.\r\n\r\nWhen Sentry reporting is enabled `ADD_EXCEPTION_CONTEXT` macro allows adding data before the report is generated. Currently, this is used to pass more information about SQLite return codes to the report, which is not available from the exception itself.\r\n\r\nDialog example:\r\n\r\n![image](https://user-images.githubusercontent.com/2660628/120678539-ddcdde00-c4a0-11eb-9d60-800e164a8ea3.png)\r\n\r\nReport example:\r\n\r\n```\r\n{\r\n    \"timestamp\": 1622737253,\r\n    \"event_id\": \"619a7f1125e8a74194d18d8148f53897\",\r\n    \"platform\": \"native\",\r\n    \"release\": \"audacity@3.0.3\",\r\n    \"contexts\": {\r\n        \"os\": {\r\n            \"type\": \"os\",\r\n            \"name\": \"Windows\",\r\n            \"version\": \"10.0.19042\"\r\n        }\r\n    },\r\n    \"exception\": {\r\n        \"values\": [\r\n            {\r\n                \"type\": \"File_Error\",\r\n                \"value\": \"Audacity failed to read from a file in <path>.\",\r\n                \"mechanism\": {\r\n                    \"type\": \"runtime_error\",\r\n                    \"handled\": false,\r\n                    \"data\": {\r\n                        \"sqlite3.rc\": \"11\",\r\n                        \"sqlite3.context\": \"SqliteSampleBlock::Load.step\"\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n```\r\n\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "Summary of my re-review:  besides minor matters, I think the important things are (1) fix the CMake function not to depend on environment and (2) consider whether we might get overreporting of irrelevant information in case of writing FileExceptions.\r\n =||= Fix \"too\" and \"imitate\" in comments, add doc comments for AnonymizedMessage, and it's good to merge.\r\n\r\nI see all \"Error_opening_sound_device\" are done.\r\n =||= "], ["953", "Update UnusedStrings.h", "Anton S. Gerasimov", "gera-gas", "06/04/21, 02:25:22 PM", "Add new strings for update dialog.", "NaN"], ["954", "Update UnusedStrings.h", "Anton S. Gerasimov", "gera-gas", "06/04/21, 04:23:29 PM", "Add all strings for translation.", "NaN"], ["955", "Update UnusedStrings.h", "Anton S. Gerasimov", "gera-gas", "06/04/21, 09:30:48 PM", "Gramma corrections for added strings.", "NaN"], ["956", "Update UnusedStrings.h", "Anton S. Gerasimov", "gera-gas", "06/05/21, 04:34:25 PM", "Add one miss string and some corrections for translations comment context.", "NaN"], ["959", "Address issue with x64 builds and screen reader errors.", null, "Tantacrul", "06/17/21, 02:46:04 PM", "(From David Bailes on Discord)\r\n\r\nRe: For Windows, the RC will be 64bit.\r\nI don't know whether this is already one of the known issues, but on the 64bit build the accessibility for screen readers is badly broken - as in, unusable. The 64 bit build of the wxWidgets accessibility sample program is also broken. The following thread helped me to quickly find the problem: https://social.msdn.microsoft.com/Forums/vstudio/en-US/33dea3e3-5538-423a-856b-989d92903a00/problems-with-narrator-and-jaws?forum=windowsaccessibilityandautomation\r\nA fix is to change one line in the file src/msw/window.cpp in wxWidgets. The line:\r\nif (dwObjId == (LPARAM)OBJID_CLIENT && GetOrCreateAccessible())\r\nis changed to:\r\nif (dwObjId == (LPARAM)(DWORD)OBJID_CLIENT && GetOrCreateAccessible())\r\nThis change fixes the wxWidgets accessibility sample program.\r\nThere may be other issues in the accessibility code in Audacity, but given the current build system, I don't know how to test that until the above bug in wxWidgets is fixed.", "I edited the Audacity solution to build with a local version of wxWidgets. With the above fix to wxWidgets, the accessibility of Audacity for users of screen readers on Windows appears to be OK. =||= "], ["960", "Unexplained \"broken MP3\" error importing a song", "/usr/local/\u0395\u03a8\u0397\u0395\u039b\u03a9\u039d", "djechelon", "06/16/21, 01:03:56 PM", "**Describe the bug**\r\nTrying to import an MP3 file (Blade Encoder 128k CBR) into Audacity for editing.\r\nAudacity fails with message \"Import failed. Possible cause is a broken MP3\"\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Download from YouTube [this song](https://www.youtube.com/watch?v=CkbHmhUDpKs) in M4A format\r\n2. Use VLC to convert it to WAV\r\n3. Use CDex with Blade Encoder to convert it to MP3 CBR 128K, equal to all the files in the existing collection\r\n4. (Store the file somewhere, burn it to DVD, whatever)\r\n2. Drag the resulting file to Audacity for subsequent processing\r\n3. BOOM\r\n\r\nYes, I could share some bytes of the mp3 file I own. Something that won't get any of us to legal trouble.\r\n\r\n**Expected behavior**\r\nAudacity to import the file and show the wave trace\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n(Do you speak Italiano? \ud83c\uddee\ud83c\uddf9)\r\n![immagine](https://user-images.githubusercontent.com/3042285/120942123-1252cb80-c727-11eb-9546-a787ef985be7.png)\r\n\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Windows 10 Pro\r\n - Version: 3.0.2\r\n - All my tracks are encoded using the old Blade Encoder of which I still own a copy\r\n\r\n**Additional context**\r\nI just wanted to make a ringtone-suitable cut of an [audio track](https://www.youtube.com/watch?v=CkbHmhUDpKs). I already \"converted\" and tagged it for my personal music collection. I know that if I re-download the track again from Youtube as a WAV audio or M4A Audacity will import it.\r\n\r\nI just want to understand why Audacity fails to import all my MP3s. I have tried with multiple tracks of my collection. All ripped using CDex (the original, not the adware-powered) with Blade Encoder.", "I know that without the file or its structure you can't investigate the bug, I'm just not posting any link to cloud storage **right now** otherwise someone could file a DMCA compliant to harm the project =||= See this Forum post, it should help you:  https://forum.audacityteam.org/viewtopic.php?f=46&t=117436&p=426850&hilit=import#p426850 =||= Could you tell us what the song is (and possibly where you got it from) so we can check ourselves?\r\n\r\nThanks! =||= Sorry I thought I posted the YouTube link. I edited the post with the instructions.\r\n\r\nYes, I **did** create the ringtone using the M4A version re-downloaded from YT but the bug still persists with existing MP3s from my dj set collection =||= @petersampsonaudacity my list is empty by default\r\n\r\n![\ud83c\uddee\ud83c\uddf9](https://user-images.githubusercontent.com/3042285/121790678-fc8b4d80-cbe1-11eb-90b4-8a44dd9b6323.png)\r\n\r\n\r\n# Edit\r\n\r\nSorry I had to \"add rule\", so now I gave priority to FFMeg files. It worked =||= You beat me to it djechelon - glad you discovered for yourself how to do that - and really glad that it worked for you.  \r\n\r\nThe underlying issue is that a couple of releases back we tightened up on not allowing \"imperfect\" or \"flawed\" MP3 files.  It did need some tightening up (to avoid other issues) but it may still be a little overzealous and could possibly be relaxed a little.  \r\n\r\nThis is something we are aware of and are keeping an eye on - in the meanwhile I will consider adding something in tha Manual about the workaround _(so for now I'll keep this GitHub issue open as a reminder-to-self).\r\n\r\nPeter.\r\n\r\n\r\n**Update:**  @djechelon, any chance you can send me a copy of the MP3 file (or upload it somewhere for me to access) that failed to originally import.  I want to be able to make Audacity force that error message as I want to see \r\na) if it has a ?\" help button,\r\nb) if so, then what page in the Manual does it target?\r\n\r\n**Further update:**  @djechelon, I just looked again at the screenshot you posted and I observe that there is no \"?\" help butto.  This is an isue that we may (but only may) want to fix.  so it would still be useful to have a copy of that flawed MP3 if at all possible.\r\n\r\nThanks,\r\nPeter.\r\n =||= @petersampsonaudacity here you go\r\n\r\nhttps://drive.google.com/file/d/1sq03RZU0nw4TyE5QX6FWrPMmhojIDvV4/view?usp=sharing =||= @djechelon \r\n\r\nfirstly, many thanks for the malformed MP3  :-)\r\n\r\nAs a result of this I decided to formalize the help we can offer in such circumstannces and wrote this new page in the alpha Manual for the upcoming 3.0.3 release - https://alphamanual.audacityteam.org/man/Opening_malformed_MP3_files\r\n\r\nI've also filed a request for a ?\" help button to be added to that error message - that button would send the user to that new page (so hopefully they could help themselves solve their issue).\r\n\r\nPeter.\r\n\r\n\r\n =||= @djechelon \r\n\r\nI've just been testing you MP3 - yes it still gives the error message in 3.0.2 - but when I import it into the latest alpha test build I have for 3.0.3 it imports just fine.\r\n\r\nWhat puzzles me about this is I don't recall any changes we made to the importer libraries for 3.0.3 =||= Latest master build https://github.com/audacity/audacity/actions/runs/942194968 can't open any MP3 file, libmad is disabled.\r\n\r\n![1](https://user-images.githubusercontent.com/6567423/122212718-748a9980-cea8-11eb-81f9-2788ac850613.png)\r\n![2](https://user-images.githubusercontent.com/6567423/122212728-781e2080-cea8-11eb-8dba-b8ab94851485.png)\r\n =||= @vladkosi whoa, that is unfortunate. That is fixed now in #985, it will be merged shortly\r\n\r\nThanks for pointing it out! =||= However testing this morning with the latest alpha  -  audacity-win-3.0.3-alpha-20210616+e83210d-32bit\r\n\r\nNow today with the latest alpha I can no longer import djechelon's malformed MP3.\r\n\r\nFrom looking at the GitHub commits I notice this recent one from Dmitry\r\nFixes the libmad disabled by mistake\r\nhttps://github.com/audacity/audacity/commit/c8e0bf343dbecbb1e1d181ceef124705bdc72079\r\n\r\nAnd this did get pulled in Master after my last set of tests yesterday.\r\n\r\nI tested again with the builds I had yesterday - and then yes I could import those malformed MP3s again.\r\n\r\n\r\nSo I'm inferring that it worked before because libmad was accidentally disabled and that thus all MP3 imports were via FFmpeg.\r\n\r\nThis may also explain why I was seeing no metadata being imported with audio files. =||= "], ["962", "Tracking version", "Anton S. Gerasimov", "gera-gas", "06/09/21, 11:29:54 AM", "**New version check.**\r\nThis pull request introduces an always-opt-in solution for checking a new Audacity version and further download updates by user actions. This feature will be only enabled if  `audacity_has_updates_check` and `audacity_has_networking` is on.\r\n\r\nDialog example:\r\n![2021-06-07_16-43-48](https://user-images.githubusercontent.com/1660969/121028276-5c33c400-c7b0-11eb-8016-4838d0ff0964.png)\r", "> There are several places, where documentation and a file opening comment are missing. Please add those.\r\n> \r\n> Also, the case that we have multiple Audacity windows opened should be handled.\r\n\r\nI disagree that the case of multiple Audacity windows needs to be handled.  This dialog is only meant to happen once when the program begins.  The UpdateManager doesn't really depend on the project, except to find a main window.\r\n\r\nI write more at PR #966  \r\n =||= > I disagree that the case of multiple Audacity windows needs to be handled. This dialog is only meant to happen once when the program begins. The UpdateManager doesn't really depend on the project, except to find a main window.\r\n\r\nOriginally, there was a problem:\r\n1. User opens a window, gets a notification, dismisses it.\r\n2. User opens another project in a new window and gets the notification again.\r\n\r\nI asked Anton to fix it by checking the last time we've shown the update dialog. I haven't looked at #966 yet though\r\n\r\n =||= Tl;dr: The updater is a long-lived singleton object, with a long period timer.  Projects and windows have shorter lives.  The updater should not be permanently associated with any one project or window.  On Mac There might even be none at the time the updater needs to notify you.\r\n =||= "], ["963", "Update Corsican locale co.po for Audacity 3.0.3", null, "Patriccollu", "06/09/21, 02:03:15 PM", "Hello,\r\n\r\nThis is an update of **Corsican** localization for Audacity 3.0.3.\r\n\r\nBest regards,\r\nPatriccollu.\r\n\r", "I confirmed that this is 100% complete.  Thank you!\r\n =||= "], ["964", "Cmake changes fix loading of modules on macOS", "Paul Licameli", "Paul-Licameli", "06/09/21, 07:11:49 PM", "Resolves: https://bugzilla.audacityteam.org/show_bug.cgi?id=2799\r\n\r\nEnabling of the mod-script-pipe module (used for the cooperation of Audacity and Blender, for instance) has failed, on macOS only, since commit 938bbeb.  This fixes it, and also gives a related, better fix for slow builds with many libraries on macOS.\r\n\r\n(Also improves the picture of library dependencies generated at configuration time with Graphviz, shortening some node names.  That has no effect on the built artifacts.)\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x ] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x ] I made sure the code compiles on my machine\r\n- [x ] I made sure there are no unnecessary changes in the code\r\n- [x ] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x ] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["965", "Update pl.po from Transifex for 3.0.3", "Grzegorz Pruchniakowski", "Gootector", "06/09/21, 03:00:26 PM", "Update pl.po from Transifex for 3.0.3\r\n\r\nGreetings,\r\nGootector\r\n\r\nResolves: *(direct link to the issue)*\r\n\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["966", "Tracking version", "Anton S. Gerasimov", "gera-gas", "06/18/21, 01:46:40 PM", "**New version check.**\r\nThis pull request introduces an always-opt-in solution for checking a new Audacity version and further download updates by user actions. This feature will be only enabled if `audacity_has_updates_check` and `audacity_has_networking` is on.\r\n\r\nDialog example:\r\n![2021-06-07_16-43-48](https://user-images.githubusercontent.com/1660969/121355044-2883a600-c938-11eb-9cd9-69470351d902.png)\r", "I will await resolution of points I raised before continuing review.\r\n =||= Before anything else:  again, please simplify the commit history.  Make one simple, straight branch.  Do not include merge commits.  Rebase or cherry-pick one of the branches onto the other.  You could do\r\n```\r\ngit checkout tracking-version\r\ngit reset --hard 1426e5f2c021116ae61dd6e350db724a07e8529c\r\ngit cherry-pick 944edbcc0f3180d6aaf93ab9ef1247404eec64e5\r\ngit cherry-pick 14922cfc738df1bca1401f0a75a178dd35f7c40d\r\n```\r\n\r\nAnd then, rebase onto more recent master and force-push.  You might also do git rebase -i and make some of these commits fixups so the history is shorter.\r\n =||= "], ["967", "Add cmake targets for package generation", "Dmitry Vedenko", "crsib", "06/16/21, 12:07:31 PM", "Adds CMake targets:\r\n---\r\n\r\n* `package`, using CPack. On macOS - dmg will be created. On other systems - zip archive will be created.\r\n* `innosetup` - Windows only, requires InnoSetup 6 installed/\r\n\r\nAll targets are expecting, that binaries are already built. The call `cmake --install` internally, which does not invoke the build process.\r\n\r\nFor example:\r\n\r\n```\r\ncmake --build . --config Release\r\ncmake --build . --config Release --target package\r\n```\r\n\r\nThe resulting packages are placed in `${CMAKE_BINARY_DIR}/package`.\r\n\r\nAdds CMake options:\r\n---\r\n\r\n* `audacity_perform_codesign` - enables code signing on Windows and macOS.\r\n* `audacity_package_manual` - install the manual along with the target.\r\n\r\n---\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["968", "Mac: mod-script-pipe fails to load (https://bugzilla.audacityteam.org/show_bug.cgi?id=2799)", "Paul Licameli", "Paul-Licameli", "06/09/21, 07:11:49 PM", "Mac: mod-script-pipe fails to load\r\n\r\nSee https://bugzilla.audacityteam.org/show_bug.cgi?id=2799\r", "NaN"], ["969", "Update Manual for new spectral colors", "Paul Licameli", "Paul-Licameli", "06/15/21, 04:41:44 PM", "Pages to change:\r\nhttps://manual.audacityteam.org/man/extra_menu_scriptables_i.html#set_track_visuals (Gray scale checkbox is replaced with a choice)\r\n\r\nhttps://manual.audacityteam.org/man/scripting_reference.html (parameters for Set Track Visuals command)\r\n\r\nhttps://manual.audacityteam.org/man/spectrograms_preferences.html (Spectrogram preferences)\r", "The new spectral colors have not been pulled into the Master trunk yet, so it is not timely to update the Manual\r\n =||= I see this from Extra>ScriptablesI\r\n![image](https://user-images.githubusercontent.com/50205984/121703757-6ff26980-cad3-11eb-88d1-f575a3ad8ac9.png)\r\n\r\nWhich then gets me\r\n![image](https://user-images.githubusercontent.com/50205984/121703994-a203cb80-cad3-11eb-9dbe-1a0f4db5e886.png)\r\n\r\nI assume that that is what you expect to see\r\n =||= Other changes\r\n\r\n1) This one is a biggy\r\nhttps://alphamanual.audacityteam.org/man/Spectrogram_View\r\n\r\n2) This one will need some work too\r\nhttps://alphamanual.audacityteam.org/man/Multi-view\r\n\r\n3) https://alphamanual.audacityteam.org/man/Audacity_Selection#spectral\r\n\r\n4) https://alphamanual.audacityteam.org/man/Audacity_Waveform#alternate\r\n\r\n5) https://alphamanual.audacityteam.org/man/Audio_Track_Dropdown_Menu\r\n\r\n6) https://alphamanual.audacityteam.org/man/Audio_Tracks#display\r\n\r\n7) https://alphamanual.audacityteam.org/man/Click_removal_using_the_Spectrogram_view\r\n\r\n8) https://alphamanual.audacityteam.org/man/Spectral_Delete\r\n\r\n9) Another biggy\r\nhttps://alphamanual.audacityteam.org/man/Spectral_Selection\r\n\r\n10) https://alphamanual.audacityteam.org/man/Spectrogram_Settings\r\n\r\nThat's a fair few - and quite a lot of work ...\r\n\r\n\r\n\r\nPro tem - these pages could be left as-is but with a note div to explain that they are using the \"classic\" colorway.\r\nAnd a P2 todo for future update to default colorway. =||= An alternative to updating the many, many inages and pages with spectrograms would be to continue with the original colorway as the default and offer the new one as an option to select in Spectrograms Preferences.\r\n\r\nBut that would have implications for the strings which would need to change - as we would need nomenclature for the new colorway. =||= > as we would need nomenclature for the new colorway.\r\n\r\nIf I were choosing nomenclature I would call the two colorways\r\na) Light\r\nb) Dark\r\n\r\nLight being the original colorway of Paul's (works well with Light Audacity theme)\r\nDark - the new one fron dofuuz, this works nicely with Dark Audacity theme =||= > Light being the original colorway of Paul's (works well with Light Audacity theme)\r\n\r\nI can't take credit for the classic Audacity spectrogram colors.  They predate all my work.\r\n =||= I note that as of latest alpha Audacity-3.0.3-alpha-20210613+7d76e06-32bit\r\n\r\nthis new spectral colorway has still not been pulled into the Master builds.\r\n\r\n_So unless and until that happens this is not an \"open issue\" as such - it is just a \"plan\" ..._ =||= I have set P1s in the manual for pages that MUST be updated for the new Spectrogram colorway(s) - and I have set notes on other pages advising that the images are using the non-default Classic colorway - with a P2 for future update when time and manpower allows.\r\n\r\nI will probably not have time to deal with the P1s until the weekend or early next week. =||= "], ["971", "Bug2800: File>Open should allow non-project from a FAT drive...", "Paul Licameli", "Paul-Licameli", "06/10/21, 09:13:46 PM", "... but still disallow it for .aup3 files.\r\n\r\nThe fix is a simple moving of the check for a FAT filesystem after several\r\nother checks that distinguish types of imported files.\r\n\r\nResolves: https://bugzilla.audacityteam.org/show_bug.cgi?id=2800\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x ] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x ] I made sure the code compiles on my machine\r\n- [x ] I made sure there are no unnecessary changes in the code\r\n- [x ] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x ] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "Tested on W10 with Audacity 3.0.3 6f20453 Paul's 2800 fix\r\n\r\nI confirm that with that fix I can \"open\" audio and MIDI files from a FAT drive - but am still properly blocked from opening an AUP3 project from a FAT drive .   Looks good to go to me. =||= "], ["972", "Updated ga.po", "Sean\u00e1n \u00d3 Coist\u00edn", "seananocoistin", "06/17/21, 03:03:23 PM", "Updated some translations.\r\n\r\nResolves: *(direct link to the issue)*\r\n\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [ ] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [ ] I made sure the code compiles on my machine\r\n- [ ] I made sure there are no unnecessary changes in the code\r\n- [ ] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [ ] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "Thanks for this update.\r\n\r\nusing\r\n`msgcmp ga.po audacity.pot`\r\n\r\nand comparing before and after, I see you supply 13 new strings, but a large number of strings are needed to bring this language to completion.  ga.po still has only 48% of the strings.\r\n\r\nWill you have the time to add more missing strings?\r\n =||= I assume this is superseded by #983\r\n =||= "], ["973", "Updates preferences string", "Anton S. Gerasimov", "gera-gas", "06/16/21, 01:25:31 PM", "Add new string for update preferences window.", "NaN"], ["977", "Update the GA", "Sean\u00e1n \u00d3 Coist\u00edn", "seananocoistin", "06/17/21, 03:03:00 PM", "Added a few translated strings.\r\n\r\nResolves: *(direct link to the issue)*\r\n\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [ ] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [ ] I made sure the code compiles on my machine\r\n- [ ] I made sure there are no unnecessary changes in the code\r\n- [ ] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [ ] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "I assume this is superseded by #983  =||= "], ["979", "Build failure on Mac", "Peter Sampson", "petersampsonaudacity", "06/14/21, 05:05:30 PM", "Cliff Scott reportes this just now on the Quality email list:\r\n\r\n\r\nWent to build Audacity last evening and the build failed so started a new bld directory and the configuration fails now. Last build I did was a couple of weeks ago as I only have occasional Internet at the moment. Help!! Output log attached.\r\n\r\nConfiguration failure:\r\n\r\nBuilding Audacity\r\n\r\n-- The C compiler identification is AppleClang 11.0.0.11000033\r\n-- The CXX compiler identification is AppleClang 11.0.0.11000033\r\n-- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang\r\n-- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang -- works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++\r\n-- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ -- works\r\n-- Detecting CXX compiler ABI info\r\n-- Detecting CXX compiler ABI info - done\r\n-- Detecting CXX compile features\r\n-- Detecting CXX compile features - done\r\nCMake Error at cmake-proxies/cmake-modules/conan.cmake:795 (message):\r\n  Conan executable not found! Please install conan.\r\nCall Stack (most recent call first):\r\n  cmake-proxies/cmake-modules/conan.cmake:841 (conan_check)\r\n  cmake-proxies/cmake-modules/AudacityDependencies.cmake:4 (conan_add_remote)\r\n  CMakeLists.txt:156 (include)\r\n\r\n\r\n-- Configuring incomplete, errors occurred!\r\nSee also \"/Users/CMac/Downloads/Audacity/BuildEnvironment/audacity/bld/CMakeFiles/CMakeOutput.log\u201d.\r\n\r\nCliff", "Hi! We require Conan to build Audacity now. Detailed instructions are here: https://github.com/audacity/audacity/blob/master/BUILDING.md =||= "], ["980", "Update French translation for 3.0.3", "Olivier Humbert", "trebmuh", "06/16/21, 01:17:43 AM", "- [ ] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [ ] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "Thanks, Olivier.\r\n\r\nThis makes fr.po 97% complete.  There are still 117 missing entries.\r\n\r\nThere is still some time in the window for submitting translations.  Can you make this more complete, before I merge it?\r\n\r\nThank you\r\n\r\nPRL\r\n =||= @Paul-Licameli \r\n\r\n> This makes fr.po 97% complete. There are still 117 missing entries.\r\n\r\nThey aren't \"missing\" entries, they are entries which doesn't need to be translated.\r\nHence, it doesn't make sense for those to be copy/pasted, since if the English version would be to change, it would add myself some unneeded handwork. Leaving those as they are now is saving myself some unneeded work (hence time).\r\n\r\nWith this current PR, the French translation is 100% done. =||= Olivier, I figured out a few commands on the Unix command line that complete your translation, copying the English wherever you left a blank:\r\n\r\n```\r\nmsgen audacity.pot > en.po\r\nmsgcat --use-first fr.po en.po > fr2.po\r\nmsgmerge fr2.po audacity.pot > fr.po\r\n```\r\nI pushed the results as another commit.  Please quickly review this.\r\n\r\nI can see that mostly there are proper names and short strings.  But I think you had a doubt about \"Pluck\"?\r\n\r\n =||= It helps us to do this extra work, so that we can automatically check the degree of completion of translation files, and not have false reports of incomplete translations.\r\n =||= Hi @Paul-Licameli .\r\n\r\nIt is wrong to do this from my perspective since it will add some more work on me in the future.\r\nLet's take an example so you get my point:\r\n\r\n    #: src/widgets/NumericTextCtrl.cpp\r\n    msgid \"centihertz\"\r\n    msgstr \"\"\r\n\r\nThere is no value added if I'm _translating_ (copying/pasting) `centihertz` for the same word in French. Hence I left it empty. Because of the way the translation system works, the French GUI will fall back to using the original original English string (ie: `centihertz`). All good, French users will get the right word for the right meaning.\r\n\r\nNow, if you choose to automate a copy/paste thing like you did:\r\n\r\n    #: src/widgets/NumericTextCtrl.cpp\r\n    msgid \"centihertz\"\r\n    msgstr \"centihertz\"\r\n\r\nit will work the same for now. No added value. Thinking ahead now: one day, the coding people will change the string to \"`centi-hertz`\". The pot file will change. The French .po file will be updated. And now, I've got to modify the translation.\r\n\r\nWith the previous solution (leaving `msgstr \"\" ` empty), the transltion would have automatically catch up with the new string. With your solution, it requires me to do an extra work.\r\n\r\nPlease, revert your commit, it doesn't add any value for the translation, and it seems to be only needed for a helping tool to check the translation status. Leave that to the translator (me in this case here). I don't want my work to get more complicated only to cope with a helping tool. I can tell you that the translation is update to 100% or not. No need for a tool here.\r\n\r\nThanks for reading, hope you get my point. =||= Have it your way, I will merge it into master without the other commit, if you object so strongly.\r\n\r\nBut I really don't understand your objections.  I don't understand why the work is so large, after I have explained how you can automate this work with a few commands.  I was just trying to help and make it easy.\r\n\r\nThese strings are very unlikely to change.  Fix them once, and you won't even have to look at the untranslated strings again in your favorite .po file editor.  It won't list them as incomplete for you to review, for the next Audacity version.  That could reduce your work too.\r\n\r\nProper names of mathematicians like \"Bartlett\" are not going to change in future versions.\r\n\r\n(Why were strings like \"Bartlett\" added, anyway?  Because maybe it's proper to transliterate such a name into Katakana or Devanagari or Cyrillic.  It was wrong to assume that all languages would best leave the names in Latin.)\r\n =||= It's done, at commit bd89510a35fcdea01d3a4c239ff49c2251858021, but it was not done with this GitHub interface.\r\n\r\nTherefore I close this pull request.  Thank you for the translation.\r\n =||= "], ["982", "Turkish translation update", "Kaya Zeren", "kayazeren", "06/15/21, 04:53:47 PM", "Turkish translation update\r", "NaN"], ["983", "Update ga.po", "Sean\u00e1n \u00d3 Coist\u00edn", "seananocoistin", "06/17/21, 04:00:36 PM", "Translated a few more strings. Tis a whore of a file. Still lots to be translated.\r\n\r\nResolves: *(direct link to the issue)*\r\n\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [ ] I made sure the code compiles on my machine\r\n- [ ] I made sure there are no unnecessary changes in the code\r\n- [ ] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [ ] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "Thank you.  I pushed these changes at commit 28c7805459622e42cbe5f894acba0096eea72f96\r\n\r\nIf you mean to translate a few more, by all means continue.  If you see a release branch separate from master, please make pull requests against that one.\r\n =||= "], ["984", "ErrorReportingDialog does not support screen readers", "Dmitry Vedenko", "crsib", "06/16/21, 03:54:20 PM", "David Bailes \u2014 06/09/2021\r\nFor many text boxes in Audacity, the accessible name is not the same as the text box's label - the accessible name also includes the units, which appear after the text box. Because of this, if you add a text box using ShuttleGui, then there's a call for SetAccessible() on the text box. The advantage of this is that in dialog box code, there doesn't need to be SetAccessible() calls for text boxes. The downside, is that the accessible name always has to be set, even when it's the same as the label. If a text box  is created using an non empty caption, then that's used for the accessible name. Given that you're creating two text boxes with empty captions, then you have to call ShuttleGui & Name( const TranslatableString &name ) to set the accessible name. For example:\r\n```\r\nS.Style(wxTE_RICH | wxTE_READONLY | wxTE_MULTILINE | wxTE_DONTWRAP).MinSize(wxSize(0,152))\r\n            Name(XO(\"Problem details\")).AddTextBox({}, mReport->GetReportPreview(), 0);\r\n```", "NaN"], ["985", "Fixes the libmad disabled by mistake", "Dmitry Vedenko", "crsib", "06/16/21, 01:03:56 PM", "Resolves: https://github.com/audacity/audacity/issues/960#issuecomment-862308980\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["986", "Fix #984 - ErrorReportingDialog does not support screen readers", "Dmitry Vedenko", "crsib", "06/16/21, 03:54:20 PM", "Resolves: #984\r\n\r\nFix uses the approach proposed by David Bailes\r\n\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["987", "CI script fixes (sentry symbols upload)", "Vitaly Sverchinsky", "vsverchinsky", "06/16/21, 02:00:48 PM", "* Fixes typos in a CI script related to a debug symbols upload command\r\n* Debug symbol upload triggered if branch name starts with 'release-' (previously was using tags instead)\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["988", "Bug 2808 Nyquist GATE function limits floor level to -60 dB", "Steve Daulton", "SteveDaulton", "06/18/21, 02:27:15 PM", "Resolves: https://bugzilla.audacityteam.org/show_bug.cgi?id=2808\r\n\r\nA recent update to Audacity's Nyquist library introduced a -60 dB limit to the \"floor\" parameter in the  GATE function. This created errors in several existing plug-ins, including Audacity's shipped \"Noise Gate\" (bug 2733) and the popular \"Hum Remover\" plug-in\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "This is a simple fix. Can you not review it yourself Paul?\r\n\r\nThe bugzilla report provides a simple test for the fix: https://bugzilla.audacityteam.org/show_bug.cgi?id=2808\r\nThe expected result is that it should show no debug warnings other than possibly at -100 dB. =||= "], ["989", "Reenables Nyquist for the prebuilt Linux binaries", "Dmitry Vedenko", "crsib", "06/16/21, 04:32:29 PM", "A quick fix for Nyquist in Linux binaries: we set `AUDACITY_PATH` to the local `share/audacity` folder.\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["991", "Fixes MIDI playback on 64 bit Windows", "Dmitry Vedenko", "crsib", "06/18/21, 08:21:19 AM", "The fix is based on https://www.mail-archive.com/media_api@create.ucsb.edu/msg00514.html\r\n\r\nIn the next release, we will devendor portmidi and update it to the latest version, which has this bug fixed already\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["993", "Real-time effects", null, "AnitaBats", "06/17/21, 11:58:16 AM", "Ability to add one or more effects per track, which run realtime\r\nRelated to: issue #992 \r", "Closing this as it's a duplicate of https://github.com/audacity/audacity/issues/992 =||= "], ["998", "Context menu rework", null, "AnitaBats", "09/06/21, 02:02:38 PM", "### User Story\r\nAs a user, I would like to access some frequent functions directly in context, to save time.\r\n\r\n### Description\r\n\r\nCurrently audio tracks don't have any context menus (right click menus) in Audacity. In most DAWs the most often used actions are also exposed through context menus (in addition to main menus and keyboard shortcuts). This saves users time and helps new users find commonly used actions quickly in context.\r\n\r\nWe would like to add a handful of often used actions as context menus when right clicking on an audio track, or in the empty space. We can add more actions over time, but this would be a good starter set.\r\n\r\nContext menu over audio track:\r\n\r\n![1 0 audacity3 menu on audio clip@2x](https://user-images.githubusercontent.com/10109867/125430957-fc5d9057-668b-438b-9dc3-79572facbc2b.jpg)\r\n\r\n\r\nContent menu outside audio track:\r\n\r\n![1 0 audacity3 menu on empty@2x](https://user-images.githubusercontent.com/10109867/125431792-e3063672-5db1-41c4-8365-ad4c7fb10331.jpg)\r\n\r\n\r\nDiscussion at #867 \r\n\r\n### Scope, Restrictions and \u0421ourner-cases\r\n\r\n- in release 3.1 new context menu is applicable only to Mono and Stereo tracks\r\n- context menu on blank space is different to the context menu on audio tracks (see the screenshots above, please)\r\n- time tracks and label tracks are not in the scope of this task in release 3.1. Time and label tracks are still the same.\r", " @jounih Jouni, could you, please, point what functions/actions are required in the new context menu? =||= Ready for development =||= **Description of task decomposition.**\r\nAll estimation times have two borders: this is not 100% precision time frame, this is the approximate time window for solving task.\r\n\r\n1. Add context menu\r\n1.1 Create event handler for right mouse click in `ProjectManager` or `TrackPanel` (this class already support mouseevent `ProjectWindow::OnMouseEvent`, but seems necessary passed up right click event additionally).\r\n1.2 Create context  menu by `wxMenu` and bind (connect) handler for popup context menu callback.\r\nEstimate: 2 - 3 hrs.\r\n\r\n2. Add context menu for `WaveTrackView` and separate menu for `on track` and `non track` by control of selection zone using `TrackList::Get( project ).Selected()` methods.\r\nEstimate: 3 - 4 hrs.\r\n\r\n3. Call methods from context menu\r\n3.1 Call exist methods from context menu callback, like `OnNewWaveTrack(const CommandContext &context)` for create a mono track or `void OnPaste(const CommandContext &context)`, etc, but it should doing carefully for support right `CommandContext` content.\r\n3.2 Final behavior tests (2,4) hrs.\r\nEstimate: 10 - 12 hrs.\r\n\r\n**Total estimate:** 15 - 19 hrs.\r\n\r\n@crsib @Paul-Licameli could you review, please. =||= "], ["1004", "Release notes", null, "Tantacrul", "07/02/21, 06:13:54 PM", "NaN", "@Tantacrul where notes have been prepared in the past: https://wiki.audacityteam.org/wiki/Next_Release\r\n =||= "], ["1005", "Add page in alphamanual.audacityteam.org for application preferences like: https://alphamanual.audacityteam.org/man/Application_Preferences", null, "Tantacrul", "07/02/21, 06:14:03 PM", "NaN", "Are \"Application_Preferences\" different from \"Preferences\" (https://alphamanual.audacityteam.org/man/Preferences)?\r\n =||= @SteveDaulton The automatic checking for updates has a don't-tell-me-again checkbox, but then a place is needed in Preferences to reverse that decision if you wish.  There will be a new page just for that.\r\n\r\nFor DIY builds of Audacity, this will only appear if you opt-in at configuration time with the right CMake options.\r\n\r\nAs also the rest of checking for updates and anything else that uses networking.\r\n\r\n =||= @Tantacrul the new preference dialog pane needs a manual page, but I suppose the pop-up when a new version is detected will not?  It is not a command the user invokes, and will explain itself when you see it.\r\n\r\n =||= @SteveDaulton this new Preferences pane will be bare at first but may grow as a place for other such opt-ins and _outs.\r\n =||= @jounih The steps for doing this are:\r\n\r\n1 Create a page in the wiki https://alphamanual.audacityteam.org/man/Application_Preferences and edit the text to say what you want it to say.\r\n2.a Upload the image for it.  Make sure to use the same pattern of naming as for the other preference pages.\r\n2.b Upload the updated images for all other preference pages, since they will all have changed.\r\n3 Update the template https://alphamanual.audacityteam.org/man/Template:Prefs-imagemap\r\n\r\nYou can get all the preference page images automatically from within Audacity: \r\n![image](https://user-images.githubusercontent.com/1621525/122415565-eeda1d00-cf7f-11eb-823c-4da9124918fb.png)\r\n\r\nYou can either update the template by hand to indicate the new hotspots, or I can show you how to use a tool that does that.\r\n =||= "], ["1006", "Use wxWidgets with fixed Win64 accessibility", "Dmitry Vedenko", "crsib", "06/17/21, 02:46:04 PM", "Resolves: #959 \r\n\r\nThe fix is in the wxWidgets fork: https://github.com/audacity/wxWidgets/commit/e42d7f73652cf7e40058a48177a86e0f864ec464\r\n\r\nThe problem was related to the sign extension in 64 bit builds. The approach used by Microsoft in MSDN examples is used now.\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "What will this do that was not done at commit 045fcbf688a04e5eba7ba8cd34309400a53e835c ?\r\n\r\nIf @DavidBailes  reviews this, he should review that already merged part too, which I approved yesterday.\r\n =||= I see this is a one-line fix in Conan only, presumably to get a patch for an issue from wxWidgets?  No reason to hesitate.\r\n\r\n =||= The fix itself is here: https://github.com/audacity/wxWidgets/commit/e42d7f73652cf7e40058a48177a86e0f864ec464\r\n\r\nIt is one of the cases when WinAPI hasn't played well with the 64 bits world. The use 32bit negative integer as a constant and pass it over the signed 64-bit integer parameter. MSDN recommends peculiar double conversion to avoid sign extension: https://docs.microsoft.com/en-us/windows/win32/winauto/wm-getobject?redirectedfrom=MSDN\r\n\r\nThe workaround was almost ok in wxWidgets, but it resulted in a sign-extended constant instead :-) The fix ensures that both constants are not sign extended. That is what MS does on another MSDN page: https://docs.microsoft.com/en-us/windows/win32/winauto/reuse-existing-pointers-to-objects =||= Typo in the comment in the commit at the other repo\r\n =||= "], ["1007", "Dev", "euphoric", "yonderbread", "06/17/21, 05:40:06 PM", "\r\n- Add new compressor plugin\r\n- Remove COC\r\n- Set up a basic workflow for Github Actions\r\n- Update GPL license", "@mmmaisel Any idea on how to resolve the conflict with the cmakelist? I don't want to break anything. =||= "], ["1008", "Fix Fedora packaging", "Dmitry Vedenko", "crsib", "07/28/21, 11:27:35 AM", "Currently, there are issues, that prevent Fedora packaging:\r\n\r\n* `conan` - add conan-less mode\r\n* ThreadPool - should be conditionally disabled\r\n* RapidJSON - should be conditionally disabled", "Here is an updated version of the spec file with some new deps https://src.fedoraproject.org/fork/imcinerney/rpms/audacity/tree/im/depupdate.\r\n\r\nI haven't been able to kick off a full build yet though because rawhide enabled the rpath checking and at least on 3.0.2 there is an rpath issue with mod-script-pipe.so:\r\n\r\n```\r\n*******************************************************************************\r\n*\r\n* WARNING: 'check-rpaths' detected a broken RPATH OR RUNPATH and will cause\r\n*          'rpmbuild' to fail. To ignore these errors, you can set the\r\n*          '$QA_RPATHS' environment variable which is a bitmask allowing the\r\n*          values below. The current value of QA_RPATHS is 0x0000.\r\n*\r\n*    0x0001 ... standard RPATHs (e.g. /usr/lib); such RPATHs are a minor\r\n*               issue but are introducing redundant searchpaths without\r\n*               providing a benefit. They can also cause errors in multilib\r\n*               environments.\r\n*    0x0002 ... invalid RPATHs; these are RPATHs which are neither absolute\r\n*               nor relative filenames and can therefore be a SECURITY risk\r\n*    0x0004 ... insecure RPATHs; these are relative RPATHs which are a\r\n*               SECURITY risk\r\n*    0x0008 ... the special '$ORIGIN' RPATHs are appearing after other\r\n*               RPATHs; this is just a minor issue but usually unwanted\r\n*    0x0010 ... the RPATH is empty; there is no reason for such RPATHs\r\n*               and they cause unneeded work while loading libraries\r\n*    0x0020 ... an RPATH references '..' of an absolute path; this will break\r\n*               the functionality when the path before '..' is a symlink\r\n*          \r\n*\r\n* Examples:\r\n* - to ignore standard and empty RPATHs, execute 'rpmbuild' like\r\n*   $ QA_RPATHS=$(( 0x0001|0x0010 )) rpmbuild my-package.src.rpm\r\n* - to check existing files, set $RPM_BUILD_ROOT and execute check-rpaths like\r\n*   $ RPM_BUILD_ROOT=<top-dir> /usr/lib/rpm/check-rpaths\r\n*  \r\n*******************************************************************************\r\nERROR   0002: file '/usr/share/audacity/modules/mod-script-pipe.so' contains an invalid runpath '/builddir/build/BUILD/audacity-minsrc-3.0.2/x86_64-redhat-linux-gnu/bin/Debug/lib64/audacity' in [/builddir/build/BUILD/audacity-minsrc-3.0.2/x86_64-redhat-linux-gnu/bin/Debug/lib64/audacity]\r\nerror: Bad exit status from /var/tmp/rpm-tmp.5wKlaL (%install)\r\n    Bad exit status from /var/tmp/rpm-tmp.5wKlaL (%install)\r\n```\r\n\r\nIt looks like something is getting misconfigured in the rpath creation for the module, because the rpath for the main executable is working fine. =||= Using conan over cmake looks very ugly from the point of view of packaging, but it does not prevent to build an RPM package without access to network. I have been building Audacity 3.0.3 RC2 for ALT Linux Sisyphus and managed to build it with conan and without network, but not without hacks. conan is added to BuildRequires.\r\n\r\nPackaging is here: http://git.altlinux.org/people/mikhailnov/packages/audacity.git?p=audacity.git;a=tree;hb=1befbd9c83c032a87671a1e86b0b94beb7f55cf6\r\n\r\nSee patches and the `%build` section of the spec file:\r\nhttp://git.altlinux.org/people/mikhailnov/packages/audacity.git?p=audacity.git;a=blob;f=audacity.spec;h=7c8ce8d34ab263b48ad7fad70a97e71a0143edfb;hb=1befbd9c83c032a87671a1e86b0b94beb7f55cf6#l117\r\n\r\n```bash\r\n%build\r\n# src/RevisionIdent.h is in src/.gitignore and may be missing,\r\n# what leads to build errors, but it's empty in release tarballs\r\n[ ! -f src/RevisionIdent.h ] && echo ' ' > src/RevisionIdent.h\r\n\r\n# cmake calls conan, and conan cannot detect version of /usr/bin/cc\r\n# (Audacity upstream is crazy sometimes!)\r\nexport CC=\"$(command -v gcc)\"\r\n\r\n# Hack for liblame-devel missing pkgconfig file\r\n# https://bugzilla.altlinux.org/show_bug.cgi?id=40342\r\n# That crap with too complicated build system (cmake+conan) causes this\r\nmkdir -p local_pc\r\nsed -r linux/build-environment/pkgconfig/lame.pc \\\r\n\t-e \"s,^libdir=.+,libdir=%{_libdir},\" \\\r\n\t-e \"s,^Version:,Version: $(rpm -q --whatprovides --qf '%%{version}' liblame-devel),\" \\\r\n\t> local_pc/lame.pc\r\n[ -z \"${PKG_CONFIG_PATH:-}\" ]\r\nexport PKG_CONFIG_PATH=\"$PWD/local_pc\"\r\n\r\n# -DCMAKE_MODULE_LINKER_FLAGS to not loose -l flags inside %%optflags\r\n%cmake \\\r\n  -DCMAKE_MODULE_LINKER_FLAGS=\"%{optflags}\" \\\r\n  -Daudacity_lib_preference:STRING=system \\\r\n  -Daudacity_has_networking=no \\\r\n  -Daudacity_use_ffmpeg:STRING=linked \\\r\n  -Daudacity_use_libmp3lame:STRING=system \\\r\n  -Daudacity_use_libflac:STRING=system \\\r\n  -Daudacity_use_libid3tag:STRING=system \\\r\n  -Daudacity_use_libsndfile:STRING=system \\\r\n  -Daudacity_use_libsoxr:STRING=system \\\r\n  -Daudacity_use_libtwolame:STRING=system \\\r\n  -Daudacity_use_libuuid:STRING=system \\\r\n  -Daudacity_use_libvamp:STRING=system \\\r\n  -Daudacity_use_libvorbis:STRING=system \\\r\n  -Daudacity_use_lv2:STRING=system \\\r\n  -Daudacity_use_sbsms:STRING=system \\\r\n  -Daudacity_use_soundtouch:STRING=system \\\r\n  -Daudacity_use_portaudio:STRING=local \\\r\n  -Daudacity_use_midi:STRING=local \\\r\n  -DAUDACITY_BUILD_LEVEL=2 \\\r\n  -DAUDACITY_SUFFIX:STRING=\"\"\r\n\r\n%cmake_build\r\n```\r\n\r\n`add_conan_lib()` in audacity's cmake build systems works so that conan does not try to download a library if a system one is detected, that makes it OK to run conan inside rpm-build. =||= "], ["1009", "[CONAN] cannot find system mp3lame", "Carlo Bramini", "carlo-bramini", "08/02/21, 05:07:33 PM", "You are trying to detect system libmp3lame by using pkg-config, but it seems to me that this kind of support does not exist into the library.\r\nYou cannot find `.pc` script in CYGWIN package:\r\n\r\nhttps://cygwin.com/cgi-bin2/package-cat.cgi?file=x86_64%2Flibmp3lame-devel%2Flibmp3lame-devel-3.100-1&grep=mp3lame\r\n\r\nneither into the Debian package:\r\n\r\nhttps://packages.debian.org/sid/amd64/libmp3lame-dev/filelist\r\n\r\nneither into the latest sources of mp3lame from their repository:\r\n\r\nhttps://sourceforge.net/p/lame/svn/HEAD/tree/trunk/lame/\r\n\r\nSo, it is not clear to me how this is expected to work.\r\nAnd, when you configure Audacity, mp3lame 3.100-1 cannot be compiled in CYGWIN/MinGW/MSYS2 as it is because there is a bug into the source code (already fixed into SVN head, hopefully).\r", ">You are trying to detect system libmp3lame by using pkg-config\r\n\r\nThis was an original behavior, ported over to the Conan system. It will be fixed in #1008.\r\n\r\n>And, when you configure Audacity\r\n\r\nThere is a fixed recipe available as `libmp3lame/3.100@audacity/stable`. It is not used in master yet, because #949 is not yet fully fixed.  =||= This was described in https://github.com/audacity/audacity/issues/554 =||= Fixed by #1008  =||= "], ["1010", "GPL2/VST investigation", null, "AnitaBats", "09/21/21, 03:20:33 PM", "NaN", "done =||= "], ["1026", "Bug 2740 - Directories in Directories preferences can be set to unwritable locations", "Jithin John", "MalevolentStrix", "06/18/21, 03:46:05 PM", "Resolves: https://bugzilla.audacityteam.org/show_bug.cgi?id=2740\r\n\r\nUsed IsDirWritable() of wxFileName to check the write permission for the directory at the time of setting the preference for Save and Export in Edit>Preferences>Directories to avoid issues while Saving or Exporting.\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [X] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [X] I made sure the code compiles on my machine\r\n- [X] I made sure there are no unnecessary changes in the code\r\n- [X] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [X] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1029", "Bug 2740 - Directories in Directories preferences can be set to unwritable locations", "Jithin John", "MalevolentStrix", "06/19/21, 02:00:50 PM", "Resolves: https://bugzilla.audacityteam.org/show_bug.cgi?id=2740\r\n\r\nUsed IsDirWritable() of wxFileName to check the write permission for the directory at the time of setting the preference for Save and Export in Edit>Preferences>Directories to avoid issues while Saving or Exporting.\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [X] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [X] I made sure the code compiles on my machine\r\n- [X] I made sure there are no unnecessary changes in the code\r\n- [X] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [X] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"", "I see too many commits making white space changes but doing nothing important, and I see merge commits.\r\n\r\nPlease use `git rebase -i` onto the latest master branch tip, and shorten the history using \"f\" or \"s\" so I can more easily find the important fix.\r\n =||= Can you please look at https://github.com/audacity/audacity/pull/1033 =||= "], ["1030", "Unblock Fedora RPM", "Dmitry Vedenko", "crsib", "07/28/21, 11:27:35 AM", "Resolves: #1008 \r\n\r\nA new CMake option is added, that allows to disable Conan. This option is likely temporary, we will continue investigating how to use Conan in RPM builds (like providing a tarball with all the dependency sources packaged along with Conan).\r\n\r\nBased on the https://src.fedoraproject.org/fork/imcinerney/rpms/audacity/tree/im/depupdate - updated spec and a docker image are created, to test the RPM builds.\r\n\r\n```\r\n~ docker build -t audacity-fedora .\r\n~ docker run -ti --volume=%path_to_audacity%:/audacity  --cap-add=SYS_ADMIN --rm  audacity-fedora\r\n```\r\n\r\n@imciner2 Can you please look into and provide your comments?\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "`*.pc` are git-ignored, did you force-add them? =||= CAP_SYS_ADMIN is not needed for rpm-build =||= Current build systems adds an absolute RPATH. Such binaries will not work after being packed to RPM. Maybe also add an `ldd` test into `%check`.\r\n\r\n```\r\n[00:01:52] verify-elf: WARNING: ./usr/lib64/audacity/modules/mod-script-pipe.so: RPATH contains several entries: /usr/src/RPM/BUILD/audacity-src-3.0.3/x86_64-alt-linux/bin/Debug/lib64/audacity:/usr/src/RPM/BUILD/audacity-src-3.0.3/x86_64-alt-linux/shared/Debug\r\n[00:01:52] verify-elf: ERROR: ./usr/lib64/audacity/modules/mod-script-pipe.so: RPATH contains illegal absolute entry \"/usr/src/RPM/BUILD/audacity-src-3.0.3/x86_64-alt-linux/bin/Debug/lib64/audacity\": /usr/src/RPM/BUILD/audacity-src-3.0.3/x86_64-alt-linux/bin/Debug/lib64/audacity:/usr/src/RPM/BUILD/audacity-src-3.0.3/x86_64-alt-linux/shared/Debug\r\n[00:01:52] verify-elf: ERROR: ./usr/lib64/audacity/modules/mod-script-pipe.so: RPATH contains illegal absolute entry \"/usr/src/RPM/BUILD/audacity-src-3.0.3/x86_64-alt-linux/shared/Debug\": /usr/src/RPM/BUILD/audacity-src-3.0.3/x86_64-alt-linux/bin/Debug/lib64/audacity:/usr/src/RPM/BUILD/audacity-src-3.0.3/x86_64-alt-linux/shared/Debug\r\n[00:01:52] verify-elf: ERROR: ./usr/lib64/audacity/modules/mod-script-pipe.so: RPATH contains illegal entry \"/usr/src/RPM/BUILD\": /usr/src/RPM/BUILD/audacity-src-3.0.3/x86_64-alt-linux/bin/Debug/lib64/audacity:/usr/src/RPM/BUILD/audacity-src-3.0.3/x86_64-alt-linux/shared/Debug\r\n[00:01:53] verify-elf: WARNING: ./usr/lib64/audacity/modules/mod-script-pipe.so: undefined symbol: _ZN18ScriptCommandRelay17StartScriptServerEPFiPFiP8wxStringS1_EE\r\n[00:01:53] verify-elf: ERROR: ./usr/lib64/audacity/lib-utility.so: RPATH contains illegal absolute entry \"/usr/src/RPM/BUILD/audacity-src-3.0.3/x86_64-alt-linux/bin/Debug/lib64/audacity\": /usr/src/RPM/BUILD/audacity-src-3.0.3/x86_64-alt-linux/bin/Debug/lib64/audacity\r\n[00:01:53] verify-elf: ERROR: ./usr/lib64/audacity/lib-utility.so: RPATH contains illegal entry \"/usr/src/RPM/BUILD\": /usr/src/RPM/BUILD/audacity-src-3.0.3/x86_64-alt-linux/bin/Debug/lib64/audacity\r\n[00:01:53] verify-elf: ERROR: ./usr/lib64/audacity/lib-string-utils.so: RPATH contains illegal absolute entry \"/usr/src/RPM/BUILD/audacity-src-3.0.3/x86_64-alt-linux/bin/Debug/lib64/audacity\": /usr/src/RPM/BUILD/audacity-src-3.0.3/x86_64-alt-linux/bin/Debug/lib64/audacity\r\n[00:01:53] verify-elf: ERROR: ./usr/lib64/audacity/lib-string-utils.so: RPATH contains illegal entry \"/usr/src/RPM/BUILD\": /usr/src/RPM/BUILD/audacity-src-3.0.3/x86_64-alt-linux/bin/Debug/lib64/audacity\r\n[00:01:53] verify-elf: WARNING: ./usr/lib64/audacity/lib-uuid.so: RPATH contains several entries: /usr/src/RPM/BUILD/audacity-src-3.0.3/x86_64-alt-linux/bin/Debug/lib64/audacity:/usr/src/RPM/BUILD/audacity-src-3.0.3/x86_64-alt-linux/shared/Debug\r\n[00:01:53] verify-elf: ERROR: ./usr/lib64/audacity/lib-uuid.so: RPATH contains illegal absolute entry \"/usr/src/RPM/BUILD/audacity-src-3.0.3/x86_64-alt-linux/bin/Debug/lib64/audacity\": /usr/src/RPM/BUILD/audacity-src-3.0.3/x86_64-alt-linux/bin/Debug/lib64/audacity:/usr/src/RPM/BUILD/audacity-src-3.0.3/x86_64-alt-linux/shared/Debug\r\n[00:01:53] verify-elf: ERROR: ./usr/lib64/audacity/lib-uuid.so: RPATH contains illegal absolute entry \"/usr/src/RPM/BUILD/audacity-src-3.0.3/x86_64-alt-linux/shared/Debug\": /usr/src/RPM/BUILD/audacity-src-3.0.3/x86_64-alt-linux/bin/Debug/lib64/audacity:/usr/src/RPM/BUILD/audacity-src-3.0.3/x86_64-alt-linux/shared/Debug\r\n[00:01:53] verify-elf: ERROR: ./usr/lib64/audacity/lib-uuid.so: RPATH contains illegal entry \"/usr/src/RPM/BUILD\": /usr/src/RPM/BUILD/audacity-src-3.0.3/x86_64-alt-linux/bin/Debug/lib64/audacity:/usr/src/RPM/BUILD/audacity-src-3.0.3/x86_64-alt-linux/shared/Debug\r\n[00:01:53] verify-elf: ERROR: ./usr/lib64/audacity/lib-strings.so: RPATH contains illegal absolute entry \"/usr/src/RPM/BUILD/audacity-src-3.0.3/x86_64-alt-linux/bin/Debug/lib64/audacity\": /usr/src/RPM/BUILD/audacity-src-3.0.3/x86_64-alt-linux/bin/Debug/lib64/audacity\r\n[00:01:53] verify-elf: ERROR: ./usr/lib64/audacity/lib-strings.so: RPATH contains illegal entry \"/usr/src/RPM/BUILD\": /usr/src/RPM/BUILD/audacity-src-3.0.3/x86_64-alt-linux/bin/Debug/lib64/audacity\r\n```\r\n\r\nBetter use something like `$ORIGIN/../LIB_SUFFIX/audacity` where LIB_SUFFIX is a variable from cmake. See `man ld-linux` on Linux and `man rtld` on FreeBSD. =||= > Current build systems adds an absolute RPATH\r\n\r\nI will look into, thank you for pointing out. =||= "], ["1031", "Make Audacity build in C++17 ...", "Paul Licameli", "Paul-Licameli", "06/18/21, 06:44:55 PM", "... Fixing many conditional operators with explicit construction of wxString\r\ninstead of simple string literals;\r\n\r\nAnd fixing allocation of more strictly aligned structures on Mac, without need\r\nfor 10.14 as the minimum SDK, by means of some class-specific operators new\r\nand delete.\r\n\r\nResolves: *(direct link to the issue)*\r\n\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1032", "label-sounds.ny not working for me, both mac and windows.", "SinisterSpatula", "SinisterSpatula", "06/24/21, 12:57:04 AM", "**Describe the bug**\r\nLabel-sounds plug-in is only able to detect the entire audio track as one sound, no matter what values I try.  I have tried both Windows and Mac and get the same behavior.  If I try the other plug-ins (Silence Finder, Sound Finder, etc) they work as expected and successfully mark the track with multiple detections.  I'm running v3.0.2 both under Windows and Mac.  The label-sounds.ny says it's version 4, release 3.0.0.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Import an audio track.\r\n2. Use sound labeler with any values.\r\n3. It will label just the entire track as a single label (either surrounding, at the beginning or at the end).\r\n\r\n\r\n**Expected behavior**\r\nI expect to see more than one label, the same behavior that I can get from silence finder, sound finder, etc.\r\n\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Windows 10 and Mac OS Big Sur (tried both).\r\n - Version Audacity 3.0.2\r\n\r\n**Additional context**\r\nI really want Sound Labeler to work because I would prefer it's functionality of minimum label interval which all the others do not have.\r", "Please come and talk to us on the help forum so that we can resolve this. I'm expecting that it is just a matter of settings, but if it turns out to be a bug I'll fix it. The forum is here: https://forum.audacityteam.org =||= Thanks, I made a post in the windows section of the forum. =||= Confirmed that this is a bug.\r\n\"Label Sounds\" fails when sample  rate is 22050 Hz.\r\nLogged as bug 2809. =||= Pull request sent with fix: https://github.com/audacity/audacity/pull/1036 =||= Thank you so much Steve for all your help!!  Should I test other sample rates too, or do you think it was only going to affect 22050 Hz? =||= The bug will affect some other sample rates, but the fix will work with  any sample rate. =||= I tested this and closed the bug on Bugzilla:\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2809 =||= "], ["1033", "Bug 2740 - Directories in Directories preferences can be set to unwritable locations", "Jithin John", "MalevolentStrix", "06/27/21, 04:48:05 AM", "Resolves: https://bugzilla.audacityteam.org/show_bug.cgi?id=2740\r\n\r\nUsed IsDirWritable() of wxFileName to check the write permission for the directory at the time of setting the preference for Save and Export in Edit>Preferences>Directories to avoid issues while Saving or Exporting.\r\n\r\n![Screenshot from 2021-06-19 19-23-32](https://user-images.githubusercontent.com/73242397/122644672-1540b980-d134-11eb-81c4-1dd725268b43.png)\r\n*Error screen if the directory is unwritable*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [X] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [X] I made sure the code compiles on my machine\r\n- [X] I made sure there are no unnecessary changes in the code\r\n- [X] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [X] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1034", "avformat-55.dll (not more supported)", null, "648643579", "09/24/21, 06:03:22 PM", "Hello,\r\n\r\navformat-55.dll not updated and contains bugs, It is necessary to support a new version of ffmpeg avformat-58.dll.", "NaN"], ["1036", "Bug 2809 - Label Sounds fails when track sample rate is 22050 Hz", "Steve Daulton", "SteveDaulton", "06/24/21, 12:57:04 AM", "Fix incorrect equality comparison between int and float and\r\nbump plug-in release number.\r\n\r\nResolves: https://bugzilla.audacityteam.org/show_bug.cgi?id=2809\r\nResolves: https://github.com/audacity/audacity/issues/1032\r\n\r\nWhen sample rate is not divisible by 100, the low sample rate copy has a fractional sample rate, so the calculated minimum silence duration in samples is a floating point number. Replace equality comparison with greater or equal so that we don't miss adding the label.\r\n\r\nAlso bumped plug-in release number to signify that plug-in has been updated.\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "+1 for QuickFix for 3.0.3 =||= This fix has now been tested by Peter.\r\nJust waiting for someone to get round to \"reviewing\" and committing the obvious one character change. =||= Given that this has been fixed and tested - can we please ensure this gets reviewed and pulled for 3.0.3 =||= "], ["1037", "Wrong German translation for \"Save changes to\"", "Felix Pahl", "joriki", "06/23/21, 03:27:42 PM", "This German translation is wrong:\r\n\r\nhttps://github.com/audacity/audacity/blob/77dab158c37fcb7e448a103400810ac16eda4686/locale/de.po#L4825\r\n\r\nIt would be a correct translation if \"to\" were used to indicate the destination of the save operation, but it actually indicates the object \"to\" which changes were made. The correct translation for that is:\r\n\r\n`msgstr \"%s\u00c4nderungen an %s speichern?\"`", "Fixed in Release branch at 7bdc25039ffcd07db64895ddb1efe1b49c165a9e\r\n =||= "], ["1039", "'Windows protected your PC' - Microsoft Defender is blocking the running of the RC", null, "Tantacrul", "08/04/21, 12:25:42 PM", "### Bug Description\r\nMicrosoft Defender is blocking the running of the RC\r\n\r\n\r\n### Steps To Reproduce\r\n\r\n- Download 32/64bit version of Audacity\r\n- Try to open the executable file\r\n\r\n### Current result\r\nWindows defender popup appears: 'Microsoft Defender SmartScreen prevented an unrecognised app from starting. Running this app might put your PC at risk.'\r\n\r\n\r\n### Build and OS info\r\n\r\n- Windows x32;\r\n- Windows x64;\r", "This is kinda won't fix issue. Or rather it will fix itself. The problem is - our certificate is new and our certificate is not EV. The Microsoft will pick it up shortly and the problem will be solved =||= resolved; no actions needed =||= "], ["1040", "Removed call that would stop project playback when using batch commands.", "Karl Johnson", "smapty", "07/16/21, 04:49:27 AM", "Removed a call to stop playing the current project when a batch call is sent to Audacity. There are reasons to leave playback (especially looping playback) running while batch commands are being issued. Stop can be a part of someone's batch commands if they need to stop playback of the project.\r\n\r\nResolves: https://github.com/audacity/audacity/issues/961\r\n\r\n*I've added a change to prevent the project playback from being automatically stopped when issued a batch command. This allows for commands to be issued while playback of the project is going.*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x ] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x ] I made sure the code compiles on my machine\r\n- [x ] I made sure there are no unnecessary changes in the code\r\n- [ x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [ x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "Audacity may crash if you apply a destructive effect to audio that is currently being recorded or playing.\r\n\r\nWe probably already call Stop in destructive effects and cut/copy/paste edits too, to prevent that, but that would need to be carefully checked/confirmed.\r\n\r\nWhat do you think?\r\n\r\nIf you can confirm, perhaps we'll then test it and will be happy to accept the change.\r\n\r\nThanks very much! =||= I don\u2019t approve.\r\n\r\nMacros and script pipe need a lot of reexamination still to make them robust and maintainable.\r\n\r\n =||= "], ["1041", "Brush tool for spectral editing", "Edward", "Edwardhk", "06/29/21, 07:15:26 PM", "Resolves: *(direct link to the issue)*\r\n\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [ ] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [ ] I made sure the code compiles on my machine\r\n- [ ] I made sure there are no unnecessary changes in the code\r\n- [ ] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [ ] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1042", "(C++17) Debug error on closing Audacity on Windows 10", null, "DavidBailes", "07/04/21, 09:39:52 PM", "**Describe the bug**\r\nTested with commit: 77dab158c37, Windows 10 64bit. On closing Audacity, there's a debug error:\r\nThe block at 0x000001ED23899B80 was not allocated by _aligned routines, use free()\r\n\r\ncall stack:\r\n \tucrtbased.dll!00007ff8c7474385()\tUnknown\r\n \tucrtbased.dll!00007ff8c7470f13()\tUnknown\r\n \tAudacity.exe!operator delete(void * block, std::align_val_t __formal) Line 33\tC++\r\n \tAudacity.exe!operator delete(void * block, unsigned __int64 __formal, std::align_val_t al) Line 31\tC++\r\n \tAudacity.exe!AudioIO::`vector deleting destructor'(unsigned int)\tC++\r\n>\tAudacity.exe!std::default_delete<AudioIOBase>::operator()(AudioIOBase * _Ptr) Line 3120\tC++\r\n \tAudacity.exe!std::unique_ptr<AudioIOBase,std::default_delete<AudioIOBase>>::reset(AudioIOBase * _Ptr) Line 3267\tC++\r\n \tAudacity.exe!AudioIO::Deinit() Line 946\tC++\r\n \tAudacity.exe!AudacityApp::OnExit() Line 2241\tC++\r\n \t[External Code]\t\r\n \tAudacity.exe!WinMain(HINSTANCE__ * hInstance, HINSTANCE__ * hPrevInstance, char * __formal, int nCmdShow) Line 755\tC++\r\n \t[External Code]\t\r\n\r\n\r\n\r\n**To Reproduce**\r\nsee above\r\n\r\n**Expected behavior**\r\nno error\r\n\r\n1 hr\r\n\r", "I cannot replicate this on W10 with audacity-win-3.0.3-alpha-20210618+77dab15-64bit =||= This relates only to the master build, now diverged from the 3.0.3 release build, and relates to the move to C++17.\r\n =||= @DavidBailes in MemoryX.*, delete the lines\r\n`#ifdef __APPLE__`\r\nand matching #endifs.\r\n\r\nThen what happens in your build?\r\n =||= > \r\n> \r\n> This relates only to the master build, now diverged from the 3.0.3 release build, and relates to the move to C++17.\r\n\r\nBut audacity-win-3.0.3-alpha-20210618+77dab15-64bit is a Master build - I have not been testing ever with 3.0.3 builds\r\n =||= > > This relates only to the master build, now diverged from the 3.0.3 release build, and relates to the move to C++17.\r\n> \r\n> But audacity-win-3.0.3-alpha-20210618+77dab15-64bit is a Master build - I have not been testing ever with 3.0.3 builds\r\n\r\nCorrect.\r\n\r\nBut this may also be a matter only in Debug development builds such as @DavidBailes was using.  Still, worth a fix in 3.0.4 and I put it in that project board.\r\n =||= On Wed, 23 Jun 2021 at 18:02, Paul Licameli ***@***.***>\nwrote:\n\n> @DavidBailes <https://github.com/DavidBailes> in MemoryX.*, delete the\n> lines\n> #ifdef __APPLE__\n> and matching #endifs.\n>\n> Then what happens in your build?\n>\nI get the build error:\nError C2660 'NonInterferingBase::operator new': function does not take 4\narguments Audacity U:\\audacity\\src\\AudioIO.cpp 913\n\nDavid.\n\n\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/issues/1042#issuecomment-867008758>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AC2WDLODQCCEMYC6ZSKYEWDTUIHUFANCNFSM47DLJVKA>\n> .\n>\n =||= \r\n> This relates only to the master build, now diverged from the 3.0.3 release build, and relates to the move to C++17.\r\n\r\nAnd I note that the master build is already bumped to alpha 3.0.4\r\n\r\nNote that this early bump has potential implications for the Manual and the way it is managed. =||= @DavidBailes I think what you initially reported should just be considered information, not an \"error\" as you said, and I can simply close this issue.  Do you agree?\r\n\r\nIf you don't, then my suggested change didn't compile for you because of that annoying\r\n`#define new DEBUG_NEW`\r\nin MSVC debug builds, which breaks some useful C++ idioms like class-specific operator new here, and doesn't bring much benefit that I know of, in catching real bugs.\r\n\r\nAudacity doesn't have significant memory leak problems to debug, since some crazy fanatic systematically removed all naked news and used smart pointers instead.\r\n\r\nBut then the simplest thing is just to turn off the debug memory checking, removing these lines from AudacityHeaders.h:\r\n\r\n```\r\n#define DEBUG_NEW new(_NORMAL_BLOCK, __FILE__, __LINE__)\r\n#define new DEBUG_NEW\r\n```\r\n =||= On Wed, 30 Jun 2021 at 15:24, Paul Licameli ***@***.***>\nwrote:\n\n> @DavidBailes <https://github.com/DavidBailes> I think what you initially\n> reported should just be considered information, not a \"error\" as you said,\n> and I can simply close this issue. Do you disagree?\n>\nI think it would be helpful for those who build and test the debug version\nif it closed cleanly, that is, without errors. People don't expect to get\nan error, and won't know whether it's a real problem or not. So I don't\nthink this issue should be simply closed.\n\nDavid.\n\n> If you don't, then my suggested change didn't compile for you because of\n> that annoying\n> #define new DEBUG_NEW\n> in MSVC debug builds, which breaks some useful C++ idioms like\n> class-specific operator new here, and doesn't bring much benefit that I\n> know of, in catching real bugs.\n>\n> Audacity doesn't have significant memory leak problems to debug, since\n> some crazy fanatic systematically removed all naked news and used smart\n> pointers instead.\n>\n> But then the simplest thing is just to turn off the debug memory checking,\n> removing these lines from AudacityHeaders.h:\n>\n> #define DEBUG_NEW new(_NORMAL_BLOCK, __FILE__, __LINE__)\n> #define new DEBUG_NEW\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/issues/1042#issuecomment-871451655>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AC2WDLN3GTNDHMOLHFB7JCDTVMSKZANCNFSM47DLJVKA>\n> .\n>\n =||= I repeat:  It is merely a message.  It is not an error.  It should just be ignored.  It is not a memory leak.\r\n\r\nReally I wouldn't mind just disabling all the debug memory checking in MSVC because I can't remember it really helping to identify bugs.\r\n =||= Well now on the other hand, I wonder whether Microsoft's implementation of C++17 operator new for over-aligned types isn't correct, if this message results.\r\n\r\nA harmless change would be to use that per-class operator new on all platforms, not just Mac.\r\n\r\nBut the Microsoft memory debugging macro new, irritatingly, doesn't mix will class-specific operator new.\r\n\r\nSo I would have to disable that debug memory checking, at least wherever MemoryX.h is included.\r\n\r\n =||= "], ["1044", "Windows: 64-bit Audacity cannot export/import FFmpeg reliant audio files", "Peter Sampson", "petersampsonaudacity", "06/25/21, 04:46:04 PM", "Testing on 64-bit as the current intention is to release 3.0.3 as 64-bit\r\n\r\nAudacity fails to locate a 64-bit FFmpeg library and hence cannot export (or import) FFmpeg reliant audio files.\r\n\r\nThe full bug is logged as a P1 (release blocker) on Bugzilla\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2811\r\nBug 2811 - Windows: 64-bit Audacity cannot export FFmpeg reliant audio files\r", "In addition to providing a 64-bit FFmpeg there are other issues to decide\r\na) where to host it\r\nb) the Manual may need updating =||= I've sent the links to Martin =||= Testing on W10 with Audacity_Windows_64bit_968951902_70bb6a6  (3.0.3 build)\r\nand with 64-bit FFmpeg library supplied by MUSE (Buanzo will be hosting this)\r\n\r\n64-bit FFmpeg test ran smooth as silk ...\r\n1) used the exe to install the 64-bit FFmpeg library in C:\\Program files\r\n2) Installed 3.0.3 64-bit from GitHub: https://github.com/audacity/audacity/actions/runs/968951902\r\n3) launched 64-bit Audacity\r\n4) Observe: no error message on launch complaining about missing FFmpeg\r\n5) import an AAC/M4A file \r\n6) Observe it imports fine\r\n7) export it as AAC/M4A file \r\n8) Observe: it exports fine\r\n9) Examine Libraries preferences\r\n10) Observe correct entry for 64-bit FFmpeg =||= I will not close this until we also test the hosting by Buanzo =||= I tested the hosting from Buanzo's site and all is fine - the Manual is updated accordingly =||= "], ["1046", "Upload debug symbols for 3d party libraries ", "Dmitry Vedenko", "crsib", "06/22/21, 03:29:56 PM", "Upload debug symbols for 3d party libraries and for lib-*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1047", "can't build on archlinux", null, "axelpersevalle", "06/24/21, 05:26:59 PM", "hello,\r\n\r\nwhen I try to compile audacity, I have an issue. i'll put the cmake and make command in a txt file. I try to compile  audacity 3.0.2 on archlinux.\r\n[cmake_audacity.txt](https://github.com/audacity/audacity/files/6696102/cmake_audacity.txt)\r\n[build_failure_audacity.txt](https://github.com/audacity/audacity/files/6696103/build_failure_audacity.txt)\r\n\r\nthanks for your help\r\n\r\nP-S: i just hope it can compile", "Hi! This is a known issue, it was addressed in https://github.com/audacity/audacity/pull/1030/commits/4931de7213707feffdb024e22fab24b31299fb0a\r\n\r\nIt will be merged in sometime soon, you can apply the patch manually in the meantime =||= thanks, i just have a last question, how do i apply the patch?\r\n =||= The easiest way, since it is just one line, would be to open the file:\r\n**libraries/lib-utility/MemoryX.h** \r\nin a plain text editor, and add the line:\r\n`#include <limits>`\r\ndirectly after the line:\r\n`#include <functional>`\r\n (line 12)\r\n\r\nThen do a fresh (start from the beginning) build. =||= thanks for the response and sorry i wasn't here but i compiled it again and it works so thanks \r\n![image](https://user-images.githubusercontent.com/78932119/123306870-1dc53580-d522-11eb-8aec-d3615877c5a5.png)\r\n =||= "], ["1048", "Updates dialog should not spoil recordings in case of screen readers", "Paul Licameli", "Paul-Licameli", "07/02/21, 06:13:05 PM", "If the check-for-updates dialog pops unexpectedly while there is a recording in progress, and a screen reader is in use, then the recording may be spoiled.\r\n\r\nFix that by delaying the dialog until after the recording ends.\r", "Why are we even considering having an update check while Audacity is recording - or even just active or open.\r\n\r\nI thought we had discussed this recently and decided that update checks at timed intervals were unnecessary and the the update checks would only be done on Audacity launch.\r\n =||= "], ["1049", "Update check wont spoil recordings", "Paul Licameli", "Paul-Licameli", "06/22/21, 08:26:35 PM", "Resolves: #1048\r\n\r\nCheck for Updates dialog will (very probably) not unexpectedly interrupt recordings, possibly spoiling them if there is a screen reader.\r\n\r\n(There is one slender timing possibility mentioned in code comments where it might yet happen.  More thread synchronizations might fix that, but do not seem worth the extra effort now.)\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "Why are we even considering having an update check while Audacity is recording - or even just active or open.\r\n\r\nI thought we had discussed this recently and decided that update checks at timed intervals were unnecessary and the the update checks would only be done on Audacity launch. =||= "], ["1050", "Check for Updates dialog will not interrupt recordings", "Paul Licameli", "Paul-Licameli", "06/24/21, 09:37:48 AM", "Resolves: #1048\r\n\r\nCheck for Updates dialog will (very probably) not unexpectedly interrupt recordings, possibly spoiling them if there is a screen reader.\r\n\r\n(There is one slender timing possibility mentioned in code comments where it might yet happen. More thread synchronizations might fix that, but do not seem worth the extra effort now.)\r\n\r\n[x]  I signed CLA\r\n[x]  I made sure the code compiles on my machine\r\n[x]  I made sure there are no unnecessary changes in the code\r\n[x]  I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n[x]  I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1051", "Update de.po", "Daniel Chang", "danielchang2001", "06/22/21, 09:22:55 PM", "Resolves: *https://github.com/audacity/audacity/issues/1037*\r\n\r\n*Fixed wrong German translation for \"Save changes to?\" in locale/de.po*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1052", "Fixes accessibility issue, tab navigation issue", "Vitaly Sverchinsky", "vsverchinsky", "06/23/21, 03:00:22 PM", "Resolves: https://github.com/audacity/audacity/issues/1045\r\n\r\nReorders children hierarchy, so that screen readers traverse them in expected order.\r\nFixes button TABing.\r\nRemoves redundant -h option\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "Tested on Windows. A couple of remaining issues:\r\n1. Screen readers don't read the name of the Comments text box. This too is a due to the ordering of children in the hierarchy: the static text \"comments\" needs to be created immediately before the text control for the comments - just like in the case of the static text and text control for the problem details.\r\n2. Using no screen reader or using NVDA, the report dialog becomes the focus after the crash. At least on my computer (on the slow side), when using Narrator, this doesn't happen. Using microsoft's accevent tool, it looks like there's a focus event for the first text box on the report dialog, but this is followed by another focus event from an unknown location. It maybe than this latter event is upsetting Narrator. No idea how this can be fixed, and not the end of the world if it can't be. =||= "], ["1053", "Fix wrong German translation in de.po", "Daniel Chang", "danielchang2001", "06/23/21, 03:28:57 PM", "Resolves: *https://github.com/audacity/audacity/issues/1037*\r\n\r\n*Updated correct translation of \"Save changes to?\" in German.*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "Thank you for this pull request on master.\r\n\r\nI made this small change directly in the release branch so 3.0.3 will have it.  Those changes will be merged back into master.\r\n =||= "], ["1054", "Add triangle waveform to Tone Generator.", null, "paulguy", "08/04/21, 11:24:28 AM", "Resolves: *(direct link to the issue)*\r\n\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "Well, it does what it says on the tin :)\r\n\r\n![image](https://user-images.githubusercontent.com/21022311/127750557-64de6955-5bbc-4c1f-8a5b-a3dc9c799883.png)\r\n\r\nThanks!\r\n =||= @paulguy Do you wish to be credited in the About Audacity dialog?\r\n =||= "], ["1056", "Crash Report Dialog: accessibility fixes", "Vitaly Sverchinsky", "vsverchinsky", "06/24/21, 12:55:35 AM", "Resolves: https://github.com/audacity/audacity/issues/1045\r\n\r\n * Fixes ordering for commentaries section, header section\r\n * Attempt to fix focus issue when using Windows build-in narrator\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "Tested the fix on Windows 10:\r\n1. The name of the comments text box now reads OK. Thanks.\r\n2. The fix for the focus isn't a very good fix. Firstly, the dialog didn't become the focus for me every time I crashed Audacity - again, this might be showing up because I've got a comparatively slow computer. Secondly you're setting the whole dialog to be the focus, rather than the first control in it. A user would expect the first control to be the initial focus, but after this fix, you now have to tab to the first control. A better way of fixing the focus which would be worth investigating is the way that it's done in the LabelDialog. There's an override for show, bool LabelDialog::Show(bool show), and in it the first control is set as focus if show is true. =||= "], ["1057", "Cleanup plugin and module managers", "Paul Licameli", "Paul-Licameli", "07/01/21, 01:16:28 AM", "Contributes to internals of #992 \r\n\r\nMake the PluginManager and ModuleManager classes more understandable and maintainable.\r\n- break the cyclic dependency between them\r\n- separate the GUI to manipulate the PluginManager (the PluginRegistrationDialog) into other files\r\n- simplify memory management\r\n- simplify iterations over plug-ins\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1058", "P1s in the Manual that need fixing for 3.0.3", "Peter Sampson", "petersampsonaudacity", "07/02/21, 06:13:59 PM", "There remain several P1s in The Manual that require fixing for 3.0.0\r\n\r\n1) View Menu changes\r\nMost concern menu image/imagemap updates for a new command that was added to the View Menu (for Show Track Names).  This affects the View Menu page itself and its submenus. These images are normally updated using the magicke spelles that James Crook wrote - you may need to consult with him to find out how these spelles are applied.\r\n- https://alphamanual.audacityteam.org/man/View_Menu\r\n- https://alphamanual.audacityteam.org/man/View_Menu:_Zoom\r\n- https://alphamanual.audacityteam.org/man/View_Menu:_Track_Size\r\n- https://alphamanual.audacityteam.org/man/View_Menu:_Skip_to\r\n- https://alphamanual.audacityteam.org/man/View_Menu:_Toolbars\r\n\r\n2) Scripting Reference\r\nhttps://alphamanual.audacityteam.org/man/Scripting_Reference\r\nneeds updating for new colorways in 3.0.3 (parameters for Set Track Visuals command)\r\n\r\n\r\n\r", "And there's now an application section in Preferences,\n\nDavid.\n\nOn Thu, 24 Jun 2021 at 12:37, Peter Sampson ***@***.***>\nwrote:\n\n> There remain several P1s in The Manual that require fixing for 3.0.0\n>\n>    1. View Menu changes\n>    Most concern menu image/imagemap updates for a new command that was\n>    added to the View Menu (for Show Track Names). This affects the View Menu\n>    page itself and its submenus:\n>    https://alphamanual.audacityteam.org/man/View_Menu\n>    These images are normally updated using the magicke spelles that @james\n>    <https://github.com/james> wrote - you may need to consult with him to\n>    find out how these spelles are applied.\n>\n>\n>    - https://alphamanual.audacityteam.org/man/View_Menu\n>    - https://alphamanual.audacityteam.org/man/View_Menu:_Zoom\n>    - https://alphamanual.audacityteam.org/man/View_Menu:_Track_Size\n>    - https://alphamanual.audacityteam.org/man/View_Menu:_Skip_to\n>    - https://alphamanual.audacityteam.org/man/View_Menu:_Toolbars\n>\n>\n>    1. Scripting Reference\n>    https://alphamanual.audacityteam.org/man/Scripting_Reference\n>    needs updating for new colorways in 3.0.3 (parameters for Set Track\n>    Visuals command)\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/issues/1058>, or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AC2WDLIM6NDSLQ4RXQLYIKDTUMKITANCNFSM47HWTVKQ>\n> .\n>\n =||= >And there's now an application section in Preferences,\r\n\r\nIndeed so that page need to be created - AND all 18 Preferences pages in the manual need their images and images updating (I have added P1s on each of those pages).\r\n\r\nHad I been consulted in advance I would have recommended placing this new preference on the Warnings pref pane as a way of minimizing the work needed in the manual at a very late stage in the development cycle, just before Release Candidates..\r\n\r\n =||= I have added a new skeletal page in the Manual with a P1 for its creation.\r\nhttps://alphamanual.audacityteam.org/man/Application_Preferences\r\n\r\nSee also:  https://github.com/audacity/audacity/issues/1005\r\nAdd page in alphamanual.audacityteam.org for application preferences like: https://alphamanual.audacityteam.org/man/Application_Preferences #1005 =||= "], ["1059", "Extract lib-basic-ui", "Paul Licameli", "Paul-Licameli", "07/19/21, 02:43:23 AM", "12 hrs\r", "NaN"], ["1060", "Extract lib-preferences", "Paul Licameli", "Paul-Licameli", "07/22/21, 08:53:14 PM", "Depends on #1059 #1161\r\n\r\nTwo hours\r", "NaN"], ["1061", "Extract mod-waveform-ui", "Paul Licameli", "Paul-Licameli", "06/25/21, 11:02:26 AM", "Depends on #1062 ", "Duplicated #1082  =||= "], ["1062", "Extract mod-command-classes", "Paul Licameli", "Paul-Licameli", "06/25/21, 11:03:25 AM", "NaN", "Duplicated #1113  =||= "], ["1063", "Set AUDACITY_BUILD_LEVEL to Release when building from release branch", "Dmitry Vedenko", "crsib", "06/24/21, 06:18:50 PM", "\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1064", "Reverse meanings of \"Grayscale\" and \"Inverse Grayscale\" ...", "Paul Licameli", "Paul-Licameli", "06/25/21, 11:25:43 AM", "... The first, not the second, will correspond to the old Grayscale.  This\r\nshows higher energy as darker.  That is how monochrome spectrograms have\r\nusually been inked onto paper.\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1143", "Extract lib-project-rate", "Paul Licameli", "Paul-Licameli", "09/02/21, 06:50:48 PM", "- [x] #1159 \r\n- [x] #1153 \r\n- [x] #1158 \r\n- [x] #1144\r\n- [ ] remaining\r", "NaN"], ["1144", "Extract lib-audio-devices", "Paul Licameli", "Paul-Licameli", "08/27/21, 04:57:16 PM", "- [x] #1060 \r\n- [ ] #1144", "NaN"], ["1152", "Extract lib-screen-geometry", "Paul Licameli", "Paul-Licameli", "09/02/21, 06:47:23 PM", "- [x] #1060\r\n- [x] #1153\r\n- [x] #1158\r\n- [x] #1152\r", "NaN"], ["1153", "Extract lib-project", "Paul Licameli", "Paul-Licameli", "09/01/21, 10:51:20 AM", "- [x] #1163 \r\n- [x] #1153\r", "NaN"], ["1158", "Extract lib-xml", "Paul Licameli", "Paul-Licameli", "08/17/21, 07:10:44 PM", "- [x] #1160 \r\n- [x] remaining", "NaN"], ["1159", "Extract lib-math", "Paul Licameli", "Paul-Licameli", "07/22/21, 08:55:32 PM", "Depends on #1060 \r\n\r\nTwo hours\r", "NaN"], ["1160", "Extract lib-files", "Paul Licameli", "Paul-Licameli", "07/30/21, 12:51:53 PM", "Depends on #1162 #1060\r\n\r\nThree hours\r", "NaN"], ["1161", "Extract lib-components", "Paul Licameli", "Paul-Licameli", "07/13/21, 06:43:27 PM", "6 hrs\r", "NaN"], ["1162", "Extract lib-exceptions", "Paul Licameli", "Paul-Licameli", "07/21/21, 06:04:03 PM", "Depends on #1059 \r\n\r\nTwo hours\r", "NaN"], ["1163", "Extract lib-registries", "Paul Licameli", "Paul-Licameli", "08/06/21, 12:57:11 PM", "- [x] #1162\r\n- [x] #1060\r\n- [x] #1163", "NaN"], ["1164", "Updater: postponing the update dialog doesn't work with timer recording", "Dmitry Vedenko", "crsib", "07/02/21, 06:13:37 PM", "David Bailes: I've just tested commit 70bb6a63c3 to check whether checking for updates may cause a timer recording to fail. It can. (I changed the updateCheckingInterval to 1 min, and changed the dialog to open regardless of version numbers.) I think this needs to be fixed.", "NaN"], ["1165", "Fixes macOS packaging issues", "Dmitry Vedenko", "crsib", "06/25/21, 05:17:39 PM", "* Help is installed to correct location\r\n* dSYM file is ignored\r\n* Fixes weird issue with Conan picking up libraries from dSYM\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1166", "Distinguish between Win32 and Win64 update urls", "Dmitry Vedenko", "crsib", "06/25/21, 06:21:12 PM", "- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "Was this meant for master or release branch?\r\n =||= "], ["1167", "Check for updates will not interrupt the Timer Record wait dialog", "Paul Licameli", "Paul-Licameli", "06/25/21, 05:10:31 PM", "Resolves: #1164\r\n\r\nCheck for Updates has been fixed so that its modal dialog will wait until any recording-in-progress finishes.  But that was not enough.  It should also not interrupt the timer recording wait dialog.  This commit fixes that too.  I have tested it with a\r\nmodified build making more frequent checks.\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1168", "Postpone updates for a GMT calendar day", "Dmitry Vedenko", "crsib", "06/25/21, 06:34:09 PM", "This PR provides a bit more sensible approach:\r\n\r\n1. Updates are checked once a calendar day\r\n2. In the long-running session there will be at least 12 hours between the checks\r\n\r\nWe can postpone this PR until 3.0.4\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1170", "Linux Audacity v 3.0.2 Won't Start/Segmentation Fault/ALSA issues on Debian 10 ('Buster'/MX Linux 19.3)", null, "richaardvark", "09/24/21, 06:03:22 PM", "**Describe the bug**\r\nThe latest release of Audacity (version 3.0.2) won't launch after being manually built following the directions provided in the [current source code \"BUILDING.md\" filse.](https://github.com/audacity/audacity/blob/master/BUILDING.md) There seems to be an issue with ALSA and this causes a \"Segmentation fault\" and the program will not launch.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior (_the following commands are successfully executed without issue_):\r\n```\r\n$ sudo apt-get update\r\n$ sudo apt-get install -y build-essential cmake git python3-pip\r\n$ sudo pip3 install conan\r\n$ sudo apt-get install libgtk2.0-dev libasound2-dev libavformat-dev libjack-jackd2-dev uuid-dev\r\n$ git clone https://github.com/audacity/audacity/\r\n$ mkdir build && cd build\r\n$ cmake -G \"Unix Makefiles\" -Daudacity_use_ffmpeg=loaded ../audacity\r\n$ make -j`nproc`  #***see note below\r\n$ cd bin/Debug\r\n$ mkdir \"Portable Settings\"\r\n```\r\n*** [See full output of 'make' here.](https://pastebin.com/3iyy2Wn1) (some warnings about statements being depreciated are given but overall it is successful.)\r\n\r\nFinally, I go to launch Audacity but receive the following error messages:\r\n```\r\nrichard@HomeServer:~/build/bin/Debug\r\n$ ./audacity\r\nerror: failed to open file /usr/local/lib/lv2/lib/manifest.ttl (No such file or directory)\r\nlilv_world_load_file(): error: Error loading file `file:///usr/local/lib/lv2/lib/manifest.ttl'\r\nlilv_world_load_bundle(): error: Error reading file:///usr/local/lib/lv2/lib/manifest.ttl\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/alias>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/alias-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/alias-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/fastLookaheadLimiter>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/fast_lookahead_limiter-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/fast_lookahead_limiter-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/allpass_c>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/allpass-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/allpass-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/allpass_l>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/allpass-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/allpass-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/allpass_n>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/allpass-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/allpass-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/gongBeater>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/gong_beater-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/gong_beater-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/dysonCompress>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/dyson_compress-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/dyson_compress-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/sinusWavewrapper>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/sinus_wavewrapper-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/sinus_wavewrapper-swh.lv2/ (ignored)\r\nerror: failed to open file /usr/lib/lv2/swh-lv2-1.0.15/manifest.ttl (No such file or directory)\r\nlilv_world_load_file(): error: Error loading file `file:///usr/lib/lv2/swh-lv2-1.0.15/manifest.ttl'\r\nlilv_world_load_bundle(): error: Error reading file:///usr/lib/lv2/swh-lv2-1.0.15/manifest.ttl\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/pointerCastDistortion>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/pointer_cast-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/pointer_cast-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/flanger>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/flanger-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/flanger-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/se4>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/se4-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/se4-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/revdelay>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/revdelay-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/revdelay-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/waveTerrain>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/wave_terrain-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/wave_terrain-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/sinCos>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/sin_cos-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/sin_cos-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/gverb>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/gverb-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/gverb-swh.lv2/ (ignored)\r\nerror: failed to open file /usr/lib/lv2/imp-swh.lv2/manifest.ttl (No such file or directory)\r\nlilv_world_load_file(): error: Error loading file `file:///usr/lib/lv2/imp-swh.lv2/manifest.ttl'\r\nlilv_world_load_bundle(): error: Error reading file:///usr/lib/lv2/imp-swh.lv2/manifest.ttl\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/multivoiceChorus>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/multivoice_chorus-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/multivoice_chorus-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/satanMaximiser>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/satan_maximiser-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/satan_maximiser-swh.lv2/ (ignored)\r\nerror: failed to open file /usr/lib/lv2/step_muxer-swh.lv2/manifest.ttl (No such file or directory)\r\nlilv_world_load_file(): error: Error loading file `file:///usr/lib/lv2/step_muxer-swh.lv2/manifest.ttl'\r\nlilv_world_load_bundle(): error: Error reading file:///usr/lib/lv2/step_muxer-swh.lv2/manifest.ttl\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/const>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/const-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/const-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/foldover>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/foldover-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/foldover-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/mbeq>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/mbeq-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/mbeq-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/lowpass_iir>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/lowpass_iir-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/lowpass_iir-swh.lv2/ (ignored)\r\nerror: failed to open file /usr/lib/lv2/debug-swh.lv2/manifest.ttl (No such file or directory)\r\nlilv_world_load_file(): error: Error loading file `file:///usr/lib/lv2/debug-swh.lv2/manifest.ttl'\r\nlilv_world_load_bundle(): error: Error reading file:///usr/lib/lv2/debug-swh.lv2/manifest.ttl\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/decay>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/decay-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/decay-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/amp>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/amp-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/amp-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/diode>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/diode-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/diode-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/highpass_iir>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/highpass_iir-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/highpass_iir-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/hilbert>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/hilbert-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/hilbert-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/autoPhaser>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/phasers-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/phasers-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/fourByFourPole>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/phasers-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/phasers-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/lfoPhaser>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/phasers-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/phasers-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/valveRect>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/valve_rect-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/valve_rect-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/gate>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/gate-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/gate-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/valve>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/valve-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/valve-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/surroundEncoder>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/surround_encoder-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/surround_encoder-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/fadDelay>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/fad_delay-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/fad_delay-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/bandpass_a_iir>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/bandpass_a_iir-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/bandpass_a_iir-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/foverdrive>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/foverdrive-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/foverdrive-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/fmOsc>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/fm_osc-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/fm_osc-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/sc3>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/sc3-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/sc3-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/comb_c>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/comb-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/comb-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/comb_l>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/comb-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/comb-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/comb_n>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/comb-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/comb-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/artificialLatency>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/latency-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/latency-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/bodeShifterCV>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/bode_shifter_cv-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/bode_shifter_cv-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/smoothDecimate>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/smooth_decimate-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/smooth_decimate-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/giantFlange>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/giant_flange-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/giant_flange-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/sc4>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/sc4-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/sc4-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/amPitchshift>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/am_pitchshift-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/am_pitchshift-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/plate>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/plate-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/plate-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/transient>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/transient-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/transient-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/chebstortion>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/chebstortion-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/chebstortion-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/sc1>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/sc1-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/sc1-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/svf>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/svf-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/svf-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/singlePara>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/single_para-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/single_para-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/zm1>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/zm1-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/zm1-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/gong>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/gong-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/gong-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/retroFlange>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/retro_flange-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/retro_flange-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/sc2>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/sc2-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/sc2-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/bodeShifter>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/bode_shifter-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/bode_shifter-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/declip>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/declip-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/declip-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/impulse_fc>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/impulse-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/impulse-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/karaoke>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/karaoke-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/karaoke-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/butthigh_iir>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/butterworth-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/butterworth-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/buttlow_iir>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/butterworth-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/butterworth-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/bwxover_iir>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/butterworth-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/butterworth-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/tapeDelay>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/tape_delay-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/tape_delay-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/lsFilter>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/ls_filter-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/ls_filter-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/analogueOsc>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/analogue_osc-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/analogue_osc-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/lookaheadLimiterConst>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/lookahead_limiter_const-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/lookahead_limiter_const-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/comb>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/simple_comb-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/simple_comb-swh.lv2/ (ignored)\r\nerror: failed to open file /usr/lib/lv2/notch_iir-swh.lv2/manifest.ttl (No such file or directory)\r\nlilv_world_load_file(): error: Error loading file `file:///usr/lib/lv2/notch_iir-swh.lv2/manifest.ttl'\r\nlilv_world_load_bundle(): error: Error reading file:///usr/lib/lv2/notch_iir-swh.lv2/manifest.ttl\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/delayorama>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/delayorama-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/delayorama-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/rateShifter>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/rate_shifter-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/rate_shifter-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/split>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/split-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/split-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/harmonicGen>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/harmonic_gen-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/harmonic_gen-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/vynil>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/vynil-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/vynil-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/crossoverDist>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/crossover_dist-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/crossover_dist-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/pitchScaleHQ>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/pitch_scale-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/pitch_scale-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/decimator>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/decimator-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/decimator-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/hardLimiter>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/hard_limiter-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/hard_limiter-swh.lv2/ (ignored)\r\nerror: failed to open file /usr/lib/lv2/gsm-swh.lv2/manifest.ttl (No such file or directory)\r\nlilv_world_load_file(): error: Error loading file `file:///usr/lib/lv2/gsm-swh.lv2/manifest.ttl'\r\nlilv_world_load_bundle(): error: Error reading file:///usr/lib/lv2/gsm-swh.lv2/manifest.ttl\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/bandpass_iir>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/bandpass_iir-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/bandpass_iir-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/matrixStMS>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/matrix_st_ms-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/matrix_st_ms-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/lookaheadLimiter>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/lookahead_limiter-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/lookahead_limiter-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/shaper>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/shaper-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/shaper-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/dj_eq>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/dj_eq-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/dj_eq-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/dj_eq_mono>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/dj_eq-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/dj_eq-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/freqTracker>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/freq_tracker-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/freq_tracker-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/djFlanger>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/dj_flanger-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/dj_flanger-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/triplePara>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/triple_para-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/triple_para-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/matrixSpatialiser>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/matrix_spatialiser-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/matrix_spatialiser-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/inv>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/inv-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/inv-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/hermesFilter>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/hermes_filter-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/hermes_filter-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/divider>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/divider-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/divider-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/ringmod_1i1o1l>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/ringmod-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/ringmod-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/ringmod_2i1o>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/ringmod-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/ringmod-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/modDelay>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/mod_delay-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/mod_delay-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/xfade>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/xfade-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/xfade-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/xfade4>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/xfade-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/xfade-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/sifter>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/sifter-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/sifter-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/dcRemove>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/dc_remove-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/dc_remove-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/matrixMSSt>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/matrix_ms_st-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/matrix_ms_st-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/delay_c>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/delay-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/delay-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/delay_l>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/delay-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/delay-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/delay_n>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/delay-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/delay-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/combSplitter>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/comb_splitter-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/comb_splitter-swh.lv2/ (ignored)\r\nlilv_world_add_plugin(): warning: Duplicate plugin <http://plugin.org.uk/swh-plugins/lcrDelay>\r\nlilv_world_add_plugin(): warning: ... found in file:///usr/local/lib/lv2/lcr_delay-swh.lv2/\r\nlilv_world_add_plugin(): warning: ... and      file:///usr/lib/lv2/lcr_delay-swh.lv2/ (ignored)\r\nALSA lib confmisc.c:767:(parse_card) cannot find card 'Set'\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_card_driver returned error: No such device\r\nALSA lib confmisc.c:392:(snd_func_concat) error evaluating strings\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_concat returned error: No such device\r\nALSA lib confmisc.c:1246:(snd_func_refer) error evaluating name\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_refer returned error: No such device\r\nALSA lib conf.c:5047:(snd_config_expand) Evaluate error: No such device\r\nALSA lib pcm.c:2565:(snd_pcm_open_noupdate) Unknown PCM sysdefault\r\nALSA lib confmisc.c:767:(parse_card) cannot find card 'Set'\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_card_driver returned error: No such device\r\nALSA lib confmisc.c:392:(snd_func_concat) error evaluating strings\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_concat returned error: No such device\r\nALSA lib confmisc.c:1246:(snd_func_refer) error evaluating name\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_refer returned error: No such device\r\nALSA lib conf.c:5047:(snd_config_expand) Evaluate error: No such device\r\nALSA lib pcm.c:2565:(snd_pcm_open_noupdate) Unknown PCM sysdefault\r\nALSA lib confmisc.c:767:(parse_card) cannot find card 'Set'\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_card_driver returned error: No such device\r\nALSA lib confmisc.c:392:(snd_func_concat) error evaluating strings\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_concat returned error: No such device\r\nALSA lib confmisc.c:1246:(snd_func_refer) error evaluating name\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_refer returned error: No such device\r\nALSA lib conf.c:5047:(snd_config_expand) Evaluate error: No such device\r\nALSA lib pcm.c:2565:(snd_pcm_open_noupdate) Unknown PCM front\r\nALSA lib pcm.c:2565:(snd_pcm_open_noupdate) Unknown PCM cards.pcm.rear\r\nALSA lib pcm.c:2565:(snd_pcm_open_noupdate) Unknown PCM cards.pcm.center_lfe\r\nALSA lib pcm.c:2565:(snd_pcm_open_noupdate) Unknown PCM cards.pcm.side\r\nALSA lib confmisc.c:767:(parse_card) cannot find card 'Set'\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_card_driver returned error: No such device\r\nALSA lib confmisc.c:392:(snd_func_concat) error evaluating strings\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_concat returned error: No such device\r\nALSA lib confmisc.c:1246:(snd_func_refer) error evaluating name\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_refer returned error: No such device\r\nALSA lib conf.c:5047:(snd_config_expand) Evaluate error: No such device\r\nALSA lib pcm.c:2565:(snd_pcm_open_noupdate) Unknown PCM surround21\r\nALSA lib confmisc.c:767:(parse_card) cannot find card 'Set'\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_card_driver returned error: No such device\r\nALSA lib confmisc.c:392:(snd_func_concat) error evaluating strings\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_concat returned error: No such device\r\nALSA lib confmisc.c:1246:(snd_func_refer) error evaluating name\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_refer returned error: No such device\r\nALSA lib conf.c:5047:(snd_config_expand) Evaluate error: No such device\r\nALSA lib pcm.c:2565:(snd_pcm_open_noupdate) Unknown PCM surround21\r\nALSA lib confmisc.c:767:(parse_card) cannot find card 'Set'\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_card_driver returned error: No such device\r\nALSA lib confmisc.c:392:(snd_func_concat) error evaluating strings\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_concat returned error: No such device\r\nALSA lib confmisc.c:1246:(snd_func_refer) error evaluating name\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_refer returned error: No such device\r\nALSA lib conf.c:5047:(snd_config_expand) Evaluate error: No such device\r\nALSA lib pcm.c:2565:(snd_pcm_open_noupdate) Unknown PCM surround40\r\nALSA lib confmisc.c:767:(parse_card) cannot find card 'Set'\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_card_driver returned error: No such device\r\nALSA lib confmisc.c:392:(snd_func_concat) error evaluating strings\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_concat returned error: No such device\r\nALSA lib confmisc.c:1246:(snd_func_refer) error evaluating name\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_refer returned error: No such device\r\nALSA lib conf.c:5047:(snd_config_expand) Evaluate error: No such device\r\nALSA lib pcm.c:2565:(snd_pcm_open_noupdate) Unknown PCM surround41\r\nALSA lib confmisc.c:767:(parse_card) cannot find card 'Set'\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_card_driver returned error: No such device\r\nALSA lib confmisc.c:392:(snd_func_concat) error evaluating strings\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_concat returned error: No such device\r\nALSA lib confmisc.c:1246:(snd_func_refer) error evaluating name\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_refer returned error: No such device\r\nALSA lib conf.c:5047:(snd_config_expand) Evaluate error: No such device\r\nALSA lib pcm.c:2565:(snd_pcm_open_noupdate) Unknown PCM surround50\r\nALSA lib confmisc.c:767:(parse_card) cannot find card 'Set'\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_card_driver returned error: No such device\r\nALSA lib confmisc.c:392:(snd_func_concat) error evaluating strings\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_concat returned error: No such device\r\nALSA lib confmisc.c:1246:(snd_func_refer) error evaluating name\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_refer returned error: No such device\r\nALSA lib conf.c:5047:(snd_config_expand) Evaluate error: No such device\r\nALSA lib pcm.c:2565:(snd_pcm_open_noupdate) Unknown PCM surround51\r\nALSA lib confmisc.c:767:(parse_card) cannot find card 'Set'\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_card_driver returned error: No such device\r\nALSA lib confmisc.c:392:(snd_func_concat) error evaluating strings\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_concat returned error: No such device\r\nALSA lib confmisc.c:1246:(snd_func_refer) error evaluating name\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_refer returned error: No such device\r\nALSA lib conf.c:5047:(snd_config_expand) Evaluate error: No such device\r\nALSA lib pcm.c:2565:(snd_pcm_open_noupdate) Unknown PCM surround71\r\nALSA lib confmisc.c:767:(parse_card) cannot find card 'Set'\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_card_driver returned error: No such device\r\nALSA lib confmisc.c:392:(snd_func_concat) error evaluating strings\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_concat returned error: No such device\r\nALSA lib confmisc.c:1246:(snd_func_refer) error evaluating name\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_refer returned error: No such device\r\nALSA lib conf.c:5047:(snd_config_expand) Evaluate error: No such device\r\nALSA lib pcm.c:2565:(snd_pcm_open_noupdate) Unknown PCM iec958\r\nALSA lib confmisc.c:767:(parse_card) cannot find card 'Set'\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_card_driver returned error: No such device\r\nALSA lib confmisc.c:392:(snd_func_concat) error evaluating strings\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_concat returned error: No such device\r\nALSA lib confmisc.c:1246:(snd_func_refer) error evaluating name\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_refer returned error: No such device\r\nALSA lib conf.c:5047:(snd_config_expand) Evaluate error: No such device\r\nALSA lib pcm.c:2565:(snd_pcm_open_noupdate) Unknown PCM spdif\r\nALSA lib confmisc.c:767:(parse_card) cannot find card 'Set'\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_card_driver returned error: No such device\r\nALSA lib confmisc.c:392:(snd_func_concat) error evaluating strings\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_concat returned error: No such device\r\nALSA lib confmisc.c:1246:(snd_func_refer) error evaluating name\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_refer returned error: No such device\r\nALSA lib conf.c:5047:(snd_config_expand) Evaluate error: No such device\r\nALSA lib pcm.c:2565:(snd_pcm_open_noupdate) Unknown PCM spdif\r\nALSA lib confmisc.c:767:(parse_card) cannot find card 'Set'\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_card_driver returned error: No such device\r\nALSA lib confmisc.c:392:(snd_func_concat) error evaluating strings\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_concat returned error: No such device\r\nALSA lib confmisc.c:1246:(snd_func_refer) error evaluating name\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_refer returned error: No such device\r\nALSA lib conf.c:5047:(snd_config_expand) Evaluate error: No such device\r\nALSA lib pcm.c:2565:(snd_pcm_open_noupdate) Unknown PCM hdmi\r\nALSA lib confmisc.c:767:(parse_card) cannot find card 'Set'\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_card_driver returned error: No such device\r\nALSA lib confmisc.c:392:(snd_func_concat) error evaluating strings\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_concat returned error: No such device\r\nALSA lib confmisc.c:1246:(snd_func_refer) error evaluating name\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_refer returned error: No such device\r\nALSA lib conf.c:5047:(snd_config_expand) Evaluate error: No such device\r\nALSA lib pcm.c:2565:(snd_pcm_open_noupdate) Unknown PCM hdmi\r\nALSA lib confmisc.c:767:(parse_card) cannot find card 'Set'\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_card_driver returned error: No such device\r\nALSA lib confmisc.c:392:(snd_func_concat) error evaluating strings\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_concat returned error: No such device\r\nALSA lib confmisc.c:1246:(snd_func_refer) error evaluating name\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_refer returned error: No such device\r\nALSA lib conf.c:5047:(snd_config_expand) Evaluate error: No such device\r\nALSA lib pcm.c:2565:(snd_pcm_open_noupdate) Unknown PCM cards.pcm.phoneline:CARD=Set,DEV=0\r\nALSA lib confmisc.c:767:(parse_card) cannot find card 'Set'\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_card_driver returned error: No such device\r\nALSA lib confmisc.c:392:(snd_func_concat) error evaluating strings\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_concat returned error: No such device\r\nALSA lib confmisc.c:1246:(snd_func_refer) error evaluating name\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_refer returned error: No such device\r\nALSA lib conf.c:5047:(snd_config_expand) Evaluate error: No such device\r\nALSA lib pcm.c:2565:(snd_pcm_open_noupdate) Unknown PCM cards.pcm.phoneline:CARD=Set,DEV=0\r\nALSA lib confmisc.c:767:(parse_card) cannot find card 'Set'\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_card_driver returned error: No such device\r\nALSA lib confmisc.c:392:(snd_func_concat) error evaluating strings\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_concat returned error: No such device\r\nALSA lib confmisc.c:1246:(snd_func_refer) error evaluating name\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_refer returned error: No such device\r\nALSA lib conf.c:5047:(snd_config_expand) Evaluate error: No such device\r\nALSA lib pcm.c:2565:(snd_pcm_open_noupdate) Unknown PCM phoneline\r\nALSA lib confmisc.c:767:(parse_card) cannot find card 'Set'\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_card_driver returned error: No such device\r\nALSA lib confmisc.c:392:(snd_func_concat) error evaluating strings\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_concat returned error: No such device\r\nALSA lib confmisc.c:1246:(snd_func_refer) error evaluating name\r\nALSA lib conf.c:4568:(_snd_config_evaluate) function snd_func_refer returned error: No such device\r\nALSA lib conf.c:5047:(snd_config_expand) Evaluate error: No such device\r\nALSA lib pcm.c:2565:(snd_pcm_open_noupdate) Unknown PCM phoneline\r\nALSA lib pcm_hw.c:1822:(_snd_pcm_hw_open) Invalid value for card\r\nALSA lib pcm_hw.c:1822:(_snd_pcm_hw_open) Invalid value for card\r\nALSA lib pcm_hw.c:1822:(_snd_pcm_hw_open) Invalid value for card\r\nALSA lib pcm_hw.c:1822:(_snd_pcm_hw_open) Invalid value for card\r\nALSA lib pcm_hw.c:1822:(_snd_pcm_hw_open) Invalid value for card\r\nALSA lib pcm_hw.c:1822:(_snd_pcm_hw_open) Invalid value for card\r\nCannot connect to server socket err = No such file or directory\r\nCannot connect to server request channel\r\njack server is not running or cannot be started\r\nJackShmReadWritePtr::~JackShmReadWritePtr - Init not done for -1, skipping unlock\r\nJackShmReadWritePtr::~JackShmReadWritePtr - Init not done for -1, skipping unlock\r\nCannot connect to server socket err = No such file or directory\r\nCannot connect to server request channel\r\njack server is not running or cannot be started\r\nJackShmReadWritePtr::~JackShmReadWritePtr - Init not done for -1, skipping unlock\r\nJackShmReadWritePtr::~JackShmReadWritePtr - Init not done for -1, skipping unlock\r\nALSA lib pcm_oss.c:377:(_snd_pcm_oss_open) Unknown field port\r\nALSA lib pcm_oss.c:377:(_snd_pcm_oss_open) Unknown field port\r\nALSA lib pcm_a52.c:823:(_snd_pcm_a52_open) a52 is only for playback\r\nSegmentation fault\r\n```\r\n\r\n**Expected behavior**\r\nAudacity will launch.\r\n\r\n**Screenshots**\r\nNo GUI to show - see errors in commands/code above.\r\n\r\n**Additional information (please complete the following information):**\r\n- Audacity version 3.0.2\r\n\r\n_Additional System Details:_\r\n```\r\nSystem:    Host: <filter> Kernel: 4.19.0-16-amd64 x86_64 bits: 64 compiler: gcc v: 8.3.0 \r\n           parameters: BOOT_IMAGE=/boot/vmlinuz-4.19.0-16-amd64 \r\n           root=UUID=<filter> ro quiet splash \r\n           init=/lib/systemd/systemd \r\n           Desktop: Xfce 4.14.2 tk: Gtk 3.24.5 info: xfce4-panel wm: xfwm4 dm: LightDM 1.26.0 \r\n           Distro: MX-19.4_x64 patito feo May 31  2020 base: Debian GNU/Linux 10 (buster) \r\nMachine:   Type: Detachable System: Dell product: Latitude 5175 v: N/A serial: <filter> Chassis: \r\n           type: 32 serial: <filter> \r\n           Mobo: Dell model: 0RJJV5 v: A00 serial: <filter> UEFI: Dell v: 1.7.2 date: 07/29/2020 \r\nCPU:       Topology: Dual Core model: Intel Core m5-6Y57 bits: 64 type: MT MCP arch: Skylake \r\n           family: 6 model-id: 4E (78) stepping: 3 microcode: DC L2 cache: 4096 KiB \r\n           flags: avx avx2 lm nx pae sse sse2 sse3 sse4_1 sse4_2 ssse3 vmx bogomips: 12096 \r\n           Speed: 2300 MHz min/max: 400/2800 MHz Core speeds (MHz): 1: 2305 2: 2316 3: 2301 \r\n           4: 2303 \r\n           Vulnerabilities: Type: itlb_multihit status: KVM: Split huge pages \r\n           Type: l1tf mitigation: PTE Inversion; VMX: conditional cache flushes, SMT vulnerable \r\n           Type: mds mitigation: Clear CPU buffers; SMT vulnerable \r\n           Type: meltdown mitigation: PTI \r\n           Type: spec_store_bypass \r\n           mitigation: Speculative Store Bypass disabled via prctl and seccomp \r\n           Type: spectre_v1 mitigation: usercopy/swapgs barriers and __user pointer sanitization \r\n           Type: spectre_v2 mitigation: Full generic retpoline, IBPB: conditional, IBRS_FW, \r\n           STIBP: conditional, RSB filling \r\n           Type: srbds mitigation: Microcode \r\n           Type: tsx_async_abort mitigation: Clear CPU buffers; SMT vulnerable \r\nGraphics:  Device-1: Intel HD Graphics 515 vendor: Dell Latitude 11 5175 2-in-1 driver: i915 \r\n           v: kernel bus ID: 00:02.0 chip ID: 8086:191e \r\n           Display: x11 server: X.Org 1.20.10 driver: intel resolution: 1600x900~60Hz \r\n           OpenGL: renderer: Mesa Intel HD Graphics 515 (SKL GT2) v: 4.6 Mesa 20.3.4 \r\n           direct render: Yes \r\nAudio:     Device-1: Intel Xeon E3-1200 v5/E3-1500 v5/6th Gen Core Processor Imaging Unit \r\n           vendor: Dell Latitude 11 5175 2-in-1 driver: N/A bus ID: 00:05.0 chip ID: 8086:1919 \r\n           Device-2: Intel CSI-2 Host vendor: Dell Latitude 11 5175 2-in-1 driver: N/A \r\n           bus ID: 00:14.3 chip ID: 8086:9d32 \r\n           Device-3: Intel Sunrise Point-LP HD Audio vendor: Dell Latitude 11 5175 2-in-1 \r\n           driver: snd_hda_intel v: kernel bus ID: 00:1f.3 chip ID: 8086:9d70 \r\n           Sound Server: ALSA v: k4.19.0-16-amd64 \r\nNetwork:   Device-1: Intel Wireless 8260 driver: iwlwifi v: kernel port: f040 bus ID: 02:00.0 \r\n           chip ID: 8086:24f3 \r\n```\r\n\r\n**Additional context - things I have tried:**\r\n\r\n- I saw a [suggestion in another Audacity support forum post](https://forum.audacityteam.org/viewtopic.php?t=106490) to build the application with the \"--disable-dynamic-loading\" flag but cannot get that flag to work:\r\n\r\n  ```\r\n  richard@HomeServer:~/build\r\n  $ make -j`nproc` --disable-dynamic-loading\r\n  make: unrecognized option '--disable-dynamic-loading'\r\n  ```\r\n\r\n- I tried installing Audacity 3.0.2 [using a snap package](https://snapcraft.io/audacity) and it installs quickly and easily and will launch.  However, it seems that it is difficult to install any plug-ins if Audacity is installed via snap package, so I removed the snap-installed Audacity.\r\n\r\n- I tried purging all ALSA and PulseAudio applications/files on my machine and reinstalled ALSA and PulseAudio from scratch and additionally added any other packages that are ALSA/PulseAudio related as shown in the Synaptic Package Manager that I thought might be helpful but this did not help.\r\n\r\n- I saw a suggestion on another forum to use the \"qjackctl\" command/GUI tool to change settings in the JACK server and set the  Interface from \"(default)\" to \"hw:PCH\" and then kill PulseAudio/JACK and start them again but this did not fix anything.\r\n\r\n**_[See original Audacity Support Forum post for additional details.](https://forum.audacityteam.org/viewtopic.php?f=48&t=118736)_**", "Which version of cmake do you have? The default for Buster is 3.13, which is too old. The current Audacity code requires CMake 3.15 or higher. =||= I'm also seeing the Segmentation fault after building 8d0487e on Debian Stable. =||= > Which version of cmake do you have? The default for Buster is 3.13, which is too old. The current Audacity code requires CMake 3.15 or higher.\r\n\r\n```\r\nrichard@HomeServer:~\r\n$ cmake --version\r\ncmake version 3.20.5\r\n\r\nCMake suite maintained and supported by Kitware (kitware.com/cmake).\r\n```\r\n =||= A workaround is to disable FFMPEG temporarily.\r\n\r\nI.e. pass `-Daudacity_use_ffmpeg=off` during the configuration =||= "], ["1171", "Updated Manual needs pulling for 3.0.3", "Peter Sampson", "petersampsonaudacity", "07/14/21, 05:23:33 PM", "Testing on W10 with the latest alpha 3.0.3 build:  https://github.com/audacity/audacity/actions/runs/972351942\r\n\r\nThe Manual needs pulling again as there have been some important updates\r\n1) 64-bit FFmpeg installation for Windows\r\n2) Preference page added for the new Application Preferences\r\n3) All other Preferences pages updated to show (and link to) the new Applications Preferences page\r\n4) Update to the image and imagemap of the View Menu page for the new \"Track Name\" menu entry\r\n\r\nNumber 1 is VERY important as we need to ensure that the switch to 64-bit on Windows goes smoothly", "Re-opening this as the Manual has had some necessary changes and correction since this was closed.\r\n\r\nPlus it may need further updating if the GUI/UX for update checking changes =||= Manual is pulled automatically by CI =||= "], ["1172", "Disable auto format detection of 'Import Raw Data'", "Myungchul Keum", "dofuuz", "08/04/21, 10:52:30 AM", "![import raw](https://user-images.githubusercontent.com/8174871/123518042-3169cb00-d6df-11eb-939d-8949aadc4471.png)\r\n\r\nFormat guessing of 'Import Raw' is not so accurate. Sometimes it's tiresome.\r\n\r\nUsually, when I import bunch of raw files, all of them has same format.\r\nBut, format guessing keeps change import setting, so I have to manually change it back.\r\n\r\nI think this fix fits more on most of use case.\r\n- Disable auto format detection. Instead, add detect button.\r\n- Remember last format setting, and set it as default on next import.\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "I have not reviewed this patch, but I agree that there needs to be an option of some kind to use the last used settings in preference to the auto-detected settings. Over the years there have been many requests from users for an option along these lines. =||= I certainly think a button for detection is better. I'm curious how the remembering works exactly. I've tested it out and I'm not 100% clear on it.\r\n\r\nWould you mind suggesting a usercase I can try? =||= The issue is that it's not possible to always determine the sample format / channels, (and never possible to determine the sample rate) from raw sample data.\r\n\r\nAuto-detection is useful in the most common case where the user does not know the sample format, because (a) it will often detect correctly, (b) when it fails to detect correctly, it may still be a good starting point for manually selecting the format options.\r\n\r\nThe use case where auto-detection needs to be turned off is when a user has multiple raw sample files that are all the same (known) format, and auto-detect fails. In this case it becomes very tedious to have to manually change the settings for every import. Audacity already has a mechanism built in to allow effects to default to their last used settings (most effects do this), and imo it would be useful if Import RAW also had this as an option. =||= If there is agreement about the desirability, I'd like to review this and get it merged soon into 3.1.0.  Are you reading this, @dofuuz ?\r\n =||= > If there is agreement about the desirability, I'd like to review this and get it merged soon into 3.1.0. Are you reading this, @dofuuz ?\r\n\r\nI was unable to find any issues with the behaviour. It does appear to be working as advertised, so merge away :) =||= > \r\n> \r\n> > If there is agreement about the desirability, I'd like to review this and get it merged soon into 3.1.0. Are you reading this, @dofuuz ?\r\n> \r\n> I was unable to find any issues with the behaviour. It does appear to be working as advertised, so merge away :)\r\n\r\nI checked this feature and it works well.\r\nBut it doesn't check file type so the user can import any type of file and get \r\n\r\n@Tantacrul I don't mind if the feature will be included in release 3.1 as is, but it would be nice to avoid importing inappropriate file types in future releases\r\n\r\n\r\nhttps://user-images.githubusercontent.com/25851359/129317203-ac02e3e1-1a25-4d01-8a8a-b0a5a72a2f8a.mp4\r\n\r\n\r\n =||= > But it doesn't check file type\r\n\r\nI think that is intentional.\r\nOne of the uses of Import RAW is \"[Databending](https://en.wikipedia.org/wiki/Databending)\" - Examples: https://forum.audacityteam.org/viewtopic.php?f=46&t=93265\r\n =||= > > But it doesn't check file type\r\n> \r\n> I think that is intentional.\r\n> One of the uses of Import RAW is \"[Databending](https://en.wikipedia.org/wiki/Databending)\" - Examples: https://forum.audacityteam.org/viewtopic.php?f=46&t=93265\r\n\r\nWas just about to say the same thing! Not checking file format is intentional. =||= "], ["1174", "Audacity crashes when the output directory for Macros is set to C:\\", "Peter Sampson", "petersampsonaudacity", "07/04/21, 04:28:44 PM", "**Describe the bug**\r\nAudacity crashes when the output directory for Macros is set to C:\\ (and I suspect any unwritable location)\r\n\r\n**To Reproduce**\r\n1. Go to Directories preferences\r\n2. Set the default location for Macro output to be C:\\\r\n3. Observe: Audacity does not stop you doing this (Bugzilla Bug #2740)\r\n4. Tools > Macros\r\n5. choose the shipped MP3 Conversion Macro\r\n6. Apply Macro to: Files\r\n7. choose any audio file for processing\r\n8. Observe: Audacity crashes when it reaches the Export step in the Macro\r\n\r\n**Expected behavior**\r\na) at Step 2 Audacity should block the use of C:\\ and other unwritable locations for ALL default directories\r\nb) At step 8 a sensible and helpful error message should be shown to the user.\r\n\r\nStep b) is required even if step a) i.e. Bug #2740 is fixed - a folder location that was writable at the time the user visited Directories preferences may later become unwritable.\r\n\r\n\r\n**Additional information (please complete the following information):**\r\nThis crash happen with 3.0.2, 3.0.3 and 3.0.4 alpha - it does not occur on 3.0.0 as that does not have the prefs setting for Macro output.  So technically this is a regression on 3.0.0\r\n\r\nI discovered this issue when I was testing around on Bug #2740 as Paul has recently allowed the PR for a user fix for this issue\r\nhttps://github.com/audacity/audacity/actions/druns/975549297\r\n\r\nSadly, in addition to this crash, that PR does not seem to fix the Bug 2740 issue when I test on 3.0.4 master build.\r\n\r\n\r\n**Additional context**\r\nOS: Windows 10 Home\r\nAudacity versions:  3.0.2-3.0.4\r\n\r\nI have flagged this bug as P2 - it is marginal P1, as that is what is used for most crashes, but only the very incautious and unwise user will set their default Macro output directory to be C:\\ hence P2 and non-blocking, but still serious.\r\n\r\nSee:  https://bugzilla.audacityteam.org/show_bug.cgi?id=2740\r\nP2 Bug 2740 - Directories in Directories preferences can be set to unwritable locations\r", "I just researched an realized that this was lready reported as Bug 2738\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2738\r\nP2 Bug 2738 - Audacity crashes with Macros on files when the macro-output folder is in an unwriteable location =||= See also Bug 2739\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2739\r\nP2 Bug 2739 - If Temporary files directory is set to be unwritable then Audacity has a catalog of cryptic unhelpful errors \r\n\r\nAnd see also Bug 2740\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2740\r\nP2 Bug 2740 - Directories in Directories preferences can be set to unwritable locations\r\n =||= **Reproduce**\r\n\r\nOS: Windows 10 Home\r\nAudacity: master branch 4770b1f0a4c91c71eea8e54a180a7ba99b77834d\r\n\r\n**Set the default location for Macro output to be `C:\\`**\r\nAt this step, Audacity blocked the use of `C:\\` and other unwritable locations with the following message:\r\n![0 - unable_set_unwritable_dir](https://user-images.githubusercontent.com/1660969/124120114-0800c480-da7c-11eb-98d8-0884ba5847b4.png)\r\n\r\n**Folder location that changing the status from writable to unwritable..**\r\nSet folder to macro output writable directory with name `ttttttttt`\r\n![1 - set_macro_directory](https://user-images.githubusercontent.com/1660969/124120624-a42acb80-da7c-11eb-8b12-840c4ca4b44c.png)\r\n\r\nThen lock this directory for writing.\r\n![2 - lock_directory](https://user-images.githubusercontent.com/1660969/124120739-c7557b00-da7c-11eb-9848-6b67e4a7079b.png)\r\n\r\nRun MP3 Conversion Macro and apply to `Files`\r\n![3 - run_macro_tool](https://user-images.githubusercontent.com/1660969/124120952-008deb00-da7d-11eb-80bb-402a76f670ad.png)\r\n\r\nAfter that Audacity show message with a problem to the writing result and then successfully continue working.\r\n![4 - message_after_macro](https://user-images.githubusercontent.com/1660969/124121200-477be080-da7d-11eb-9d70-7bb08656bb03.png)\r\n\r\n =||= @petersampsonaudacity, could you please provide me with a print screen with Audacity crash when used unwritable directory for macro output? Because I tried reproducing these steps and still can't get the same result (crash). I described my steps above. But in some cases I get exception from `wxWidgets`, may be it the same. =||= @gera-gas \r\n![image](https://user-images.githubusercontent.com/50205984/124274529-490ade80-db39-11eb-801c-f2dec1e42809.png)\r\n =||= When I set the Macros output folder to be a sub-folder of C: (I used C:\\Program Files) - I get no crash, but I do get this error message:\r\n\r\n![image](https://user-images.githubusercontent.com/50205984/124275104-f67df200-db39-11eb-8ae4-85167ad686e3.png)\r\n =||= Audacity 3.0.4 alpha now blocks the use of C:\\ (and other unwritable system files) with the pulling in to audacity:master for 3.4.0\r\nof this Pull Request:\r\nhttps://github.com/audacity/audacity/pull/1185\r\nAdd Directory permission check for Open, Import, Macro Output, and Temporary directory in Directory Preference #1185\r\n\r\nThis enabled me to mark P2 Bug 2740 as RESOLVED FIXED\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2740\r\n\r\nBut also importantly it means that this issue can no longer occur - so I shall close this.\r\n\r\nPlease note that this is fixed for 3.0.4 - but NOT for 3.0.3 (which is still in RC stage right now). =||= I tested this on W10 with audacity-win-3.0.4-alpha-20210704+0cef813-64bit\r\nthis is a branch build: https://github.com/audacity/audacity/actions/runs/999270883\r\n_The directory setting has to be made with 3.0.2 as in latest 3.0.4 the use of C:\\ is now blocked by Audacity._\r\n\r\n1) clear Audacity settings folder\r\n2) launch 3.0.2\r\n3) Directories preferences\r\n4) set the Macro output directory to be C:\\\r\n5) Exit Audacity\r\n6) Launch 3.0.4 branch alpha with the fix\r\n7) Tools Macros\r\n8) choose the shipped MP3 Conversion Macro\r\n9) Apply Macro to: Files\r\n10) choose any audio file for processing\r\n11) Observe: Audacity does not crash but displays the following error message when it reaches the Export step in the Macro\r\n\r\n![image](https://user-images.githubusercontent.com/50205984/124466466-98961800-dd8e-11eb-8a36-69831d966587.png) =||= "], ["1175", "InnoSetup uses wrong path for 32 bit build on 64 bit Windows", "Dmitry Vedenko", "crsib", "07/02/21, 06:13:51 PM", "NaN", "NaN"], ["1176", "Freeze (or more like some sort of focus lost) on press play using space", null, "ovROG", "08/04/21, 10:32:14 AM", "I've just add mp3 and press space. Program won't went to \"not responding\" status but I can't press or do anything\r\n\r\nSteps to reproduce the behavior:\r\n1. Drag and drop mp3\r\n2. Press space (not play button on UI)\r\n3. Freeze\r\n\r\n**Screenshots**\r\n![1](https://user-images.githubusercontent.com/43468716/123651173-edd4a580-d833-11eb-94e2-dc62d047d0f1.gif)\r\n\r\n - OS: Win 10\r\n - Version Audacity 3.0.3 RC1 x64\r\n - MME (usb behringer um2)\r\n\r", "I cannot reproduce this on W10 or Mac =||= "], ["1178", "UX improvement - \"smart\" clips", null, "AnitaBats", "07/20/21, 12:07:18 PM", "\r", "### User Story\r\nAs a user, I want to edit the length of a sound clip pulling by mouse on the edges of a clip so that allows me to edit a clip length without destructive changes to the original sound clip or whole track. \r\n\r\n\r\n### Decription \r\nSmart clips are a way to adjust the length of a clip _non-destructively_. When hovering on the edge of a clip, the cursor changes to a trim cursor, and by clicking and dragging the user will be able to shorten the clip (or lengthen later on, if the current shown length of the clip is shorter than the actual length). The idea is that the complete clip data will be retained so that users can split and trim clips without worrying about losing the original audio data. \r\n\r\n\r\n### Design examples\r\n![smart clip 1@2x](https://user-images.githubusercontent.com/10109867/124116626-12fd2a00-da67-11eb-8610-67a854ba771a.jpg)\r\n![smart clip 2@2x](https://user-images.githubusercontent.com/10109867/124116621-12649380-da67-11eb-9acf-3379a9fb0688.jpg)\r\n![smart clip 3@2x](https://user-images.githubusercontent.com/10109867/124116619-109ad000-da67-11eb-8903-626073ab4925.jpg)\r\n![smart clip 4@2x](https://user-images.githubusercontent.com/10109867/124116620-11cbfd00-da67-11eb-8b4a-8695f93c4f6f.jpg)\r\n\r\nUX video of the behaviour (doesn't show the cursor change due to limitations in the prototype) - https://vimeo.com/562162689#t=14m1s\r\n\r\n\r\n### Scope, Restrictions and \u0421ourner-cases\r\n\r\n- \"Smart\" clips improvements are applicable only to sound clips (mono, stereo tracks)\r\n- The frames of a smart clip can't be wider than the original audio \"piece\" so the end of a track is the end of a smart clip and a user can not pull \"smart\" clip edges beyond the original clip.\r\n- When the smart clip edges are the same as track boundaries the cursor should focus only on the smart clip edge. There is no double selection allowed.\r\n- When the user tries to select the piece of a track inside the smart clip, the selection allows only to the edge of the smart clip. There is no track selection allowed beyond the edges of a smart clip.\r\n\r\n\r\n### And the other one from @jounih \r\nThere is an edge case which will require resolving - when a part of an audio has been selected all the way to the edge of a clip, the hit area between the selection edge, and the clip edge may overlap. There have been a couple of suggestions to resolve this:\r\n\r\n    Using the current behaviour of \"Esc\" key in Audacity to switch between conflicting contexts/hit areas (not very discoverable), also \"Esc\" often is used as a shortcut for de-selection\r\n    A selection mode tool (like today) - a special tool mode could be used when selecting audio, and a more generic pointer tool for anything else (moving, trimming etc)\r\n    The clip selection hit area could be just outside the clip edges, rather than inside. This could be problematic with two clips right next to each other\r\n\r\n =||= There is an edge case which will require resolving - when a part of an audio has been selected all the way to the edge of a clip, the hit area between the selection edge, and the clip edge may overlap. There have been a couple of suggestions to resolve this:\r\n\r\n1. Using the current behaviour of \"Esc\" key in Audacity to switch between conflicting contexts/hit areas (not very discoverable), also \"Esc\" often is used as a shortcut for de-selection\r\n2. A selection mode tool (like today) - a special tool mode could be used when selecting audio, and a more generic pointer tool for anything else (moving, trimming etc)\r\n3. The clip selection hit area could be just outside the clip edges, rather than inside. This could be problematic with two clips right next to each other\r\n\r\nRegardless of the solution for this hit area conflict edge case, the main work on the Smart Clips can commence, and this edge case can be resolved separately. =||= > so that users can split and trim clips without worrying about losing the original audio data\r\n\r\nYou may well have thought through this, but...\r\nIn an editor which has only non-destructive editing, when you split a clip, both clips can be a \"view\" of the same data.\r\nBut in Audacity, this can't be the case, since either clip could be destructively edited, and this shouldn't affect the other clip. =||= @AnitaBats this design is surely not \"Done\" yet.\r\n\r\n@DavidBailes points out an unspecified case.  @jounih may have an incorrect mental model of how Audacity works.  Clips in Audacity are not and cannot simply be \"views\" into the same data, as David says they are in purely non-destructive editors.\r\n\r\nSo design might specify:  When a clip is split, each clip gets a complete copy of the wave data, including any hidden wave data that the original clip had.  (The implementation can do this easy with real sharing, not duplication.)  But thereafter, clip contents are independently modifiable.\r\n\r\nThe design should also specify: dragging of clip edges shall not result in overlapping clips within one channel.  Audacity doesn't support overlapping clips (yet).\r\n\r\nBut then: if two clips touch, and you drag the boundary between them -- should that adjust both clips at once (shortening one, lengthening the other)?  I would think that is useful, and should be specified.\r\n\r\nBUT then: you might really want to drag one edge and not the other.  So how do you specify what you really want?\r\n\r\nWhich suggests:  MORE hit-test target candidates perhaps.  Esc key might cycle between adjusting this clip, OR that clip, OR both clips, OR change the selection.\r\n\r\nAnd then:  How will the user know what the hit-test target is?  Are there enough cursor changes possible?  Or do we do something like drawing the boundary of a clip in a changed color?\r\n\r\n =||= @Paul-Licameli \r\n\r\nI like your first idea - The suggestion of including potentially hidden wave data in split clips, and turning them into independent clips after the split sounds good to me - I'll add this to the description/spec. I'm aware there is no \"instancing\" of clips in Audacity yet, could be desirable in the future but let's not tackle that now.\r\n\r\nThe second issue you mention - Hit area conflicts for smart clip length trimming - is a tricky one, still something I'm thinking about, I outlined some thoughts on 3 potential options [above](https://github.com/audacity/audacity/issues/1178#issuecomment-872173922) with pros/cons. I have a feeling this will take a bit of time and discussions to resolve, but the internal/non-UI dev work on smart clips should be able to commence.\r\n\r\nMy thoughts - I don't think cycling between hit areas with \"Esc\" is very discoverable, and the common pattern from other apps is for \"Esc\" to deselect.\r\n\r\nI don't think the hit area can be outside/on the edge for the reasons you mention due to conflict with other adjacent clips, it should be slightly inside of the edge of the clip. If there are two clips next to each other, being able to lengthen one and shorten the other would be useful, will add this to the final spec. The only hit area conflict with inside the edge is that in Audacity you can also select a part of the waveform, the waveform selection may extend to the end of the clip. In this instance there would be a hit area conflict between the edge of the waveform selection, and the edge of the clip for trimming the clip. A separate selection tool mode (like today) would resolve the conflict, I think. I have a feeling that in the future we will need some new tool modes anyway, for instance for spectral selection. So I'm not sure we can get rid of tool modes completely, as we previously hoped. Let's brainstorm this one this week.\r\n\r\n\r\n\r\n\r\n\r\n\r\n =||= Describe \"instancing.\"\r\n\r\nI think modes are an idea we want to move away from.  That was generally agreed in the old team.  Advanced spectral selection, such as Edward is working on, is a very special case that would justify a mode.  But otherwise, I think anything you can point at should have its own affordance in a single mode for changing anything.  (That would include the selection box for the old, simple spectral selections.)\r\n\r\nI prefer the Esc key (or some other key).  The system we have for adding click-drag-release actions implements Esc key generally and for free in cases of hit area conflicts.  Or maybe, you can research what 3d modelling programs do. The problem of multiple hit-test candidates, having a z-order, must arise often.  Are there conventional solutions here?  (I remember how Pro/ENGINEER did it with three-button mice... but we won't assume the users have those.)\r\n\r\nYou are wrong that selection is the only possible hit area conflict.  Other conflicts might happen such as with envelope points or dragging samples at a high level of zoom.  With more ingenuity, we might invent yet more click-drag-release actions and have more possibilities of conflict.\r\n\r\nYou must also remember that clicking on a split between clips causes them to merge.  There is one more conflicting action at a mouse point.\r\n\r\nI don't think unnatural changes in the hit test areas should be done just to avoid every possible conflict.  Have the general means and make it better known.\r\n\r\nStill, you might also consider this possibility.  Partition the range of y coordinates along the edge into different zones.  Clicking to merge clips, and clicking to drag the edge, could be disjoint areas.  That resolves some but not all possible conflicts.\r\n\r\nYou are right that the other necessary internals work is in no way blocked by design issues.  We devs just haven't reached it yet.\r\n =||= > I think modes are an idea we want to move away from. That was generally agreed in the old team.\r\n\r\nI'm not sure that it  is correct to say that the old team  was generally against modes. I recall that you were quite strongly against modes, but I don't recall a strong  consensus about that. My personal view is that modes can be very useful when used appropriately and implemented well. =||= > > I think modes are an idea we want to move away from. That was generally agreed in the old team.\r\n> \r\n> I'm not sure that it is correct to say that the old team was generally against modes. I recall that you were quite strongly against modes, but I don't recall a strong consensus about that. My personal view is that modes can be very useful when used appropriately and implemented well.\r\n\r\nWell fair enough, but @JamesCrook and I seemed to agree for long that the Tools toolbar ought to be reduced.  I think the \"multi\" tool behavior should be the behavior of select tool, the Envelope should be a toggle for visibility of it and not a mode, and the Zoom tool is really a mode, but I for one never use it and wonder who does.  So just two or three buttons,  but Edward's project might justify another new button.\r\n\r\n\r\n =||= > > I think modes are an idea we want to move away from. That was generally agreed in the old team.\r\n> \r\n> I'm not sure that it is correct to say that the old team was generally against modes. I recall that you were quite strongly against modes, but I don't recall a strong consensus about that. My personal view is that modes can be very useful when used appropriately and implemented well.\r\n\r\nYeah.. Tool modes are not my first choice because they can also hide functionality and constantly switching between them is annoying, but sometimes they are useful, when operating on distinct tasks on what would otherwise use the same/overlapping targets.\r\n\r\nI am also thinking about the potential future of Audacity on tablets/touch interfaces, how do patterns we establish now work with touch in the future, and \"Esc\" doesn't feel like a right solution there.\r\n\r\nLet's keep thinking and discussing!\r\n\r\n =||= @Paul-Licameli\r\n> So design might specify: When a clip is split, each clip gets a complete copy of the wave data, including any hidden wave data that the original clip had. (The implementation can do this easy with real sharing, not duplication.) But thereafter, clip contents are independently modifiable.\r\n\r\nMaybe I'm misunderstanding what you're saying here, but isn't there a problem with real sharing. If the clip contents are independently modifiable, then they can be adjusted so that a section of the original data occurs in both clips. If that data is destructively edited in one clip, then the other clip will be affected - surely not what a user would expect? =||= @DavidBailes are you familiar with the details inside classes WaveClip and Sequence?\r\n\r\nWhen we make a new row id for a block of samples, the data associated with the id are immutable thereafter.  If you edit a clip, by cutting and pasting or doing an effect or what have you, then new sample blocks are made to hold modified data.\r\n\r\nIn this case, the two clips would no longer share data.  The modified clip will point to new data.  No problem.\r\n\r\nIt's a bit like Git commits, though the ids here are not a function of contents.\r\n\r\n =||= @Paul-Licameli\r\n\r\nthanks for the explanation. =||= "], ["1180", "Decompose Plug-in manager", null, "AnitaBats", "08/17/21, 01:44:48 PM", "1. Details are TBD - needs meeting\r\n2. Decomposition needed\r\n\r\nDesign attached #999 ", "**Description of task decomposition.**\r\nAll estimation times have two borders: this is not 100% precision time frame, this is the approximate time window for solving task.\r\n\r\n1. Preferences for the custom plugin search path.\r\n1.1 Create the preference type, by analogy `BoolSettings`, but for describing plugins paths that will contain a `wxArrayString` objects, something like - `ArrayStringSettings` or using `StringSetting` for economy time.\r\n1.2 If we using `StringSetting`, the path will be separated by `;`, and this is a not a problem to parse this by `wxTokenizer`.\r\n1.3 Second, need patch `PluginManager::FindFilesInPathList()` with additional search directories from settings.\r\nEstimate: 4 - 6 hrs.\r\n\r\n2. Check method.\r\nFor each plugin type, needed a static method for validation each plugin instance of each plugin type, something like: `VSTEffectsModule::Check()` and `VSTEffectsModule::DiscoverPluginsAtPath()`.\r\n2.1 Get information about Audacity CLI command (2,3 hrs).\r\n2.2 Run a new Audacity process with check command with output result to `STDOUT`.\r\n2.3 Catch and parsing `STDOUT` after this on success.\r\n2.4 Create this check method for each plugin type: VST (1 hrs), AU (4,5 hrs), VAMP, LV2, LADSPA (6,8 hrs).\r\n2.5 Call this methods at startup (for example in `PluginManager::Initialize()` or `CheckForUpdates()` for comfortable calling from dialog (when user press on `Rescan plugins`) and collect failed information (2,3 hrs). \r\n2.6 Output dialog with incompatible plugins list (3,4 hrs).\r\nEstimate: 18 - 24 hrs + possible time buffer for loss while switching and testing on all OS. (3,4 hrs).\r\n\r\n3. Remake `PluginRegistrationDialog` dialog.\r\n3.1 Remake `wxListCtrl` of `PluginRegistrationDialog::mEffects` to add \"Version\", \"Type\" and \"Enabled\" collumn (5,8 hrs).\r\n3.2 Remove extra functionality like: \"State\" collumn, \"New\" radio button, buttons \"Select All\", \"Enable\", etc (4,6).\r\n3.3 Add callback on button \"Rescan plugins\", \"Done\" (2,3) hrs.\r\n3.4 Final behavior tests (2,4) hrs.\r\nEstimate: 13 - 21 hrs.\r\n\r\n**Total estimate:** 35 - 51 hrs.\r\n\r\n@crsib @Paul-Licameli could you review, please. =||= This looks like a good decomposition.  But I think part 1 might make do simply with existing StringSetting, splitting the string on ; characters.\r\n\r\nQuestions.\r\n\r\n- Do you have at least one example of LADSPA, LV2, Vamp, VST2 plug-ins that you can test with?\r\n- This is still supposing only VST2 support -- not yet VST3.  Correct?\r\n- I recall we said the new dialog also needs a \"failed\" state.  Instead of one choice in a drop-down menu as now, perhaps a line of the list control is disabled.  Do you account for that?\r\n- If the user interface specification is firm enough, perhaps you can attempt step 3 first, to get early feedback and testing.  While you have not yet implemented validation for LADSPA, LV2, and Vamp, you might simply always make them \"failed.\"\r\n\r\nThe user interface can be sent to review and testing, while you concurrently continue working on the AU, LADSPA, LV2, Vamp cases.  And perhaps each of those becomes a separate PR.\r\n\r\n =||= 1 - I can download this plugins or at leat build empty plugins for AU, VST2, LV2 and LADSPA.\r\n2 - yes, correct.\r\n3 - yes, I remember that about \"failed\" state.\r\n4 - okay\r\nI agree about separate and move UI developing part to first order. =||= Decomposition is done =||= "], ["1181", "Affordances: appearance fixes, theming support, behaviour improvements", null, "AnitaBats", "07/22/21, 06:43:49 PM", "This is a part of https://github.com/audacity/audacity/issues/915\r\nDoes not provide full functionality requested in the feature\r\n\r\n- [x] Fix clip border color: clip frame should be outlined with one color\r\n- [x] Play head should be rendered over a track panel (not separate tracks)\r\n- [x] Grab hand should be displayed over affordance on hover\r\n- [x] Fix \"empty\" corner above vertical ruler, so it will look same as surrounding elements\r\n- [x] Select clip when affordance is clicked\r\n- [x] Highlight affordance when cursor is over it, add stroke to clip frame when dragging\r\n- [x] Reduce font size in text boxes on a label's track (Windows only)\r\n- [x] Move label's text box to top, to reduce overlaping with horizontal bar", "NaN"], ["1182", "Clip names", null, "AnitaBats", "09/06/21, 01:25:31 PM", "### User Story\r\nAs a user of Audacity, I would like to have individual clip names, and be able to rename clips.\r\n\r\n### Description\r\nCurrently, there is no concept of clip names in Audacity, only track names. Individual clip names are very useful when organising a project, or separating between copies or takes. The new affordance design has a space for clip names top right.\r\n\r\nThe design at https://github.com/audacity/audacity/issues/1258 describes how to rename clips as a user.\r\n\r\n**Generated/default  clip names**\r\n\r\nWhen recording to a track, the auto-generated clip name should be derived from the track name by default: trackname#XX, where #XX is the number of the recording/take. This can be changed to anything afterwards\r\n\r\nWhen importing an audio file to a track, the clip name should be the file name. This can be changed to anything afterwards\r\n\r\n\r\n### Rules for auto-naming split/joined clips and copies\r\n\r\nSuggested rules for auto-clips naming:\r\n- New clip recording: \"{track_name} #{take_number} {channel}\"\r\n- Merge clips: \"{first_clip_name}\"\r\n- Split: \"{clip_name} {index}\"\r\n- Import: \"{track_name}\"\r\n- Copy: \"{original_clip_name} copy {number}\"\r\n- Copy/Paste selection(part of a clip): \"{original_clip_name} samples [range]\" \r\n\r\n suggested scheme may produce results like: \"Clip 1 1\" \"Clip 1 2\" \"Clip 2\" when splitting \"Clip\" into \"Clip 1\" and \"Clip 2\" and then splitting \"Clip 1\" into \"Clip 1 1\" and \"Clip 1 2\", similar would happen with copy-pasting a clip or it's parts. Is it ok, or is there some better scheme for such cases? \r\n \r\n ### Additions\r\n \r\n- basic RTL appearance\r\n\r", "Est.: 16hrs =||= Suggested rules for auto-clips naming:\r\n- New clip recording: \"{track_name} #{take_number} {channel}\"\r\n- Merge clips: \"{first_clip_name}\"\r\n- Split: \"{clip_name} {index}\"\r\n- Import: \"{track_name}\"\r\n- Copy: \"{original_clip_name} copy {number}\"\r\n- Copy/Paste selection(part of a clip): \"{original_clip_name} samples [range]\" \r\n@jounih suggested scheme may produce results like: \"Clip 1 1\" \"Clip 1 2\" \"Clip 2\" when splitting \"Clip\" into \"Clip 1\" and \"Clip 2\" and then splitting \"Clip 1\" into \"Clip 1 1\" and \"Clip 1 2\", similar would happen with copy-pasting a clip or it's parts. Is it ok, or there some better scheme for such cases? \r\n =||= See also Discussion #1499 \r\n>Thought-piece: labels for merged clips #1499 =||= "], ["1183", "Fix wave clip record starting position", null, "AnitaBats", "07/16/21, 03:14:36 PM", "Currently when recording is started with selection cursor placed at some distance from track ending (same as the end postion of the latest clip in the track), this gap is filled with \"silence\", which should be removed. New clip should start from selection starting position, or from the end of the track (if selection starts prior to track ending)", "Please explain why this bug fix is necessarily a part of the affordances project.  I think it is an independent issue.\r\n =||= > Please explain why this bug fix is necessarily a part of the affordances project. I think it is an independent issue.\r\n\r\nAgreed, but as i understood this bug should fixed as a part of the affordances project =||= @AnitaBats I can review this change at #1265, but it is unclear to me how this specification entered the schedule.  Who specified this change, and why?\r\n\r\nThis looks like a design change, not a bug fix.  Did one of our designers request it?  But their names are not in this issue.  Did you specify it, or @vsverchinsky ?  Did designers agree the change is correct?\r\n\r\nAnd again it is in no way a necessary part of the clip affordances project, but an independent improvement, if it is agreed that it should be done.\r\n =||= "], ["1184", "QA: Make a list of functions for a traceability matrix.", null, "AnitaBats", "08/02/21, 11:19:38 AM", "NaN", "Estimate: 18h =||= "], ["1185", "Add Directory permission check for Open, Import, Macro Output, and Temporary directory in Directory Preference", "Jithin John", "MalevolentStrix", "06/30/21, 01:39:46 PM", "Resolves: https://bugzilla.audacityteam.org/show_bug.cgi?id=2740\r\n\r\nThis is an improvement on PR https://github.com/audacity/audacity/pull/1033 which now imposes a block with an error message for Open, Import, Macro Output, and Temporary directory if it is not writable. A new function WritableLocationCheck() has been added and is called whenever a user tries to set a preference for the above-said fields and the unnecessary code from the previous PR has also been removed.\r\n\r\n![Screenshot from 2021-06-28 22-15-32](https://user-images.githubusercontent.com/73242397/123673707-68b2b600-d85e-11eb-97c9-829fd9a9e992.png)\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [X] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [X] I made sure the code compiles on my machine\r\n- [X] I made sure there are no unnecessary changes in the code\r\n- [X] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [X] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "I tested these changes on Win and Mac and closed the associated bug 2740 as RESOLVED FIXED\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2740\r\nDirectories in Directories preferences can be set to unwritable locations =||= "], ["1186", "Extract PortAudio. Update PA to the latest version", "Dmitry Vedenko", "crsib", "08/12/21, 01:15:30 PM", "- [x] #1413\r\n- [x] #1414\r\n- [x]  #946\r\n- [x] Create Conan recipe\r\n- [x] Update dependencies list\r\n\r\nOn Windows 16bit.patch is desirable, but not strictly needed, as DSound is deprecated.", "Est 12hr =||= "], ["1187", "Design a system, that allows packaging of dependencies and Conan itself for Linux package maintainers", "Dmitry Vedenko", "crsib", "08/03/21, 09:13:00 AM", "NaN", "Est: 2D =||= FYI Linux package maintainers do NOT want to use conan, but have everything be from system packages.\r\n =||= There are several dependencies that are not accessible from the Linux package management software. For these cases, there will be a way provided to do a fully offline build that will only require Python as a build dependency. =||= > There are several dependencies that are not accessible from the Linux package management software.\r\n\r\nSeveral? which ones?\r\n\r\nIf there is interest on packaging audacity, those dependencies will be packaged system-wide too.\r\nThis is not really an issue.\r\n =||= Nyquist and portmixer for now at least.\r\n\r\nIf Linux package maintainers will decide to include them - then it will be possible for them not to use Conan at all. However, Audacity builds on other platforms as well.\r\n\r\nPS. It is fascinating how much opposition about package management there is from the Linux user, which is heavily based on package management. =||= There is opposition to do things outside of the official package management.\r\nOften the only software that does this are commercial tools that due to licensing can't be packaged in most distros as-is, so they need to generate generic binaries.\r\n\r\nAudacity has a big issue of patching upstream dependencies without (at least visible) collaboration that gets the modifications sent upstream and be put into releases.\r\n\r\nTo give an example, Ardour is a DAW with quite the long list of dependencies.\r\nThe page https://nightly.ardour.org/list.php#build_deps lists all of them. That list is bigger than Audacity.\r\nArdour manages to build and run with stock versions of all those libraries.\r\nThere is a page dedicated to \"Libraries Requiring Modified Versions\" at https://ardour.org/current_dependencies.html. With only gtk2 on macOS being an exception, everything else can pretty much be used as-is. =||= >Audacity has a big issue of patching upstream dependencies without (at least visible) collaboration that gets the modifications sent upstream and be put into releases.\r\n\r\nIt is possible to build Audacity using system-only libraries. The problem is mostly with wxWidget 3.0 is the latest version for most of the distros. We won't be lowering this requirement. \r\n\r\nThere is a branch almost ready to be merged that has POC build for Fedora using rpmbuild in a network-less fakeroot: #1030\r\n\r\nArdour has dependencies, that are vendored in (i. .e simply copied into the source tree). One example is VST3 SDK. Even Lua is there and the list is surprisingly large. \r\n\r\nThis is what I really want to avoid, as managing such dependencies is difficult and error-prone. I really think that if there will be a verifiable offline way to build Audacity for package maintainers and without having vendored libraries it will be satisfactory for package maintainers. =||= VST3 SDK is an odd case, the linux support is still very experimental so projects often need to ship with custom patches.\r\nIt also does not support installing / packaging for linux in the usual way, steinbeing simply doesnt seem to care.\r\nSee https://github.com/steinbergmedia/vst3sdk/issues/65 https://github.com/steinbergmedia/vst3sdk/issues/68 and https://github.com/steinbergmedia/vst3sdk/issues/77\r\nVST3 SDK is an example of how NOT to manage an opensource project.\r\nThere is simply no way to package it, so projects that depend on it have no choice but to include its files directly.\r\nAnd afaik ardour does not use the full \"SDK\" but only the header files.\r\n\r\nOn Lua, last time I checked Ardour had custom patches for it in order to disable garbage collector or whatever is there that makes it incompatible with RT audio.\r\n\r\n\r\n\r\n> I really think that if there will be a verifiable offline way to build Audacity for package maintainers and without having vendored libraries it will be satisfactory for package maintainers.\r\n\r\nThis is mandatory actually, ubuntu builders (maybe debian too, not sure) purposefully disable online/network access.\r\n =||= >This is mandatory actually\r\n\r\nAnd this is precisely what would be done in this task.  =||= "], ["1188", "Audacity-win-3.0.3-RC1-x64: Export to WAV takes twice as long with x64 build", null, "deus-e-x", "06/30/21, 11:33:34 AM", "Audacity v3.0.3 RC1 for Windows:\r\n\r\nExport of audio to WAV (signed 16-bit PCM) takes more than twice as long with the x64 build compared to the x86 build.\r\n\r\nI tested both audacity-win-3.0.3-RC1-x64 and audacity-win-3.0.3-RC1-x86 on Windows 10 Pro x64 21H1 (official build 19043.1081).  I imported a FLAC file with a size of 248 MB, then exported the entire audio to WAV (signed 16-bit PCM). It takes ~15 seconds with the audacity x86 build, while with the x64 build it takes ~32 seconds.\r\n\r\nNote:\r\nInterestingly, the import of the 248 MB FLAC file takes ~8 seconds with the x64 build, while for the x86 build it takes ~9 seconds. Both the v3.0.3 RC1 x64 and x86 build import audio slightly faster than v3.0.2.\r\n\r\nSteps to reproduce the behavior:\r\n1. Load an audio file into Audacity (e.g. a FLAC file)\r\n2. Select entire audio data (Ctrl+A)\r\n3. Export selected audio (Ctrl+S)\r\n4. Choose \"WAV (Microsoft)\" (signed 16-bit PCM) as the output format\r\n5. Click \"Save\"\r\n\r\n**Expected behavior:**\r\nThe time required to export audio to \"WAV (Microsoft)\" should be nearly identical both for the x64 and x86 build, perhaps with x64 taking a slight lead, as can be seen with the current import timings.\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Windows 10 Pro x64 21H1 (official build 19043.1081)\r\n - Version: Audacity 3.0.3 RC1 x64 and x86", "A possible cause for the slowdown is that Audacity's version of float_cast.h does not contain any function definitions for 64 bit Windows. On 32 bit Windows, one or more of the definitions is needed to speed up export to WAV. =||= Thank you, David, I'll look into =||= You were absolutely right, David. I have added SSE2 implementation for x64 builds and it runs 4 times faster than the MSVC builtin functions =||= @DavidBailes do you wish to review PR #1189 ?  Any objection?\r\n =||= > @DavidBailes do you wish to review PR #1189 ? Any objection?\r\n\r\nthanks for asking but no to both questions. =||= I made a review and merged it.  Looking up the documentation to be reminded of the surprising fact that a long is still 32 bits on 64 bit builds, so the machine instructions used, return 32 bits, were really correct.\r\n\r\nWhich makes me think we need to review uses of lrint that should be llrint.  There may be such misuses in Audacity, which might rarely have some effect with long recordings.  But those will not be regressions on past versions, or the fault of these implementations.\r\n\r\n =||= The issue has been solved successfully. Thank you very much, guys. :)\r\n\r\n**Import FLAC file 248 MB, export to WAV 16-bit signed, timings:**\r\n\r\naudacity-win-3.0.3-RC2-x86: 9.5 / 14 seconds      \r\naudacity-win-3.0.3-RC2-x64: 7.0 / 10 seconds =||= "], ["1189", "Fixes performance regression in Win64 bit build", "Dmitry Vedenko", "crsib", "06/29/21, 07:58:05 PM", "Resolves: #1188\r\n\r\nAdds an SSE2 version of `lrint` family. For some reason, MSVC built-in functions have extremely low performance.\r\n\r\nI have checked, that the builtins and SSE2 generate exactly the same result, however, I think that relying on functions, that behavior can be changed by the CPU state can be potentially dangerous.\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "> Only question in my mind is that about \"current rounding mode\" and whether it matters.\r\n>\r\n\r\nI have similar concerns. But this is the way it was implemented for a very long time =||= "], ["1190", "Suppress networks error during the update check", "Dmitry Vedenko", "crsib", "06/29/21, 05:35:40 PM", "<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1191", "If user chooses not to check for updates, remember that preference when resetting to defaults", "Paul Licameli", "Paul-Licameli", "07/02/21, 06:13:43 PM", "NaN", "Tests OK on W10 with RC2 3.0.3 =||= "], ["1192", "Opt-out of check for updates persists after preference resets...", "Paul Licameli", "Paul-Licameli", "06/29/21, 08:36:03 PM", "Resolves: #1191 \r\n\r\n... These can happen in only two ways, using the application: from the Tools\r\nmenu, or using the Windows intaller program.\r\n\r\nA review of all uses of wxFileConfig::DeleteAll() proves this.\r\n\r\nThe one special BoolSetting object was moved from UpdateManager to Prefs.cpp to\r\navoid a dependency cycle among source code files.\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "The checks are still running, so I'm not merging right now =||= "], ["1195", "Labels track items selection, navigation, editing changes", "Vitaly Sverchinsky", "vsverchinsky", "07/12/21, 06:22:37 PM", "### User Story\r\nAs a developer I need a document, describing in details what changes should be applied to the appearance and behaviour of the labels track and label track items. \r\n\r\n### Description\r\n\r\nCurrently label range selection and label name are interlinked and overlapping visually - we would like to decouple these two, so you can click on the label range to select that range, and on the label name to change the name.\r\n\r\nThe idea is not to take away being able to select a label range, but to decouple the two tasks - changing the label text, and selecting the label range. ..The long rectangle should also made slightly larger than currently (for easy clicking), and dragging it should move the label.\r\n\r\nKeyboard navigation with tabbing between selected labels should still work, and to edit a label name we could use \"Enter\" key once a label has been selected.\r\n\r\n![2 5 label change name@2x-1](https://user-images.githubusercontent.com/10109867/124916808-fde64500-dfea-11eb-94e9-e59326adc490.jpg)\r\n\r\n![2 5 label select range@2x](https://user-images.githubusercontent.com/10109867/124916823-00e13580-dfeb-11eb-9e86-2721b48b67fa.jpg)\r", "@AnitaBats why closed?  This is meant as a design or implementation issue?\r\n =||= "], ["1196", "QA: Make a bug review in Bugzilla and Github", null, "Penikov", "09/21/21, 03:37:34 PM", "Check relevance.\r\nAre all bugs reproducible with a current stable release?\r\nCheck and correct bug priority ( if necessary)\r", "Estimate: 16h =||= Thanks to @petersampsonaudacity the bugs were moved from Bugzilla to Github. We review and plan the work for these bugs, so no additional effort from Pavel is required at this point  =||= > Thanks to @petersampsonaudacity the bugs were moved from Bugzilla to Github. We review and plan the work for these bugs, so no additional effort from Pavel is required at this point\r\n\r\n@AnitaBats - I stopped with the P2s and P3s - there are still P4s, some of which may be considered important enough for transfer to GitHub - plus some lowly ranked P5s\r\n =||= [The list of P4s](https://bugzilla.audacityteam.org/buglist.cgi?action=wrap&bug_severity=Repeatable&bug_severity=RepeatableAll&bug_severity=Locale&bug_severity=Accessibility&bug_severity=MoonPhase&bug_severity=HeisenBug&bug_severity=Summary&bug_severity=Review&bug_status=NEW&bug_status=ASSIGNED&bug_status=REOPENED&order=changeddate%20DESC%2Cbug_status%2Cpriority%2Cassigned_to%2Cbug_id&priority=P4&query_based_on=&query_format=advanced) for reference. I'm not noticing anything which feels like it requires continued attention there, but I did see bugs which I expect to be fixed as a side effect of other stuff (eg updating FFMPEG, VST3 support, Qt migration eventually, etc), and one (#581 in here) which I couldn't reproduce. So from my side I'd say it's all good.  =||= If I get time I'll work on a pass through the P4s to see if I think any need transferring to GitHub . If that's OK?\r\n\r\n\r\n\r\n\r\n =||= absolutely! thank you =||= "], ["1197", "QA: Make a smoke test plan for daily builds", null, "Penikov", "08/17/21, 01:44:21 PM", "Make a smoke test plan and put it on TestLink", "Estimate: 10h =||= See:   Suggestions for Macros improvements:  https://github.com/audacity/audacity/discussions/885 UX - Tweaks to macros\r\n =||= The task was about macros but the smoke test plan is more relevant for now, so that is why I changed this task. =||= Done =||= "], ["1198", "Extract libsndfile, libogg, libvorbis, libflac", "Dmitry Vedenko", "crsib", "08/12/21, 01:59:20 PM", "NaN", "6 hrs =||= "], ["1199", "Updates: Download and launch the installer from github when user clicks install", null, "AnitaBats", "08/04/21, 11:15:05 PM", "Estimation: 6-8 hrs", "What about users from places from where Guthub does not allow to access it, e.g. Crimea? =||= @AnitaBats @gera-gas @crsib   - surely yhsi si done for 3.0.3 - and can be closed ? =||= I think the code review for this is not complete yet, right @Paul-Licameli ? =||= There was another round of review, and I expected the remaining changes to be few, but I'm still waiting the final PR.\r\n =||= "], ["1200", "AppImage fails to launch when UpdateScheduledTime= invalid", "Steve Daulton", "SteveDaulton", "07/02/21, 06:13:32 PM", "Testing on Xubuntu 20.04 with audacity-linux-3.0.3-RC2-x86_64.AppImage\r\nWhen \"UpdateScheduledTime=\" in audacity.cfg is set to an invalid value, the Audacity splash screen opens, then nothing - the main Audacity window does not open, though Audacity is running. There's no error message, and no message in the terminal.\r\nThe Audacity process has to be killed.\r\n\r\n**To Reproduce**\r\nOpen audacity.cfg in a plain text editor.\r\nIn the `[Update]` section, ensure that \r\n`DefaultUpdatesChecking=1`\r\nset the other line in the Update section to:\r\n`UpdateScheduledTime=`\r\nThen attempt to launch the audacity-linux-3.0.3-RC2-x86_64.AppImage\r\n\r\n\r\n**Expected behavior**\r\nAudacity will launch, and `UpdateScheduledTime=` will be updated to the default value.\r\n\r\n**Actual behavior**\r\nThe Audacity splash screen appears, then disappears, then nothing. The main window does not open and there is no error message.\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Xubuntu 20.04\r\n - Version: audacity-linux-3.0.3-RC2-x86_64.AppImage\r\n\r\n\r\n**Additional context**\r\nAlthough end users are not expected to mess with the audacity.cfg file, there are many ways that a setting _could_ be invalid. Better if Audacity is more robust and can survive an invalid setting by (automatically) dropping back to the default, (as it does with other settings).\r", "NaN"], ["1201", "AppImage fails to load FFmpeg", "Steve Daulton", "SteveDaulton", "09/24/21, 06:03:22 PM", "**Describe the bug**\r\nSelf built Audacity 3.0.2 loads FFmpeg correctly.\r\naudacity-linux-3.0.3-RC2-x86_64.AppImage fails to load FFmpeg (regression against 3.0.2)\r\n\r\n**To Reproduce**\r\n1. Launch audacity-linux-3.0.3-RC2-x86_64.AppImage\r\n2. Observe error message:\r\n`FFmpeg was configured in Preferences and successfully loaded before, \r\nbut this time Audacity failed to load it at startup. \r\nYou may want to go back to Preferences > Libraries and re-configure it.`\r\n\r\n\r\n**Expected behavior**\r\nFFmpeg will be loaded.\r", "That is almost certainly because you have 32-bit FFmpeg installed and you are running 64-bit Audacity.\r\n\r\nI had similar on Windows until I installed  64-bit FFmpeg from Buanzo's new page on his site.\r\nhttps://lame.buanzo.org/ffmpeg64audacity.php\r\n\r\nDoes the Linux FFmpeg page need updating?\r\nhttps://alphamanual.audacityteam.org/man/Installing_and_updating_Audacity_on_Linux#linff =||= I'm on 64-bit Linux, so I've been using 64-bit builds of Audacity and FFmpeg for years. =||= @SteveDaulton can you please provide some insight on your setup?\r\n\r\nI've managed to compile FFMPEG using a modified script from Leland and after setting up `DT_RUNPATH` everything works like a charm for me. I will share the script after a bit of polishing.\r\n\r\nThe question is, what we do for this release anyway. Probably the fix is to provide some instruction on setting LD_LIBRARY_PATH to the location FFMPEG is located.\r\n\r\nFor the next release I plan:\r\n\r\n* Upgrade the FFMPEG (once again, yes), so system FFMPEG can be used on Linux\r\n* Provide a set of scripts on how to build the \"correct\" version, so it can be easily buildable by users.\r\n\r\n@AnitaBats @Tantacrul FYI =||= My system is pretty standard Xubuntu 20.04 LTS.\r\nFFmpeg library installed from official Ubuntu repository.\r\n\r\nI prefer to use the system FFmpeg library as it is a dependency for many other audio apps.\r\nThe usual  way to build Audacity 2.x with FFmpeg support was to disable dynamic loading during 'configure' - this has worked without any problems for years.\r\n\r\nSelf built 3.0.4-alpha-20210628 also loads FFmpeg without any problems.\r\n\r\nFFmpeg version: F(58.29.100),C(58.54.100),U(56.31.100) =||= Lemme have a quick look into the loader code =||= Seems like at least avcodec 58 has an incompatible interface with what Audacity expects for dynamic loading. While functions are similar, structures, used as contexts, have nothing in common. For example, `AVCodecContext` has changed around its 5th member and has changed significantly. \r\n\r\nWhen you build against the system headers, this is not a problem. By default, however, Audacity is built against FFMPEG 2.2 (avformat 55). What is even more problematic - we build AppImage on 18.04, so avcodec 58 is not available as a system library for us as well (at least without PPA).\r\n\r\n@shoogle any thoughts? =||= Hello @crsib and @AnitaBats, is there a temporary workaround for this release? =||= > Hello @crsib and @AnitaBats, is there a temporary workaround for this release?\r\n\r\nSolution linked to in documentation for 3.0.3\r\nhttps://gist.github.com/crsib/d985afddf739f91edb15c1abbaec21e7 =||= Still remains in Audacity 3.1.0-alpha-20210921\r\n![\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435](https://user-images.githubusercontent.com/25851359/134499914-aa09b429-5e82-4d98-82db-840b5a5fe2de.png)\r\n\r\n =||= You have used a build from FFmpeg branch? =||= > \r\n> \r\n> You have used a build from FFmpeg branch?\r\n\r\nNot yet. I've tried to reproduce the bug before the fix will be merged. =||= "], ["1202", "Adds callback to report the download and upload progress", "Dmitry Vedenko", "crsib", "07/13/21, 06:47:07 PM", "This is required for the GSoC project on Source Separation to provide a better UX.\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1203", "Do not require odd libs when building without networking", null, "mikhailnov", "07/01/21, 10:38:17 AM", "ThreadPool is used only by lib-network-manager\r\nRapidJSON is used only by lib-sentry-reporting\r\n\r\nlib-network-manager and lib-sentry-reporting are used only when \"networking\" is enabled.\r\nThere is no need to require them otherwise.\r", "Mismatched parentheses? =||= Fixed, force-pushed =||= This is fixed in a different branch, which will be merged soon. Moreover, RapidJSON uses invalid constraint =||= Ok ) =||= @mikhailnov , BTW looks like you know a lot about RPM :) Is there any chance you can look at #1030, please? I really need some feedback on it, because \"builds for me\" doesn't really mean it is done right :)\r\n\r\nAny input is much appreciated  =||= > @mikhailnov , BTW looks like you know a lot about RPM :) Is there any chance you can look at #1030, please? I really need some feedback on it, because \"builds for me\" doesn't really mean it is done right :)\r\n> \r\n> Any input is much appreciated\r\n\r\nOk, I will try =||= "], ["1204", "Fixes handling of invalid UpdateScheduledTime", "Dmitry Vedenko", "crsib", "07/01/21, 11:33:30 AM", "Resolves: #1200 \r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1206", "Extract lib components", "Paul Licameli", "Paul-Licameli", "07/13/21, 06:43:27 PM", "Resolves: #1161\r\n\r\nA new library, mostly of abstract base classes related to modules and plug-ins, and facilities to name and persist parameters of effects.\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1207", "Track affordances", "Vitaly Sverchinsky", "vsverchinsky", "07/22/21, 06:43:49 PM", "Resolves: #1181\r\nResolves: #1251\r\n\r\n * Adds affordances to a wave clips, note track item, labels\r\n * Contains requested fixes and improvements (link above)\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "I have cherry-picked and merged parts of this pull request.\r\n\r\nI mentioned a few points that are still unresolved, I don't approve the edit cursor change yet, and I must still review all the label track changes.\r\n\r\nPlease rebase your branch onto recent master and force-push it again.\r\n =||= "], ["1208", "Same custom over-aligned allocation routine on all platforms...", "Paul Licameli", "Paul-Licameli", "07/04/21, 09:39:52 PM", "... in particular so that warnings on exit in the debug build on Windows are\r\nsuppressed.\r\n\r\nMaybe it's not important to suppress them.  Or maybe they suggest all is not\r\ncorrect in the MSVC implementation of this C++17 feature?\r\n\r\nResolves: #1042\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "@DavidBailes please tell me whether this works.  I think it will suppress the warning, while not disabling all of the memory debugging on Windows.\r\n\r\n =||= > @DavidBailes please tell me whether this works. I think it will suppress the warning, while not disabling all of the memory debugging on Windows.\r\n\r\nIt works. Thanks. =||= @DavidBailes  Please do the formality of approving this pull request before I merge it.\r\n =||= "], ["1209", "Preliminaries for lib basic UI (string types)", "Paul Licameli", "Paul-Licameli", "07/02/21, 01:39:36 PM", "Resolves: part of #1059\r\n\r\nMake some changes so the type wxString will not be mentioned in the Basic UI header file.\r\n\r\nIntroduces some proper type distinctions, for URLs and for manual page anchors, with new string wrapper types generated by the class template TaggedIdentifier.\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1211", "Windows EXE installer for 3.0.3 fails to create a desktop shortcut", "Peter Sampson", "petersampsonaudacity", "07/03/21, 10:44:01 AM", "**Describe the bug**\r\nWindows EXE installer for 3.0.3 fails to create a desktop shortcut even though that is checked \"on\" in the EXE installation dialog.\r\nThis is a regression on all previous versions of Audacity\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Install 3.0.3 on W10 with the EXE installer\r\n2. Ensure \"Create shortcut\" is checked \"on\"\r\n3. Complete installation\r\n4. Observe no desktop shortcut is created\r\n\r\n**Expected behavior**\r\nA desktop shortcut created.\r\n\r\n**Screenshots**\r\nNot applicable\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: W10\r\n - Version Audacity 3.0.3 RC1 and RC2 and latest alpha\r\n\r\n**Additional context**\r\nI have set this as priority P2 - but the regression makes it a marginal P1\r", "We just tested on the Mystery Shopper's PC - its exactly the same HP Envy that I have - and the desktop shortcut gets created fine there - so I'm baffled.  \r\n\r\nDmitry and David Bailes both reported successful shortcut creation, so I will close the GitHub issue. =||= "], ["1212", "Fix uninitialised variables", "Steve Daulton", "SteveDaulton", "07/04/21, 07:03:10 PM", "When importing an AUP project, selLow and selHigh may not be defined\r\nin the project. If not defined, this causes an error on initialising\r\nNyquist. See: https://forum.audacityteam.org/viewtopic.php?f=48&t=118940\r\n\r\nResolves: https://github.com/audacity/audacity/issues/1217\r\n\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "Only that they are not required to fix the bug.\r\n(I don't know how strictly \"no unnecessary changes in the code\" should be interpreted.)\r\n\r\nAll the other variables in the struct will be set if the AUP is valid and complete. These two are \"optional\" in that  the project need not contain a spectral selection. =||= "], ["1213", "New privacy policy is completely unacceptable!", null, "Chryseus", "08/04/21, 10:27:11 AM", "For anyone not yet aware the official [privacy policy](https://www.audacityteam.org/about/desktop-privacy-notice/) was updated on the 2nd of July and contains some very disturbing things, most notably under data collection is **\"Data necessary for law enforcement, litigation and authorities\u2019 requests (if any)\"**, I want to ask what exactly does this mean ? this is completely vague and tells us nothing about what is actually being collected.\r\n\r\nAs far as I'm concerned any data collection is unacceptable unless what is collected is exactly stated and opt-out is provided, for an open source project this is doubly so, I urge all users to remove Audacity from their system until this is resolved, in addition if you're a Linux user I would contact the package maintainer for your distribution as such a license may not be permitted.", "There's no way Debian package maintainers are letting this pass, their policies regarding privacy are pretty strict. =||= > \"The App we provide [Audacity] is not intended for individuals below the age of 13. If you are under 13 years old, please do not use the App.\"\r\n\r\nwhy is audacity rated higher than pg-13. I'm pretty sure this directly contradicts the license.\r\n\r\n> \"Who does Audacity share your Personal Data with?\r\n> [...]\r\n> 3. to our auditors, **advisors**, legal representatives **and similar agents** [...]\"\r\n\r\nso, anyone you call a friend\r\n =||= > > \"The App we provide [Audacity] is not intended for individuals below the age of 13. If you are under 13 years old, please do not use the App.\"\r\n> \r\n> why is audacity rated higher than pg-13. I'm pretty sure this directly contradicts the license.\r\n\r\nI'm pretty sure this is because the GDPR does not allow for children to give consent, although the age depends upon the member state, for example it's 18 in the UK, it's pretty clear whoever wrote it doesn't understand the GDPR. =||= As @floopfloopfloopfloopfloop points out, this is incompatible with the GPL.\r\n\r\nPrivacy policy:\r\n> If you are under 13 years old, please do not use the App.\r\n\r\nGPLv2:\r\n> The act of running the Program is not restricted\r\n\r\nGPLv3:\r\n> This License explicitly affirms your unlimited permission to run the unmodified Program. =||= Fork this or stop using it. There is no need for big brother in a mostly offline audio program. =||= It looks like a shorter version of [Musescore's Privacy Policy](https://musescore.com/legal/privacy). As of recently, they're owned by the [same group](https://mu.se/). =||= Use firejail --net=none or opensnitch to deny network access. =||= the audacity to do this.... =||= The telemetry pull request and now this... They are digging their own grave.  =||= Fork. Fork. Fork. Fork. Fork. =||= ![Fork me](https://c.tenor.com/gU3whTgqYcsAAAAM/the-good-place-kristen-bell.gif) =||= > > \"The App we provide [Audacity] is not intended for individuals below the age of 13. If you are under 13 years old, please do not use the App.\"\r\n> \r\n> why is audacity rated higher than pg-13. I'm pretty sure this directly contradicts the license.\r\n> \r\n> > \"Who does Audacity share your Personal Data with?\r\n> > [...]\r\n> > 3. to our auditors, **advisors**, legal representatives **and similar agents** [...]\"\r\n> \r\n> so, anyone you call a friend\r\n\r\nEssentially, if it's restricted to people under 13, that just means that data collection cannot be opted out of. =||= When you can't use the knife, use the fork =||= Is this will become another The Great Suspender fiasco? =||= I think its official, Musegroup are intending to kill Audacity. Someone hit me up with a link to the main fork?  =||= At this point Audacity product can't be trusted even if they revert this change. =||= Keep me in the loop on a fork as well. This update to the privacy policy has lead me to lose what little trust I had left in the owners of this application caring about user privacy. =||= Fork. Just fork.\r\nDoes anyone know if there are any forks that are actively going to be maintained or the commit which this data collection was added?\r\nIf anyone is going to fork, I would expect a community managed system where leaders are elected probably.\r\n\r\nOr even better, take them to court for the GPL violation. =||= Yep, the GPL violations is downright disgusting IMO, it's in direct violation to the code that hundreds of people have put in. Seems the best result here is that a fork of audacity comes out that doesn't have all this frankly nonsense in it. That doesn't seem to exist as of yet, most of them are just backup repos of right before the purchase though   =||= Could you guys not try to sneak in stuff to rip our data FOR 5 MINUTES! =||= The age restriction now in the privacy policy is completely going against the licensing of the software, someone should get a lawyer to represent every Audacity users under 13 years old who used to be able to use it under GPL license but are suddenly prohibited by the privacy policy, and take the issue to court.\r\n\r\nGPL requires that you allow EVERYONE, including those under 13 years old, to use the software freely. =||= This completely undermines any remnants of trust I might have had for the current Audacity owner, and I'm not going to continue using this software in the current form. Here's hoping for a well maintained fork instead. =||= You don't need to represent any user. It's sufficient to grab a past contributor to the codebase. This version with this privacy policy is copyright infringement against all contributors who contributed code under the GPL. Muse (and everyone else) is only permitted to use their copyrighted work according to the GPL. =||= > If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term.\r\n\r\nCan the age clause even apply? =||= > \r\n> \r\n> Yep, the GPL violations is downright disgusting IMO, it's in direct violation to the code that hundreds of people have put in. Seems the best result here is that a fork of audacity comes out that doesn't have all this frankly nonsense in it. That doesn't seem to exist as of yet, most of them are just backup repos of right before the purchase though\r\n\r\nProblem is muse is not bound by the GPL because the last debaucle regarding the CLA. Muse basically got all the main developers to sign that CLA, and in that thread said they were just rewriting smaller contributions to avoid getting them to sign it.\r\n\r\nhttps://github.com/audacity/audacity/discussions/932\r\n\r\nAt this point a fork is the reasonable option, if muse going to be like this.\r\n\r\n =||= > > \n> \n> > \n> \n> > Yep, the GPL violations is downright disgusting IMO, it's in direct violation to the code that hundreds of people have put in. Seems the best result here is that a fork of audacity comes out that doesn't have all this frankly nonsense in it. That doesn't seem to exist as of yet, most of them are just backup repos of right before the purchase though\n> \n> \n> \n> Problem is muse is not bound by the GPL because the last debaucle regarding the CLA.\n> \n> \n> \n> https://github.com/audacity/audacity/discussions/932\n> \n> \n> \n> At this point a fork is the reasonable option, if muse going to be like this.\n> \n> \n> \n> \n\nI don't think that all code is yet under the CLA making this a GPL violation if enforced =||= > \r\n> \r\n> > > \r\n> > \r\n> > \r\n> > > \r\n> > \r\n> > \r\n> > > Yep, the GPL violations is downright disgusting IMO, it's in direct violation to the code that hundreds of people have put in. Seems the best result here is that a fork of audacity comes out that doesn't have all this frankly nonsense in it. That doesn't seem to exist as of yet, most of them are just backup repos of right before the purchase though\r\n> > \r\n> > \r\n> > Problem is muse is not bound by the GPL because the last debaucle regarding the CLA.\r\n> > #932\r\n> > At this point a fork is the reasonable option, if muse going to be like this.\r\n> \r\n> I don't think that all code is yet under the CLA making this a GPL violation if enforced\r\n\r\nI have not looked closely at the commit history, but they said in the CLA topic they were rewriting all the code from small contributions to avoid having to try and get those people sign the CLA. =||= > > Yep, the GPL violations is downright disgusting IMO, it's in direct violation to the code that hundreds of people have put in. Seems the best result here is that a fork of audacity comes out that doesn't have all this frankly nonsense in it. That doesn't seem to exist as of yet, most of them are just backup repos of right before the purchase though\r\n> \r\n> Problem is muse is not bound by the GPL because the last debaucle regarding the CLA. Muse basically got all the main developers to sign that CLA, and in that thread said they were just rewriting smaller contributions to avoid getting them to sign it.\r\n> \r\n> #932\r\n> \r\n> At this point a fork is the reasonable option, if muse going to be like this.\r\n\r\nthey can say that all they like, rewriting the other contributions does not remove the fact that this work is a derivative work of theirs. GPL remains with the codebase - its a feature, not a bug, and it's designed to prevent exactly this scenario.  =||= > > \n> \n> > \n> \n> > > > \n> \n> > > \n> \n> > > \n> \n> > > > \n> \n> > > \n> \n> > > \n> \n> > > > Yep, the GPL violations is downright disgusting IMO, it's in direct violation to the code that hundreds of people have put in. Seems the best result here is that a fork of audacity comes out that doesn't have all this frankly nonsense in it. That doesn't seem to exist as of yet, most of them are just backup repos of right before the purchase though\n> \n> > > \n> \n> > > \n> \n> > > Problem is muse is not bound by the GPL because the last debaucle regarding the CLA.\n> \n> > > #932\n> \n> > > At this point a fork is the reasonable option, if muse going to be like this.\n> \n> > \n> \n> > I don't think that all code is yet under the CLA making this a GPL violation if enforced\n> \n> \n> \n> I have not looked closely at the commit history, but they said in the CLA topic they were rewriting all the code from small contributions to avoid having to try and get those people sign the CLA.\n\nYeah but I don't think that, at this current time, is completed yet  =||= Unfortunate, as Audacity is a big name amongst hobbyist software for being some of the best in it's class. I suppose it's not the first time major projects have undergone a \"rebranding\" when the parent tries to pull some corporate crap, but it's always unfortunate whenever it's needed. =||= > \r\n> \r\n> > > Yep, the GPL violations is downright disgusting IMO, it's in direct violation to the code that hundreds of people have put in. Seems the best result here is that a fork of audacity comes out that doesn't have all this frankly nonsense in it. That doesn't seem to exist as of yet, most of them are just backup repos of right before the purchase though\r\n> > \r\n> > \r\n> > Problem is muse is not bound by the GPL because the last debaucle regarding the CLA. Muse basically got all the main developers to sign that CLA, and in that thread said they were just rewriting smaller contributions to avoid getting them to sign it.\r\n> > #932\r\n> > At this point a fork is the reasonable option, if muse going to be like this.\r\n> \r\n> they can say that all they like, rewriting the other contributions does not remove the fact that this work is a derivative work of theirs. GPL remains with the codebase - its a feature, not a bug, and it's designed to prevent exactly this scenario.\r\n\r\n> \r\n> \r\n> > > Yep, the GPL violations is downright disgusting IMO, it's in direct violation to the code that hundreds of people have put in. Seems the best result here is that a fork of audacity comes out that doesn't have all this frankly nonsense in it. That doesn't seem to exist as of yet, most of them are just backup repos of right before the purchase though\r\n> > \r\n> > \r\n> > Problem is muse is not bound by the GPL because the last debaucle regarding the CLA. Muse basically got all the main developers to sign that CLA, and in that thread said they were just rewriting smaller contributions to avoid getting them to sign it.\r\n> > #932\r\n> > At this point a fork is the reasonable option, if muse going to be like this.\r\n> \r\n> they can say that all they like, rewriting the other contributions does not remove the fact that this work is a derivative work of theirs. GPL remains with the codebase - its a feature, not a bug, and it's designed to prevent exactly this scenario.\r\n\r\nDepends how they go about rewriting those portions. It's certainly possible to rewrite features to get a different license. You see this often in BSD world. Whether or not they crossed all their t's and dotted all their i's when doing that would be question for a court, and sadly probably only those smaller contributors would have standing to sue.  =||= > \r\n> \r\n> Unfortunate, as Audacity is a big name amongst hobbyist software for being some of the best in it's class. I suppose it's not the first time major projects have undergone a \"rebranding\" when the parent tries to pull some corporate crap, but it's always unfortunate whenever it's needed.\r\n\r\nYea for example LibreOffice still a less known name than open office. A fork can't really do anything about trade marks. \r\n =||= I've started to dig through the codebase, and as far as I can tell most if not all things could've been disabled when modifying the cmake files via the following flags:\r\n\r\n- `HAS_CRASHREPORTS`\r\n- `HAS_UPDATE_CHECK`\r\n- `HAS_NETWORKING`\r\n- `HAS_SENTRY_REPORTING`\r\n\r\nI also started a fork at https://github.com/cookiengineer/audacity, where I would ideally see this in the form of a foundation where contributors can vote on what happens to it or not. Personally, I'd like to see this project GPL2 compliant (which means no telemetry, no tracking and certainly no PG-13 rating because of it).\r\n\r\nIn order to be sure that my modifications have no potential side effects or code ignoring the build flags, I've removed all networking related code in my fork, including the Help Menu integrations for Crash Reporting and the Update Manager that is running in the background periodically.\r\n\r\nBut I also wanted to make a fair statement here: The cmake flags hint that Muse Group's intentions were clearly trying to make it opt-in from a maintainer's perspective (Debian/Arch/whatever distro's policies), so I would not use this against them.\r\n\r\nHowever, the license is chosen unwisely in regards to GPL2 compliance (maybe a copy/paste mistake?), and therefore should be checked again with their legal team - as it was the cause of this issue and the rising internet rage over at HackerNews and Reddit.\r\n\r\nI'd also prefer that even when the package maintainer has decided to include tracking options that there would be a dialog in the beginning, asking the user whether or not they want to opt-in to those separately, each able to be deselected or selected.\r\n\r\nHaving said that, and having seen the actual codebase without making irrelevant claims, I think the intent of the Muse Group was not malicious here; and it seems more to be a simple copy/paste mistake of another license they were using for other software they owned/published before.\r\n\r\nDisclaimer: Not associated in any form with Muse Group, not a lawyer, just a concerned European citizen.\r\n =||= I want to shout out to all the core developers who sold this beautiful piece of software, we couldn't have come here without you \u2764\ufe0f =||= Yeah let's not attack the open source developers who worked on this project for years so that this even exists in the first place and finally sold it so they could make a good chunk of money off it. \n\nDoes it suck the situation this software is in? Sure, but let's not attack the original developers for that. =||= Selling a FOSS project to a sketchy company is not nice, but this is why you donate to developers. They have to pay the bills, too. =||= What a disappointment for such a great software. The community should fork and leave this corporate sketchiness behind. =||= This spits in the face of the free software spirit. \r\nRIP Audacity. =||= This change is in violation of the license agreement under which contributions to this codebase have been made. \r\n\r\nBy restricting anyone under the age of 13 from using the software, you have violated GPLv2 under which the software is licensed at least since 2010.\r\n\r\nYou do not have the authority of ownership to modify the license under which others' GPLv2 contributions were made without their explicit permission.\r\n\r\nYou must remove any restrictions that would legally prevent anyone from using this software, or you must change your license and immediately remove any and all contributions by developers that have not explicitly agreed to license their contributions under your new license. =||= > As far as I'm concerned any data collection is unacceptable unless what is collected is exactly stated and opt-out is provided\r\n\r\nI'd prefer it if it was Opt-In. =||= This is the last straw for me. First spyware, then a CLA, and then this. It's fork time baby. =||= @bredmor \r\n>You do not have the authority of ownership to modify the license under which others' GPLv2 contributions were made without their explicit permission.\r\n\r\n[This FAQ](https://github.com/audacity/audacity/discussions/932#discussion-3381244) says:\r\n>People who have contributed considerable amounts of code have already been asked to sign the CLA, and the vast majority have now done so. Over 90% of all written code is already covered by the CLA, and we are now asking the few remaining people to sign as well as all new contributors.\r\n\r\nThe first sentence in [that CLA](https://www.audacityteam.org/cla/) is:\r\n\r\n>You grant MUSECY SM LTD, an affiliate of MuseScore and Ultimate Guitar, (\u201cCompany\u201d) the ability to use the Contributions in any way. =||= 90% is not 100% =||= @duplexsystem \r\nThe next sentence in that FAQ is:\r\n>It is not necessary for every single person who ever contributed to sign the CLA; only people who made a non-trivial contribution that is still present in the current source code have to sign, as well as all new contributors.\r\n\r\nI'm not sure how close they are to 100% now, but all of this wouldn't make any sense if they didn't plan on removing or rewriting everything they can't cover using the CLA. I don't like it either, but it looks like it isn't far fetched to think that they are or at least will in the near future be able to make this change regardless of the current license. =||= They aren't at 100% yet which means this is still violating the GPL =||= Oh they appear to be hiding comments they don't agree with =||= I'm sure our Muse overloads would never do such a thing. =||= @duplexsystem \r\n\r\n>They aren't at 100% yet\r\n\r\nI'd love to see an official source on that if there is one. The point of my response to @bredmor was to say that at this point we don't really know if they can do it or not. At the very least it casts some doubt on the argument that they can't implement the new privacy policy because of the GPL =||= Even if they did go through and rewrite everything it would still be considered a derivative work of the prior code (in most cases) so it would still have the same license restrictions =||= I dropped Windows because crap like this. As far as I'm concerned the Audacity team can fuck themselves with barbwire wrapped telephone poles. =||= I am guessing a large proportion of Audacity users are under the age of 13, my daughter included. Young people learn a lot from free software. No locking young people out. =||= Just asked the Fedora legal team to review the latest changes in license and ToS: https://lists.fedoraproject.org/archives/list/legal@lists.fedoraproject.org/thread/V2VSR6W3SZ3UE6UAS3TH2ZDRHTGXFCU6/\r\n\r\nThe new ToS is absolutely unacceptable for me. =||= ![Screenshot from 2021-07-04 15-06-53](https://user-images.githubusercontent.com/8861988/124386216-ad64a400-dcd9-11eb-952e-46b3c3b03794.png)\r\n\r\nRemove that \"Free\" (as in freedom) word that you don't deserve anymore from the website =||= pt-br\r\npoderiam informar qual foi a \u00faltima vers\u00e3o sem essa desgra\u00e7a?\r\n\r\nen\r\nwhat is the last safe version?\r\n =||= Probably stating the obvious here, but there are lawyers that specialize in opensource & free software. =||= @elycastellano, 3.0.2, that's for sure because situations such as the attempt to introduce \"telemetry\" were later than when this release was made. But it's best to install 2.4.2 just to be safe. =||= Considering how schools use this software, including those who are kids, this is pretty unacceptable. Sure, you could fork it, and remove such tracking code, but come on. A normal end user shouldn't have to do that. =||= > \r\n> \r\n> @duplexsystem\r\n> The next sentence in that FAQ is:\r\n> \r\n> > It is not necessary for every single person who ever contributed to sign the CLA; only people who made a non-trivial contribution that is still present in the current source code have to sign, as well as all new contributors.\r\n> \r\n> I'm not sure how close they are to 100% now, but all of this wouldn't make any sense if they didn't plan on removing or rewriting everything they can't cover using the CLA. I don't like it either, but it looks like it isn't far fetched to think that they are or at least will in the near future be able to make this change regardless of the current license.\r\n\r\nThey are legally wrong, very wrong and any that refused to sign that has their code in there would be able to sue them for copyright infringement over that if they did do anything beyond the GPL with the code. =||= @pizzadude said:\r\n> Use firejail --net=none or opensnitch to deny network access.\r\n\r\nThere is a privilege escalation vulnerability which is fixed in v0.9.64.4 by disabling overlayfs.\r\nWith previous versions you can disable overlayfs in /etc/firejail/firejail.config:\r\n\r\n    $ grep overlayfs /etc/firejail/firejail.config\r\n    # Enable or disable overlayfs features, default enabled.\r\n    overlayfs no\r\n =||= > \r\n> \r\n> Considering how schools use this software, including those who are kids, this is pretty unacceptable. Sure, you could fork it, and remove such tracking code, but come on. A normal end user shouldn't have to do that.\r\n\r\nWho said a normal end user will do that? It is possible opensource developer to setup a full fork, builds and all under a new name. =||= > \r\n> \r\n> @elycastellano, 3.0.2, that's for sure because situations such as the attempt to introduce \"telemetry\" were later than when this release was made. But it's best to install 2.4.2 just to be safe.\r\n\r\nI already have a forked repo on github from the first pull request we had that got denied over this stuff. I'm not the only one who hit the fork button then. So we already have a copy of the code from before anything problematic happened. =||= Taking notes. I'll just stay with 2.4.2 myself: that's the version I have installed. =||= I have just one question: Is the data collected by this privacy policy worth the missed opportunity of children to use Audacity in their free time and in schools to get their first band up and running, record a song, tinker with the recordings and put a smile on their parents', grandparents' and friends' faces? =||= Between this, and telemetry, and \r\n\r\n> 4.4   to a potential buyer (and its agents and advisers) in connection with any proposed purchase, merger or acquisition of any part of our business, provided that we inform the buyer it must use your Personal Data only for the purposes disclosed in this Notice;\r\n\r\nis audacity planning on being acquired? Does that conform to the restrictions of GPL-v2? \r\n\r\n... I guess the copyright holder could always relicence the work, but does this mean a folk (a la ublock origin) is in order? =||= UK teacher here\r\n\r\nThe 13+ age requirement will mean that your software is removed from all schools in the UK when they decide to upgrade from audacity 2.x to audacity 3.x.\r\n\r\nIs this the outcome that you desire? Loss of visibility to getting on for 10 million people?\r\n\r\nPlease consider a telemetry free education version for download to .edu/.ac.uk &c domains. =||= I'd personally like a really clear understanding of this line from their own [Privacy Notice](https://www.audacityteam.org/about/desktop-privacy-notice/):  \r\n\r\n> \"All your personal data is stored on our servers\"\r\n\r\nWhat \"personal data\" of mine are you storing on servers in EEA and Russia? \r\n\r\nFor what purpose are you transmitting my personal data and storing it on foreign soil? \r\n\r\n =||= This privacy notice can eat my ass. =||= What a disaster! Why do they need my personal data to use free software (or something that's supposed to be free software)?\r\n\r\nI'm waiting for a fork of Audacity. =||= Anything telemetry related has been merged into the project or not? =||= Coming here to add my thoughts about this \"Nobody under 13 can use this program\" nonsense:\r\n\r\nI started using the internet at 7. The ability to use free editors, whether that be for audio, video, or code, and free services like forums or GitHub, is what enabled me to be so interested in technology and programming. Audacity is by far the biggest open-source audio editor, and I've been using it for _years_.\r\n\r\nYou're trying to kill any prospect of young people, especially ones in families that don't have the time or knowledge to understand or guide their technology use, getting to understand and explore audio editing. I've turned away from \"13+ only\" dialogs, and I'm certain many great young minds will too.\r\n\r\nDo better. =||= > Coming here to add my thoughts about this \"Nobody under 13 can use this program\" nonsense:\r\n\r\nThis is likely included, because of GDPR guidelines, and because they can't litigate against anyone 13 and under for any suspected copyright violations found while using the program. \r\n\r\nThere's been some discussion on Reddit about them consuming MuseScore, after stealing a number of community tabs, calling them their own. [At least one author](https://old.reddit.com/r/linux/comments/od3h8b/audacity_may_collect_data_necessary_for_law/h3zca9f/) intentionally put flaws in their tabs as 'watermarks', and those ended up in the final copies they claimed wasn't from the community. \r\n\r\nThere's a lot of shady business going on here, with the various projects being swallowed up and put under the Muse Group umbrella, from the copyright assignment enforcement through to the changes in Audacity and the forked version of the wxWidgets library needed to build it. \r\n\r\nIt's time to start putting Audacity and similar apps under an AppArmor profile that restricts what they can do; read, write and ZERO network access permitted. This should be shipped with the package by default on all Linux distributions, and static Windows Firewall rules applied at install time on those platforms.  =||= I don't know what muse group thinks there gonna get out of this? They're gonna change this or people will just move to a fork. =||= > They're gonna change this or people will just move to a fork.\r\n\r\nUnlikely they're going to change this, as they've already committed significant legal, development and other resources to this approach. There's probably revenue streams tied back to feeding the data to law enforcement as well, that they'll lose out on. \r\n\r\nA fork, while undesirable in almost every case of an OSS project, is sometimes necessary to ensure the spirit and law of the licenses is respected. The problem with a fork in _this_ specific case, is that the main developers and copyright holders already signed over their rights to the Muse Group through a [CLA](https://www.audacityteam.org/cla/), and will likely not contribute to a forked version as well. \r\n\r\nThis means any fork would have to find the same level of development skills/resources, as well as _interest_ in continuing a fork, in order for that fork to survive and replace the one Muse is proposing. \r\n\r\nNote: There are already [1.2k forks of the main audacity repository](https://github.com/audacity/audacity/network/members) already, many probably resulting from this news, so the codebase can be preserved before it moves under a Private repository.  =||= The problem with every company buying out FOSS software is that they will add some data collection somewhere because law \"requires\" to do so, and in the least case they could just make it opt-in. =||= I remember when Audacity was still an independent project. Where did we go wrong?\r\nIsn't capitalism wonderful? =||= It's just companies trying to take over open-source, nothing special... *cough* Microsoft *cough* =||= Genuine question: How and why were they taken over, and why wasn't the community consulted about the decision (I assume)? =||= Money I guess? =||= Given that I'm sure that quite possibly 100s of people have contributed to Audacity's codebase, surely that means they would need the permission of every single contributor in order to sign the rights away like this? This can't be legal. =||= > Given that I'm sure that quite possibly 100s of people have contributed to Audacity's codebase, surely that means they would need the permission of every single contributor in order to sign the rights away like this? This can't be legal.\n\nThey claim that 90% of the code has been signed off to them and they own it using a CLA and they are working to remove the rest of the copyrighted code  =||= > They claim that 90% of the code has been signed off to them and they own it using a CLA and they are working to remove the rest of the copyrighted code\r\n\r\nSource, @caughtquick? =||= > > They claim that 90% of the code has been signed off to them and they own it using a CLA and they are working to remove the rest of the copyrighted code\r\n> \r\n> Source?\r\n\r\nhttps://www.audacityteam.org/cla/ =||= Anybody got a copy of that page before they were bought out? =||= the CLA was created when muse bought them out =||= It seems the muse doesn't seems to be committed to the original goal of audacity which is to be a FREE and OPEN SOURCE audio editor. They want to take all the advantages FOSS provides and now close source the product and commercialize it IMO  =||= > It seems the muse doesn't seems to be committed to the original goal of audacity which is to be a FREE and OPEN SOURCE audio editor. They want to take all the advantages FOSS provides and now close source the product and commercialize it IMO\r\n\r\nWhich is sadly what happens in most cases... =||= For anyone that's interested I've made an Audacity fork right now, and as I cannot see any telemetry yet (nothing in the settings to be opt'd-out) I'll be watching their commits to see if what they add is safe to add on my fork (which is called Audacitium, inspired from VSCodium)\r\n\r\nhttps://github.com/SartoxOnlyGNU/audacitium =||= @AnErrupTion can I donate to the cause =||= What do you mean? =||= @AnErrupTion  You are aware that my fork already removed all code that contained telemetry and networking? https://github.com/cookiengineer/audacity =||= The game plan is to analyze every single audio/video clip and check it against known database of Copyrighted material. If you get a match, the police get your data. /s\r\n\r\n[ mention me if you want my reply/attention; this issue is hard to keep track of :) ] =||= > @AnErrupTion You are aware that my fork already removed all code that contained telemetry and networking? https://github.com/cookiengineer/audacity\r\n\r\nAh I didn't know, however I think you're a bit too aggressive when removing update checking (removing auto update is fine, but update checking.. really?) =||= > The game plan is to analyze every single audio/video clip and check it against known database of Copyrighted material. If you get a match, the police get your data. /s\r\n> \r\n> [ mention me if you want my reply/attention; this issue is hard to keep track of :) ]\r\n\r\nWell that's tricky and... dumb; Audacity is mainly used to edit audio or even create; why in hell would they even do that? =||= I'm guessing that this is indeed the end.\r\n\r\nRIP =||= > I'm guessing that this is indeed the end.\r\n> \r\n> RIP\r\n\r\nThere are forks and so the community, it will very likely be revived (cookiengineer has removed some stuff in his fork, I have made a fork too of Audacity) =||= > > @AnErrupTion You are aware that my fork already removed all code that contained telemetry and networking? https://github.com/cookiengineer/audacity\r\n> \r\n> Ah I didn't know, however I think you're a bit too aggressive when removing update checking (removing auto update is fine, but update checking.. really?)\r\n\r\nFor most linux users update checking is unnecessary network access. A good compromise would keeping it enable on windows but disabling it on Linux IMO, though I don't know how challenging that would be with the codebase =||= > > I'm guessing that this is indeed the end.\r\n> > RIP\r\n> \r\n> There are forks and so the community, it will very likely be revived (cookiengineer has removed some stuff in his fork, I have made a fork too of Audacity)\r\n\r\nI'll definitely check those out.\r\n\r\nShame this had to happen at all though. =||= I mean yeah with package managers, I myself do use Linux but even then a toggle in the settings would be possible and, as you said, disabling it on Linux but enabling it on Windows and Mac. =||= > > > I'm guessing that this is indeed the end.\r\n> > > RIP\r\n> > \r\n> > \r\n> > There are forks and so the community, it will very likely be revived (cookiengineer has removed some stuff in his fork, I have made a fork too of Audacity)\r\n> \r\n> I'll definitely check those out.\r\n> \r\n> Shame this had to happen at all though.\r\n\r\nYeah but it's the sad truth after all... reality is reality, can't change that :/ =||= > > > > I'm guessing that this is indeed the end.\r\n> > > > RIP\r\n> > > \r\n> > > \r\n> > > There are forks and so the community, it will very likely be revived (cookiengineer has removed some stuff in his fork, I have made a fork too of Audacity)\r\n> > \r\n> > \r\n> > I'll definitely check those out.\r\n> > Shame this had to happen at all though.\r\n> \r\n> Yeah but it's the sad truth after all... reality is reality, can't change that :/\r\n\r\nAny suggestion on how to keep them from collecting data for now though? Sandboxing? Anything else? =||= If you want to keep using the original Audacity then Sandboxie for Windows (although I don't know if you can disable networking for each sandboxed app) or Firejail on Linux. =||= > If you want to keep using the original Audacity then Sandboxie for Windows (although I don't know if you can disable networking for each sandboxed app) or Firejail on Linux.\r\n\r\nWell, I'm on Gentoo (Linux) so I guess firejail although I had it had some security vulnerabilities that were quite \ud83d\ude10 =||= Don't worry I know Gentoo, I'm on Arch \ud83d\ude02  =||= I do not tolerate Muse Group collecting our data, and I think they are trying to kill Audacity project, like most company did (Such as Red Hat)\r\n\r\nI recommend using alternatives of Audacity such as fork software =||= ![Audacity-logo_75px_trans_forum](https://user-images.githubusercontent.com/49339966/124398064-f9ccd580-dd13-11eb-8d6d-440514781157.png)\r\nHow does that \"new\" logo look like? (Kinda off-topic, sorry) =||= > ![Audacity-logo_75px_trans_forum](https://user-images.githubusercontent.com/49339966/124398064-f9ccd580-dd13-11eb-8d6d-440514781157.png)\r\n> How does that \"new\" logo look like? (Kinda off-topic, sorry)\r\n\r\nLooks neat, I like it. =||= > > ![Audacity-logo_75px_trans_forum](https://user-images.githubusercontent.com/49339966/124398064-f9ccd580-dd13-11eb-8d6d-440514781157.png)\r\n> > How does that \"new\" logo look like? (Kinda off-topic, sorry)\r\n> \r\n> Looks neat, I like it.\r\n\r\nThanks! =||= > > > ![Audacity-logo_75px_trans_forum](https://user-images.githubusercontent.com/49339966/124398064-f9ccd580-dd13-11eb-8d6d-440514781157.png)\r\n> > > How does that \"new\" logo look like? (Kinda off-topic, sorry)\r\n> > \r\n> > \r\n> > Looks neat, I like it.\r\n> \r\n> Thanks!\r\n\r\nI quite like it too but you may want to make the headphone part more different from audacity due to copyright. =||= Like simplifying it? =||= That name is going to be hard to pronounce, and doesn't really make sense. I much prefer \"Audacium\" instead of the additional \"...actium\" at the end. \r\n\r\nBut the presence of a fork, among a sea of 1,200 other Audacity forks, doesn't help the cause. We need commitment behind the vision, maintenance and development of the codebase, not just ownership. \r\n\r\nSo many here are focusing on logos and naming conventions, when we should be focusing on building a community of passionate developers to continue supporting the ongoing development and maintenance of the project. \r\n\r\nThe names and logos can come later.  =||= Someone should just fork Audacity and we can all move on; it's clear Audacity is the subject of a hostile takeover =||= > ![Audacity-logo_75px_trans_forum](https://user-images.githubusercontent.com/49339966/124398064-f9ccd580-dd13-11eb-8d6d-440514781157.png)\r\n> How does that \"new\" logo look like? (Kinda off-topic, sorry)\r\n\r\nNice, but I recommend not to making the name too similar and make the new logo since this can cause trademark issue in the future =||= > That name is going to be hard to pronounce, and doesn't really make sense. I much prefer \"Audacium\" instead of the additional \"...actium\" at the end.\r\n> \r\n> But the presence of a fork, among a sea of 1,200 other Audacity forks, doesn't help the cause. We need commitment behind the vision, maintenance and development of the codebase, not just ownership.\r\n> \r\n> So many here are focusing on logos and naming conventions, when we should be focusing on building a community of passionate developers to continue supporting the ongoing development and maintenance of the project.\r\n> \r\n> The names and logos can come later.\r\n\r\nI'm making all that stuff to prevent copyright issues, just as a base. But yes I do agree with you. =||= > Someone should just fork Audacity and we can all move on; it's clear Audacity is the subject of a hostile takeover\r\n\r\nYeah, but the community should band behind a single fork or we get a situation like CentOS is in right now with ~5 different continuations of the project, and yeah I agree with that @desrod said.\r\n =||= > Someone should just fork Audacity and we can all move on; it's clear Audacity is the subject of a hostile takeover\r\n\r\nJust like freenode but just a bit slower. =||= > Someone should just fork Audacity and we can all move on\r\n\r\nWhat about [cookiengineer/audacity](https://github.com/cookiengineer/audacity)? Is it reputable enough for people to get behind? =||= Let's just fork it and call it Audatown or something =||= > > Someone should just fork Audacity and we can all move on\r\n> \r\n> What about [cookiengineer/audacity](https://github.com/cookiengineer/audacity)? Is it reputable enough for people to get behind?\r\n\r\nI feel like its still too early to get behind a fork and we have to wait to see how well they are at merging upstream patches, listening to the community, and removing some of the nonsense that audacity is adding. =||= > > > Someone should just fork Audacity and we can all move on\r\n> > \r\n> > \r\n> > What about [cookiengineer/audacity](https://github.com/cookiengineer/audacity)? Is it reputable enough for people to get behind?\r\n> \r\n> I feel like its still too early to get behind a fork and we have to wait to see how well they are at merging upstream patches, listening to the community, and removing some of the nonsense that audacity is adding.\r\n\r\nI think it's too late, Muse violating the GPL is enough for people to consider a fork. =||= Oh yeah considering a fork I agree with, but I feel its too early to decide on what the eventual actual continuation will be with so many different forks popping up. =||= In all seriousness, good luck to whoever ends up forking this, this codebase's technical debt is absurdly high. =||= Well currently me and cookiengineer have manifested their forks, however it'll be very hard to maintain with only 1 person. =||= > I'm making all that stuff to prevent copyright issues, just as a base.\r\n\r\n\"Audacitium\" would fall under \"similar naming\", if the name was *trademarked* by Muse Group, but it wouldn't fall under that clause if it was merely *copyrighted* under that name. \r\n\r\nThe difference is in the legal protection that trademarks offer. Trademark, in this case, would refer to the similarity in the same industry (audio enthusiasts, bands, musicians), and not to the logo itself (which itself, can be trademarked separately from its name). \r\n\r\nIf Muse has registered a trademark for the name and logo \"Audacity\", then all bets on using \"Audacitium\" are off. Using your trademark does not protect you from someone else in the same industry using your name or logo, but _registering_ your trademark does. \r\n\r\nHere's where things get tricky: If the original creators of the Audacity name or logo, did not sign the CLA, and only the developers did, and Muse tries to use their original creation, such as the project's logo, and use it as their own, they can be sued over the misuse of your copyright, but only if you have a copyright registration legally filed. \r\n\r\nMany to most OSS projects don't go the extra step of filing for copyright protection with the US Copyright Office, but some do. \r\n\r\nBefore you go starting with new logos and names, that foundation should be established, and if Muse hasn't filed them, the project's developers should, to prevent Muse from using their name not in good faith with the industry that supported the project up to this point. \r\n\r\nBut circling back, the code, developers and community has to be established first, and at that point it's wise to choose a name, because you'll have a new direction, new charter and new leadership for the project.  =||= I've updated my fork for the \"Audacium\" name. How does that sound to everyone? =||= > > I'm making all that stuff to prevent copyright issues, just as a base.\r\n> \r\n> \"Audacitium\" would fall under \"similar naming\", if the name was _trademarked_ by Muse Group, but it wouldn't fall under that clause if it was merely _copyrighted_ under that name.\r\n> \r\n> The difference is in the legal protection that trademarks offer. Trademark, in this case, would refer to the similarity in the same industry (audio enthusiasts, bands, musicians), and not to the logo itself (which itself, can be trademarked separately from its name).\r\n> \r\n> If Muse has registered a trademark for the name and logo \"Audacity\", then all bets on using \"Audacitium\" are off. Using your trademark does not protect you from someone else in the same industry using your name or logo, but _registering_ your trademark does.\r\n> \r\n> Here's where things get tricky: If the original creators of the Audacity name or logo, did not sign the CLA, and only the developers did, and Muse tries to use their original creation, such as the project's logo, and use it as their own, they can be sued over the misuse of your copyright, but only if you have a copyright registration legally filed.\r\n> \r\n> Many to most OSS projects don't go the extra step of filing for copyright protection with the US Copyright Office, but some do.\r\n> \r\n> Before you go starting with new logos and names, that foundation should be established, and if Muse hasn't filed them, the project's developers should, to prevent Muse from using their name not in good faith with the industry that supported the project up to this point.\r\n> \r\n> But circling back, the code, developers and community has to be established first, and at that point it's wise to choose a name, because you'll have a new direction, new charter and new leadership for the project.\r\n\r\nYeah, I fully agree with you, now we'll have to see. =||= > I've updated my fork for the \"Audacium\" name. How does that sound to everyone?\n\nNo, still similar with Audacity name =||= It's not exactly the same though, so it can't fall under copyright, or can it? =||= > I feel like its still too early to get behind a fork and we have to wait to see how well they are at merging upstream patches, listening to the community, and removing some of the nonsense that audacity is adding.\r\n\r\nI disagree. They've already committed to (among other things) \r\n* ensuring their existing developers sign the CLA to hand full license over to the Muse Group, \r\n*  they're actively working on removing any code that was not in line with that CLA (from Audacity contributors who refused to sign), \r\n*  they've established relationships with law enforcement to hand them over data when requested (possibly as a backend revenue stream), \r\n*  they've already stated that *\"All your personal data...\"* is stored on their servers, servers in EEA and Russia, \r\n* added restrictions to the project's use (\"Nobody under the age of 13 may use the software...\"), \r\n* and more. \r\n\r\nIt's clear they're committed to this path, and that a fork is not only imminent, but necessary.  =||= I'm glad the people trying these hostile takeovers are so dumb otherwise they might have actually gotten away with it! =||= On the subject of trademark, this is what the USPTO lists for Audacity (I would link the entry, but the Trademark Electronic Search System is a pain to work with):\r\n\r\n![image](https://user-images.githubusercontent.com/1500092/124398655-1cd79500-dcd4-11eb-9d88-1c019cf45ad1.png)\r\n\r\n\r\n<br class=\"Apple-interchange-newline\">\r\n\r\nWord Mark | AUDACITY\r\n-- | --\r\nGoods and Services | IC 009. US 021 023 026 036 038. G & S: Downloadable computer software for creating, recording, editing, analyzing, and mixing digital audio and music. FIRST USE: 20010209. FIRST USE IN COMMERCE: 20010209\r\nMark Drawing Code | (3) DESIGN PLUS WORDS, LETTERS, AND/OR NUMBERS\r\nDesign Search Code | 01.15.24 - Sound waves, including designs depicting sound16.01.07 - Head phones ; Headphones ; Headsets ; Microphones\r\nSerial Number | 90591173\r\nFiling Date | March 19, 2021\r\nCurrent Basis | 1A\r\nOriginal Filing Basis | 1A\r\nOwner | (APPLICANT) MuseCY SM Ltd. CORPORATION CYPRUS Spyrou Kyprianou, 84 4004 Limassol, Cyprus CYPRUS\r\nAttorney of Record | Tony Berman\r\nPrior Registrations | 2919070\r\nDescription of Mark | The color(s) blue, red, orange, and yellow is/are claimed as a feature of the mark. The mark consists of the word Audacity in rounded block letters in blue gradient to the right of a pair of headphones with a soundwave as displayed in a digital audio workstation (DAW) flowing between the ear cups of the headphones in which the headphones are in blue, and the soundwave is in red, orange, and yellow.\r\nType of Mark | TRADEMARK\r\nRegister | PRINCIPAL\r\nLive/Dead Indicator | LIVE\r\n\r\n =||= This is like freenode all over again... =||= > It's not exactly the same though, so it can't fall under copyright, or can it?\n\nNo we should make the name that is not similar with Audacity trademark to avoid trademark dispute issue in the future. Better safe than sorry. =||= \r\n> > I feel like its still too early to get behind a fork and we have to wait to see how well they are at merging upstream patches, listening to the community, and removing some of the nonsense that audacity is adding.\r\n> \r\n> I disagree. They've already committed to ensuring their existing developers sign the CLA to hand full license over to the Muse Group, they're actively working on removing any code that was not in line with that CLA (from Audacity contributors who refused to sign), they've established relationships with law enforcement to hand them over data when requested (possibly as a backend revenue stream), they've already stated that _\"All your personal data...\"_ is stored on their servers, servers in EEA and Russia, added restrictions to the project's use (\"Nobody under the age of 13 may use the software...\"), and more.\r\n> \r\n> It's clear they're committed to this path, and that a fork is not only imminent, but necessary.\r\n\r\nYeah a fork is definitely necessary, I don't disagree with that at all, I'm just saying that its too early to decide on what will be the eventual continuation with so may different people forking the project =||= > I've updated my fork for the \"Audacium\" name. How does that sound to everyone?\r\n\r\nIt's easier to say, I'll give it that.\r\n\r\nWhile we're at this point in time, I'd ask that maybe we can try to keep it to one fork instead of two? \r\nI know it's never that easy to ask, but I'd hate for there to be two competing forks that half of the userbase each has flocked to. =||= So basically you'd have to remake the entire headphone logo? Damn... I'm not a very skilled designer, if anyone here is a better one than me then they'd be better off making a new logo.. =||= I wish GitHub could sort a fork list by stars and activity... =||= > > I've updated my fork for the \"Audacium\" name. How does that sound to everyone?\r\n> \r\n> It's easier to say, I'll give it that.\r\n> \r\n> While we're at this point in time, I'd ask that maybe we can try to keep it to one fork instead of two?\r\n> I know it's never that easy to ask, but I'd hate for there to be two competing forks that half of the userbase each has flocked to.\r\n\r\nBasically CentOS forks =||= > > I've updated my fork for the \"Audacium\" name. How does that sound to everyone?\n> \n> \n> \n> It's easier to say, I'll give it that.\n> \n> \n> \n> While we're at this point in time, I'd ask that maybe we can try to keep it to one fork instead of two? \n> \n> I know it's never that easy to ask, but I'd hate for there to be two competing forks that half of the userbase each has flocked to.\n\nSee CentOS forks as an example of this  =||= To anyone who missed the link of my fork, here it is:\r\nhttps://github.com/SartoxOnlyGNU/audacium\r\n\r\nI also have to point out @cookiengineer's because why not:\r\nhttps://github.com/cookiengineer/audacity =||= > See CentOS forks as an example of this\r\n\r\nSee! We already have a good reason not to! \ud83d\ude04 \r\n\r\n =||= Clicking the \"fork\" button isn't really the same as making a fork. You need to actually maintain the thing, give support and.. have a userbase. Write code and people will come =||= IMHO (20+ years of experience with maintainership/contributions to large OSS projects), forks are usually a last resort, as they fracture communities and force them to pick a side. Let's not make them have to choose one of 600+ sides please. \r\n\r\nForks typically take one of two paths: \r\n1. Fork the code to ensure the project lives on, continues in the spirit and law of the license in line with its community, or\r\n2. Fork the code to preserve that codebase, in case the mainline code/project goes private, shut down, stops releasing code (\"The Streisand Effect\")\r\n\r\nLet's choose wisely, and not thin out the community any further please.  =||= > Clicking the \"fork\" button isn't really the same as making a fork. You need to actually maintain the thing, give support and.. have a userbase. Write code and people will come\r\n\r\nWho said I wasn't going to maintain the fork? =||= > > See CentOS forks as an example of this\n> \n> \n> \n> See! We already have a good reason not to! \ud83d\ude04 \n> \n> \n> \n> \nNot to what? Fork the project? This project is already at the point where it needs to be forked, I'm just hoping that we don't have 5+ different forks with the same purpose \n\n =||= > > > See CentOS forks as an example of this\r\n> > \r\n> > \r\n> > See! We already have a good reason not to! smile\r\n> \r\n> Not to what? Fork the project? This project is already at the point where it needs to be forked, I'm just hoping that we don't have 5+ different forks with the same purpose\r\n\r\nI completely agree. =||= > IMHO (20+ years of experience with maintainership/contributions to large OSS projects), forks are usually a last resort, as they fracture communities and force them to pick a side. Let's not make them have to choose one of 600+ sides please.\r\n> \r\n> Forks typically take one of two paths:\r\n> \r\n> 1. Fork the code to ensure the project lives on, continues in the spirit and law of the license in line with its community, and\r\n> 2. Fork the code to preserve that codebase, in case the mainline code/project goes private, shut down, stops releasing code (\"The Streisand Effect\")\r\n> \r\n> Let's choose wisely, and not thin out the community any further please.\r\n\r\nThere are tons of forks that are already preserving the codebase (we'd have to see which one is the most up to date, though..), however at this state it's better to fork to maintain the project like a standalone, independant one from Audacity altogether. =||= > > Clicking the \"fork\" button isn't really the same as making a fork. You need to actually maintain the thing, give support and.. have a userbase. Write code and people will come\n> \n> \n> \n> Who said I wasn't going to maintain the fork?\n\nNobody, but it's too early to band behind a fork that hasn't even changed anything yet IMO  =||= > IMHO (20+ years of experience with maintainership/contributions to large OSS projects), forks are usually a last resort, as they fracture communities and force them to pick a side. Let's not make them have to choose one of 600+ sides please. \n> \n> Forks typically take one of two paths: \n> 1. Fork the code to ensure the project lives on, continues in the spirit and law of the license in line with its community, and\n> 2. Fork the code to preserve that codebase, in case the mainline code/project goes private, shut down, stops releasing code (\"The Streisand Effect\")\n> \n> Let's choose wisely, and not thin out the community any further please. \n\nI agree with this, we should consider about the fork project carefully, just like how Rocky Linux did =||= > > > See CentOS forks as an example of this\r\n> > \r\n> > \r\n> > See! We already have a good reason not to! \ud83d\ude04\r\n> \r\n> Not to what? Fork the project? This project is already at the point where it needs to be forked, I'm just hoping that we don't have 5+ different forks with the same purpose\r\n\r\nNo - Not to have multiple competing forks. Like you said in the second half of your sentence \ud83d\udc4d  =||= > > Clicking the \"fork\" button isn't really the same as making a fork. You need to actually maintain the thing, give support and.. have a userbase. Write code and people will come\r\n> \r\n> Who said I wasn't going to maintain the fork?\r\n\r\nI'm saying that one fork will prevail, and it's gonna be the one that ends up getting activity - not necessarily one that has been linked here. =||= > > > Clicking the \"fork\" button isn't really the same as making a fork. You need to actually maintain the thing, give support and.. have a userbase. Write code and people will come\r\n> > \r\n> > \r\n> > Who said I wasn't going to maintain the fork?\r\n> \r\n> I'm saying that one fork will prevail, and it's gonna be the one that ends up getting activity - not necessarily one that has been linked here.\r\n\r\nAs it has been said before here, we'll have to choose on who maintains the project now. I'm not going to say absolutely me, because others will have to decide. =||= > > > Clicking the \"fork\" button isn't really the same as making a fork. You need to actually maintain the thing, give support and.. have a userbase. Write code and people will come\n> \n> > \n> \n> > Who said I wasn't going to maintain the fork?\n> \n> \n> \n> I'm saying that one fork will prevail, and it's gonna be the one that ends up getting activity - not necessarily one that has been linked here.\n\nOne fork will not always prevail, again see CentOS where users are now forced to pick between extremely similar distros in Rocky Linux, Alma Linux, Cloud Linux, and other similar distros =||= > > > > Clicking the \"fork\" button isn't really the same as making a fork. You need to actually maintain the thing, give support and.. have a userbase. Write code and people will come\n> \n> > > \n> \n> > > \n> \n> > > Who said I wasn't going to maintain the fork?\n> \n> > \n> \n> > I'm saying that one fork will prevail, and it's gonna be the one that ends up getting activity - not necessarily one that has been linked here.\n> \n> \n> \n> As it has been said before here, we'll have to choose on who maintains the project now. I'm not going to say absolutely me, because others will have to decide.\n\nOne person maintaining the project in the first place is a bad idea. It should be under an organization with multiple members  =||= > If Muse has registered a trademark for the name and logo \"Audacity\", then all bets on using \"Audacitium\" are off. Using your trademark does not protect you from someone else in the same industry using your name or logo, but _registering_ your trademark does.\r\n\r\nThey have.\r\n\r\n =||= > > > > > Clicking the \"fork\" button isn't really the same as making a fork. You need to actually maintain the thing, give support and.. have a userbase. Write code and people will come\r\n> > \r\n> > \r\n> > > >\r\n> > \r\n> > \r\n> > > >\r\n> > \r\n> > \r\n> > > > Who said I wasn't going to maintain the fork?\r\n> > \r\n> > \r\n> > > \r\n> > \r\n> > \r\n> > > I'm saying that one fork will prevail, and it's gonna be the one that ends up getting activity - not necessarily one that has been linked here.\r\n> > \r\n> > \r\n> > As it has been said before here, we'll have to choose on who maintains the project now. I'm not going to say absolutely me, because others will have to decide.\r\n> \r\n> One person maintaining the project in the first place is a bad idea. It should be under an organization with multiple members\r\n\r\nWell I have an organization but there's only me in it... :/ (I already forked the project in it) =||= > I'm saying that one fork will prevail, and it's gonna be the one that ends up getting activity - not necessarily one that has been linked here.\r\n\r\nAnybody here know any others? Between [SartoxOnlyGNU/audacium](https://github.com/SartoxOnlyGNU/audacium) and [cookiengineer/audacity](https://github.com/cookiengineer/audacity), the latter seems to have more stars, but they both are about 8-9 commits ahead of master here. =||= The problem is, because of the trademarked name and logo;\r\nit's going to be harder to create a similar name and identity that people can be \"drawn\" to. =||= It seems as if @cookiengineer's fork will probably become the most popular IF it stays active, but the repo being owned by just one user isn't great IMO =||= > The problem is, because of the trademarked name and logo;\r\n> it's going to be harder to create a similar name and identity that people can be \"drawn\" to.\r\n\r\nTrue, but maybe we could keep the \"city\" at the end and put something else before that. And for the logo, well.. no idea. =||= > It seems as if @cookiengineer's fork will probably become the most popular IF it stays active, but the repo being owned by just one user isn't great IMO\r\n\r\nYeah because it has more stars, but honestly I don't even know.. =||= they should call the fork \"the audacity of these bitches\" =||= Let's not be crass now... =||= > they should call the fork \"the audacty of these bitches\"\r\n\r\nLmao good name =||= If a fork is to be made I think it would be best if we don't rely on single BDFLs and instead form an organization like NeoVim did. More people involved = more direction =||= Thing is, there needs to be a new brand name to use for the org ideally.. =||= Well, I have an organization from which I forked Audacity but of course there's only me in it because I'm a loner :D =||= > Thing is, there needs to be a new brand name to use for the org ideally..\r\n\r\nObviously, but what.. =||= That's the entire point of trademarks, to make it easy to sue people who try to create a similar mark. \r\nName-wise, rather than trying to make it look similar, make it conceptually similar. \r\nFormer Opera devs created the Vivaldi browser, for example. \r\n\r\nAudacity means both outrageousness and bravery, so think in those terms, something like \"Pluck\" or \"Brazen.\" \r\nOr maybe \"Big Brass Balls\" =||= Why not take the English word \"audacity\" and search a thesaurus for some of its synonyms, see if any sound good =||= My point is that you shouldn't be worrying about who mantains what right now. Take the code, actually do something with it and people will use it. Let a community form on its own and figure out things gradually. Otherwise we'll just have N copies of this repository with slightly different names (and logos) with no actual useful content (a fork has no purpose if it's just this same repository 100 commits ago with a different name, people can just build this and packagers can change the branding) =||= I think this conversation has gotten a bit off topic... =||= > Why not take the English word \"audacity\" and search a thesaurus for some of its synonyms, see if any sound good\r\n\r\nYour timing is impeccable.\r\n =||= So basically... the owner of a (preferrably popular) Audacity fork needs to start an org and get people on board.\r\n\r\nThe community needs time to do this.\r\n\r\nAnd *then* that org needs to decide on branding.\r\n\r\nDo I have this right? =||= Off topic (kinda), cookiengineer's fork has sky rocketed to 103 stars lmao =||= > So basically... the owner of a (preferrably popular) Audacity fork needs to start an org and get people on board.\r\n> \r\n> The community needs time to do this.\r\n> \r\n> And _then_ that org needs to decide on branding.\r\n> \r\n> Do I have this right?\r\n\r\nYeah, then after the branding actually replace instances of Audacity in the code. =||= > So basically... the owner of a (preferrably popular) Audacity fork needs to start an org and get people on board.\r\n> \r\n> The community needs time to do this.\r\n> \r\n> And _then_ that org needs to decide on branding.\r\n> \r\n> Do I have this right?\r\n\r\nCan an org change it's name afterwards? If so, then a temporary name is picked until a better or community decided one is chosen. =||= This is why companies come up with stupid code names for products, so they can replace them with real brand names later. \r\n =||= > Can an org change it's name afterwards?\r\n\r\nPretty sure they can, at least as far as GitHub is concerned: https://docs.github.com/en/organizations/managing-organization-settings/renaming-an-organization =||= Microsoft \"Longhorn\" is one example.\r\n =||= Should I, for example, create an organization to fork Audacity in it or should I stick to my current one? (which has other projects in it) =||= Has @Tantacrul made an official statement on this yet? =||= > Has @Tantacrul made an official statement on this yet?\r\n\r\nProbably not =||= I guess individual community members then to decide which fork/org to support, and we all see which one wins out. =||= > I guess individual community members then to decide which fork/org to support, and we all see which one wins out.\r\n\r\nLet's try not to turn this into Hunger Games, please. :D  =||= I'll be renaming instances of Audacity in the code to Audacium.. is it fine *yet*? I guess it could be considered a \"code name\" as we haven't found any better name yet. =||= As it stands, and this may change, I'm leaning toward @cookiengineer's fork. They seem to have considerable experience (if their GitHub activity is any indicator). If another fork (@AnErrupTion's, for example) gets rolling well, I'll lean there.\r\n\r\nThe community will need to decide for themselves what direction to take on this. We're early on yet, as #1213 is only a day old. =||= > I'll be renaming instances of Audacity in the code to Audacium.. is it fine *yet*? I guess it could be considered a \"code name\" as we haven't found any better name yet.\n\nAlrighty then, let's make Audacium as temporary name, but remember to change the name that is not similar with Audacity in the future =||= I'm not the best C/C++ developer since I'm still learning but with Audacium I'm definitely going to learn more.. which is also a plus to me! If my fork doesn't go anywhere at least I'd have learnt a bit more... =||= As far as [cookiengineer/audacity](https://github.com/cookiengineer/audacity) is concerned, [#5](https://github.com/cookiengineer/audacity/issues/5) already has some good ideas for renames (some cookie-related, obviously \ud83d\ude0b ) Maybe let's contribute there and see what sticks? =||= I don't know, I think for now it's best to wait for the community's reaction and to see which fork they prefer. =||= Off-topic to the current flow of the conversation, but why are we trying to corporatize and datavaccuum an OPEN SOURCE software? Also, I'll be watching this thread for the best fork. I think the entire world should adopt a GDPR-like Data Protection policy. (Edit: I meant We as in Musegroup) =||= Also we could just merge with cookiengineer to make a single fork so that we combine our skills and make a better fork. =||= > Also we could just merge with cookiengineer to make a single fork so that we combine our skills and make a better fork.\r\n\r\nI agree. It's better if we have a colllaborative effort than if we all fend for ourselves. =||= > Off-topic to the current flow of the conversation, but why are we trying to corporatize and datavaccuum an OPEN SOURCE software? Also, I'll be watching this thread for the best fork. I think the entire world should adopt a GDPR-like Data Protection policy. (Edit: I meant We as in Musegroup)\r\n\r\nWell, I have no idea, perhaps to make more money... =||= > Also we could just merge with cookiengineer to make a single fork so that we combine our skills and make a better fork.\r\n\r\n@cookiengineer, what do you think? =||= > > Off-topic to the current flow of the conversation, but why are we trying to corporatize and datavaccuum an OPEN SOURCE software? Also, I'll be watching this thread for the best fork. I think the entire world should adopt a GDPR-like Data Protection policy. (Edit: I meant We as in Musegroup)\r\n> \r\n> Well, I have no idea, perhaps to make more money...\r\n\r\nWelcome to America! Where the businessman thrives and the artisan dies. Also, very plausible. I'm surprised a world-GDPR hasn't been made yet. =||= > > > Off-topic to the current flow of the conversation, but why are we trying to corporatize and datavaccuum an OPEN SOURCE software? Also, I'll be watching this thread for the best fork. I think the entire world should adopt a GDPR-like Data Protection policy. (Edit: I meant We as in Musegroup)\r\n> > \r\n> > \r\n> > Well, I have no idea, perhaps to make more money...\r\n> \r\n> Welcome to America! Where the businessman thrives and the artisan dies. Also, very plausible. I'm surprised a world-GDPR hasn't been made yet.\r\n\r\n\"The Land of the Free\", also where torrents are illegal... (I'm glad I live in France..) =||= > > Off-topic to the current flow of the conversation, but why are we trying to corporatize and datavaccuum an OPEN SOURCE software? Also, I'll be watching this thread for the best fork. I think the entire world should adopt a GDPR-like Data Protection policy. (Edit: I meant We as in Musegroup)\r\n> \r\n> Well, I have no idea, perhaps to make more money...\r\n\r\nWe may speculate for days. I anticipate there'll be an official announcement at some point, and we might hear what Muse has in mind for the future of their acquisitions. =||= > I'm surprised a world-GDPR hasn't been made yet.\r\n\r\nSome states (US) are working through new legislations similar to what CA has already. I hope more lawmakers follow suit. =||= Yeah. If it gets worse, we mass-PSA and ditch the main product in favour of less-sketchy forkwork. =||= > Yeah. If it gets worse, we mass-PSA and ditch the main product in favour of less-sketchy forkwork.\r\n\r\nThat might be already happening, y'know... =||= > > Yeah. If it gets worse, we mass-PSA and ditch the main product in favour of less-sketchy forkwork.\r\n> \r\n> That might be already happening, y'know...\r\n\r\nI apologize. I sometimes have trouble \"reading the room\" but I see what you're onto now. =||= I apologize if I killed the chat. Might as well add onto this.\r\n\r\nI wont be surprised if Muse is revealed to be selling to the Chinese government, and if there's anywhere I DONT want my data, it's there. =||= > I apologize if I killed the chat. Might as well add onto this.\r\n> \r\n> I wont be surprised if Muse is revealed to be selling to the Chinese government, and if there's anywhere I DONT want my data, it's there.\r\n\r\nIt's based in Russia I think, so not Chinese but Russian. =||= > I apologize if I killed the chat. Might as well add onto this.\r\n> \r\n> I wont be surprised if Muse is revealed to be selling to the Chinese government, and if there's anywhere I DONT want my data, it's there.\r\n\r\nNo! You didn't! Don't worry :-) \r\nIt's certainly a possibility.\r\nSold data can end up anywhere. Even if the company is (I think) Russian. =||= > I apologize if I killed the chat. Might as well add onto this.\r\n\r\nI wouldn't call the chat dead. For my part, I'm just waiting to see what goes down. We have a couple of promising forks (forkers?) already, and I assume we can anticipate something from Muse on the subject.\r\n\r\n\ud83c\udf7f  =||= Hey there everyone,\r\n\r\nThis blatant breach of privacy and trust by Muse has left me absolutely disgusted. Throughout this ordeal, I've noticed many parallels to Google's Chromium project, where telemetry is implemented in an open source project. As such, in a similar vein to [Ungoogled Chromium](https://github.com/Eloston/ungoogled-chromium), I've decided to create a collection of patches that can easily and quickly be applied to the Audacity source code before the build process to cleanse the Audacity source from all of its tracking. Furthermore, this should work with future versions of Audacity, too, although I'll continue to support it as best I can for each new Audacity update in the case something breaks.\r\n\r\nIf you'd like to check it out. it's available at https://github.com/ssight/free-aud\r\n\r\nThanks! =||= Putin gonna hear copyright'd material, Putin gonna install Russian SpywareTM on our machines =||= > Hey there everyone,\r\n> \r\n> This blatant breach of privacy and trust by Muse has left me absolutely disgusted. Throughout this ordeal, I've noticed many parallels to Google's Chromium project, where telemetry is implemented in an open source project. As such, in a similar vein to [Ungoogled Chromium](https://github.com/Eloston/ungoogled-chromium), I've decided to create a collection of patches that can easily and quickly be applied to the Audacity source code before the build process to cleanse the Audacity source from all of its tracking. Furthermore, this should work with future versions of Audacity, too, although I'll continue to support it as best I can for each new Audacity update in the case something breaks.\r\n> \r\n> If you'd like to check it out. it's available at https://github.com/ssight/free-aud\r\n> \r\n> Thanks!\r\n\r\nTelemetry in UGC? Now that's special. =||= Also I think it's better if you merge the patches with my fork, I already have one with \"rebranding\", just so you know there isn't a crysis if you see what I mean... =||= Well not necessarily my fork, but the fork the community ends up choosing. =||= If I'm not wrong, I'm certain attempts are going to be made to yeet this whole fork thing into the sun because corporation. =||= Oh you are not the only one thinking that. Certainly they're just gonna pull a big uno reverse card at the last moment and yeet this whole thing into the air. =||= But it's still worth a try nonetheless :) =||= Yeah. If it means protecting the sanctity of open source from the grubby hands of the corporations who seek to exploit the commoner, then so be it. =||= I don't think patches onto the original software is the right approach as who knows if Muse Group will decide to mess with it. A fork, while a larger undertaking could be a safer decision in the long run.  =||= > I don't think patches onto the original software is the right approach as who knows if Muse Group will decide to mess with it. A fork, while a larger undertaking could be a safer decision in the long run.\r\n\r\nThey're still a quick and easy solution until Muse really messes up things I guess =||= > > I don't think patches onto the original software is the right approach as who knows if Muse Group will decide to mess with it. A fork, while a larger undertaking could be a safer decision in the long run.\n> \n> \n> \n> They're still a quick and easy solution until Muse really messes up things I guess\n\nYeah but at the same time it's putting trust in muse group which doesn't really have much from me at least =||= Should we create a new issue on the repository to list current forks to let the community choose, or are we going too far for that? :v =||= > If you'd like to check it out. it's available at https://github.com/ssight/free-aud\r\n\r\nAudaci***free***? :)  =||= > > If you'd like to check it out. it's available at https://github.com/ssight/free-aud\r\n> \r\n> Audaci_free_? :)\r\n\r\nNice name but copyright violation :p =||= Also, should I add a **dark mode** to Audacity? Because life is never complete without dark mode, y'all know that! (Or I hope so xD) =||= > Also, should I add a **dark mode** to Audacity? Because life is never complete without dark mode, y'all know that! (Or I hope so xD)\n\nYes =||= > Nice name but copyright violation :p\r\n\r\nAre you sure? Because I don't see any project named 'Audacifree' in the audio enthusiast space. You probably meant Trademark violation.  =||= > > Nice name but copyright violation :p\r\n> \r\n> Are you sure? Because I don't see any project named 'Audacifree' in the audio enthusiast space. You probably meant Trademark violation.\r\n\r\nHm yeah. =||= But let's not get too excited, first, let's wait for the community. Just I hope we can merge the forks together to prevent having multiple forks for the user to choose from. =||= For the name, how about **Audience**? It can remind of Audacity by its name, it's pretty similar. =||= The name is the least important thing right now. What is important is someone that has experience maintaining a project getting involved and getting a viable fork made if this privacy policy isn't canned. Even if they backpeddle on it, the damage is done for me though. I'll be standing by for a spyware-free fork. =||= > The name is the least important thing right now. What is important is someone that has experience maintaining a project getting involved and getting a viable fork made if this privacy policy isn't canned.\r\n\r\nIt does kinda matter for the future but you're right the future is not the present. Let's say I'm not the most experienced (at C(++) coding and maintaing a project, I've never maintained a big project) but we'll see. =||= Oh damn... well they are acting \"seriously\" on it. =||= Well, just another public comment: fuck you Muse! We thought we could trust you, but apparently not. Just like most other companies out there that \"love\" open source so much that they destroy it. =||= > **Note**: Muse is actively deleting negative comments and comments that supports the community's stance on a public fork from this Github issue.\r\n> \r\n> They've deleted 6 of my previous comments already in this thread alone from the last hour.\r\n> \r\n> Anyone receiving notifications via email, should start archiving these posts, because they're going away quickly.\r\n\r\nMaybe instead of whining about some replies they should actually address the issue?? =||= Starting the fork itself seems to be the easy part. But someone's random github fork is hardly going to keep the ball rolling/give a known alternative. In that manner people focusing on branding aren't actually too far off... Starting a new foundation to organize contributers, host a site, and bring people together, spread the news seems like the more pressing matter IMO. =||= > Starting the fork itself seems to be the easy part. But someone's random github fork is hardly going to keep the ball rolling/give a known alternative. In that manner people focusing on branding aren't actually too far off... Starting a new foundation to organize contributers, host a site, and bring people together, spread the news seems like the more pressing matter IMO.\r\n\r\nDon't wanna be the guy making the rules here but I think I should start inviting people to my organization, and be all set in case a catastrophic event happens. =||= > > **Note**: Muse is actively deleting negative comments and comments that supports the community's stance on a public fork from this Github issue.\r\n> > They've deleted 6 of my previous comments already in this thread alone from the last hour.\r\n> > Anyone receiving notifications via email, should start archiving these posts, because they're going away quickly.\r\n> \r\n> Maybe instead of whining about some replies they should actually address the issue??\r\n\r\nMaybe we should move to another thread outside of their control? maybe a public chatroom where this could be discussed. I have noticed many of my comments have been hidden too =||= Maybe a Discord server? =||= If Muse is deleting comments we have to move somewhere else, caughtquick is right. =||= A well run discord server is a good first step probably. Planning mutiny on their forums... Aint sustainable. =||= https://discord.gg/ZH5234Abhb Well I've made one. =||= Discord is proprietary and corporate owned, wasn't that what was trying to be avoided? (may be being a little too crazy) =||= It's only in the meantime though, Muse doesn't control Discord so it's all fine, and it can be archived. =||= I am archiving posts starting around 16 hours prior to this post. =||= > A well run discord server is a good first step probably. Planning mutiny on their forums... Aint sustainable.\r\n\r\nHow about a matrix server? =||= libera.chat or Matrix? =||= > libera.chat or Matrix?\r\n\r\nI'd prefer Matrix but IRC works great too.\r\n\r\nEntirely depends on what the majority prefer/want it to be I guess. =||= Let's work as a community, and focus on the important parts, not reinventing wheels and dividing ourselves further. \r\n\r\nThere's enough momentum over on Libera.chat to move there, and it's bar to entry is very low, only need a browser pointed to irccloud.com, if you don't have a standalone IRC client configured and at the ready. \r\n\r\nMatrix, Discord, others all require installing 'apps' which come with their own burdens, licenses and restrictions. We should promote the community using tools they're used to using, and would be comfortable adopting.  =||= > Let's work as a community, and focus on the important parts, not reinventing wheels and dividing communities.\r\n> \r\n> There's enough momentum over on Libera.chat to move there, and it's bar to entry is very low, only need a browser pointed to irccloud.com, if you don't have a standalone IRC client configured and at the ready.\r\n> \r\n> Matrix, Discord, others all require installing 'apps' which come with their own burdens, licenses and restrictions. We should promote the community using tools they're used to using, and would be comfortable adopting.\r\n\r\nDiscord has a web version, you don't even have to create an account, you can directly enter a username and use the web version =||= How about a room on libera.chat which can be bridge to matrix and accessible on #channelname:libera.chat =||= > > Let's work as a community, and focus on the important parts, not reinventing wheels and dividing communities.\r\n> > There's enough momentum over on Libera.chat to move there, and it's bar to entry is very low, only need a browser pointed to irccloud.com, if you don't have a standalone IRC client configured and at the ready.\r\n> > Matrix, Discord, others all require installing 'apps' which come with their own burdens, licenses and restrictions. We should promote the community using tools they're used to using, and would be comfortable adopting.\r\n> \r\n> Discord has a web version\r\n\r\nDiscord is proprietary.\r\nMatrix is open source but less decentralized than IRC  afaik but also has a web app called something like element web.\r\n\r\nlibera.chat is probably easier for everyone,\r\n =||= i don't think they're deleting all comments - or rather i certainly get the gist of the anger at Muse from the posts i am reading not mention all of the demands to fork. you do have to think about why Audacity is owned by Muse in the first place though - mainly due to disinterest by the previous developers in maintaining it. so a fork is great as long as you can come up with a core group of maintainers. personally i'd wait a bit for Muse to respond, but i'm definitely not disposed to fanning flamewars and outrage which is what social media is really good at.  =||= > How about a room on libera.chat which can be bridge to matrix and accessible on #channelname:libera.chat\r\n\r\nThis would be ideal but someone would have to set that up which might be complicated(?) =||= I'll add a Matrix bridge bot and probably IRC too so everyone can join. =||= Its not at all complicated, let me see if I can set it up\r\n =||= > I'll add a Matrix bridge bot and probably IRC too so everyone can join.\r\n\r\nBe aware though, it might cost a bit. (not too much, depends if on the activity though) =||= > I'll add a Matrix bridge bot and probably IRC too so everyone can join.\r\n\r\nLibera.chat is automatically bridged to matrix so only bridging that to the discord will be necessary.  =||= Looks like the ball is rolling! :) =||= Glad we all could agree on something \ud83d\ude00 =||= I read the headline and then decided to check my version because I don't remember updating in a while. I'm still running version 2.3. I'm guessing they can't apply this if I don't update, so I guess I won't be updating any time soon. =||= Anyone can create a Matrix room here? I found an easy bridge Matrix-Discord, here it is : https://t2bot.io/discord/ =||= That will leave IRC out of the mix though =||= > Anyone can create a Matrix room here? I found an easy bridge Matrix-Discord, here it is : https://t2bot.io/discord/\r\n\r\nI could create one, although I'm not fond of owning a matrix server as I'm bad @ moderating. =||= i'll find an irc to discord bridge probably =||= Not to be discouraging but this issue has deteriorated to the point where it's beginning to read like a chatroom instead of a github issue :/ =||= That's why we're trying to make a real chat room too! =||= So basically, invite the matrix bot from the earlier link I sent (t2bot.io) then after it joined enter this command:\r\n``!discord bridge 861365008684286002 861365008684286006`` =||= > Considering how schools use this software, including those who are kids, this is pretty unacceptable. Sure, you could fork it, and remove such tracking code, but come on. A normal end user shouldn't have to do that.\r\n\r\nThis. =||= > > Considering how schools use this software, including those who are kids, this is pretty unacceptable. Sure, you could fork it, and remove such tracking code, but come on. A normal end user shouldn't have to do that.\r\n> \r\n> This.\r\n\r\nBut sometimes, it's just like that and it's unevitable, unfortunately. =||= It seems that the best course of action would be to take off-topic coordination to \"liberate Audacity\" somewhere else.\r\nWhat I see would lead to an actual resolution is waiting for an official comment as the problem is brought up in full and there's hardly any new questions to the team.\r\nAlso, it's Sunday.\r\nAlso, this is not a forum, this is a Github issue.\r\nAs this is a legal question, there is quite a lot they would need to re-check with their current legal team who made that document. The policy may be a product of a miscommunication and could be reversed in full once they get to it.\r\nOff-topic chatter here and \"this\", frankly, should stop. The only valid contributions I see from here would be compiling licensing contradictions this privacy policy introduces. =||= > It seems that the best course of action would be to take off-topic coordination to \"liberate Audacity\" somewhere else.\r\n> What I see would lead to an actual resolution is waiting for an official comment as the problem is brought up in full and there's hardly any new questions to the team.\r\n> Also, it's Sunday.\r\n> Also, this is not a forum, this is a Github issue.\r\n> As this is a legal question, there is quite a lot they would need to re-check with their current legal team who made that document. The policy may be a product of a miscommunication and could be reversed in full once they get to it.\r\n> Off-topic chatter here and \"this\", frankly, should stop.\r\n\r\nMiscommunication? Doubt it. They really detailled and \"forced\" the new things on their privacy policy. If it was just mentionned one time with no context yes it would be miscommunicattion but right now I don't think it is. =||= > Also, it's Sunday.\r\n\r\nWhile I agree that \"this\" flooding my inbox is irritating at best, it is Monday morning for me... \r\n =||= > > It seems that the best course of action would be to take off-topic coordination to \"liberate Audacity\" somewhere else.\r\n> > What I see would lead to an actual resolution is waiting for an official comment as the problem is brought up in full and there's hardly any new questions to the team.\r\n> > Also, it's Sunday.\r\n> > Also, this is not a forum, this is a Github issue.\r\n> > As this is a legal question, there is quite a lot they would need to re-check with their current legal team who made that document. The policy may be a product of a miscommunication and could be reversed in full once they get to it.\r\n> > Off-topic chatter here and \"this\", frankly, should stop.\r\n> \r\n> Miscommunication? Doubt it. They really detailled and \"forced\" the new things on their privacy policy. If it was just mentionned one time with no context yes it would be miscommunicattion but right now I don't think it is.\r\n\r\nadding onto this they haven't yet even made a comment that this was a mistake or something of the like but they have hidden comments =||= > > > It seems that the best course of action would be to take off-topic coordination to \"liberate Audacity\" somewhere else.\r\n> > > What I see would lead to an actual resolution is waiting for an official comment as the problem is brought up in full and there's hardly any new questions to the team.\r\n> > > Also, it's Sunday.\r\n> > > Also, this is not a forum, this is a Github issue.\r\n> > > As this is a legal question, there is quite a lot they would need to re-check with their current legal team who made that document. The policy may be a product of a miscommunication and could be reversed in full once they get to it.\r\n> > > Off-topic chatter here and \"this\", frankly, should stop.\r\n> > \r\n> > \r\n> > Miscommunication? Doubt it. They really detailled and \"forced\" the new things on their privacy policy. If it was just mentionned one time with no context yes it would be miscommunicattion but right now I don't think it is.\r\n> \r\n> adding onto this they haven't yet even made a comment that this was a mistake or something of the like but they have hidden comments\r\n\r\nThey have hid comments which means they definitely aren't here for the good. This just can't be a mistake, how could it be? =||= Hiding comments is a basic moderation action that could be done by any of the repo maintainers for any number of reasons, such as *this being a Github issue, not a forum*. You have the reddit thread for that. This is not Reddit.\n\nYour goal is not to cause a random mess but to ensure Audacity and its team is heading in the right direction by providing valid feedback. This issue went long past \"valid feedback\", again, *this is not a chatroom*.\n\nMy own main concern here is that the privacy policy suggests \"law enforcement cooperation\" and that part is unclear to me and I'd like the reason for the inclusion of that clause in an offline software to be laid out first before I can draw any subsequent conclusions. Is it a copypasted legal generic? Is this a ContentID in the making? We don't know.\n\nMost of what I see here stems from the following: when an entity acquires a codebase or some part of it, the entity is subject to international and local laws. Therefore the clauses that outline these interactions with governments appear in policies. When a project is maintained independently and no profit is involved, from a government standpoint it's an individualistic international swarm. With the acquisition a singular entity is now responsible for everything the software does or is and that entity needs to cover its legal bases.\n\nWhat is needed here is clear communication of what exactly called for these privacy policy clauses and what kind of data exactly it covers. Telemetry is a good thing if done right, but it needs to be done *extremely right*. So far it is a PR void which is not a good look.\n\nNeed detailed answers. =||= > Hiding comments is a basic moderation action that could be done by any of the repo maintainers for any number of reasons, such as _this being a Github issue, not a forum_. You have the reddit thread for that. This is not Reddit.\r\n> \r\n> Your goal is not to cause a random mess but to ensure Audacity and its team is heading in the right direction by providing valid feedback. This issue went long past \"valid feedback\", again, _this is not a chatroom_.\r\n\r\nActually you're right. I'll stick to the Discord I made for now. =||= \"Analytics\" is, in essence, telemetry. How many times are they going to try the same stunt before they realize we don't like it. =||= > Yeah let's not attack the open source developers who worked on this project for years so that this even exists in the first place and finally sold it so they could make a good chunk of money off it.\r\n> \r\n> Does it suck the situation this software is in? Sure, but let's not attack the original developers for that.\r\n\r\n\r\nIt would be naive to allow our admiration of the dev team to prevent us from considering the consequences of a developer's actions. Like any issue, If you want to resolve this issue, you need to look for its root causes. And the devs selling it are one. Let's not let that happen again by ignoring it because we like those guys. =||= Paul Davis laughed at this =||= Under GDPR it's technically just completely illegal in european countries, after all under GDPR, only data strictly necessary for the use of the service is allowed to be collected and it needs to be opt in willingly.\r\n\r\nThere is 0 need for this data collection in audacity so it actually becomes illegal and I plan to report it =||= > There is 0 need for this data collection in audacity\r\n\r\nDirectly, no. Audacity could run just fine without it.\r\n\r\nHowever, AFAIK, it's t o help developers improve the program, without having to rely on users sign up for GitHub, create an issue and manually provide information. =||= *Disclaimer: I'm not a lawyer*\r\n\r\n@SeleDreams\r\n> Under GDPR it's technically just completely illegal in european countries, after all under GDPR, only data strictly necessary for the use of the service is allowed to be collected and it needs to be opt in willingly.\r\n\r\nI encourage you to contact your local data protection office about this indeed. unfortunately it might not be that simple and clearly illegal:\r\nAFAIK at least some kinds of tracking and telemetry can be considered as a \"Legitimate Interest\" and thus are opt-out, not opt-in.\r\nAlso tying a service to accepting certain data transfers is not completely ruled out: While it is not allowed in the general case, there are specific cases where access to a service can indeed only be granted after opting in to tracking, like https://spiegel.de/, https://zeit.de/ and https://derstandard.at do by providing a paid option as an alternative. =||= > \r\n> \r\n> So basically, invite the matrix bot from the earlier link I sent (t2bot.io) then after it joined enter this command:\r\n> `!discord bridge 861365008684286002 861365008684286006`\r\n\r\nIronic how people are trying to set up a discord chat room, a service that is probably the worst in the industry with regard to user privacy, with a history of handing out personal data in breach of GDPR to to anyone who asks, in a github issues post complaining about a new privacy policy. =||= The discord is being to bridged to matrix and irc right now  =||= Github and Discord are both owned by microsoft so it is self-consistent\r\n =||= > > There is 0 need for this data collection in audacity\r\n> \r\n> Directly, no. Audacity could run just fine without it.\r\n> \r\n> However, AFAIK, it's t o help developers improve the program, without having to rely on users sign up for GitHub, create an issue and manually provide information.\r\n\r\nYeah but under GDPR this isn't considered a valid information\r\n\r\nunder GDPR, a valid information to collect is one that's strictly necessary for the service to *work* *AND* this data must only be collected as long as strictly necessary (for instance a photo posted should be stored only as long as not deleted by the user and then deleted from the database)\r\n\r\n\r\n\r\n> _Disclaimer: I'm not a lawyer_\r\n> \r\n> @SeleDreams\r\n> \r\n> > Under GDPR it's technically just completely illegal in european countries, after all under GDPR, only data strictly necessary for the use of the service is allowed to be collected and it needs to be opt in willingly.\r\n> \r\n> I encourage you to contact your local data protection office about this indeed. unfortunately it might not be that simple and clearly illegal:\r\n> AFAIK at least some kinds of tracking and telemetry can be considered as a \"Legitimate Interest\" and thus are opt-out, not opt-in.\r\n> Also tying a service to accepting certain data transfers is not completely ruled out: While it is not allowed in the general case, there are specific cases where access to a service can indeed only be granted after opting in to tracking, like https://spiegel.de/, https://zeit.de/ and https://derstandard.at do by providing a paid option as an alternative.\r\n\r\nactually it isn't valid for the gdpr to not allow to access the service without opting in to an optional option, the law however does not cover making it require to pay to use the service without data collection which might be the loophole that got used by some european websites =||= > Github and Discord are both owned by microsoft so it is self-consistent\n\nDiscord is not owned by Microsoft.  =||= This is completely unrelated to the topic on hand, there is also a matrix on #audiofork:libera.chat and an irc at libera.chat at #audiofork =||= So, someone pointed this fork in the subreddit: https://github.com/cookiengineer/audacity\r\n\r\nMaybe, we should keep an eye on it.  =||= There is this one as well: https://github.com/SartoxOnlyGNU/audacium =||= im not a particularly eloquent person, but this whole situation is a massive bruh moment. =||= <details>\r\n  <summary>Hidden reply</summary>\r\n\r\n  > [The discord is being to bridged to matrix and irc right now](https://github.com/audacity/audacity/issues/1213#issuecomment-873710071)\r\n\r\n  > [Discord is not owned by Microsoft](https://github.com/audacity/audacity/issues/1213#issuecomment-873712167)\r\n  \r\n  The background issue of promoting Discord still exists.\r\n</details> =||= Shit software will always be shit [-] =||= Disgusting =||= Wow so Audacity is dead ?  I was not aware they was bought by an evil corporation that is slighty more evil than microsoft. =||= Me, who remembers what happened in #835\r\n![image](https://user-images.githubusercontent.com/7574664/124432191-94d2a900-dd2e-11eb-929e-6080e04aca24.png)\r\n =||= > \r\n> \r\n> @AnErrupTion You are aware that my fork already removed all code that contained telemetry and networking? https://github.com/cookiengineer/audacity\r\n\r\nI have one behind current audacity tree from before all this too: \r\n\r\n> \r\n> \r\n> > They're gonna change this or people will just move to a fork.\r\n> \r\n> Unlikely they're going to change this, as they've already committed significant legal, development and other resources to this approach. There's probably revenue streams tied back to feeding the data to law enforcement as well, that they'll lose out on.\r\n> \r\n> A fork, while undesirable in almost every case of an OSS project, is sometimes necessary to ensure the spirit and law of the licenses is respected. The problem with a fork in _this_ specific case, is that the main developers and copyright holders already signed over their rights to the Muse Group through a [CLA](https://www.audacityteam.org/cla/), and will likely not contribute to a forked version as well.\r\n> \r\n> This means any fork would have to find the same level of development skills/resources, as well as _interest_ in continuing a fork, in order for that fork to survive and replace the one Muse is proposing.\r\n> \r\n> Note: There are already [1.2k forks of the main audacity repository](https://github.com/audacity/audacity/network/members) already, many probably resulting from this news, so the codebase can be preserved before it moves under a Private repository.\r\n\r\nWell, some are from round 1 of this crap with the pull request for google analytics and yandex we said, yah, nope. To be honest I would prefer any fork start there to make sure we have it all and carefully cherrypick commits back in.\r\n\r\nI also want to have a closer look at that new \"utility library\" wx replacement. Which is why I haven't started cherrypicking commits on https://github.com/ewanm89/audacity yet.\r\n =||= Literally 1984. =||= DITCH =||= > \r\n> \r\n> > @AnErrupTion You are aware that my fork already removed all code that contained telemetry and networking? https://github.com/cookiengineer/audacity\r\n> \r\n> Ah I didn't know, however I think you're a bit too aggressive when removing update checking (removing auto update is fine, but update checking.. really?)\r\n\r\nWell, the check will need to send out a ping to a server somewhere, not saying we can't have that in the future, but I do not trust the current implementation and we should be careful to scrub anything that leads back to original audacity. =||= hear, hear! =||= I love being promised UI/UX updates and being given spyware updates instead lmao =||= > \r\n> \r\n> > > > > I'm guessing that this is indeed the end.\r\n> > > > > RIP\r\n> > > > \r\n> > > > \r\n> > > > There are forks and so the community, it will very likely be revived (cookiengineer has removed some stuff in his fork, I have made a fork too of Audacity)\r\n> > > \r\n> > > \r\n> > > I'll definitely check those out.\r\n> > > Shame this had to happen at all though.\r\n> > \r\n> > \r\n> > Yeah but it's the sad truth after all... reality is reality, can't change that :/\r\n> \r\n> Any suggestion on how to keep them from collecting data for now though? Sandboxing? Anything else?\r\n\r\n3.0.2 Is from before all this, the worst it has is a manual update check where one has to go and click the button in the help menu. That said, I probably wouldn't trust a new download, but if you already have one it should be fine. Officially there has not been a stable release since all this stuff has been added. =||= > \r\n> \r\n> That name is going to be hard to pronounce, and doesn't really make sense. I much prefer \"Audacium\" instead of the additional \"...actium\" at the end.\r\n> \r\n> But the presence of a fork, among a sea of 1,200 other Audacity forks, doesn't help the cause. We need commitment behind the vision, maintenance and development of the codebase, not just ownership.\r\n> \r\n> So many here are focusing on logos and naming conventions, when we should be focusing on building a community of passionate developers to continue supporting the ongoing development and maintenance of the project.\r\n> \r\n> The names and logos can come later.\r\n\r\nThe problem is, names and logo (especially) has to come early to prevent copyright and trademark issues MuseScore will likely claim, the code we can take, the name and logo, not so much. This is an issue often with forks. I agree we need to get those doing forks to pool efforts.\r\n\r\nGood news is, with git, we can cherrypick from each other and merge back to one relatively easily. =||= > \r\n> \r\n> > > Someone should just fork Audacity and we can all move on\r\n> > \r\n> > \r\n> > What about [cookiengineer/audacity](https://github.com/cookiengineer/audacity)? Is it reputable enough for people to get behind?\r\n> \r\n> I feel like its still too early to get behind a fork and we have to wait to see how well they are at merging upstream patches, listening to the community, and removing some of the nonsense that audacity is adding.\r\n\r\nProblem is, even if the current actual code is fine, the legal documents are not and once you agree with those, there is no going back. The 90% of the developers that signed the CLA are idiots from a legal perspective for signing those terms, but then most developers don't even pay that much attention to the intracacies of law and haven't been to law school, hire lawyers people.\r\n\r\nWe agree to this privacy agreement, there is no way to get out of it. We agree to this CLA and there is no way to get out of it. MuseGroup have all the power under those. =||= > \r\n> \r\n> > I'm making all that stuff to prevent copyright issues, just as a base.\r\n> \r\n> \"Audacitium\" would fall under \"similar naming\", if the name was _trademarked_ by Muse Group, but it wouldn't fall under that clause if it was merely _copyrighted_ under that name.\r\n> \r\n> The difference is in the legal protection that trademarks offer. Trademark, in this case, would refer to the similarity in the same industry (audio enthusiasts, bands, musicians), and not to the logo itself (which itself, can be trademarked separately from its name).\r\n> \r\n> If Muse has registered a trademark for the name and logo \"Audacity\", then all bets on using \"Audacitium\" are off. Using your trademark does not protect you from someone else in the same industry using your name or logo, but _registering_ your trademark does.\r\n> \r\n> Here's where things get tricky: If the original creators of the Audacity name or logo, did not sign the CLA, and only the developers did, and Muse tries to use their original creation, such as the project's logo, and use it as their own, they can be sued over the misuse of your copyright, but only if you have a copyright registration legally filed.\r\n> \r\n> Many to most OSS projects don't go the extra step of filing for copyright protection with the US Copyright Office, but some do.\r\n> \r\n> Before you go starting with new logos and names, that foundation should be established, and if Muse hasn't filed them, the project's developers should, to prevent Muse from using their name not in good faith with the industry that supported the project up to this point.\r\n> \r\n> But circling back, the code, developers and community has to be established first, and at that point it's wise to choose a name, because you'll have a new direction, new charter and new leadership for the project.\r\n\r\nUnder trademark law, it has to be confusingly similar. As in average joe on the street would thing \"Audactitium\" is \"Audacity\" from MuseGroup (the from is important here as \"Trademarks are source identifiers of goods\").\r\n\r\nOn the copyright issue, that very much depends on country one is in. In most countries there is no such registration requirement, that is a US thing. A problematic one as other parts of the law make it clear copyright attaches with \"fixing in a tangible medium\". Also if the copyright is foreign, the registration is not needed even in the US. =||= I'm fond of a new name, perhaps something like \"Valor\". =||= > \r\n> \r\n> So basically you'd have to remake the entire headphone logo? Damn... I'm not a very skilled designer, if anyone here is a better one than me then they'd be better off making a new logo..\r\n\r\nCopyright it is substantially similar standard, For Trademark confusingly similar standard (would someone pick up the wrong one when seeing them next to each other in an aisle at the local shop). As a such, I have some ideas. I think Audacium as a name is different enough, \"Aud\" part clearly refers to audio. =||= I had made a Discord sever so that this issue doesn't become a chat room : https://discord.gg/VMpvQVW9e4\r\nMade it quite some time ago already but there were new messages.\r\nIt had a Matrix bridge but for now it's broken. =||= This is a good thing, people would start building Audacity from source, without offensive commits. What are those commits anyway? =||= If you are making a fork, you also need to change the logo and name of the software as that is a trademark. Or your fork will be DMCA'd. =||= > I had made a Discord sever\r\n\r\nDon't know if this is a joke or double standards. An anti-tracking discussion in one of the most tracked networks. Congratulations, @AnErrupTion  =||= Muse doesn't have access to the Discord? =||= Bridged Matrix room at https://matrix.to/#/#audacityfork:semisol.dev, dunno if it's bridged to/from IRC though =||= @AnErrupTion https://discord.com/privacy :golfing:  =||= > @AnErrupTion https://discord.com/privacy \ud83c\udfcc\ufe0f\r\n\r\nI perfectly know Discord tracks users. I just wanted a quick solution for everyone, Discord doesn't require an account if using the web version. =||= So, at the end of this we have N copies of this repo with slightly different names and logos. With not a single repo providing a rationale or any sort of roadmap. Distros will end up packaging the original Audacity and not compiling the telemetry module (especially if upstream gets the long-awaited fixes about dependency vendoring while all of these \"forks\" go stale) =||= > Distros will end up packaging the original Audacity and not compiling the telemetry module (especially if upstream gets the long-awaited fixes about dependency vendoring while all of these \"forks\" go stale)\r\n\r\n@sykhro distros can choose to put older versions in the package lists =||= > > Distros will end up packaging the original Audacity and not compiling the telemetry module (especially if upstream gets the long-awaited fixes about dependency vendoring while all of these \"forks\" go stale)\r\n> \r\n> @sykhro distros can choose to put older versions in the package lists\r\n\r\nI mean, yeah, they can, but why would they? If the thing can be disabled at compile time and newer versions bring less burden for packagers (and new features) I can't really imagine why they would stick with an older version.. =||= > Bridged Matrix room at [matrix.to/#/#audacityfork:semisol.dev](https://matrix.to/#/#audacityfork:semisol.dev), dunno if it's bridged to/from IRC though\r\n\r\nNon discord bridged (+ IRC bridged) one is here, small reminder: [#audiofork:libera.chat](https://matrix.to/#/#audiofork:libera.chat)\r\nAnd no, that one is not IRC bridged. =||= > recant or die\r\n\r\n@AM-PM This is *not* OK. At first it's not spyware, it clearly tells you what it does and there is an option to disable it. But even if not this is *no* reason for a death threat. You wont help the community with this in any way. =||= > \r\n> \r\n> > recant or die\r\n> \r\n> @AM-PM This is _not_ OK. At first it's not spyware, it clearly tells you what it does and there is an option to disable it. But even if not this is _no_ reason for a death threat. You wont help the community with this in any way.\r\n\r\nfirst off, my anger got to me when i first heard about this (massive apologies), and second, \"recant or die\" is a reference to something stupid, i never intended that to be a death threat, **_AT ALL_**\r\n\r\nthe best option for the both of us would be to delete our comments before twitter users notice our comments and make this worse than what i said in horrible taste =||= Our telemetry data will be safely stored on a server in their offices, which happens to be in a **_hostile nation_**.   Yeah, uh, no thank you. =||= Repo maintainers are gonna throw a fit with this. Get ready to have messages like this when you try to install audacity if they dont walk all this crap back.\r\n```\r\n$ sudo pacman -S audacity\r\n[#########] Reading package info\r\nIMPORTANT NOTE:\r\nAs of <date>, Audacity, MuseScore and other FOSS Audio Applications have\r\ncome under the ownership of Muse Group, who have used their power to install\r\nmodifications to this program that violate your right to privacy.\r\nA fork of this package is available, that does not contain those privacy\r\nviolating modifications, and it is STRONGLY recommended that you install it\r\ninstead. \r\nMuse Group Privacy Policy: https://mu.se/privacy-policy\r\nMore information on this issue: https://distro.tld/bulletins/audacity\r\nWhich package would you like to install?\r\n[1] NewAudacityNoTracker\r\n[2] Audacity\r\nEnter selection [1]: 2\r\nWARNING: You will be bound Muse Group's privacy policy if you continue\r\nand install this version of Audacity. This privacy policy stipulates\r\nyou MUST be 13 years of age or older to use the software.\r\nPlease type the following message to confirm this action, or press\r\nEscape or CTRL+C to abort this operation.\r\n\"I certify that I am at least 13 years of age, and understand the\r\nwarning presented to me in advance.\"\r\nEnter agreement: I certify that I am at least 13 years of age, and understand the warning presented to me in advance.\r\n[#####] Installing audacity\r\n```\r\n_yes i did writer this whole thing, because my life is sad and i have nothing better to do, feel free to do whatever you want with it i dont care_ =||= ^^\r\n =||= Edit: this was in reply to a now deleted comment with name suggestions\n\nPureAudio sounds too generic and could be mistaken for PulseAudio\nAudacifree is better though  =||= > PureAudio sounds too generic and could be mistaken for PulseAudio\r\n> Audacifree is better though\r\n\r\n@ctaetcsh See <https://github.com/cookiengineer/audacity/issues/5#issuecomment-873688860> for a name suggestion thread. They also have some logo candidates already. =||= > So no, they are not violating the terms of GPLv2 or v3.\r\n\r\nOh good, only my privacy is being violated. =||= > On the copyright issue, that very much depends on country one is in. In most countries there is no such registration requirement, that is a US thing. A problematic one as other parts of the law make it clear copyright attaches with \"fixing in a tangible medium\". Also if the copyright is foreign, the registration is not needed even in the US.\r\n\r\n\"Such registration is not a condition of copyright protection.\" (17 USC \u00a7408)\r\n\r\nCopyright is still granted at the time the work is fixed in a tangible medium, even if the work is not registered, just the Berne Convention requires. It is true that your work must be registered to bring an infringement suit to court, but registration is a legal formality that can be done at any time, even after infringement occurs.\r\n\r\nHowever, you can only get statutory damages for infringement that occurs after your registration; any infringement before your registration is limited to actual damages. (17 USC \u00a7412) =||= Yet another attack at user freedom.\r\n\r\nI think it's a good idea for (former) Audacity users to learn privacy-respecting alternatives like Ardour (which is also way more powerful than Audacity).\r\n\r\nI've been making video tutorials about it for years: https://www.youtube.com/playlist?list=PLi2LbJnGR-49PM2Pbs46zySEO-7tBsBsI\r\n\r\nThe downside is Ardour has a steeper learning curve, but I hope my work can mitigate that problem.\r\n\r\nHowever some quick and dirty audio works are better done in Audacity. You don't always want to use an industry-grade multitool to just put a nail in a coffin (*cough* Muse Group *cough*), that's why Audacity is a valuable (even if simple) tool.\r\n\r\nThis ongoing assault on user privacy and freedom is pretty ridiculous. I can't imagine what the original Audacity authors must be feeling seeing their work being mistreated like this.\r\n\r\nI also feel bad for Tantacrul, as he's become a public figure associated with this nonsense, while it's outside of his control. =||= For those who are searching for forks which removes audacity's telemetry bs and others things I found some of them:\r\n- https://github.com/cookiengineer/audacity\r\n- https://github.com/SartoxOnlyGNU/audacium\r\n\r\nI found them thanks to this website: https://useful-forks.github.io\r\n\r\nAudacity fork's list: https://useful-forks.github.io/?repo=audacity%2Faudacity\r\n\r\nHere is the csv export: https://pastebin.com/raw/SRnfgiWB =||= > Repo maintainers are gonna throw a fit with this. Get ready to have messages like this when you try to install audacity if they dont walk all this crap back.\r\n\r\nI don't see why they would keep the version that violates users' freedom. =||= @DC7IA Because it doesn't. Also there will be probably no message at all, because you can disable the functionality at buildtime. Messages like this are also not possible with pacman. =||= Oh snap. Don't tell me these halfwits actually made it after all the online backlash. They're gonna regret it.\r\n\r\nMeanwhile, let's figure out the late Audacity's fork's name. My ideas: DAWing (from \"daring\"), Valour. =||= Is the GPL violation reported? Should we report it? =||= > > Data necessary for law enforcement, litigation and authorities\u2019 requests (if any)\r\n> \r\n> I'd like to get some clarification on what exactly such data would entail. Why does an audio editor need to collect or keep any user data anyways? Let alone share it with whomever. I don't want any of the below to be tracked by an audio editor:\r\n> \r\n> ![ffs](https://user-images.githubusercontent.com/63272687/124472717-bcf9f080-dd9e-11eb-9fa1-f68681bad25d.png)\r\n> \r\n> I doubt this will be reverted so let me know which fork to move to. I'm over Audacity. It's been sold and the new owners don't care about the community, privacy or FOSS.\r\n\r\nCurrently there is decided fork\r\n\r\n> Is the GPL violation reported? Should we report it?\r\n\r\nNot reported, but we should\r\n\r\n> Oh snap. Don't tell me these halfwits actually made it after all the online backlash. They're gonna regret it.\r\n> \r\n> Meanwhile, let's figure out the late Audacity's fork's name. My ideas: DAWing (from \"daring\"), Valour.\r\n\r\nThey changed the privacy policy, yes =||= I'm not an expert on the GPL, but the act of providing binaries with the traking and not having the source code of the trackers in the repository could be considered a violation?\r\n =||= remember kids, big companies buying libre software will always result in software becoming increasingly closed and more like malware. every time =||= For the love of God people, at least try to make something aesthetically pleasant when designing possible new logos. Here, for anyone who wants to use it in any way, including proposal of name for OC forks\r\n\r\n![image](https://user-images.githubusercontent.com/28562978/124475807-6d1d2880-dda2-11eb-9176-9390775716a8.png)\r\nhttps://files.fm/u/6ghmuvcuq =||= > more like malware\r\n\r\n@maxymax13 Wouldn't call basic (opt-in) telemetry 'malware', again, they're doing this to improve the product. \r\n\r\nIf you use Firefox, you're already submitting more data to Moz than Audacity would. Many open source projects implement telemetry.\r\n\r\nTo be fair,  I have no clue what the law enforcement stuff is about, and they did not go about this the right way, but I feel like this big of a backlash is way too strong for something that isn't really *that* big of a deal. The way people are making it seem is that it's uploading your browser history, credit card history and streaming webcam footage straight to Mr Tantacrul: Head of Audacity World Domination Industries\u2122  =||= > I'm not an expert on the GPL, but the act of providing binaries with the traking and not having the source code of the trackers in the repository could be considered a violation?\r\n\r\n![image](https://user-images.githubusercontent.com/45574030/124476675-c9d11100-ddab-11eb-8a9d-79d25f477afe.png)\r\nNote: this is not legal advice\r\n\r\nSo, probably yes. =||= > > more like malware\r\n> \r\n> @maxymax13 Wouldn't call basic (opt-in) telemetry 'malware', again, they're doing this to improve the product.\r\n\r\noh silly you, the part where they make it a \"product\" comes later \ud83d\ude09 \r\nanyways, an audio editing program should never be collecting what one's doing, even if it's \"to improve it\". i also don't know why an audio editing program needs to require collecting stuff for \"law enforcement\". what are they gonna do, jail me for making a bad mashup? this is all superfluous for such a small utility software =||= ![muse-putting_out_a_fire](https://user-images.githubusercontent.com/51511737/124477237-11ec3580-dda4-11eb-9ddf-2549a83ff6b3.jpg)\r\n =||= > anyways, an audio editing program should never be collecting what one's doing, even if it's \"to improve it\". \r\n\r\nIf a crash occurs, I'm pretty sure the developers would like to hear about it, so they can fix it. Not every user is going to sign up for GitHub, find the issue tracker, upload some crash dump.\r\nIt also helps developers prioritise commonly used features.\r\n\r\nDon't like it? Don't opt in. If Audacity goes to a paid plan, or a 'cloud-supported' plan, forces telemetry, or sends anything other than basic usage data up, that's cause for concern. =||= > > anyways, an audio editing program should never be collecting what one's doing, even if it's \"to improve it\".\r\n> \r\n> If a crash occurs, I'm pretty sure the developers would like to hear about it, so they can fix it. Not every user is going to sign up for GitHub, find the issue tracker, upload some crash dump.\r\n> It also helps developers prioritise commonly used features.\r\n\r\nCrash reporting is one thing, usage tracking is quite another can of worms.\r\n =||= > \r\n> \r\n> > anyways, an audio editing program should never be collecting what one's doing, even if it's \"to improve it\".\r\n> \r\n> If a crash occurs, I'm pretty sure the developers would like to hear about it, so they can fix it. Not every user is going to sign up for GitHub, find the issue tracker, upload some crash dump.\r\n> It also helps developers prioritise commonly used features.\r\n> \r\n> Don't like it? Don't opt in. If Audacity goes to a paid plan, or a 'cloud-supported' plan, or sends anything other than basic usage data up, that's cause for concern.\r\n\r\nI don't like this because Audacity is FOSS software, and a big part of it, and also seeing them underestimate the GPL and the FOSS comunity  =||= > Crash reporting is one thing, usage tracking is quite another can of worms.\r\n\r\n@clort81 I agree. Usage tracking *can* go **very** wrong. If there's any way of linking to this user, that's bad, but as long as all the developers can see is 0.2% users used feature X I see it as being fine.\r\n\r\nOf course, there's no way to verify this, other than the trust system, which isn't great.\r\n =||= > \r\n> \r\n> > Crash reporting is one thing, usage tracking is quite another can of worms.\r\n> \r\n> @clort81 I agree. Usage tracking _can_ go **very** wrong. If there's any way of linking to this user, that's bad, but as long as all the developers can see is 0.2% users used feature X I see it as being fine.\r\n> \r\n> Of course, there's no way to verify this, other than the trust system, which isn't great.\r\n\r\nThats the whole point of FOSS =||= > > If a crash occurs, I'm pretty sure the developers would like to hear about it\r\n> \r\n> Nothing stops them from showing a notification telling the user there was a crash and asking them what to do next. This can be done without infringing on the privacy of users. The crash data can be pruned of anything unwanted and submitted (anonymously) to their website or allow the user to save the report so they can email or submit it on Github.\r\n\r\nThat was already decided in [may.](https://github.com/audacity/audacity/discussions/889) =||= > > Of course, there's no way to verify this, other than the trust system, which isn't great.\r\n> \r\n> Thats the whole point of FOSS\r\n\r\nAs far as I'm aware, there's no way to verify the code running on Muse servers is line by line identical to the source published publically. =||= > > > Of course, there's no way to verify this, other than the trust system, which isn't great.\r\n> > \r\n> > \r\n> > Thats the whole point of FOSS\r\n> \r\n> As far as I'm aware, there's no way to verify the code running on Muse servers is line by line identical to the source published publically.\r\n\r\nYeah. =||= Almost nobody wants this.  =||= > \r\n> \r\n> > > Of course, there's no way to verify this, other than the trust system, which isn't great.\r\n> > \r\n> > \r\n> > Thats the whole point of FOSS\r\n> \r\n> As far as I'm aware, there's no way to verify the code running on Muse servers is line by line identical to the source published publically.\r\n\r\nYou don't need to know, FOSS code shouldn't contain trackers, and you should be able to build the code to be identical to the distributed binaries, to test if it they are being tampored with =||= > > > > Of course, there's no way to verify this, other than the trust system, which isn't great.\r\n> > > \r\n> > > \r\n> > > Thats the whole point of FOSS\r\n> > \r\n> > \r\n> > As far as I'm aware, there's no way to verify the code running on Muse servers is line by line identical to the source published publically.\r\n> \r\n> You don't need to know, FOSS code shouldn't contain trackers, and you should be able to build the code to be identical to the distributed binaries, to test if it they are being tampored with\r\n\r\nReproducible builds.\r\n\r\nAnd the point of FOSS is to eliminate trust. =||= > As @floopfloopfloopfloopfloop points out, this is incompatible with the GPL.\r\n> \r\n> Privacy policy:\r\n> \r\n> > If you are under 13 years old, please do not use the App.\r\n> \r\n> GPLv2:\r\n> \r\n> > The act of running the Program is not restricted\r\n> \r\n> GPLv3:\r\n> \r\n> > This License explicitly affirms your unlimited permission to run the unmodified Program.\r\n\r\nI have a doubt: What does \"please do not\" exactly mean? Is it a prohibition? I don't want to see Audacity discourage kids to use it, but we have to make it clear to state that it is incompatible with the GPL.\r\n\r\nSomehow related: [\"must\", \"must not\", \"should\", \"should not\" and \"may\" in RFCs](https://datatracker.ietf.org/doc/html/rfc2119) (It doesn't include \"do not\" and it's for RFCs, so I said it's \"somehow\" related. This is provided not as a reference for what \"please do not\" means, but as an example that the exact meaning of phrases may differ from what we think.) =||= > \r\n> I have a doubt: What does \"please do not\" exactly mean? Is it a prohibition? I don't want to see Audacity discourage kids to use it, but we have to make it clear to state that it is incompatible with the GPL.\r\n> \r\n> Somehow related: [\"must\", \"must not\", \"should\", \"should not\" and \"may\" in RFCs](https://datatracker.ietf.org/doc/html/rfc2119)\r\n\r\nNote that legalese is complicated, and not RFC. I believe someone said before that it doesn't violate the GPL.\r\n\r\nMaybe they could possibly say the privacy policy only applies if you agree to telemetry? =||= > > > > Of course, there's no way to verify this, other than the trust system, which isn't great.\r\n> > > \r\n> > > \r\n> > > Thats the whole point of FOSS\r\n> > \r\n> > \r\n> > As far as I'm aware, there's no way to verify the code running on Muse servers is line by line identical to the source published publically.\r\n> \r\n> You don't need to know, FOSS code shouldn't contain trackers, and you should be able to build the code to be identical to the distributed binaries, to test if it they are being tampored with\r\n\r\n*\"FOSS code shouldn't contain trackers\"*\r\n\r\nThis seems wrong to me. FOSS code *can* contain trackers if the code for the tracking stuff is open source. FOSS guarantees that the software will remain free and its code will remain open for anyone to see, not that the software won't gather telemetry data =||= > \r\n> \r\n> > > > > Of course, there's no way to verify this, other than the trust system, which isn't great.\r\n> > > > \r\n> > > > \r\n> > > > Thats the whole point of FOSS\r\n> > > \r\n> > > \r\n> > > As far as I'm aware, there's no way to verify the code running on Muse servers is line by line identical to the source published publically.\r\n> > \r\n> > \r\n> > You don't need to know, FOSS code shouldn't contain trackers, and you should be able to build the code to be identical to the distributed binaries, to test if it they are being tampored with\r\n> \r\n> _\"FOSS code shouldn't contain trackers\"_\r\n> \r\n> This seems wrong to me. FOSS code _can_ contain trackers if the code for the tracking stuff is open source. FOSS guarantees that the software will remain free and its code will remain open for anyone to see, not that the software won't gather telemetry data\r\n\r\nSorry that I mixed that up =||= History is bound to fork itself. LibreOffice, OpenJDK, now this\r\n\r\nI am glad the GPL exists.\r\n =||= Maybe some GDPR-specialized pro could sue this useless Muse company out of existence? =||= Here we have some corporation trying to ruin a perfectly good piece of software. They don't listen to the users and now they want to NARC everyone out - unbelievable!!! =||= Uninstalling and removing from my toolchain =||= > Uninstalling and removing from my toolchain\r\n\r\nAlso, you can use a fork when they push releases. That is the best way to go\r\n =||= > remember kids, big companies buying libre software will always result in software becoming increasingly closed and more like malware. every time\r\n\r\nAnd all you have to do to fix it is just fork the software! =||= > \r\n> \r\n> I wish GitHub could sort a fork list by stars and activity...\r\n\r\n@AverageHelper\r\nhttps://github.com/techgaun/active-forks =||= https://fosspost.org/audacity-fork-needs-help/ mentions [cookiengineer/audacity](https://github.com/cookiengineer/audacity) as the suggested heir fork. =||= > ![Fork me](https://camo.githubusercontent.com/3390b1ab3df7a0c8901c5949e93a4ad922ca30efb6464284ceb534929234e4ac/68747470733a2f2f632e74656e6f722e636f6d2f6755337768546771596373414141414d2f7468652d676f6f642d706c6163652d6b72697374656e2d62656c6c2e676966)\r\n\r\nI came here to either say or see this, and I'm not leaving disappointed.  =||= Can we now just center around https://github.com/cookiengineer/audacity as the \"official\" fork of trackless audacity? I feel like these things need some kind of centralized movement and having many'a forks won't be helpful. =||= This new privacy policy is bullshit. =||= @Cyanic76 Indeed.\r\n@Jemoka We will see how it plays out, but it seems like the dominant one right now. =||= For a software with such a legacy and quality, this is a safe way to see it die. =||= > > > \"The App we provide [Audacity] is not intended for individuals below the age of 13. If you are under 13 years old, please do not use the App.\"\r\n> > \r\n> > \r\n> > why is audacity rated higher than pg-13. I'm pretty sure this directly contradicts the license.\r\n> \r\n> I'm pretty sure this is because the GDPR does not allow for children to give consent, although the age depends upon the member state, for example it's 18 in the UK, it's pretty clear whoever wrote it doesn't understand the GDPR.\r\n\r\nGDPR discourages the collection of data, but has a set of rules in case someone collects data.\r\nOne of the rules is that you are mandated to specify to the user for what purpose you collect data, which Audacity does not. This is against GDPR itself. =||= Is this repo still safe to fork or changes are already here?\r\nAnd we can use older versions of Audacity? If yes, what is the latest safe version? =||= > \r\n> \r\n> Is this repo still safe to fork or changes are already here?\r\n> And we can use older versions of Audacity? If yes, what is the latest safe version?\r\n\r\nYou can fork it and remove the changes yourself. There are also forks that have those changes removed already. https://github.com/cookiengineer/audacity\r\nAs for which version is the latest safe version, as far as I know that'd be 2.4.2. Anything after that (version 3 and onward) is suspicious. =||= As long as they remain open source, all someone has to do is just remove their bullshit changes, and it can be basically kept in parallel right? =||= > As long as they remain open source, all someone has to do is just remove their bullshit changes, and it can be basically kept in parallel right?\r\n\r\nThat's what all the \"forks\" mentioned in this thread are about, yeah. =||= you're probably right, but it also requires a lot of work. So if anyone wants to help, this fork seems to be really good and you also notice that there is someone who has a plan of what he does:\r\nhttps://github.com/cookiengineer/audacity\r\n\r\nI'm not very good at C myself, but I'm very good at Rust, so if Audacity gets rewritten in Rust, I'm in.\r\n\r\nApart from that, if you know a bit of C, everyone can help to clean up this messy and bad codebase.\r\n\r\nMany people use Audacity, they are counting on us not to just let the project go down! =||= Its so sad that some bullshit company killed the long gone open source community software by milking it as far as they can by adding telemetry and other spyware which no one wanted. FORK! =||= This has been a lesson in: How to kill your company 101!\r\n\r\nAnyway, thank god for open source. At least older versions of Audacity are safe for people to use. =||= (I've never seen a thread with so many reactions as this in so short a time.  1271 \ud83d\udc4d's atm in 2 days. \ud83d\udc40 \ud83d\ude80) =||= How about naming the fork something like \"fork of Audacity that isn't disgusting spyware\"  you can take out the apostrophe and stick an \"exe\" on the end for the executable.  =||= `fork of Audacity that isnt disgusting spyware.exe`? \ud83d\ude06 \ud83d\ude06 \ud83e\udd23  =||= Sad to see that a open source application sending telemetry data, and having a completly trash privacy policy. Well, Audacity, good bye. Let\u2019s see what will happen, you were good.. =||= @AnErrupTion's fork audacium is trying to stand out from the main repository by rebranding, which is important if we want end-users to recognize and use the anti-telemetry community-focused fork.\r\nThis is why I support the **audacium** fork. I hope @cookiengineer and @AnErrupTion will work together so that we'll all be backing the same horse. =||= I don't see the point in complaining about the legality of anything. Ever. Our entire society is run on the Golden Rule: \"Whoever has the gold makes the rules.\" That's all. It doesn't ever matter what any piece of paper says unless it's a little green piece of paper with a picture of a famous dead guy on it. Law school is a seminary for the theology of a false god. What actually matters is that this is unethical, not that it's illegal. Morals are real: laws are lies.\r\n\r\n> Following multiple discussions across various threads in Audacity GitHub repo, we are creating this topic to keep all relevant conversations focused in a single location.\r\n\r\nThey locked the thread when too many people started having that exact conversation.\r\n\r\n> Finally, we wish to make Audacity available to everyone, which means releasing it on all platforms and through as many distribution channels as possible.\r\n\r\nEven if we accept the premise that we wish to make Audacity available to everyone, which is certainly questionable (the Amish can't run it on their tractors) I must also point out that no, it doesn't mean that it has to be on every distribution channel for it to be available to everyone.\r\n\r\n> Unfortunately, some platforms have policies or technical processes that make it difficult or impossible for Audacity to exist on them\r\n\r\nThen we need to burn those platforms to the ground, erase every trace of their existence from every computer in the world and salt the earth upon which they were developed. =||= Did they really think no one was going to notice?\r\nHow do you go from \"we've made a mistake when it comes to data collection\" to \"the feds are able to watch you reverse cat noises\"?\r\nIt has to be on purpose...\r\nPurposely awful... =||= If having any new features for Audacity means data collection you can't opt out of, ***then we do not need or want any such features.*** Better the entire project be abandoned than for society in general to accept this as the way to make apps. =||= > Yep, the GPL violations is downright disgusting IMO, it's in direct violation to the code that hundreds of people have put in. Seems the best result here is that a fork of audacity comes out that doesn't have all this frankly nonsense in it. That doesn't seem to exist as of yet, most of them are just backup repos of right before the purchase though\r\n\r\nI think some lawsuits are in order.  =||= In case future updates of official Audacity become closed source: You may want to add Firewall rules to the executables. It can be done easily in Windows Firewall and can block the application's internet connection while you can freely use your connection for all other programs like before. I cannot guarantee that this is 100% safe in the end however. =||= We are talking about Windows Firewall in many circumstances, and I _hope_ we all know MS's track record when it comes to data collection and network security in general. =||= > > > > \"The App we provide [Audacity] is not intended for individuals below the age of 13. If you are under 13 years old, please do not use the App.\"\r\n> > > \r\n> > > \r\n> > > why is audacity rated higher than pg-13. I'm pretty sure this directly contradicts the license.\r\n> > \r\n> > \r\n> > I'm pretty sure this is because the GDPR does not allow for children to give consent, although the age depends upon the member state, for example it's 18 in the UK, it's pretty clear whoever wrote it doesn't understand the GDPR.\r\n> \r\n> GDPR discourages the collection of data, but has a set of rules in case someone collects data.\r\n> One of the rules is that you are mandated to specify to the user for what purpose you collect data, which Audacity does not. This is against GDPR itself.\r\n\r\nUsers in GDPR countries can lodge a legal complaint for breaking the law, for example here's how:\r\n\r\nhttps://ec.europa.eu/info/law/law-topic/data-protection/reform/rights-citizens/redress/what-should-i-do-if-i-think-my-personal-data-protection-rights-havent-been-respected_en\r\n\r\nLike #1229 mentions:\r\n> Under the GDPR, this could lead to a fine of up to \u20ac10 million, or 2% of the firm\u2019s worldwide annual revenue from the preceding financial year, whichever amount is higher. =||= This would send a strong message! =||= Bought it just to kill it... Shame!  =||= And here I was excited when Tantacrul revealed he would be working with Audacity... with the issues for under 13's this software arguably can't even be used in schools anymore. Definitely in support of a fork if they aren't going to fully backpedal this. =||= \r\n\r\n\r\n> \r\n> \r\n> And here I was excited when Tantacrul revealed he would be working with Audacity... with the issues for under 13's this software arguably can't even be used in schools anymore. Definitely in support of a fork if they aren't going to fully backpedal this.\r\n\r\nCould you even trust them if they did? this is really confusing and shady behavior, and not something a company that claims to support open source software would do.  its really concerning for users of muse's other products, because if this is a hill their willing to die on, its clear they have no care for their users privacy or rights for that matter...  =||= What's happening right now is far, **_far_** too similar to what happened with Nano Adblocker when [it was acquired by some foreign entity.](https://github.com/NanoAdblocker/NanoCore/issues/362) \r\nHell, right now it's certainly following some of the same steps; \r\n\r\n1. Buy previously open source software\r\n2. Update the EULA/Privacy Policy with a bunch of suspicious stuff\r\n3. Turn it closed source\r\n4. Turn into malware\r\n\r\nSo far, only the first two steps have been followed.\r\n Really hoping that they stop here and go no further (or perhaps, move back) =||= Does the >13yo requirement _really_ matter? It's unlikely they'll try enforcing it. =||= > Does the >13yo requirement _really_ matter? It's unlikely they'll try enforcing it.\r\n\r\nThe 13yo requirement doesn't mater and its a formality in nine out of ten cases. It just exposes that \r\n\r\nA) They're collecting enough info for it to step into stuff the EU regulates\r\n\r\nB) Schools shouldn't and hopefully won't feel comfortable having their students using the software in its current state =||= > > And here I was excited when Tantacrul revealed he would be working with Audacity... with the issues for under 13's this software arguably can't even be used in schools anymore. Definitely in support of a fork if they aren't going to fully backpedal this.\r\n> \r\n> Could you even trust them if they did? this is really confusing and shady behavior, and not something a company that claims to support open source software would do. its really concerning for users of muse's other products, because if this is a hill their willing to die on, its clear they have no care for their users privacy or rights for that matter...\r\n\r\nI was wondering about this, what if any is Tentacrul's relation to this whole thing? I'm foggy of the details of his position at muse and he's not uploaded any new video concerning it so far. =||= > I was wondering about this, what if any is Tentacrul's relation to this whole thing?\r\n\r\nUnsurprisingly, the design guy didn't do it: https://twitter.com/Tantacrul/status/1412080445328666632\r\n\r\n![](https://i.imgur.com/d3i4Vtv.png)\r\n\r\n =||= My current impression is that they're not currently collecting any information that requires a privacy policy, let alone one with alarming elements in it.\r\n\r\nIn that case there is no problem with the program itself, only with this document.\r\n\r\nAnd that's not NOTHING.  For one thing we shouldn't allow the precedent of restricting children from using software when it's not warranted, and for another if you accept a document that would ALLOW them to collect personal information, one day there may be an update that DOES. =||= someone make a fork pls =||= @pranshuthegamer this repository has 1.4k stars, it seems to be where people who are unhappy with this are going. \r\n\r\nhttps://github.com/temporary-audacity/audacity =||= > Fork this or stop using it. There is no need for big brother in a mostly offline audio program.\r\n\r\nOr just use a version from before it was taken over by the NSA and turned into spyware. My version is from 2017, they can't spy on me... I think. =||= Idk about GDPR, but in the US we have COPPA which disallows the collection of data for under 13. In any case this is completely unacceptable. A simple audio editor does not need to be spyware.\r\n\r\nI hope distro maintainers are aware of this and act quickly. =||= I advocated for reasonable opt-in telemetry in the previous thread, but taking random privacy policy that is incompatible with your own licence, and then making it legally binding without understanding is a faux pas I cannot look away from. =||= Since this was people's to go audio editing software. I'm hoping the news reaches all users, specially those not technically savvy, and they are made aware of this.\r\nHoping for a good fork soon.\r\n\r\nI'm no expert of GDPR, but even if this was Opt-in, I'm not sure it 100% follows GDPR guidelines, specially the part about 13yo using the software. =||= > Its so sad that some bullshit company killed the long gone open source community software by milking it as far as they can by adding telemetry and other spyware which no one wanted. FORK!\r\n\r\nWell I completely understand the original Devs, the audacity is opensuorce highly valued software if you know and work with audio by yourself, however donations where as nicely said pretty miserable and code contributions? Just have look at repo and you will see...anyway did you donated anything towards this great opensuorce program? Money code or even how to manual or video? - sadness is right there...\r\n\r\nAlso agree fork it and keep version up and running perhaps publish code and contribute with others - and stop the moan palava or leave it. =||= I've been looking for a new project to take on. Perverting a great piece of software like this grinds my gears. I'd love to try making a decent fork out of this, removing the telemetry component. I'll do some code review and see where it leads me. =||= Leave this shit, use plain old ffmpeg '-' =||= > I've been looking for a new project to take on. Perverting a great piece of software like this grinds my gears. I'd love to try making a decent fork out of this, removing the telemetry component. I'll do some code review and see where it leads me.\r\n\r\nAnyway I think this is overhiped a bit, any website out there is collecting ip address not to mention other stuff in cookies..even floss website or Ubuntu or nearly all of them so moan about tracking while reading those open source advisers is same as installation of audacity futured version..Pg 13 is different and I do not agree..I think people just not understand then come here to went..  =||= \ud83c\udf74\ud83c\udf74\ud83c\udf74\ud83c\udf74\ud83c\udf74\ud83c\udf74\ud83c\udf74\ud83c\udf74 =||= Well, he will probably close this issue just like the other ones that have some words of truth. =||= Do you mean \"some words of truth\" as in \"a dumpster fire of over 400 comments with mostly unqualified bullshit from bystanders\"? Nobody even reads this, or else people wouldn't be repeating themselves for three days. Tbh, this issue is getting nowhere and it should have been locked a long time ago. =||= > this is completely vague and tells us nothing about what is actually being collected.\r\n\r\nIt is intentionally vague so it could mean anything \"they\" want. Not limited to Audacity at all, of course. =||= A few weeks ago, my 9 year old son used Audacity - with some assistance from me - to edit and mix some music he'd played and recorded himself.\r\n\r\nApparently we're not valued Audacity users any more.  Time to go and look for - and donate to! - a popular fork. =||= > A few weeks ago, my 9 year old son used Audacity - with some assistance from me - to edit and mix some music he'd played and recorded himself.\r\n> \r\n> Apparently we're not valued Audacity users any more. Time to go and look for - and donate to! - a popular fork.\r\n\r\n[temporary-audacity/audacity](https://github.com/temporary-audacity/audacity) is a good fork =||= > [temporary-audacity/audacity](https://github.com/temporary-audacity/audacity) is a good fork\r\n\r\nThank you :)   =||= > > [temporary-audacity/audacity](https://github.com/temporary-audacity/audacity) is a good fork\r\n> \r\n> Thank you :)\r\n\r\nNo problem. There is another one that I am participating in but its not ready yet, so wanted to give the easiest alternative. Also they have better management. =||= Very shady that no maintainer's gotten involved at this point. =||= > The problem with a fork in _this_ specific case, is that the main developers and copyright holders already signed over their rights to the Muse Group through a [CLA](https://www.audacityteam.org/cla/), and will likely not contribute to a forked version as well.\r\n\r\nThe CLA is non-exclusive. And as long as Audacity keeps the GPL, they can easily contribute the exact same code to both Audacity and a fork.\r\n\r\nAnd, even if they personally don't want to bother contributing to both, as long as Audacity is still GPL, regardless of their privacy policy, or CLA, anybody can transfer any changes made to Audacity to a fork, so long as the fork doesn't diverge too far from Audacity.\r\n\r\nHere's the relevant passage from the CLA:\r\n\r\n>  You hereby grant to Company , a perpetual, non-exclusive, worldwide, fully paid-up, royalty free, irrevocable copyright license to reproduce, prepare derivative works of, publicly display, publicly perform, sublicense, and distribute your Contribution and such derivative works.\r\n\r\nNote two things:\r\n\r\n- \"non-exclusive\": so they can contribute the code elsewhere as well\r\n- license to ... sublicense: in other words, they could create a non-GPL version of Audacity, and use the GPL code in that version, however, the code would still remain GPL, and could be used in other GPL applications, such as a fork.\r\n\r\nOn the second point, I'm not sure that's even permissible with the GPL, but, that is what the CLA says, in any case. =||= > I've updated my fork for the \"Audacium\" name. How does that sound to everyone?\r\n\r\nI would like to suggest SoundMonkey as a potential name for a fork. Completely unrelated, so as to avoid possible trademark issues, and kinda cool (in my opinion) sounding.\r\n\r\nThe logo would just be a little monkey, sitting, wearing headphones, focusing on the music, with some eighth notes floating out of the headphones. =||= > > I've updated my fork for the \"Audacium\" name. How does that sound to everyone?\r\n> \r\n> I would like to suggest SoundMonkey as a potential name for a fork. Completely unrelated, so as to avoid possible trademark issues, and kinda cool (in my opinion) sounding.\r\n> \r\n> The logo would just be a little monkey, sitting, wearing headphones, focusing on the music, with some eighth notes floating out of the headphones.\r\n\r\nInteresting idea\r\n\r\n~~Also reminds me of the browser userscript extensions.~~ =||= For some reason I reminded that Audacity was used in investigation about [Alexei Navalny poisoning](https://en.wikipedia.org/wiki/Poisoning_of_Alexei_Navalny). WSM Group headquarters is located in Kaliningrad and they are definitely will obey to Russian government laws in special cases. I know it sounds insane and conspiracy driven but I can't otherwise understand why they need \"data necessary for law enforcement, litigation and authorities\".\r\n\r\n![photo_2021-07-06_18-05-36](https://user-images.githubusercontent.com/69355938/124625185-433d3200-de86-11eb-9b1f-66c4b04e17d8.jpg) =||= @aeiouaeiouaeiouaeiouaeiouaeiou it's also a standard clause in every single privacy policy ever, but hey, you really don't want to sound insane and conspiracy driven. =||= The only thing that pisses me off more than this move by Muse is that instead of addressing the issue - which is the dubious legality of this privacy policy in light of GPL - there's instead a stampede of basement dwellers spitting deranged bullshit about _russian gubrnment stealign muh data_ via an update check. =||= Does that mean, if I have a political private file on a computer with Audacity installed, and local law enforcement say they want the software provider help grab such file for them, Audacity would be willing to add such functionality to the version of software distributed into my computer? =||= @crsib is one of the bullshit contributor from muse group ig =||= Actually, do we know where are Muse Group from? =||= > Does that mean, if I have a political private file on a computer with Audacity installed, and local law enforcement say they want the software provider help grab such file for them, Audacity would be willing to add such functionality to the version of software distributed into my computer?\r\n\r\nNot likely. Audacity doesn't really read random files on your computer. And it's still open source, so they wouldn't just add random features like that without somebody noticing.\r\n\r\nWhat it means is that if you are involved in selling bootleg music, and use Audacity to process those files, and law enforcement wants MuseScore to help them prove that, they will.\r\n\r\nOr, if you're secretly a political dissident, and have a podcast to promote your anti-government views, and you edit those podcast files with Audacity, Muse will happily hand over all information (most likely metadata) to help them make their case. =||= @goodevilgenius you're just said that they can't add features that would access files because people would notice, but somehow they can start uploading your audio files or metadata somewhere and somehow nobody would notice?\r\n\r\nThe only real case that comes to my mind is FBI coming to them because someone used their voice garbler plugin to process their church shooting manifesto, and Audacity handing them over 100k IP addresses that are associated with this plugin's usage stats =||= @Eugeny They already added telemetry features, and people did notice. This current privacy policy debacle is the culmination of the last few weeks of sketchy decisions. People have been complaining about this for a little while now, but this new privacy policy was the culmination of that.\r\n\r\nBut that's a really good example. That's exactly something they could already do. =||= > > Does that mean, if I have a political private file on a computer with Audacity installed, and local law enforcement say they want the software provider help grab such file for them, Audacity would be willing to add such functionality to the version of software distributed into my computer?\n> \n> Not likely. Audacity doesn't really read random files on your computer. And it's still open source, so they wouldn't just add random features like that without somebody noticing.\n> \n> What it means is that if you are involved in selling bootleg music, and use Audacity to process those files, and law enforcement wants MuseScore to help them prove that, they will.\n> \n> Or, if you're secretly a political dissident, and have a podcast to promote your anti-government views, and you edit those podcast files with Audacity, Muse will happily hand over all information (most likely metadata) to help them make their case.\n\nOpen source only mean so much if you can guarantee the software being distributed into every single user's computer is build from the source identical to the version everyone see.\n\nAuthorities like Chinese government would tell companies which they have friendly relationship with, to ship a special version of their software to target's computers/devices, in order to obtain extra information from their devices.\n\nThe way this is worded seems to allow the company to legally do such thing. =||= According to https://github.com/audacity/audacity/discussions/1225, the wording is _supposed_ to indicate:\r\n\r\n> * Compliance with Law Enforcement - We will not collect or provide any information other than data described above with with any government entity or law enforcement agency.\r\n>    * Compelled by Court - Data is not shared upon an agency request; we will do so only if compelled by a court of law in a jurisdiction that we serve.\r\n>    * Limited Window - After 24 hours the IP address being collected is irretrievably lost.\r\n>    * Jurisdiction Requirements - We operate in many countries around the world and this is a standard policy requirement for providing services in many jurisdictions, regardless of the depth of data collected or nature of service.\r\n\r\ni.e. the small amount of data that is collected in the process of handling an update check (IPs and the user-agent string) can be shared if legally required; it's _not_ supposed to indicate that extra data will be collected if some government requests it.\r\n\r\n(This doesn't mean that the current wording is acceptable, especially since people are confused by it.) =||= All this is very exciting (not entirely in a bad way).  Honestly, I'm hopeful and can't wait to see the outcome. =||= > According to https://github.com/audacity/audacity/discussions/1225, the wording is _supposed_ to indicate:\n> \n> > * Compliance with Law Enforcement - We will not collect or provide any information other than data described above with with any government entity or law enforcement agency.\n> >    * Compelled by Court - Data is not shared upon an agency request; we will do so only if compelled by a court of law in a jurisdiction that we serve.\n> >    * Limited Window - After 24 hours the IP address being collected is irretrievably lost.\n> >    * Jurisdiction Requirements - We operate in many countries around the world and this is a standard policy requirement for providing services in many jurisdictions, regardless of the depth of data collected or nature of service.\n> \n> i.e. the small amount of data that is collected in the process of handling an update check (IPs and the user-agent string) can be shared if legally required; it's _not_ supposed to indicate that extra data will be collected if some government requests it.\n> \n> (This doesn't mean that the current wording is acceptable, especially since people are confused by it.)\n\nIn e.g. China, courts are not independent and are required to serve the interest of the ruling Chinese Communist Party, and thus adding compelled by court as condition is not going to sufficiently guard against such sort of requests, unless the vendor decided they aren't going to operate in China. =||= https://github.com/audacity/audacity/commit/368ab6f88845d1ac7723b6076e508aa4c619b4c6\r\n\r\nThis is a recent commit from yesterday authored by @JamesCrook \r\n\r\nIn this commit, he removes himself, and three other regular developers @rbdannenberg, @SteveDaulton, and Greg Kozikowski) from the development team, within the \"About\" dialog, and moves them to \"emeritus\" status.\r\n\r\nI wonder if these four developers decided to resign from the regular development team over disagreements with Muse regarding some of their recent questionable decisions. =||= Watch the FOSS community boycott Muse so god damn hard over these past few days lmao  =||= https://github.com/tenacityteam/tenacity =||= What about updating the fork from upstream?  Has there been discussion about this? =||= > 368ab6f88845d1ac7723b6076e508aa4c619b4c6\r\n> \r\n> This is a recent commit from yesterday authored by @JamesCrook\r\n> \r\n> In this commit, he removes himself, and three other regular developers @rbdannenberg, @SteveDaulton, and Greg Kozikowski) from the development team, within the \"About\" dialog, and moves them to \"emeritus\" status.\r\n> \r\n> I wonder if these four developers decided to resign from the regular development team over disagreements with Muse regarding some of their recent questionable decisions.\r\n\r\nHey @JamesCrook, @rbdannenberg, @SteveDaulton! \ud83d\udc4b\ud83c\udffb\r\n\r\nIf you don't mind, could one (or more) of you explain what's going on with that commit and the privacy policy change in general?\r\n\r\ncc also @petersampsonaudacity =||= Funny, atm in Connecticut there is a severe thunderstorm; I've never seen it this dark before \u2014  it\tfeels like 8 PM though it's only 5.  An omen? \ud83d\ude06 =||= > If you don't mind, could one (or more) of you explain what's going on with that commit\r\n\r\nYou mean apart from the barrage of insults, disrespect, and threats aimed at us from those claiming to be champions of open source software? Ask yourself, would you choose to put up with this shit after 14 years dedicated work for the benefit of the \"community\"?\r\n\r\nWe used to have fun, making software for you, providing documentation and support. Helping you all to make music, audiobooks, discover the joys of sound. This is not fun. I've never \"had\" to do it, I \"chose\" to do it, and now I've had enough. Well done guys and gals.\r\n =||= I'm totally with you.  Have you more knowledge of the situation that those of us here? =||= Fork now =||= @SteveDaulton, come on, that \"privacy policy\" was an insulting sewer of lawyer spew that could only be tolerated in a commercial product.\r\n\r\nWhy was such a thing added, and why wasn't it deleted as soon as anyone read it? =||= > You mean apart from the barrage of insults, disrespect, and threats aimed at us from those claiming to be champions of open source software? \r\n\r\n@SteveDaulton thank you - your contributions have been valued by many people, including myself. I'm not heavily involved in audio work, so I've only used Audacity intermittently over the years.  But it's been very helpful when I've needed it.\r\n\r\nBut I'm leaving for, and financially supporting, a fork because you and Muse have **told me to leave**.  My current use case for Audacity is helping my 9 year old son record and mix his own music, and according to your new privacy policy, that's not allowed.\r\n\r\nIf you're feeling surprised by the level of venom these changes have provoked, it's because Muse's actions are massively violating community norms.  The age issue is just one of these: I cut my teeth on Slackware GNU/Linux back in the 90s when I was still in high school, and I'm sure many others here did too.  Applying privacy-invading analytics and a minimum age to a Free Software project feels like a slap in the face.\r\n\r\n> Why was such a thing added, and why wasn't it deleted as soon as anyone read it?\r\n\r\n@differentprogramming if I had to guess - no-one read it.  It was probably just chucked in as boilerplate (given similarities to other group boilerplate).  I once put an easter egg in my startup's ToS and only one person found it over the course of four years.  And he was a friend who went looking for things like that because he knew me :wink: =||= I STILL haven't heard anyone associate with the project in any way say \"ok, you got us guys, the 'children shouldn't use our software' clause was laughably absurd and we're taking it out!\"\r\n\r\nInstead I see people one of whom may have inside information (seems to) insultingly splitting legal hairs about what the GPL means and making specious arguments as if doing things that every other program does is a legal minefield.  \r\n\r\nIt isn't, grow up. =||= I am surprised that _anyone_ is surprised that people are angrily leaving the bar right after the bouncers told them to leave the bar.\r\n\r\nI would like to note that they _still_ have not addressed the age restriction issue with reference to the GPL.  The GPL automatically nullifies any restrictions on _using_ the software, so no age limit is going to protect them from litigation if people 13 or under just ignore it and use it anyway.\r\n\r\nI do believe in giving credit where it is due, so yeah, my thanks to those who started and supported this project.  _But_, this goes both ways, and credit for doing good does not magically absolve people of sin.  So at the same time as giving thanks for the good, I also acknowledge and give grief for the bad.  \"I'm unhappy that I did all this hard work, and now I am getting flamed for doing something bad,\" is just not valid.  If you were a party to this, _you deserve all of the backlask you are getting from it_, regardless of whether you also did good.\r\n\r\nSo thanks for the good, but no thanks for the bad, and if your response is to bail out as soon as someone points the finger, good riddance.  Sorry to see you shilling out after doing so much good, but quit pretending like the good magically makes you innocent. =||= > \"I'm unhappy that I did all this hard work, and now I am getting flamed for doing something bad,\" is just not valid.\r\n\r\nIt most certainly can be.  Consider that maintainers like @SteveDaulton have probably received more flames in this one thread than they have _ever_ received notes of appreciation for their work. =||= No, no it can't be.  \"But look at all the charities I helped\" doesn't absolve you of theft. =||= btw, has Steve ever endorsed the new privacy policy changes and/or the telemetry?  =||= Good question.  Somewhere around here someone asked him why he decided to leave the project, and he responded.  He didn't say he supported the changes, but he also didn't deny it.  His response did carry an implication, however, that he was insulted the community was opposed to the change.\r\n\r\nTo be clear on my position: If it turns out he was opposed to the changes, then he definitely didn't deserve all of the backlash.  The evidence thus far, however, suggests that he was in support of them. =||= No, he probably didn't care, but he took the atmosphere personally.\r\nIt's not developers who are in charge of a privacy policy, it would be the owner. =||= > No, no it can't be. \"But look at all the charities I helped\" doesn't absolve you of theft.\r\n\r\nNo, it doesn't.  But that's not what I was trying to claim.\r\n\r\nMy point was more that I can completely understand why @SteveDaulton got upset and left, based on the not-unreasonable assumption that he's received a lot more flamage over this one wrong thing, than support he ever received for all the right things. =||= Oh yeah, I'm sure he deserves more accolades for the good he did than he ever got.  Like I said, credit where it is due.  That still doesn't mean he doesn't deserve backlash though.\r\n\r\nThat said, I am also not suggesting the _level_ of backlash was appropriate.  It does seem like it was rather overdone, and given that, he _was_ probably justified in bailing out. =||= Linking a relevant and highly active thread (that many here already commented on, but which may have been missed by some): #1225 =||= In addition, I don't think this has been mentioned before: the age restriction prevents Audacity from being Open Source as per the [OSI's definition](https://opensource.org/osd):\r\n\r\n> 5. No Discrimination Against Persons or Groups\r\n>\r\n> The license must not discriminate against any person or group of persons.\r\n =||= Less active but additionally relevant: #889 =||= The age restriction is due to Muse complying with COPPA for the data gathering.  Any contract or license including the GPL can\u2019t supersede the law.  By gathering the data, which is not prohibited by the GPL, Muse isn\u2019t the one restricting the use based on age.  I\u2019d bet dollars to donuts were that ever to be litigated as a GPL violation (which it most certainly won\u2019t) that would be their defense.   =||= > By gathering the data, which is not prohibited by the GPL, Muse isn\u2019t the one restricting the use based on age.\r\n\r\nI disagree.  If they left the data-gathering out, this would be a non-issue.  Instead they are _choosing_ to introduce a behaviour to the program (analytics data gathering) that makes it subject to COPPA, and thus in conflict with the GPL (perhaps) and the OSI definition of Open Source (definitely).\r\n\r\nThis is _entirely_ on Muse. =||= Even if we were, for the sake of argument, to accept the ***ridiculous*** premise that laws mean anything, the GPL doesn't restrict program behavior. There's no anti-spyware clause in the GPL AFAIK. Nor does introducing behavior that may be illegal in some country or other (like spying on 12 year olds) violate the GPL.\r\n\r\nTL/DR: Saying anyone under 13 may not use the program does violate the GPL. Spying on children does not violate the GPL. It's just creepy. =||= > TL/DR: Saying anyone under 13 may not use the program does violate the GPL. \r\n\r\nDisagree.  From the GPL 2.0:\r\n\r\n> 4. You may not copy, modify, sublicense, or distribute the Program except as expressly provided under this License. \r\n...\r\n> 5. You are not required to accept this License, since you have not signed it. However, nothing else grants you permission to modify or distribute the Program or its derivative works. \r\n\r\nI'd argue that additional usage restrictions based on age constitutes sublicensing.  But I'm not a lawyer, hence my opinion that this perhaps violates the GPL.  I'm a lot more sure about it violating the OSI definition of Open Source.\r\n\r\n... which is in itself an interesting situation.  How could GPL-licensed software not also be Open Source?\r\n\r\n> Spying on children does not violate the GPL. It's just creepy.\r\n\r\nAgree.\r\n\r\n =||= The chances of Muse facing litigation for collecting data on 13 year olds is greater than being litigated against as a GPL violation.   There are several firms that make a living on COPPA violations.  AFAIK there are only a handful of GPL suits brought to the court.  Sure they could take it out but they have business reasons wanting to keep it in.  I\u2019d be more concerned with them not requiring a subpoena from the gov for data requests.  In many ways this is similar to how the Mariadb fork started after Oracle bought the mySQL trademark.  =||= But they're not \"gathering information\" by any sane definition of it, so this clause and the refusal to back down on it have to be a stalking horse.\r\n =||= > But they're not \"gathering information\" by any sane definition of it, so this clause and the refusal to back down on it have to be a stalking horse.\r\n\r\nNot necessarily.  I'd put money on it being an ass-covering exercise actually, having experienced the same thing many times in corporate environments.\r\n\r\n\"I'm pretty sure we're not gathering any data that would fall afoul of $LAW.\"\r\n\"Yeah but legal has said we need the disclaimer _anyway_.\"\r\n\"_Fine._\"\r\n\r\nThe difference here is that the ass-covering is (probably) in conflict with the pre-existing software license, and (definitely) renders it not Open Source. =||= By the way, the maintainer of the fork has been threatened in real life and his address published, so he's stepped down.\r\nThe fork is covered with trolling and a troll fork has also been made.\r\nJesus. =||= > By the way, the maintainer of the fork has been threatened in real life and his address published, so he's stepped down.\r\n> The fork is covered with trolling and a troll fork has also been made.\r\n\r\n![wth-is-wrong-with-you-people](https://user-images.githubusercontent.com/65949/124697642-7fc26980-df2a-11eb-9f07-ef9f84bba52a.gif)\r\n\r\n =||= They're promoting a troll fork that says \"More information for developers is available from 4chan's technology board.\" on their readme. =||= > The age restriction is due to Muse complying with COPPA for the data gathering.\r\n\r\nMy understanding is that this requirement is because they specifically record personally identifiable information, namely, an IP address.\r\n\r\nIf they didn't record any personally identifiable information, that restriction, and much of this privacy policy, would but be necessary.\r\n\r\nAnd if the purpose is to get aggregate usage data, as they've said, that information isn't necessary to record. =||= Here's how the GPL/age thing works:\r\n\r\nThe GPL states that no restrictions can be placed on the use of the software.  The GPL also states that any restrictions placed are invalid and can be removed or ignored without changing the licensing.\r\n\r\nSo first, it is a violation of the GPL to put an age restriction on the software.  There is no law requiring Muse to add anything to the software that requires an age restriction, thus adding that is completely voluntary, and the subsequent requirement to add the age restriction is actually not a requirement but is rather completely voluntary.  As such, the law does not protect them from litigation over the GPL violation.\r\n\r\nSecond, because the GPL explicitly and automatically invalidates and removes any restrictions to use, the age restriction is completely invalid and meaningless.  Legally, this means that it _cannot_ protect Muse, if people 13 and under choose to use Audacity, and they end up collecting data on them.  \"Oh, we had a restriction\" won't hold up in court, when the license explicity invalidates and removes all restrictions.\r\n\r\nIn short, they are trying to cover their butts, but not only are they violating the license terms _they agreed to as a condition of distributing to the software_, they are also totally _failing_ to _actually_ cover their butts.  In doing this, they are actually leaving themselves open to legal liabilities _on both sides_.\r\n\r\n\r\n(Not a lawyer, but _actually read the GPL_, too many times so far.) =||= As @goodevilgenius says, it's the identifiable information in this case the IP address.  I have first hand, direct experience in data collection matters relating to COPPA.\r\n\r\n>Second, because the GPL explicitly and automatically invalidates and removes any restrictions to use, the age restriction is completely invalid and meaningless. Legally, this means that it cannot protect Muse, if people 13 and under choose to use Audacity, and they end up collecting data on them. \"Oh, we had a restriction\" won't hold up in court, when the license explicity invalidates and removes all restrictions.\r\n\r\n\r\nNothing protects anyone from being litigated against. However it's established under law that an open source license is a contract in the US.  That means provisions of a license are null and void when competing against an established law (in this case 16 CFR Part 312).  When that part of the contract is stuck down by existing law there can be no violation of the contract.  Specifically forbidding young users and having a dialog has been found to be sufficient to comply with COPPA.  Law trumps contract terms every single time.  Of course if you have some case law where the GPL supersedes established law I'm all ears.  \r\n\r\nAs for someone litigating Muse over GPL violations the chances are slim and none.  FIrst, someone would need standing.  Perhaps a contributor.  Not a user.  Second, and more important, you would need assloads of cash.  Well into six figures just to start.  This isn't an issue of great public importance so the usual suspects that fund these things, EFF, etc aren't going to buck up.\r\n\r\nETA COPPA CFR =||= >  When that part of the contract is stuck down by existing law there can be no violation of the contract. Specifically forbidding young users and having a dialog has been found to be sufficient to comply with COPPA. Law trumps contract terms every single time.\r\n\r\nSure.  So by adding PII data collection to Audacity, Muse has rendered it _not Free or Open Source Software_.  It no longer complies with the GPL (at least in the US, where COPPA trumps GPL), and it no longer meets the OSI's definition of Open Source.\r\n\r\nI'd not given this much thought before now, but I suppose this means that software cannot both be Free or Open Source, _and_ collect PII by default.  At least not in jurisdictions with COPPA or similar.\r\n\r\nEdited: Thinking on this some more, it'd seems like COPPA compliance would be achieved by just making the analytics opt-in, right?  And providing an age notice there?   =||= I think you are missing the point.  The point is that because the GPL invalidates the age restriction, Muse cannot claim that the user violated the restriction, leaving Muse 100% liable for collecting the data.  I'm not suggesting the GPL trumps the law.  I am suggesting that the GPL _invalidates the defense the age restriction is supposed to create_.\r\n\r\nThe point of the age restriction is that _when_ users 13 years old and under use the software, resulting in Muse collecting their data (which I think we all know _is going to happen_), Muse can claim that _they_ are not liable, because the data was collected as a result of _user_ violation of the license.  _However,_ because the GPL explicitly nullifies the age restriction, that defense cannot hold, because the user _didn't_ violate the license, because the age restriction _wasn't valid in the first place_.\r\n\r\n\r\nOn a side note, the FFS _does_ keep open source lawyers on hand specifically for litigating GPL violations.  They typically save their resources for cases that are high profile, likely to result in permanent changes to the law (ie., could get to the Supreme Court or some other high court), or are such clear violations that they would be easy to win and set precedents supporting elements of the GPL that haven't already been tested in court.  This would be kind of high profile.  It definitely won't make it to any high court.  _But,_ as far as I am aware, this _is_ part of the GPL that has not been tested and that would likely be easy to win.  (Easy not as in _cheap_, but as in, the violation is obvious and clear.  Funding isn't a huge issue for the FSF, and it's lawyers don't generally charge a ton, because they are doing this in part as a charitable service.) =||= Well they're either going to fix the privacy policy or they're not.\r\n\r\nIf they don't take out the \"not for kids\" clause then obviously schools will find a fork, and probably the Linux distributions will move to the fork.  \r\n\r\nI think the 4chan raid on the fork is over.  They targeted one maintainer and he quit. \r\n\r\nI'm sure 4chan has real programmers who hang around so we'll see if their fork blossoms past the \"we're trolling Muse and random people\" stage.  You'd think not, but they may have teenagers who have more time on their hands than adults do. =||= Yeah, that \"no kids\" clause is the real killer.  It's also the one thing they keep sidestepping, dodging, and generally ignoring.  If they can't get rid of that, it will likely be the killer.  I've got kids, and I'm sure some of them will eventually want to do stuff with audio processing.  In fact, I am currently working on a project designing a MIDI input device (based on something made by John Park at Adafruit, with some critical differences), and I am pretty sure that once I have it working, my kids are going to want to play with it.  And I'll be surprised if at least one or two aren't interested in recording and doing stuff with music they are making using the device.  Am I going to use Audacity for that?  Not if there is a \"not for kids\" clause.  All of my kids are under 14, and quite frankly, I am not going to put up with that kind of discrimination, for some stupid auto-update feature.  I'll use a fork and compile myself before I do that. =||= Please can everyone remember terms of GPLv3 are different to GPLv2. Certain things that would not be allowed under version 3, are under version 2...\r\n\r\nAt best under either licence telemetry legality for minors is a gray area of law.\r\n\r\nThere is still issues, which is why a fork is needed so schools and such can use the software. And the issue with this kind of cover your ass language, is there is no transparency or non-legal ability to do worse later. Please remember Muse is trying to close the code up with their CLA too. They could make the binary version under a new proprietary licence, have that version distributed binaries wise and have it sending every bit of audio back to them to check against their own copyrights in a contentID like bot under these terms. While this would be monumentally stupid, from a legal point of view, these terms allow that. =||= To pizzadude's comment about firejail, if you have firejail installed, it has a profile for audacity which prohibits net access (/etc/firejail/audacity.profile)\r\n\r\nAlso, there is a profile for musescore. If anyone using musescore is concerned with theft of IP, simply add the **net none** option to the profile. =||= Of course it says this... =||= Muse Group's reaction after all this mess looks like:\r\n\r\n![tenor](https://user-images.githubusercontent.com/69355938/124919015-64289300-dffe-11eb-86c0-93355eeec34c.gif) =||= Shoutout a recent project, Audacium, a promising Audacity fork already with hundreds of stars.\r\n\r\nhttps://github.com/SartoxOnlyGNU/audacium\r\n\r\n> The goals Audacium is trying to achieve are pretty simple :\r\n> \r\n> Restoring Audacity to what it was before, with no crash reporting (GH Issues exist for that), or very simple update checking (only at startup, not periodically)\r\n> Adding new features people want, listening closely to the community\r\n> Make the code base easier to work with, less confusing for a newbie\r\n =||= Reason for collecting personal data: So they can steal your recording and file a false DMCA claim. =||= @milasudril quit flaming and say something constructive FFS. =||= Yeah, nope on Audacium.  Cool name, but \"already with hundreds of stars\" tells me it isn't doing very well at all.  The [Tenacity fork](https://github.com/tenacityteam/tenacity) had over two _thousand_ stars two days ago.  I just checked, and it is up to 3.7k stars now, while Audacium has only 242.\r\n\r\nDon't get me wrong, I am glad to see there is significant momentum behind this, but it's a shame people are still trying to make headway with forks that aren't getting significant community support, when they could be showing solidarity with the larger community and combining their efforts. =||= Stars indicate popularity. Not staying power.\r\n\r\nhttps://github.com/SartoxOnlyGNU/audacium/issues/3 =||= So you are suggesting that the 242 stars on your fork are more likely to have a solid community than the 3.7k on the other?  Would you care to explain why you are so convinced that so many more of those 242 people will stick around than the 3.7k?  By my math, 93% of those 3.7k could bail out, and it would _still have_ more people than your measly 242, if you didn't lose a single one.\r\n\r\nSure, popularity doesn't indicate staying power, _but we are talking about the exact same product_.  I am going to back the more popular one, because higher popularity does indicate _far higher **odds** of staying_.  You've got 13 forks.  That's 13 potential contributors.  The other has 165 forks, which is 165 potential contributors.  Again, over 90% could bail out on the more popular one, and they would still have a bigger core developer pool than yours will have if _no one_ bails out.\r\n\r\nIt's all about probability.  Popularity may not indicate staying power, but it _does correlate with staying power_.  And given that this correlation is the only metric we have for estimating staying power, the evidence strongly suggests the more popular one has well over 10 times the probability of sticking around.  That is, unless you have some inside information about both of these that I don't?...  I didn't think so. =||= Deleted Audacity from all my PCs and laptops. Thanks for putting it out clean. Tenacity looks good.....installing  =||= It\u2019s too early in the forks to claim one is more popular than another.  Github users are devs and dev enthusiasts.   Where the rubber meets the road is when it\u2019s shipped and rank and file users start downloading and using it.  That said the Tenacity fork looks to be well on its way.  Still much to do though. =||= This is a valid argument.  It's definitely not clear where users will be on this.  That said, the Tenacity fork has a _strong_ head start.  The question right now isn't so much whether the community will get behind them.  The community will probably back whichever gets into the major Linux distros first (and the distro decision makes are devs, so devs will ultimately be the ones making the final call).  The question is going to be, can they maintain the momentum?  Their odds are much higher than other forks with only 5% of the support, but all it would take is a few bad decisions by fascist project leads, and we could see the same mass exodus we are seeing for Audacity.\r\n\r\nSo yeah, very much in the air.  But, if I _had_ to bet, I would bet on the one with 3.7k stars over the one with less than 250.  More people means more people likely to stay, more room for community involvement and feedback (because more community overall), and more people to contribute.  I think what it comes down to is that Tenacity is _going_ to win this, unless people with authority over the repo _really screw it up_.  (Also, given the response of the community, \"Tenacity\" seems like a much more appropriate name.  But that's just me.) =||= At the current stage, what matter more is not the number of stars each forks are getting, but rather, the ability each fork to be able to roll out stable and quality bugfixes and updates as necessary in the future, and whether their developers can make people feel confident about their ability to maintain their fork.\n\nBut then, for multiple reasons, including the manager of this repo have right to control this thread, as well as the theme of this thread is about something else, I don't think this thread is the best place to discuss future of various forks. =||= Right, but again, it's 160+ forks versus around 13.  That's no guarantee that all of those forks are going to be serious contributors, but the more there are the more potential contributors there are.  So again, the more popular one still has better odds, because more people at least seem to be _interested_ in contributing.  That's still no guarantee the more popular one will ultimately be the better one, but it does have more potential to be, at this point in time. =||= Speaking of popularity: Don't forget to remove your star from this repo. =||= Why @davidak? I don't see why actually.  In fact, during the past 3 months, and especially the past week, the stars on this repo (https://github.com/audacity/audacity) has skyrocketed. https://star-history.t9t.io/#audacity/audacity =||= People are starring this repository so they can know (and warn others) when the next shoe drops =||= >Why @davidak? I don't see why actually. \r\n\r\n@bl-ue if you don't want to promote Audacity in the current form, why give it a star?\r\n\r\nIt's just a small thing to show that you dislike the current direction. =||= True, but why not wait until they make a decision?  To me, it's not clear that they're going to continue doing the stuff everyone is opposed to.  Personally, I want it to stay where it is in my starred list unless I'm sure I'm not going to want _it_ any more, which I'm _not_ sure of. =||= Here's what they could do to make this right:\r\n\r\n1. Put a clearly described option in the installer to turn the telemetry on or off. (also in the options menu for if you change your mind. Should default to \"off\" in portable installations)\r\n\r\n2. Include language in that option in the installer asking that anyone under 13 turn telemetry off, but is of course welcome to continue using the app.\r\n\r\n3. Let the community control the build process, so everyone knows exactly what code goes into the builds and there are no surprises.\r\n\r\nTo me, this would fix it. I'd be OK with continuing to use official Audacity under these conditions. The CLA is annoying and may put off some people from contributing but it isn't the totally evil practice that telemetry you can't turn off is. =||= >     2\\. Include language in that option in the installer asking that anyone under 13 turn telemetry off, but is of course welcome to continue using the app.\r\n\r\nBecause when you turn 14, you suddenly understand tracking on the internet, sure. =||= Audacity is dead =||= > Because when you turn 14, you suddenly understand tracking on the internet, sure.\r\n\r\nNo, because the law in some countries in which they wish to operate criminalizes tracking minors under 13.\r\n\r\nTelemetry to gather statistics on app usage isn't inherently evil ***when you can turn it off*** and devs can scrutinize exactly what info it collects. =||= >  isn't inherently evil _**when you can turn it off**_\r\n\r\nNo, the other way around. If you *can* turn it on, but don't get it shoved in your face. =||= True, but if you _could_ turn it off, package installers would make sure it was installed _with_ the option off. =||= > package installers would make sure it was installed _with_ the option off.\r\n\r\nWhen building from source, networking is disabled by default, so there is no update checking and no bug reporting unless you explicitly enable those options. This can be seen in the CMakeLists.txt file:\r\n```\r\ncmd_option( ${_OPT}has_networking \r\n   \"Build networking features into Audacity\"\r\n   Off)\r\n``` =||= Has anyone gone through the source yet to see exactly what the telemetry is sending? The privacy policy is worded very sus, I just wanna know what the heck they mean =||= > I'd argue that additional usage restrictions based on age constitutes sublicensing. But I'm not a lawyer, hence my opinion that this perhaps violates the GPL.\r\n\r\nIt doesn't seem like you were disagreeing with me here. It sounds like you were completely agreeing with everything I said, except with adding a \"perhaps\" to what I said.\r\n\r\nIf Audacity has a GPL release at all, then that GPL release inherently grants the right to minors under 13 to use the software and prohibits anyone who redistributes the GPL release from adding any restrictions to conditions of further redistribution which would restrict minors under 13 from using the software. That's part of what GPL means. Muse may, if they've secured all the relevant copyrights to all the existing code in Audacity, choose to also put out a non-GPL release that's proprietary software and they can ban minors under 13 from using that all they want. But they can't stop minors under 13 from using the GPL release because the GPL says what it says. The GPL is designed specifically to prevent restrictions just like this one from being introduced. =||= While not *directly* related to the topic of Audacity's privacy policy, apparently Muse Group are comfortable blackmailing people with threats to their life: https://twitter.com/marcan42/status/1417085393762099200 =||= @workedintheory wanna explain yourself? =||= > apparently Muse Group are comfortable ...\r\n\r\nWhile distressing information, this sounds to me like a separate issue from the present one, and this thread is likely not the place to discuss it. =||= > > apparently Muse Group are comfortable ...\r\n> \r\n> While distressing information, this sounds to me like a separate issue from the present one, and this thread is likely not the place to discuss it.\r\n\r\nWhile it is indeed a little off-topic, it paints a picture of the company behind this privacy policy. What they stand for. What behavior they accept & condone from their employees. The ability of their lawyers when crafting privacy policies, or reaching out regarding perceived infringements. Now that more of us have a broader picture of what Muse are really like, we can address the privacy policy in this light and develop more informed opinions about it. =||= > and this thread is likely not the place to discuss it.\r\n\r\nNo, I think it really is on-topic for this thread.\r\n\r\nPeople have been asking to give Muse the benefit of the doubt; the argument is that this stuff is just group boilerplate, and that we can trust them to do the right thing regardless of what the licenses and terms of service say.\r\n\r\nI think this shows pretty convincingly that none of that is true.  \"Were he deported to China, who knows how he may be received.\"  Nice life you have there, be a shame if anything happened to it \ud83d\ude20\r\n\r\n![comment](https://user-images.githubusercontent.com/65949/126235344-e81180e5-c1db-42e1-a2d8-dd0c145ee5da.jpeg)\r\n =||= > While not _directly_ related to the topic of Audacity's privacy policy, apparently Muse Group are comfortable blackmailing people with threats to their life: https://twitter.com/marcan42/status/1417085393762099200\r\n\r\nWell, the new Audacity owners seem nice! /sarcasm =||= > ![comment](https://user-images.githubusercontent.com/65949/126235344-e81180e5-c1db-42e1-a2d8-dd0c145ee5da.jpeg)\r\n\r\nWhat's the source for that image? I want to look more into this incident. =||= > > ![comment](https://user-images.githubusercontent.com/65949/126235344-e81180e5-c1db-42e1-a2d8-dd0c145ee5da.jpeg)\r\n> \r\n> What's the source for that image? I want to look more into this incident.\r\n\r\nhttps://github.com/Xmader/musescore-downloader/issues/5#issuecomment-882450335, \r\nclick on the edited, then click on the second entry from the top. =||= This issue is also relevant https://github.com/Xmader/musescore-downloader/issues/130 MuseGroup seems to confirm that threats *are* company policy and not some rogue, over-eager employees. =||= > > > ![comment](https://user-images.githubusercontent.com/65949/126235344-e81180e5-c1db-42e1-a2d8-dd0c145ee5da.jpeg)\r\n> > \r\n> > \r\n> > What's the source for that image? I want to look more into this incident.\r\n> \r\n> [Xmader/musescore-downloader#5 (comment)](https://github.com/Xmader/musescore-downloader/issues/5#issuecomment-882450335),\r\n> click on the edited, then click on the second entry from the top.\r\n\r\nDamn. I've been using MuseScore all this time and just discovered that stuff like this was going on in the background. People should really be made more aware on how MuseGroup behaves.\r\nCan't believe this happened an year ago and only now is this getting coverage: [https://www.theregister.com/2021/07/20/muse_group_deportation_threat/](https://www.theregister.com/2021/07/20/muse_group_deportation_threat/) =||= > Can't believe this happened an year ago and only now is this getting coverage: [theregister.com/2021/07/20/muse_group_deportation_threat](https://www.theregister.com/2021/07/20/muse_group_deportation_threat/)\r\n\r\nWait, that is **ONE YEAR OLD**??? What?!\r\nThis is actually BS =||= > > Can't believe this happened an year ago and only now is this getting coverage: [theregister.com/2021/07/20/muse_group_deportation_threat](https://www.theregister.com/2021/07/20/muse_group_deportation_threat/)\r\n> \r\n> Wait, that is **ONE YEAR OLD**??? What?!\r\n> This is actually BS\r\n\r\nThe article is pretty new, but the github thread here: [https://github.com/Xmader/musescore-downloader/issues/5](https://github.com/Xmader/musescore-downloader/issues/5) was opened on February 8, 2020. The fellow who threatened him, workedintheory, is the same guy who wrote this: [https://github.com/audacity/audacity/discussions/1225](https://github.com/audacity/audacity/discussions/1225). The original threat post has since been removed but has been archived on waybackmachine [https://web.archive.org/web/*/https://github.com/Xmader/musescore-downloader/issues/5](https://web.archive.org/web/*/https://github.com/Xmader/musescore-downloader/issues/5).\r\n\r\nLike Audacity, MuseScore is also currently having discussions on having forks - Just that the fork should have occurred ages ago given how MuseGroup actually behaves behind the scenes. Who knows, there may be even more incidents, just that they weren't publicized enough. If anything, I think that this proves that MuseGroup is not an organization that should be trusted and we should've started forking the moment they announced their acquisition of Audacity. =||= > The article is pretty new, but the github thread here: [Xmader/musescore-downloader#5](https://github.com/Xmader/musescore-downloader/issues/5) was opened on February 8, 2020. The fellow who threatened him, workedintheory, is the same guy who wrote this: #1225. The original threat post has since been removed but has been archived on waybackmachine [web.archive.org/web/*/https://github.com/Xmader/musescore-downloader/issues/5](https://web.archive.org/web/*/https://github.com/Xmader/musescore-downloader/issues/5).\r\n> \r\n> Like Audacity, MuseScore is also currently having discussions on having forks - Just that the fork should have occurred ages ago given how MuseGroup actually behaves behind the scenes. Who knows, there may be even more incidents, just that they weren't publicized enough. If anything, I think that this proves that MuseGroup is not an organization that should be trusted and we should've started forking the moment they announced their acquisition of Audacity.\r\n\r\nYep the thread I am talking about. =||= Marginally off-topic, but MustGroup is evil, and perhaps should consider not threatening people who they think may violated their license with death threats.\r\n\r\nThe good news is that at least the name \"Audacity\" has another layer of meaning to it =||= The final revised Privacy Policy was release with 3.0.3 \r\na) the age restriction has been removed\r\nb) no personal information is gathered\r\nc) users can opt out\r\nc) for folks who build Audacity (e.g. distros) networking has to be positively enabled =||= > b) no personal information is gathered\r\n> c) users can opt out\r\n\r\nPlease clarify. Why would I need to opt out if no personal information is gathered? =||= On first launch of 3.0.3 (or later) you will get this dialog\r\n![image](https://user-images.githubusercontent.com/50205984/128167617-9f6431e6-c76b-40e5-9496-9f029a74e7a7.png)\r\nIf you turn that off in preferences before clicking the OK button no data at will be sent.\r\nIf you do not turn it off then your IP address is sent but not stored.\r\n\r\n\r\nIf you get database errors you may see a message like this:\r\n![image](https://user-images.githubusercontent.com/50205984/128167931-7991c03f-d3b2-4078-8cdc-90690cbfc0fc.png)\r\nIf you click the \"Don't Send\" button then no data will be sent - your choice if you want to help the dev and QA team to fix the bug or not.\r\nIf you click \"send\" then your IP address is sent but not stored.\r\n\r\nBoth are commonplace across most apps, websites and operating systems. =||= >  If you turn that off in preferences before clicking the OK button no data at will be sent\r\n\r\nI'd never guess that. Not very intuitive. How about opt-in or a large button that says \"opt-out\" that is at least easy to spot? =||= It's not the _most_ intuitive interface, but at least the dialog, when read, is clear. Thanks for that, @AudacityTeam =||= > but at least the dialog, when read, is clear.\r\n\r\nThe dialog is clear, but you still don't know that you have to open the settings before clicking \"OK\" if you don't want to send data.\r\n\r\n =||= > > but at least the dialog, when read, is clear.\r\n> \r\n> The dialog is clear, but you still don't know that you have to open the settings before clicking \"OK\" if you don't want to send data.\r\n\r\nYeah, that's pretty sneaky.  =||= The way disabling the update check is implemented in the app update dialog is a clear anti-pattern: Just offe the user the option to \"check for updates\", \"never check for updates\" (disables data transmission) and \"ask me later\" (postpones the decision, does not send any data).  =||= Based on 14 years of user feedback, I expect that the majority of Audacity users will want update checking enabled. For those users that do NOT want update checking, there's a pop up message on first run that tells you how to disable it.\r\nThat's good enough for me. =||= > \"check for updates\", \"never check for updates\"\r\n\r\nI have a package manager for a reason, don't want all my software to complain. I run dialy updates anyway. =||= >  That's good enough for me.\r\n\r\n\"Works for me.\"\r\n\r\nNo, really. It's not obvious that you can open the dialog BEFORE clicking \"OK\", just put two buttons there.\r\n\r\nNo need for dark patterns in this software. =||= > No need for dark patterns in this software.\r\n\r\nOh for goodness sake. When did plain English become a \"dark pattern\"?\r\nDon't you have something better to do. I'm out of this nonsense. Find someone else to play with. =||= > > That's good enough for me.\r\n> \r\n> \"Works for me.\"\r\n> \r\n> No, really. It's not obvious that you can open the dialog BEFORE clicking \"OK\", just put two buttons there.\r\n> \r\n> No need for dark patterns in this software.\r\n\r\nHow's it a dark pattern? =||= > How's it a dark pattern?\r\n\r\nIt tricks users into accepting something they don't want.\r\n\r\nhttps://en.wikipedia.org/wiki/Dark_pattern\r\n\r\nhttps://www.darkpatterns.org/ =||= > Oh for goodness sake. When did plain English become a \"dark pattern\"?\r\n\r\nThis is a disingenuous statement. Small \"unsubscribe\" links at the bottom of emails, styled so as not to appear as a hyperlink, follows the letter of the law, but is obviously a dark pattern. Despite \"unsubscribe\" being right there as \"plain English\".\r\n\r\nIt's clear from looking at the screenshot that Audacity Team doesn't want users to turn off automatic updates, and it resorts to using a dark pattern to achieve this. Why not tell users in plain English: \"Update checking is really important to Audacity. We'd prefer if you didn't turn it off\", followed by 3 buttons: \"check for updates\", \"never check for updates\", \"ask me later\" .\r\n =||= Does Audacity accept pull requests? Perhaps someone might add those buttons in themselves and fix this problem for everybody. =||= > Does Audacity accept pull requests? Perhaps someone might add those buttons in themselves and fix this problem for everybody.\r\n\r\nSure, as if people didn't have other things to do too, instead of fixing the fallout from people who obviously ignore every user feedback they don't like.\r\n\r\n@SteveDaulton Why so hostile? What's so complicated to understand in \"avoid dark patterns\"? Especially when two people already described a solution that is easy to understand for the user AND neutral in it's implementation. Looking at how members of the Audacity org on twitter have reacted in the past months to criticism it looks like you got a bet to win how fast you can lose every last user of audacity. FWIW: I've blacklisted audacity for my systems, thus have no incentive to support this hostile and toxic environment.\r\n\r\nApart from this: I'll NOT sign the CLA for Audacity. And since you require this for any contributions I'm afraid you'll have to look for someone else to write the patch for this UI change. =||= The email doesn't threaten the guy. Anyone here, please seek some credibility we all ought to. =||= "], ["1215", "All legal documentation should accessible easily from within the app", "Peter Sampson", "petersampsonaudacity", "07/26/21, 08:27:30 AM", "All legal documentation should accessible easily from within the app\r\n\r\n1.  The launch splash screen\r\n2.  Help>About Audacity\r\n3.  Menu item(s) in the Help menu\r\n\r\nLinks to go to the legal documentation on the Audacity Website.", "The privacy policy is not accessible to keyboard users from within the app. This is because the about dialog uses wxHtmlWindow controls to display information, and the links within these controls are not accessible for keyboard users.\r\nThe privacy policy could be made accessible by providing a menu item in the Help menu, as suggested by Peter.\r\nI think that this should be fixed before 3.0.3 is released. =||= I agree with David's point here about accessibility -  accordingly I'll flag this as a bug =||= A link to the privacy policy was added in commit 01da348. This is not accessible to keyboard users. See my previous comment. =||= For non VI users this issue would appear to be fixed:\r\n\r\n1. on initial launch of 3.0.3 the Update checking dialog has a link to the Privacy Policy\r\n2. Error messages that phone-home have a link to the Privacy Policy\r\n3. There is a link to the Privacy Policy from Help > About Audacity >Legal\r\n\r\nBut David Bailes' point still stands in that these links (and thus the Privacy Policy) are unattainable ny VI users and keyboard users (non-mouse & non-trackpad) - hence this bug remains open for this residual. =||= I have just tested on W10 with 3.0.3 latest alpha using Narrator\r\n\r\n1.  the fill text is read out\r\n2. the links are identified as links\r\n3. the user can tab to the links\r\n4. user can then hit Enter to activate the Link(s) - and thus can view PP or easily visit Application prefs\r\n\r\n@DavidBailes  - is this satisfactory ? =||= > I have just tested on W10 with 3.0.3 latest alpha using Narrator\r\n> \r\n> 1. the fill text is read out\r\n> 2. the links are identified as links\r\n> 3. the user can tab to the links\r\n> 4. user can then hit Enter to activate the Link(s) - and thus can view PP or easily visit Application prefs\r\n> \r\n> @DavidBailes - is this satisfactory ?\r\n\r\nYes. =||= Closing this (and the VI residual) and the basis of David's comment. =||= "], ["1216", "Add some honesty to the README", "Mathijs van Gorcum", "mvgorcum", "07/04/21, 02:55:06 PM", "Thank you for at least being honest about your motivation.", "Thanks, but this can't be accepted as you haven't signed the CLA. =||= LMAO =||= I can't believe this is happening... =||= >**audacity** blocked **mvgorcum**\r\n\r\nWell... it speaks for itself... =||= "], ["1217", "Nyquist effects may fail after importing AUP project", "Steve Daulton", "SteveDaulton", "07/04/21, 07:03:10 PM", "**Describe the bug**\r\nAfter importing an AUP project, all Nyquist effects may fail with an error:\r\n`Nyquist returned the value: 4023749... (very big number)`\r\nBug originally reported here: https://forum.audacityteam.org/viewtopic.php?p=429548#p429548\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Launch Audacity\r\n2. Open an Audacity 2.x \"AUP\" project\r\n3. Apply any Nyquist effect\r\n4. Depending on the uninitialized state of variables \"selLow\" and \"selHigh\", you may see the error as described above.\r\n\r\n**Expected behavior**\r\nNyquist effects to work reliably.\r\n\r\n**Screenshots**\r\n![screenshot](https://user-images.githubusercontent.com/11681097/124392448-916afd80-dced-11eb-893b-0b859b11b4d4.png)\r\n\r\n\r\n**Additional information (please complete the following information):**\r\nProposed fix here: https://github.com/audacity/audacity/pull/1212\r", "NaN"], ["1219", "Add additional checks for macro output directory.", "Anton S. Gerasimov", "gera-gas", "07/06/21, 12:41:44 PM", "This bug still available in case: using old settings file or manual set it into settings file.\r\n\r\nResolves: #1174 \r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "I tested this on W10 with audacity-win-3.0.4-alpha-20210704+0cef813-64bit\r\nthis is a branch build: https://github.com/audacity/audacity/actions/runs/999270883\r\n\r\n1) clear Audacity settings folder\r\n2) launch 3.0.2\r\n3) Directories preferences\r\n4) set the Macro output directory to be C:\\\r\n5) Exit Audacity\r\n6) Launch 3.0.4 branch alpha with the fix\r\n7) Tools Macros\r\n8) choose the shipped MP3 Conversion Macro\r\n9) Apply Macro to: Files\r\n10) choose any audio file for processing\r\n11) Observe: Audacity does not crash but displays the following error message when it reaches the Export step in the Macro\r\n\r\n![image](https://user-images.githubusercontent.com/50205984/124466466-98961800-dd8e-11eb-8a36-69831d966587.png)\r\n\r\nFrom a black-box test perspective I think this can be pulled in master for 3.0.4\r\n =||= "], ["1220", "Better readme", "Tannermanner2020", "Tannermanner2008", "07/04/21, 10:43:05 PM", "Resolves: your readme\r\n\r\n*to remove the lies you guys tell*\r\n\r\n- [x ] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [ x] I made sure the code compiles on my machine\r\n- [x ] I made sure there are no unnecessary changes in the code\r\n- [ x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x ] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1221", "Fuck you", "Tannermanner2020", "Tannermanner2008", "07/04/21, 11:12:40 PM", "Resolves: *(direct link to the issue)*\r\n\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x ] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x ] I made sure the code compiles on my machine\r\n- [x ] I made sure there are no unnecessary changes in the code\r\n- [x ] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x ] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "5/10 for not naming it \"Fork You\" =||= "], ["1222", "Deleted Releases", "cat6e", "catSIXe", "07/05/21, 09:37:22 AM", "This Software absolutely sucks, why do they delete releases prior to 3.X??? \r\n\r\nAudashitty!", "No releases (or release binaries) have been deleted.\r\n\r\nPrior to version 3, release binaries were published on FOSSHUB. The old releases are [still available on FOSSHUB](https://www.fosshub.com/Audacity-old.html).\r\n\r\nSince version 3, release binaries have been published [here on GitHub](https://github.com/audacity/audacity/releases). =||= "], ["1226", "Audacity banning anyone under 13 years of age from using this application", "Josh G", "jg777", "07/06/21, 12:37:08 AM", "**Describe the bug**\r\n[Audacity's new privacy policy](https://www.audacityteam.org/about/desktop-privacy-notice/) now bans anyone under 13 years of age from using this application\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Be the shady Muse Group\r\n2. Infect Audacity with telemetry\r\n3. Change Audacity privacy policy to hand over all data to Law Enforcement (or other entities we do not know about)\r\n4. Change Audacity privacy policy to ban anyone under the age of 13 years old from using Audacity\r\n\r\n**Expected behavior**\r\nThe product should remain the same. **NO ONE SHOULD BE BANNED FROM USING IT!**\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: [e.g. Mac High Sierra, Ubuntu 18.04, Windows 10]\r\n - Version [e.g. Audacity 2.5.1]\r\n - (if relevant) Sound Device [e.g. Windows WASAPI, USB Sound card]\r\n\r\n**Additional context**\r\nShady Muse Group should be ashamed of themselves by discriminating the use of this great application from ANYONE\r", "This age restriction violates both GPL2 and GPL3. =||= I used audacity when I was 11 to record piano samples and now I got into college for a double major for music performance and computer science. Fuck you audacity. =||= > This age restriction violates both GPL2 and GPL3.\n\nIndeed.\n\nGPL v2:\n`The act of running the Program is not restricted ...`\n\nGPL v3:\n`This License explicitly affirms your unlimited permission to run the unmodified Program.`\n\nThe question now is, when will the Shady Muse Group be sued for their obvious and deliberate violation? =||= Do I smell a class action?  =||= Also the \"offline mode\" argument does not work because you have to disable a function of the application or find ways around it (using a firewall or disconnecting from the internet) and thus that can go under restrictions on freely running the application. =||= > The question now is, when will the Shady Muse Group be sued for their obvious and deliberate violation?\r\n\r\nI'm hoping something like the FSF could step in and take Muse to court for breaking the license. I have no idea what chances such a case has, but crowdfunding it might be an opportunity to at least try. =||= @TechandMusic462 [Only a copyright owner can do that](https://opensource.stackexchange.com/a/86). They've already said that they've talked to most contributors and have gotten copyright transferred =||= @ajayyy Ratio\n> A person may be able to start a class action if he or she is injured, either financially or physically, because of the wrongful actions of a corporation and believes others were harmed in the same way. Class action lawsuits allow hundreds or potentially thousands of individuals to join together and take legal action against a person or entity in instances when it would not be financially viable for them to file individual lawsuits. =||= This is the point in time where we all collectively decide to make a fork and have that be \"the real version\" that makes its way into the repos of GNU/Linux distros. =||= Most distros will ship main, not forks.  =||= > \r\n> \r\n> Most distros will ship main, not forks.\r\n\r\nthen make the fork the new main =||= Lmao, this repo will always be main whether you like it or not.  =||= And if more people use the fork than the \"real main\" that won't matter.\n\nThis might sound overly optimistic, but I can very much see distro maintainers refusing to pull newer versions of audacity.\n\nI mean, just look at LibreOffice. =||= @JamesCrook other maintainers at least try defend themselves, you just go and SILENTLY close all of the issues about your shady bullshit =||= @ThatOneCalculator The forks vs. main distribution is case-specific. Many distros shipped Go-oo instead of OpenOffice.org main already prior to LibreOffice (considering that LibreOffice also started from Go-oo, the transition to Libre was easier in these distros). If a fork gains enough traction/resolves an issue in a way so that the distro packager picks it up and supports it, then the fork is in and the main is out (also see Iceweasel vs Firefox in Debian). =||= @JamesCrook I'd like to inform you that this issue has not been resolved. Thus, closing it was not the expected maintainer behaviour. =||= Closing this Issue is straight up blasfemy.\r\n\r\nI don't understand how @JamesCrook can just close this issue without giving a concrete reason. I do understand that this place is manly for reporting bugs or suggesting features, but closing an issue addressing a mayor problem that affects the entire community is straight up disrespectfull. I hope this issue can be resolved without the need of class action lawsuits or any action that may affect the community as a whole.\r\n =||= "], ["1228", "Memory leak when exiting Audacity 3.0.4 alpha [Windows 10]", "Ash Matheson", "Nuclearfossil", "07/05/21, 07:33:41 PM", "**Describe the bug**\r\nWhen compiling and debugging on \r\n- Windows 10\r\n- compiled using Visual Studio 2022\r\n\r\na memory leak is observed when closing the application.\r\n\r\nThis is not observable in Release.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Generate a Visual Studio Solution, using CMake/CMake-GUI.\r\n2. Open the project in Visual Studio 2022. \r\n3. Compile in Debug\r\n4. Start a Debug session\r\n3. After Audacity opens, immediately close the application\r\n4. You should then see  the Microsoft Visual C++ Runtime Library issue a 'Debug Error!' where \"The block at 0x00000292DFC23EA0 was not allocated by _aligned routines, use free()\" is observed (or a similar address)\r\n5. Pressing 'Retry' will show you the appropriate call stack.\r\n![image](https://user-images.githubusercontent.com/398853/124500820-4bf21300-dd75-11eb-8e6d-608c21314b70.png)\r\n6. This appears to be an issue where ugAudioIO has entries added not using any aligned memory operations. \r\n\r\n**Expected behavior**\r\nNo assertions or memory leaks at the end of the application lifecycle\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/398853/124500952-865bb000-dd75-11eb-80a5-903a2c4be0be.png)\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Windows 10\r\n - Version: 3.0.4 alpha [1f83f07cfe8e256811b5eaceb735bfaeeebdf461]\r\n\r", "Not really a leak, but a warning related to over-alignment (alignas with more than 8) in C++17.  Warning already suppressed by https://github.com/audacity/audacity/issues/1042 =||= "], ["1229", "[GDPR] Data Protection Officer Information missing as well as Link to Privacy Policy missing from README", "Alexander Pas", "alexanderpas", "08/04/21, 10:18:12 AM", "There is no reference in the README of this project to the Privacy Policy applicable to this project.\r\n\r\nAdditionally, there is no information available about the Data Protection Officer as defined under the GDPR.\r\n\r\nUnder the GDPR, this could lead to a fine of up to \u20ac10 million, or 2% of the firm\u2019s worldwide annual revenue from the preceding financial year, whichever amount is higher. ", "I like this idea. To hell with them. =||= Users in GDPR countries can lodge a legal complaint for breaking GDPR, for example here's how\r\n\r\nhttps://ec.europa.eu/info/law/law-topic/data-protection/reform/rights-citizens/redress/what-should-i-do-if-i-think-my-personal-data-protection-rights-havent-been-respected_en =||= @bachmannn I'm pretty sure that would make things worse, possibly prevent the current \"privacy document\" from being fixed and throw a wrench into development.\r\nThey're already WAY TOO PARANOID about GDPR and similar laws.  That's the mess we're in.\r\n =||= Yikes. They really shot themselves in the foot =||= > I'm pretty sure that would make things worse, possibly prevent the current \"privacy document\" from being fixed and throw a wrench into development.\r\n\r\n1. If this is the way they \"develop\", then throw all the wrenches in.\r\n2. Not fixing the privacy policy would just mean they will be fined out of existence.\r\n\r\nI would personally make that complaint however the authorities in my country aren't really the best at dealing with this stuff. =||= as far as i know this is also not allowed per GDPR, this toggle needs to be off by default.\r\n![image](https://user-images.githubusercontent.com/31988415/124975206-13c92980-e02e-11eb-8069-90b3febcf505.png) =||= The Privacy Policy is readily available from within the app and the Audacity Website:\r\n\r\n1) App:  Help > About Audacity > Legal\r\n\r\n2) Website:\r\n![image](https://user-images.githubusercontent.com/50205984/128164800-5eb33cc0-fefa-4886-93d0-9eaa47bbe8fc.png)\r\n =||= "], ["1231", "I will be adding Audacity to my list of banned applications for being spyware.", "Nick Maietta", "maietta", "07/06/21, 12:34:20 AM", "**Is your feature request related to a problem? Please describe.**\r\nA clear and concise description of what the problem is. Ex. I'm always frustrated when [...]\r\n\r\n**Describe the solution you'd like**\r\nA clear and concise description of what you want to happen.\r\n\r\n**Describe alternatives you've considered**\r\nA clear and concise description of any alternative solutions or features you've considered.\r\n\r\n**Additional context**\r\nAdd any other context or screenshots about the feature request here.\r", "Every time you close this, I will re-open. I don't take kindly to censorship. =||= "], ["1232", "Recent Audacity unusable in educational environments", "Sam Mulvey", "refutationalist", "08/04/21, 09:43:10 AM", "**Describe the bug**\r\n\r\nI teach introductions to broadcasting and podcasting in numerous contexts in public and private education, and I have made extensive use of Audacity.    Under the new \"Privacy Notice\" to enable collection of app telemetry Audacity disallows use by anyone under 13 years of age.   This prevents me from using the software completely-- both by the Muse Group \"Notice\" and by the legal requirements of the organizations I work with.\r\n\r\nThis is similar to issue #1226 but without rancor.   Please keep in mind this is not merely a propaganda point in my case.  Your new requirements have effectively stopped me in my tracks.\r\n\r\n**To Reproduce**\r\n1. Use Audacity in teaching environments with children\r\n2. Try to comply with https://www.audacityteam.org/about/desktop-privacy-notice/\r\n\r\n**Expected behavior**\r\nThe app should allow runtime disabling of any statistics gathering, and the privacy notice should be updated to allow educational use.\r", "Audacity is part of school education in Kerala. This is a breaking change for them as well  =||= Hey, I have a temporary, ~~most likely permanent~~ solution for educators alike. There are forks of audacity that are compliant with GPL v2 and v3, meaning that ~~the people behind the forks won't get a class action lawsuit~~, er, ~~builds don't ship with spyware~~ excuse me, ~~telemetry~~, jeez sorry, my typing skills aren't typically this bad, builds can be legally used by people under the age of 13.\r\n\r\nHere's one; https://github.com/temporary-audacity/audacity =||= This is going to be negatively impactful for a lot of folks.  Either they won't notice that they are not in compliance with your new terms or they will be forced to stop using this software as described above.\r\n\r\nIt seems a trivial fix to simply allow runtime disabling of personal data collection; and more than that, it's the right thing to do.  I occasionally use Audacity, but have no intention of doing so again while these terms are in place without the ability to disable. =||= > It seems a trivial fix to simply allow runtime disabling of personal data collection; and more than that, it's the right thing to do. I occasionally use Audacity, but have no intention of doing so again while these terms are in place without the ability to disable.\r\n\r\nNot only has this been in the code from way before this GitHub issue was started, it had even been documented!\r\n\r\n![Screenshot](https://user-images.githubusercontent.com/11681097/124631947-c9a04680-de7b-11eb-889d-1f3e5a2cf5cd.png)\r\n =||= > Not only has this been in the code from way before this GitHub issue was started, it had even been documented!\r\n\r\nI, as well as many other people, are aware of that option.   It is hardly a complete solution.   The option also predates the new privacy policy, which raises some questions about what other data is, or is going to be, collected, and whether it is optional.   The answers given thus far do not at all cover my use case. =||= > I, as well as many other people, are aware of that option. \r\n\r\nIt is unreleased software which is currently only at the alpha testing stage.  And as it stands right now it is still possibly subject to change.  The new Application prefs pane that Steve showed above, I only documented last week.\r\n\r\nThis new feature will also be documented in the \"What's New in 3.0.3\" page in the Manual for 3.0.3 and will be discussed in the Release Notes.\r\n =||= \r\n> Of course you are unaware - it is unreleased software which is currently only at the alpha testing stage. And as it stands right now it is still possibly subject to change. The new Application prefs pane that Steve showed above, I only documented last week.\r\n\r\nMy apologies, but you are incorrect.\r\n\r\nIt is unreleased software on _GitHub_, and people associated with Audacity have fortunately undertaken some effort to promote how little phoning home Audacity actually does, and its configurability.   There are also the compile time flags that presently leave out most of the code necessary to phone home.   I'm aware of these things as I have to compile Audacity myself.  I use Linux, my distro still packages 2.4.1, and I have students and producers already sending me aup3 files for various reasons.\r\n\r\nYet this is only half the solution, _at best,_ and the majority of the issue remains in the unresolved component.  Discussion of the configurable option without even making mention of the real problem is becoming notable as it has now happened twice.   Unfortunately, I can't point a big red arrow at something that doesn't exist.  I can point a red arrow at this, however: \r\n\r\n![red_arrow_audacity](https://user-images.githubusercontent.com/16480630/124669024-8c7d8980-de66-11eb-834a-5ad10d8260e7.png)\r\n\r\n\r\n  \r\n> \r\n> This new feature will also be documented in the \"What's New in 3.0.3\" page in the Manual for 3.0.3 and will be discussed in the Release Notes.\r\n\r\nThis is good, but what we'll have is a perfectly functional app that both the parent organization of the developers and my varied compliance departments won't let me use with my students.  **This is a significant usability issue.   Under the present circumstances, my kids quite literally could not do their homework.**  The checkbox could be the first thing a user sees and as big as a house, but it ultimately doesn't repair the problem.\r\n\r\nAs a result of these changes to Audacity, teachers in the International Baccalaureate and Advanced Placement programs in schools near me are retooling their programs to use other (mostly proprietary) applications to meet their audio requirements.   These teachers would not count as developers even if you stretched the definition to include myself.  But I'm \"technical,\" so I'm looking into it.  This issue is the result, and since it does affect me I spoke to my situation.\r\n\r\nI have already had to field questions regarding the age limitation.   Are teachers even prevented from using Audacity to _record_ their students?   I told them I very much doubted it, but the privacy policy is such a mess I can't answer authoritatively.  \r\n\r\nRetooling the privacy notice to reinclude children as authorized users-- and perhaps some further clarification-- would go a long way toward solving the issue. =||= I'm one of those not-so-technical educators referenced by Refutationalist above. I work in a diverse, mixed income district where more than 50% of our students live below the poverty line, so being able to advise the use of free programs is a huge equalizer in educational access. Not being able to use Audacity with our middle schoolers has a significant negative impact, especially in our English learners program and world language instruction.  If this is not resolved to allow use by children, it will be very disappointing and further the education opportunity gap that Audacity was previously a part of closing.   =||= > > It seems a trivial fix to simply allow runtime disabling of personal data collection; and more than that, it's the right thing to do. I occasionally use Audacity, but have no intention of doing so again while these terms are in place without the ability to disable.\r\n> \r\n> Not only has this been in the code from way before this GitHub issue was started, it had even been documented!\r\n> \r\n> ![Screenshot](https://user-images.githubusercontent.com/11681097/124631947-c9a04680-de7b-11eb-889d-1f3e5a2cf5cd.png)\r\n\r\nI rather have the people who currently 'own' Audacity give Audacity back to the respectful owners that know how to follow open source GDP regulations and what not. A huge chunk of the internet already have a sour mouth for Audacity over their dumb move to record information about it's users.\r\n\r\nAnd for what purpose? To sell it that is. =||= I see the privacy policy has been updated to \"draft\" status until such time as the next version of Audacity is released, which is good.   However, the draft still contains the age limitation and therefore this bug still exists. =||= Since this is Licensed under the GPL you can type what ever you want in policy.\r\nFact it is GPL.  Anyone of any age can use it. So save the ink Team Audacity or pay the huge GNU fines that could come your way. https://en.wikipedia.org/wiki/Open_source_license_litigation =||= > > It seems a trivial fix to simply allow runtime disabling of personal data collection; and more than that, it's the right thing to do. I occasionally use Audacity, but have no intention of doing so again while these terms are in place without the ability to disable.\r\n> \r\n> Not only has this been in the code from way before this GitHub issue was started, it had even been documented!\r\n> \r\n> ![Screenshot](https://user-images.githubusercontent.com/11681097/124631947-c9a04680-de7b-11eb-889d-1f3e5a2cf5cd.png)\r\n\r\n@SteveDaulton how is this related? As far as I can see, the red arrow in your screenshot points to a checkbox that enables/disables update checking for Audacity. I fail to understand how this should be a _trivial fix to simply allow runtime disabling of personal data collection_ or should make _Recent Audacity usable in educational environments_ . Can you clarify this? =||= > how is this related?\r\n\r\nWhen \"Check for updates\" is enabled, Audacity will periodically check to see if an updated version is available. To do this, it must connect to an online resource to see if there is a more recent version for your operating system than the one that you are using.\r\nThat requires telling the online resource, which version you are  currently using, and what operating system you are using (otherwise the online resource cannot know if there is a more recent version available for you). It also requires your IP address, otherwise it cannot reply to  let you know if an updated version is available or not (See: [Internet  Protocol](https://en.wikipedia.org/wiki/Internet_Protocol) on Wikipedia).\r\n\r\nGDPR classes this information as \"personal data\", and so legally requires this use to be disclosed in a privacy notice. It  also specifies that a child under the age of 13 cannot give consent for the use of personal data.\r\n\r\n**When \"Check  for updates\" is NOT selected, then the app does not connect to the internet and no data is exchanged.**\r\n\r\nThe other case where data \"may\" be sent over the internet is in the eventuality  of a crash (either the entire app or a component within the app). If a crash occurs, a crash report is generated locally. I have not yet seen this myself (Audacity 3.0.3 alpha has not yet crashed for me), but my  understanding from looking at the code is that it goes like this:\r\n1. If a crash occurs, generate a crash report locally.\r\n2. When next able to do so (the app must obviously be running), ask the user if they want to send the crash report to the Audacity developers.\r\n3. If the user says \"Yes\", send the report. If  the user says \"No\", don't.\r\n\r\nNone of this applies to any current version of Audacity as versions up to and including Audacity 3.0.2 do not have the ability to connect to the Internet. =||= > The other case where data \"may\" be sent over the internet is in the eventuality of a crash (either the entire app or a component within the app). If a crash occurs, a crash report is generated locally. I have not yet seen this myself (Audacity 3.0.3 alpha has not yet crashed for me), but my understanding from looking at the code is that it goes like this:\r\n> \r\n>     1. If a crash occurs, generate a crash report locally.\r\n> \r\n>     2. When next able to do so (the app must obviously be running), ask the user if they want to send the crash report to the Audacity developers.\r\n> \r\n>     3. If the user says \"Yes\", send the report. If  the user says \"No\", don't.\r\n\r\nI have tested this on 3.0.3  Release Candidates RC1 and RC2\r\n\r\n1) and immediately after the crash I got a crash report dialog asking if I wanted to send the crash report - I clicked the Yes button\r\n\r\n2) I did get a database error that generated an error report dialog _(note that not all Audacity errors generate such phone-home dialogs)_  \r\na) This happened from within the running Audacity\r\nb) I clicked the Yes button to send the report\r\nc) Audacity remained open and OK\r\n\r\nI also tested with clicking the No buttons.\r\n\r\nIn both cases where I clicked Yes to send the reports the developers told me that both cases provided valuable debug information for them - and that's why this feature is being added.\r\n\r\n\r\n =||= @SteveDaulton Thank you so much for the answer, that does clarify why this is related.\r\n\r\nI still do not entirely understand, why the online resource requires to be told information about the user's system or software version, since I thought it provides a list of available versions and the client could figure out if it can update or not. At least if I look at the implementation here: https://github.com/audacity/audacity/blob/release-3.0.3/src/update/UpdateManager.cpp\r\n\r\nsimplified, as I understand it, it would do this:\r\n1. get https://updates.audacityteam.org/feed/latest.xml \r\n2. parse the file and filter out relevant version number\r\n2. compare versions\r\n3. open browser with link to download\r\n\r\nI cannot see in the code that it would transmit which version of Audacity you are currently using, and what operating system you are using. Maybe I'm looking at the wrong snippet, but isn't this a simple get request (as in _GET requests should only retrieve data and should have no other effect._ )? Does it send another request, or are there parameters transmitted that I am overlooking? Maybe in the header?\r\n\r\nI am a bit confused, because if there _are_ additional parameters containing user information transmitted, then I can't see why. I was trying to check the content of `latest.xml` to dig a bit deeper, but it leads me to a 404 page. Though, does the xml not simply contain the current version numbers for all available operating systems, and then the proper info is filtered by the parser?\r\n```\r\n    // https://github.com/audacity/audacity/blob/release-3.0.3/src/update/UpdateDataParser.cpp:91\r\n   \r\n    // here it is checking for a linux tag, and for the other platforms are similar conditionals\r\n    // so the figuring out of the operating system happens locally\r\n    if (wxStrcmp(tag, mXmlTagNames[XmlParsedTags::kLinuxTag]) == 0)\r\n    {\r\n        if (info.GetOperatingSystemId() & wxOS_UNIX_LINUX)\r\n            mXmlParsingState = XmlParsedTags::kOsTag;\r\n        return true;\r\n    }\r\n```\r\n\r\nSo, the only thing you need to send, is the GET request and receive a generic xml, the same for anyone and everyone.\r\nCan't see a problem here.\r\n\r\nThe transmission of the IP address which comes with a GET request, cannot possibly be the reason for the updated privacy notice and age restriction.. right? And if this would be the case, wouldn't it be an idea to have it opt-in, and make the privacy notice appear the moment you check the box? This could possibly make people freak out less, it would explain itself and you wouldn't need to agree to a privacy notice that you are not using. For example, if you have your applications managed by a package manager (apt, pacman, yum, brew, etc). I do not really propose to do this, I guess you thought about these things long and hard. But I just love using Audacity and want to understand what exactly is going on here. =||= > I cannot see in the code that it would transmit which version of Audacity you are currently using\r\n\r\nSomeone posted a partial answer to this earlier (\"somewhere\" in one of these recent discussions).\r\nI made a note of the example update request:\r\n\r\n```\r\nGET /feed/latest.xml HTTP/1.1\r\nHost: updates.audacityteam.org\r\nAccept: */*\r\nAccept-Encoding: deflate, gzip\r\nUser-Agent: Audacity/3.0.3 (Windows 10_0_19042; x64)\r\n```\r\n =||= Thank you for your efforts.\r\nI see, so the information is indeed in the header.\r\nAnd that explains also, why I got a 404 when trying to open it from a browser. The online resource checks if the User-Agent string contains \"Audacity\". If not, the request gets blocked.\r\n\r\n**TL;DR: There is more information in the header about the users system, than is required for check-update functionality. It is not much, but it is there, and there is no transparent reason for it. Statements like**\r\n\r\n> \"_That requires telling the online resource, which version you are currently using, and what operating system you are using (otherwise the online resource cannot know if there is a more recent version available for you)._\" - (see above @SteveDaulton )\r\n\r\n**are technically wrong.** (Since there has no reply to this post for two weeks, I must assume this is the case. You could of course, adjust the functionality in a way, that the server _does_ need to know these details to function properly, but the following post - and common sense / logic - shows that it would be unnecessary. Again, I am happily corrected, but then, I think I'm sadly correct.).\r\n\r\nNow for the slightly longer read:\r\nThe information transmitted in the User-Agent about the Audacity version and used OS, has no influence on the functionality. Even when you completely omit the information, you get the same result. This would be an xml file, that contains latest versions for all platforms. Example:\r\n\r\n```\r\n$ # first, the header with information\r\n$ curl -A \"Audacity/3.0.3 (Windows 10_0_19042; x64)\" https://updates.audacityteam.org/feed/latest.xml\r\n<?xml version=\"1.0\"?>\r\n<Updates>\r\n  <Description>Audacity 3.0.2 fixes some important bugs and improves diagnostic reporting. We also added a new preference for macro output, and a 'Save' button on the manage macros dialog.</Description>\r\n  <OS>\r\n      <Win32>\r\n          <Version>3.0.2</Version>\r\n          <Link>https://github.com/audacity/audacity/releases/download/Audacity-3.0.2/audacity-win-3.0.2.exe</Link>\r\n      </Win32>\r\n      <Win64>\r\n          <Version>3.0.2</Version>\r\n          <Link>https://github.com/audacity/audacity/releases/download/Audacity-3.0.2/audacity-win-3.0.2.exe</Link>\r\n      </Win64>\r\n      <Macos>\r\n          <Version>3.0.2</Version>\r\n          <Link>https://github.com/audacity/audacity/releases/download/Audacity-3.0.2/audacity-macos-3.0.2.dmg</Link>\r\n      </Macos>\r\n      <Linux>\r\n          <Version>3.0.2</Version>\r\n          <Link>https://github.com/audacity/audacity/archive/refs/tags/Audacity-3.0.2.zip</Link>\r\n      </Linux>\r\n  </OS>\r\n</Updates>\r\n```\r\n```\r\n$ # then, omit all information, only keep \"Audacity\" to avoid being blocked\r\n$ curl -A \"Audacity\" https://updates.audacityteam.org/feed/latest.xml\r\n<?xml version=\"1.0\"?>\r\n<Updates>\r\n  <Description>Audacity 3.0.2 fixes some important bugs and improves diagnostic reporting. We also added a new preference for macro output, and a 'Save' button on the manage macros dialog.</Description>\r\n  <OS>\r\n      <Win32>\r\n          <Version>3.0.2</Version>\r\n          <Link>https://github.com/audacity/audacity/releases/download/Audacity-3.0.2/audacity-win-3.0.2.exe</Link>\r\n      </Win32>\r\n      <Win64>\r\n          <Version>3.0.2</Version>\r\n          <Link>https://github.com/audacity/audacity/releases/download/Audacity-3.0.2/audacity-win-3.0.2.exe</Link>\r\n      </Win64>\r\n      <Macos>\r\n          <Version>3.0.2</Version>\r\n          <Link>https://github.com/audacity/audacity/releases/download/Audacity-3.0.2/audacity-macos-3.0.2.dmg</Link>\r\n      </Macos>\r\n      <Linux>\r\n          <Version>3.0.2</Version>\r\n          <Link>https://github.com/audacity/audacity/archive/refs/tags/Audacity-3.0.2.zip</Link>\r\n      </Linux>\r\n  </OS>\r\n</Updates>\r\n```\r\n\r\nTherefore, the transmitted information about Audacity version and OS is not crucial to the functionality of checking for an update.\r\nIf I don't have a logical error somewhere - please help if I do - **it does _not_ require telling the online resource which version you are currently using, and what operating system you are using.** The online resource does _not_ need to know if there is a more recent version available for you, because the response contains the last version number for every supported system. Also, comparing the versions happens **locally** in a class called [UpdateDataParser](https://github.com/audacity/audacity/blob/release-3.0.3/src/update/UpdateDataParser.cpp).\r\n\r\nConsequently the transmit of additional data in the User-Agent string can be seen separate from the check-update, and could ideally be a separate setting that would reflect on its function (e.g. \"send data about Audacity version and operating system to Audacity\"). If the setting is unchecked, Audacity could send a generic User-Agent string (e.g. just \"Audacity\") in, and still keep the check-update working.\r\nCurrently, the User-Agent string is generated by `libraries/lib-network-manager/curl/CurlHandleManager.cpp:224`, on application start (I guess, because it happens when CurlHandleManager is initialized). So this is where you could hook up the creation of a generic template in case you don't have the users consent yet. I will stop getting into technical details here though, because it's pretty self explanatory and boring. Also, I do strongly believe that you would be technically more than capable to figure out solutions for this that keep the desired functionality without having to adjust any privacy policy for the generic offline user (for example your generic seven year old computer genius child, or let's say a student within an educational environment).\r\n\r\nWith this I would like to come back to the topic of @refutationalist, that _recent Audacity is unusable in educational environments_. This concerns me as well, since I want to teach Audacity in my class, and that a (for me) meaningless feature throws sticks between my legs, is weird.\r\nI realize, that by unchecking the box \"check for updates\" there is no connection to the internet. And this is clearly reflected in the code. But **it does not help, if this feature is checked by default when the application starts.** It is impossible to navigate to the settings and uncheck the box before the request is sent and the damage is done. I wish this box would be opt-in, and on the moment of opting in, a privacy notice would be shown, and why not an age verification. Then it would be clear what the notice is about and you could use it completely offline. Also, network access is already configured as opt-in on compilation time (#935), why not have it opt-in on runtime? Most people will use precompiled binaries, and won't have the luxury of opting in on compile time.\r\n\r\nSo, that's it from me. Hopefully this can give insight into how a random non-expert would analyze the situation, though I would be surprised if this post contains any information new to you. Which is why I am a bit puzzled that the findings are not completely in line with your statements before. I assume that this whole discussion is quite a lot to handle, and technical specifics can be unclear even to someone close to the development. It is possible that I misunderstand something, but I can't see what.\r\n\r\n**Anyways, thank you so much for your patience and replies, I think I understand the issue now a bit better.\r\nTo my understanding this issue remains valid, and I hope that the Audacity team can successfully work this out with the community. Good luck!**\r\n\r\nPS: edited formatting for clarity, link to UpdateDataParser, and added TL;DL at the beginning =||= The Privacy Policy has been updated to remove the restriction on use to 13+ - there is no age restriction on Audacity use =||= "], ["1235", "What the Hell -- PRIVACY", null, "ata-star", "07/06/21, 03:13:28 AM", "Read this: https://www.audacityteam.org/about/desktop-privacy-notice/\r\nWatch This: https://youtu.be/mceXl_ayl8s", "Check for updates is the only networking feature enabled by default (it is opt-out while the others are opt-in).\r\n\r\nThis, and your IP address, is the only information sent during a check for updates:\r\n\r\n```http\r\nGET /feed/latest.xml HTTP/1.1\r\nHost: updates.audacityteam.org\r\nAccept: */*\r\nAccept-Encoding: deflate, gzip\r\nUser-Agent: Audacity/3.0.3 (Windows 10_0_19042; x64)\r\n```\r\n\r\nYou can see this in the source code [here](https://github.com/audacity/audacity/blob/87d94fe24918fb155feab831f52ba5e24e4db646/src/update/UpdateManager.cpp#L69) and [here](https://github.com/audacity/audacity/blob/1ac4df1f83b57d729806a06c377068edf8449b51/libraries/lib-network-manager/curl/CurlHandleManager.cpp#L224-L239). The IP address is stored on the server as a hash and becomes irretrievable after 24 hours when the salt is discarded.\r\n\r\nDiscussion in #1225 =||= "], ["1236", "Privacy policy is a violation of GPL-3 and is unfair", null, "Get-DevVed-YT", "08/04/21, 10:13:43 AM", "The recent changes to the privacy policy are unfair and non-compliant with GPL-2.\r\n\r\nBy restricting access to those 13+, you are prohibiting probably many minors who were using Audacity to use it anymore.\r\nGPL-2 grants the right for everyone to use it under the license rules. \r\nBy restricting access to those 13+, you are breaking the terms of the license under which Audacity is sourced under.\r\n\r\nMy solution would be to make telemetry opt-in. This way minors can still use the program but those who want to help Audacity can opt-in telemetry data. \r\n\r\nAlso, I really wonder what an audio program has to share with the government...\r\nYou need to be upfront on what specific data you share with the government. \r\n\r\nOne more thing. Don't think that closing the issues addressing this is going to help you. It's not.", "Very true =||= I wonder what the Audacity developers were on when they decided adding telemetry and data collection to a fucking audio program was a good idea. =||= welp we all knew this would happen sooner or later, although all u rly have to do is block it from accessing the internet =||= I believe that audacity  can no longer be part of Linux distributions in the future with this privacy policy. =||= I started using Audacity when I was under 13. These policy changes are harmful and obviously violate the GPL. =||= For sure. There's probably forks that still hold on old audacity's ideology. =||= Imagine having an age rating on an open-source audio editor.\r\n\r\nLike seriously? =||= A company can't violate their own license. =||= > \r\n> \r\n> A company can't violate their own license.\r\n\r\nForgive my superficial understanding of software licensing but I am under the impression that if Audacity uses any libraries that are licensed under GPL, they must also license it under GPL, as per GPL requirements, which makes breaking GPL illegal. Or perhaps more accurately, it makes using any libraries licensed under GPL illegal? =||= If they are using any library under GPL, yes, it is a violation  =||= >If anyone else wants to get around this, try downloading Audacity from this fork I found.\r\nhttps://github.com/temporary-audacity/audacity\r\n\r\nThe latest windows build of this fork is still outdated and has telemetry in it. If you want people to avoid the telemetry, don't advice people use this fork until the collaborators have actually released a no-telemetry build. =||= > > If anyone else wants to get around this, try downloading Audacity from this fork I found.\r\n> > https://github.com/temporary-audacity/audacity\r\n> \r\n> The latest windows build of this fork is still outdated and has telemetry in it. If you want people to avoid the telemetry, don't advice people use this fork until the collaborators have actually released a no-telemetry build.\r\n\r\nApologies. Do not install from this fork. Wait for a valid non-telemetry fork =||= > > If anyone else wants to get around this, try downloading Audacity from this fork I found.\r\n> > https://github.com/temporary-audacity/audacity\r\n> \r\n> The latest windows build of this fork is still outdated and has telemetry in it. If you want people to avoid the telemetry, don't advice people use this fork until the collaborators have actually released a no-telemetry build.\r\n\r\nThis is false. You can see from the commits in the repo that telemetry and sentry (crash reporting) were completely removed, not just disabled. =||= > This is false. You can see from the commits in the repo that telemetry and sentry (crash reporting) were completely removed, not just disabled.\r\n\r\nPlease look at the commit of the windows release `Audacity-3.0.3-RC2` (\"Always run CPack, even on Windows in release mode\"). Every fork has this release https://github.com/tenacityteam/tenacity/commit/84d5e63dbc0f23da75202bb434f04654984d2081\r\n\r\nThe commit on the tenacity fork is from BEFORE the telemetry removal commit. https://github.com/tenacityteam/tenacity/commit/bbf352d36d725335962718f91fc3591a1037f39b\r\nhttps://github.com/tenacityteam/tenacity/compare/Audacity-3.0.3-RC2...master =||= They probably restricted to 13+ because with telemetry they don't want to get a lawsuit because of underage/minors crap =||= > They restricted because to 13+ because with telemetry they don't want to get a lawsuit because of underage/minors crap\r\n\r\nYes, that would be the issue(s) =||= >They restricted because to 13+ because with telemetry they don't want to get a lawsuit because of underage/minors crap\r\n\r\nImagine as a company having the choice between adding telemetry to the program, thus requiring every user to be 13+ to not be sued and letting children use your software (as is being done by educators for a very long time), and choosing the first one. The lack of understanding of the project, its uses, and the [4 essential freedoms](https://www.gnu.org/philosophy/free-sw.en.html) postulated by the GPL and the term 'free software', which Audacity is using, is staggering. =||= > \r\n> \r\n> > This is false. You can see from the commits in the repo that telemetry and sentry (crash reporting) were completely removed, not just disabled.\r\n> \r\n> Please look at the commit of the windows release `Audacity-3.0.3-RC2` (\"Always run CPack, even on Windows in release mode\"). Every fork has this release [tenacityteam/tenacity@84d5e63](https://github.com/tenacityteam/tenacity/commit/84d5e63dbc0f23da75202bb434f04654984d2081)\r\n> \r\n> The commit on the tenacity fork is from BEFORE the telemetry removal commit. [tenacityteam/tenacity@bbf352d](https://github.com/tenacityteam/tenacity/commit/bbf352d36d725335962718f91fc3591a1037f39b)\r\n> [tenacityteam/tenacity@Audacity-3.0.3-RC2...master](https://github.com/tenacityteam/tenacity/compare/Audacity-3.0.3-RC2...master)\r\n\r\nThis was already handled in a manual edit. - if there is further issues, make a issue on their issue tracker as they are unaware. =||= > I wonder what the Audacity developers were on when they decided adding telemetry and data collection to a fucking audio program was a good idea.\r\n\r\nIts likely sure they were smoking crack made in someones toilet =||= > They restricted because to 13+ because with telemetry they don't want to get a lawsuit because of underage/minors crap\r\n\r\nOr maybe they could just make telemetry optional, for people above 13yo... =||= > \r\n> \r\n> Imagine having an age rating on an open-source audio editor.\r\n> \r\n> Like seriously?\r\n\r\nfacts =||= The revised Privacy Policy released as part of 3.0.3 has no age restriction =||= "], ["1237", "New policy is backstabbing yourself", null, "GalaxyGamingBoy", "07/06/21, 09:05:50 AM", "**Describe the bug**\nYour privacy policy is the bug.\n\n**To Reproduce**\nSteps to reproduce the behavior:\nHhmmmmm\nRead your own privacy policy! It brakes the GPL2 License as previously said!\n\n**Expected behavior**\nBackstabbing yourself and losing millions of users. Also maintainers Do not Close this issue to hide. I can and WILL repost this.\nSchools that use the software won't use it. Maybe add an opt in or opt out of data collection\n\n**Additional information (please complete the following information):**\nFix it now", "I am switching to the libre audacity builds.  =||= +rep imma use some fork of audacity =||= It's incredible to see that repetitive behavior, consisting in trying to bend Open source spirit at preparing license type swap.\r\nEach time, it's leading to a fork. But from time to time, we still see an idiot who convinced himself, that the community, this time, will react in a different fashion. LibreOffice, MariaDB, NextCloud ... are example of what's happening in those cases. Because it's just insupportable. =||= @JamesCrook Why don't you respond to any of the issues you close about the age restriction? These people are making a very valid point. Educational use will no longer be possible with the age restriction plus it breaks the GPL. But instead of addressing the issue you just close all related issues. I guess that tells us all we need to know. =||= "], ["1238", "Don't complain -> CONTRIBUTE! New fork started!!", null, "MrGucciL", "07/06/21, 09:06:48 AM", "Saving audacity is pointless. Instead of complaining and being negative, we can work together on it's replacement sneedacity!\r\nhttps://github.com/Sneeds-Feed-and-Seed/sneedacity", "wowe this is amazing\r\nbest fork =||= "], ["1241", "What board of directors decided to make Audacity spyware? How do we sue them for breaking GPL?", "Markus Klyver", "Daysalos", "07/06/21, 01:34:14 PM", "Disgusting. ", "NaN"], ["1242", "GPL2 Violation", "peepopoggers", "peepopoggers", "08/04/21, 09:44:27 AM", "The terms of service is a GPL3.0 violation and it breaks the terms by restricting access to those of younger age.\r\nThis violates legal terms of the code and is illegal! \r\n\r\nFix this or the program will lose popularity.\r\nAlso lose the telemetry stuff, or the community will never get your trust back.\r\n\r\n;)", "#1236  =||= So, true! I will never use original audacity again. =||= It is a waste of ink Team audacity.  It is under the GPL.\r\nyou may recommend an age use. but your blowing wind.\r\nStop wasting key strokes. \r\n This policy not needed after they passed all IP can collect and sell data.  In the USA. =||= Just as a sidenote, you should change the title to `GPL2 Violation` since this is not GPLv3 https://github.com/audacity/audacity/blob/master/LICENSE.txt =||= The age restriction has been removed from the final Privacy Policy released as part of Audacity 3.0.3 =||= "], ["1243", "Audacity will fail to start if TEMP location is unwritable", "Dmitry Vedenko", "crsib", "08/31/21, 01:03:34 PM", "**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Set the \"Temporary files location\" to an unwritable location\r\n2. Realauch Audacity\r\n3. Audacity will fail with Can't_open_new_empty_project error\r\n\r\n**Expected behavior**\r\nAudacity opens without issues\r\n\r", "I caught this moment, but in this case, Audacity continues to work fine, just showed an error window by `ShowExceptionDialog`.\r\n1. What I can do in this case\r\n1.1 Just checking Temp directory on unwritable, then showing a message with it information, that can be more useful for user (after reading this message, user can fast solve this problem by change directory in preferences).\r\n1.2 or leave as now.\r\n\r\n2. What I should be doing yet (necessarily)\r\nSeems this problem also actual for all directories in preferences, that can be used for data output. I need to check all directories for this case.\r\n\r\n@crsib @petersampsonaudacity could you add your opinion for p.1 =||= @gera-gas  I think you also need to trap the use case in Directories preferences where the user types \"C:\\\" \r\njust the same as you trap the use case where the user users the Browse button to make C: a default directory.\r\n\r\nIs that what you mean by 1.1 ?\r\n =||= We still need a fallback. I can set the directory in the config manually or the directory may become unwritable later on =||= > We still need a fallback. I can set the directory in the config manually or the directory may become unwritable later on\r\n\r\nYes indeed, I agree - a better example is that it may have been set in an earlier version of Audacity (that's how I was testing the fallback earlier).\r\n\r\nBut I hope you agree we need to trap both use cases at point-of-use in Directories prefs?\r\n\r\n =||= I surely do. \r\n\r\nThere is also a bug in FFmpeg location dialog, which ignores keyboard input completely.  =||= > There is also a bug in FFmpeg location dialog, which ignores keyboard input completely.\r\n\r\nOOH - is that already logged, or do you need to log it ?\r\n\r\n =||= I even do have a fix for it xD =||= You are GOOD @crsib   \ud83e\udd47  =||= How about something like this?\r\n\r\n![image](https://user-images.githubusercontent.com/10109867/125305052-f940ca00-e325-11eb-85c5-3ca2dd9ee4ca.png)\r\n =||= > How about something like this?\r\n\r\nLooks good to me\r\n\r\n =||= Testing on w10 with Audacity_Windows_64bit_1037187455_50f8e10\r\n\r\nYes I get the error new error message when I try to launch with the link to Directories Prefs,\r\nbut if I ignore that and just dismiss it with the \"OK\" button then Audacity appears to launch OK - but if I try to record, import or generate I get the following warning:\r\n![image](https://user-images.githubusercontent.com/50205984/125944619-5d3d0368-5d5f-4c0b-8125-4d539a1c4ea8.png)\r\nET phoned home with the OK button on the message.\r\n\r\nThis message will be totally opaque to most users and offers them no guidance on what to do to redress the situation\r\n\r\n\r\nSteps to reproduce\r\n1) in 3.0.3 set temp directory to be c:\\\r\n2) exit 3.0.2\r\n3) launch 3.3.3\r\n4) Observe the new error message telling you that the temp directory is invalid\r\n5) ignore the advice to go to Directories prefs\r\n6) press OK\r\n7) Observe Audacity launches\r\n8) Press Record\r\n9) Observe the warning as shown above =||= And because the reset of temp directory only takes t effect after relaunch ...\r\n\r\nIf in the new message you accept the advice and click the link to go to Directories prefs and reset it to a writeable location.\r\nThen Audacity remains open and you then get the phone-home error messages if you try to use Audacity.\r\n\r\nThis ENH is Bugzilla has some bearing on this\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2548\r\nBug 2548 - ENH: changed temporary directory location should be implemented immediately - not after restart =||= Cannot reproduce, fixed =||= "], ["1244", "GPL2 license broken due to age restrictions.", null, "GalaxyGamingBoy", "07/07/21, 06:04:07 PM", "Repost because I said. I Won't stop till you reply. Do NOT Close it I will repost it.\n\nDescribe the bug\nYour privacy policy is the bug.\n\nTo Reproduce\nSteps to reproduce the behavior:\nHhmmmmm\nRead your own privacy policy! It brakes the GPL2 License as previously said!\n\nExpected behavior\nBackstabbing yourself and losing millions of users. Also maintainers Do not Close this issue to hide. I can and WILL repost this.\nSchools that use the software won't use it. Maybe add an opt in or opt out of data collection\n\nAdditional information (please complete the following information):\nFix it now", "I fully agree. Seriously. Its outrageious. Not that company bought Audacity, this can ( and should ) happen. Outrageious is that they **ignore** current users, commiters, ( possible ) developers......... everyone. =||= > I fully agree. Seriously. Its outrageious. Not that company bought Audacity, this can ( and should ) happen. Outrageious is that they **ignore** current users, commiters, ( possible ) developers......... everyone.\n\nIt is quite outrageious, isn't it? It is also outrageous, but that goes without saying. =||= > Schools that use the software won't use it. \r\n\r\nThey will simply stick to an older version. Don't worry, schools will be fine  =||= @awslabspl nobody bought the software, what was purchased was the trademark/IP. The logo graphic, the name 'Audacity'. Feel free to use a fork if you don't trust this source here. :shrug: =||= @GalaxyGamingBoy - while I agree with you, spamming issues is not constructive and fragments discussion. You don't need to be uncivil. As explained by @Tantacrul, this issue is out of the main maintainers hands and an issue with Muse Group. They aren't trying to \"hide\" anything. =||= "], ["1245", "VOTING! For the new fork", null, "JYamihud", "07/07/21, 11:25:58 AM", "There are 1.6k forks of Audacity as of today. And the number grew with 200 forks with in last day. The forks exist, we need to choose one. Leave the Muse Group alone. They may do what ever they want. It shouldn't bother us anymore.\r\n\r\nLibre Office was ones a fork of Open Office, since it was sold to Oracle. And people didn't like it. Libre Office was the chosen fork.\r\n\r\nI opened a voting page on LBRY [here](https://odysee.com/@blenderdumbass:f/Voting-for-the-new-audacity-fork:4). LBRY is a Free Software, block chain network for publications. I'm afraid an issue here is not safe, Muse Group might close it. ", "I think: https://github.com/temporary-audacity/audacity is the fork everyone got behind on, they are voting now for a new name for the project and software. =||= https://github.com/tenacityteam/tenacity =||= Hey, I want you all to know that the issue tracker of temporary-audacity aka Tenacity seems to be censored with no comment, along with quite a long interesting discussion (see https://github.com/tenacityteam/tenacity/issues/93, or a backup here: https://github.com/imachug/talk/issues/3). Please consider https://github.com/SartoxOnlyGNU/audacium instead. =||= Just let nature take it's course as with all forks. It's not going to be sorted in one day, nor a week. A fork will prevail just let it naturally happen. No need to vote on one, just join the one you like the most. =||= There's no need to vote. Just pick one and go with it. =||= The most active fork right now is https://github.com/Sneeds-Feed-and-Seed/sneedacity and it doesn't have any drama. =||= yes, the sneedacity team is not a closed dev team like tenacity and isn't filled with drama =||= Audacium and Sneedacity are two acceptable forks for consideration. =||= There is no need for a vote. Just pick whatever fork(s) you like and support them.\r\n\r\nIn my opinion:\r\n- **Sneedacity** has a Simpsons reference for a name... but it's also the most active fork and has the best chances. It has also removed all of the telemetry properly and plans to remove conan and update wxWidgets, something I haven't seen in other forks yet.\r\n- **Audacium** is also very good and much easier to take seriously, but it's currently run by one person and needs more contributors. Please help it out if you can. =||= Sneedacity is an obvious joke/satire and not meant to be taken seriously. :facepalm: \r\n\r\nAfter they get tired of playing around and harassing other forks, things will calm down and can finally move on from there.\r\n\r\nFor now it is just better to wait. =||= > Sneedacity is an obvious joke/satire and not meant to be taken seriously. \ud83e\udd26\r\n> \r\n> After they get tired of playing around and harassing other forks, things will calm down and can finally move on from there.\r\n> \r\n> For now it is just better to wait.\r\n\r\nWhy shouldn't it be taken seriously? It's very active right now, I don't see why a simpsons reference would make it \"not serious\" =||= Sneedacity may have started as a lighthearted joke, but it has picked up so much steam it has become a legitimate option. =||= > There is no need for a vote. Just pick whatever fork(s) you like and support them.\r\n> \r\n> In my opinion:\r\n> \r\n>     * **Sneedacity** has a Simpsons reference for a name... but it's also the most active fork and has the best chances. It has also removed all of the telemetry properly and plans to remove conan and update wxWidgets, something I haven't seen in other forks yet.\r\n> \r\n>     * **Audacium** is also very good and much easier to take seriously, but it's currently run by one person and needs more contributors. Please help it out if you can.\r\n\r\nJoining Audacium and Sneedacity would unite the efforts of the majority of *actual* code contributors, IMO. =||= There is no doubt Sneedaucity is the true fork. Sneed supremacy can not, will not, and must not be stopped\r\n![sneed](https://i.ytimg.com/vi/qeTw0c6vxO8/mqdefault.jpg) =||= > Sneedacity is an obvious joke/satire and not meant to be taken seriously. \r\n> \r\n> After they get tired of playing around and harassing other forks, things will calm down and can finally move on from there.\r\n> \r\n> For now it is just better to wait.\r\n\r\nSneedacity is a very serious and active Audacity fork. It is not encumbered by the bike-shedding, drama and lack of actual developers that other Audacity forks are currently experiencing.\r\n\r\nWhile I appreciate and use your pro-audio software, I'd also appreciate it if you took a more objective look at this. The uncritical and ignorant tribalism isn't a good look. =||= Sneedacity\r\nOr we can merge Sneedacity and Audacium into something Sneed related\r\nHowever\r\nThe Sneed name is non-negotiable =||= > Sneedacity is an obvious joke/satire and not meant to be taken seriously. facepalm\r\n> \r\n> After they get tired of playing around and harassing other forks, things will calm down and can finally move on from there.\r\n> \r\n> For now it is just better to wait.\r\n\r\nJust because of the name? The FOSS scene is full with robust software with silly names, such as GNU's Not Unix and WINE Is Not an Emulator. =||= Also, I bought the sneedacity.com, sneedacity.org, and sneeda.city domains, and will start development on a main website there. So there's plenty of room for growth with that project. =||= I suggest we report everyone abusing sneedacity and the devs working on it, I already sent reports for couple of people. Tenacity has a convicted pedophile, scam artist and a false flagger running it, yet no one is abusing them. Each to their own, but Sneedacity ACTUALLY HAS people working on it. Case closed. =||= > Is anyone aware of https://github.com/tenacityteam/tenacity?\r\n\r\nThe \"devs\" of that fork are extremely toxic, drama driven, and they're web devs, none of them has any clue about C, C++ or audio engineering. =||= At this point I'm not sure if tenacity has any developers, it seems entirely \"staffed\" by community manager-esque people who have done a spectacularly poor job of community management. It comes off more like a PR stunt with a profit motive (the founder stated he wanted to use the fork to \"pay his rent\"). =||= > Based on the profiles of the maintainers of Sneedacity, the project looks most unpromising to me. One of the maintainers _joined GitHub yesterday._\r\n> \r\n> Where's their story? How can I tell that they're in earnest and the other forks aren't?\r\n\r\nGo to bed @cookiengineer, you suck at falseflagging. =||= I think that we can do this! We should really set home on sneedacity, and it actually (and ironically, despite all this nonsense drama) has the least drama. The guy behind it who created also seems friendly and is willing to cooperate with non-channers or those not interested in the meme aspect(In fact, Tox was made my /g/ users; /g/ has a pretty clean track record for making collaborative software)\n\nAs intended, this whole name raid thing wasn't to start drama to begin with, cookie cutter decided to take it extremely personally, which caused it's own drama. At best, the name wouldn't be picked and it was some other name, nothing bad would've happened... but here we are =||= From what I have seen more work has been done on sneedacity than any other forks. They removed telemetry, fixed bugs and you can build it on most platforms, someone's even working on a choco package for Windows and a ppa for Ubuntu based distributions.\r\nDespite all the drama, they have been the most professional since the beginning and they actually have C and C++ knowledge.\r\nI mean at the end of the day you choose the fork you want of course but I know which one I'll be using and if you can help sneedacity that would be great.  =||= Is there any way to create a poll on a website other than odysee, I have no account for it, and apparently I have to pay money  or wait to be verified (which may take days) to be able to vote. When I try to pay, it states that the USA is not a supported region. Either I am very stupid, or the site is may not be a good choice to make polls on. =||= > Is there any way to create a poll on a website other than odysee, I have no account for it, and apparently I have to pay money or wait to be verified (which may take days) to be able to vote. When I try to pay, it states that the USA is not a supported region. Either I am very stupid, or the site is may not be a good choice to make polls on.\r\n\r\nInventorXtreme You don't have to verify Odysee account for making a comment. You need to make small channel. With a name. ( A user name )  =||= https://github.com/Sneeds-Feed-and-Seed/sneedacity\r\nThis fork is pretty active and has no drama so its pretty good right now =||= Sneedacity has no drama or moderators censoring issues, along with many devs with actual skill in C[++] (unlike tenacity), I think this should be the new fork =||= The sign is a subtle joke. The shop is called \"Sneed's Feed & Seed\", where feed and seed both end in the sound \"-eed\", thus rhyming with the name of the owner, Sneed. The sign says that the shop was \"Formerly Chuck's\", implying that the two words beginning with \"F\" and \"S\" would have ended with \"-uck\", rhyming with \"Chuck\". So, when Chuck owned the shop, it would have been called \"Chuck's Fuck and Suck\". =||= Oh wow, haha, how did The Simpsons get away with this one? =||= "], ["1247", "stop glowing like a cia agent and remove the spying shit", "MLGari", "arivega", "07/07/21, 06:23:20 AM", "NaN", "NaN"], ["1248", "Privacy Policy is hard to find on the Audacity Website", "Peter Sampson", "petersampsonaudacity", "07/27/21, 12:10:28 AM", "**Describe the bug**\r\nThe Privacy Policy is hard to find on the Audacity Website\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to the Audacity website\r\n2. Try to locate the Privacy Policy\r\n3. Observe: (eventually) it is under the \"Contact\" tab\r\n\r\n**Expected behavior**\r\nI would expect to see it located under the \"About\" tab - along with similar related entries: License, Terms of Service, Voluntary Product Accessibility Template etc, \r\n\r\nIt is not really a \"Contact\" issue ...\r\n\r\n**Screenshots**\r\n\r\n![image](https://user-images.githubusercontent.com/50205984/124727434-9d7dd780-df06-11eb-912f-6091bc046cd0.png)\r\n\r\n![image](https://user-images.githubusercontent.com/50205984/124727679-d74ede00-df06-11eb-9e8a-ba9b736760e2.png)\r\n\r\n\r\n\r", "It's gone; the privacy policy in the \"Contact\" tab is regarding mailing lists; the privacy policy we are talking about is now missing and nowhere to be found.  =||= @Tantacrul  - Looking at the Audacity Website today on the About tab I see:\r\n![image](https://user-images.githubusercontent.com/50205984/126901139-85521fb1-eb8d-46d7-b731-860ce3aa1aab.png)\r\n\r\na) note that the Privacy policy(s) are shown on the right in the \"About\" links - but they have no corresponding links in the About dropdown menu (as all the other entries do).\r\n\r\nb) And personally I would place the privacy policies as the bottom two entries in both the drop-down menu and the \"About\" links list - leaving the much more important \"News\" at the top of the menu and list.\r\n =||= @Tantacrul And the Error Reporting Privacy\r\n![image](https://user-images.githubusercontent.com/50205984/126901453-bf055f07-6b1f-4a00-9898-9822c3b05d2a.png)\r\nIs just a placeholder and NOT a policy document.\r\n\r\nSince 3.0.3 has error checking I would have thought that this Error Reporting Privacy Notice should be properly extant on the Website prior to 3.0.3 release.\r\n\r\n\r\nAnd note that if you click on the Privacy Policy link in an error message - the link takes you to the \"Desktop Privacy Notice\" and NOT the \"Error Reporting Privacy Notice\" - should this logged as a new bug ?\r\n\r\n =||= >And note that if you click on the Privacy Policy link in an error message - the link takes you to the \"Desktop Privacy Notice\" \r\n>and NOT the \"Error Reporting Privacy Notice\" - should this logged as a new bug ?\r\n\r\nLogged as GitHub Issue #1361  =||= In Issue #1248 @crsib wrote:\r\n>This is not a bug, there will be single privacy policy for error reporting and updates\r\n\r\n In which case the separate link to \"Error Reporting Privacy Notice\"  needs removing from the Website =||= The public link to the privacy policy has now been published along with the release of 3.0.3.\r\n\r\n![image](https://user-images.githubusercontent.com/11011881/127074672-0c0b9502-0626-41d5-aaa6-a300da5bb0a7.png)\r\n\r\nThe ordering of the About list has also been fixed.\r\n\r\n![image](https://user-images.githubusercontent.com/11011881/127074705-1af6205f-4014-4e65-aed9-05d6105937b0.png)\r\n =||= "], ["1249", "(Maybe) Age restrictions doesn't break GNL (and correct some misconceptions) ", null, "DooDooDot", "08/04/21, 10:11:39 AM", "From [https://www.gnu.org/licenses/gpl-3.0.html]():\n\n> When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things.\n\nGPL refer to freedom of distribution and modification, says nothing about freedom of use for all ages.\n\nThe age restriction is **NOT** due COPPA but GDPR. \n\nFrom [https://gdpr-info.eu/art-8-gdpr/]()\n\n> Where point (a) of\u00a0Article 6(1) applies, in relation to the offer of information society services directly to a child, the processing of the personal data of a child shall be lawful where the child is at least 16 years old.\u00a0Where the child is below the age of 16 years, such processing shall be lawful only if and to the extent that consent is given or authorised by the holder of parental responsibility over the child. Member States may provide by law for a lower age for those purposes provided that such lower age is **not below 13 years**.\n\nBut Audacity new terms are still an issue, tho. ", "Both the GPLv2 and GPLv3 have parts that say that running the software is not restricted\r\nGPLv2: `The act of running the Program is not restricted`\r\nGPLv3: `This License explicitly affirms your unlimited permission to run the unmodified Program.`\r\n\r\nWhile age is not explicitly mentioned, I don't see why this would not apply to someone under a certain age.\r\n\r\nhttps://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html\r\nhttps://www.gnu.org/licenses/gpl-3.0.en.html =||= > Both the GPLv2 and GPLv3 have parts that say that running the software is not restricted\n> GPLv2: `The act of running the Program is not restricted`\n> GPLv3: `This License explicitly affirms your unlimited permission to run the unmodified Program.`\n> \n> While age is not explicitly mentioned, I don't see why this would not apply to someone under a certain age.\n\nGnu is a copyleft license, just the opposite of a copyright, this gives people unlimited permission to run the unmodified Program not restricted and without legal consequences because nobody claim the ownership of that program.\n\nNot that \u201ceveryone of every age can use it\", thing that people on Github **should** know.  =||= Yes, it is explicitly \"everyone can use it unrestricted\". You went from \"maybe\" to \"definitely\" pretty fast. Makes me wonder.\r\nEdit for mispelling/grammar  =||= it's uselessness speak with 10 ignorants that disliked the obvious and a troll  =||= > 2. Basic Permissions.\r\n> All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. \r\n\r\nIt's pretty obvious, to me anyway, that, by `This License explicitly affirms your unlimited permission to run the unmodified Program.`, and specifically, by `unlimited`, it means that anyone, regardless of race, gender, age, sexual orientation or any other factor can use this program, unrestricted.\r\nSo yes, the new ToS are in violation of the GPL. =||= > It's pretty obvious\n\nIt's not so \"obvious\u201c people are mistaking license wording for start a riot and troll or play the white knights.\nAt this point, think what you want.  =||= >It's not so \"obvious\u201c\r\n\r\n`unlimited` means unlimited, it means no restrictions whatsoever.\r\n\r\n>people are mistaking license wording for start a riot and troll or play the white knights.\r\n\r\nWhat riots are you talking about?\r\n\r\n>At this point, think what you want.\r\n\r\nI will, but why open this issue if you are not opened to discussing it? You might as well close this issue. =||= > this gives people unlimited permission to run the unmodified Program\r\n> \r\n> Not that \u201ceveryone of every age can use it\"\r\n\r\nI'm trying (and failing) to understand your argument, aren't you contradicting yourself in the same post? The GPLv2 and GPLv3 seem pretty clear to me.\r\n\r\n> GPLv2: `The act of running the Program is not restricted`\r\n> GPLv3: `This License explicitly affirms your unlimited permission to run the unmodified Program.`\r\n\r\nI'm interpreting \"is not restricted\" (for GPLv2) and \"your unlimited permission\" (for GPLv3) as anyone can use it, otherwise running the program would be restricted (by age) and the permission would be limited (by age)?\r\n\r\n =||= \"Everyone who disagrees with me is an ignorant troll\"\r\nOK, you got me with that one. I can't argue with that. =||= > From https://www.gnu.org/licenses/gpl-3.0.html:\r\n> \r\n> > When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things.\r\n> \r\n> GPL refer to freedom of distribution and modification, says nothing about freedom of use for all ages.\r\n> \r\n> The age restriction is **NOT** due COPPA but GDPR.\r\n> \r\n> From https://gdpr-info.eu/art-8-gdpr/\r\n> \r\n> > Where point (a) of Article 6(1) applies, in relation to the offer of information society services directly to a child, the processing of the personal data of a child shall be lawful where the child is at least 16 years old. Where the child is below the age of 16 years, such processing shall be lawful only if and to the extent that consent is given or authorised by the holder of parental responsibility over the child. Member States may provide by law for a lower age for those purposes provided that such lower age is **not below 13 years**.\r\n> \r\n> But Audacity new terms are still an issue, tho.\r\n\r\nI don't understand why you are citing GPLv3 when this is GPLv2\r\n\r\n> > It's pretty obvious\r\n> \r\n> It's not so \"obvious\u201c people are mistaking license wording for start a riot and troll or play the white knights.\r\n> At this point, think what you want.\r\n\r\n**obvious** is the fact that you are mistaking the license, you have not read the entire license and then argue that others mistakes the wording. GPLv2: `The act of running the Program is not restricted` means The act of running the Program is not restricted by age (among other things).\r\n\r\n> it's uselessness speak with 10 ignorants that disliked the obvious and a troll\r\n\r\nuseless is arguing the license with someone that has not read the license file https://github.com/audacity/audacity/blob/master/LICENSE.txt\r\n\r\nP.S.: BTW you are not \u201cspeaking\u201d you are writing. =||= > From https://gdpr-info.eu/art-8-gdpr/\r\n> \r\n> > Where point (a) of Article 6(1) applies, [...] such lower age is **not below 13 years**.\r\n> \r\n> But Audacity new terms are still an issue, tho.\r\n\r\nIt is still not clear which new terms imply that audio recording is personal data. =||= The final revised Privacy Policy released as part of 3.0.3 has no age restriction =||= "], ["1251", "Labels track: labels selection", null, "AnitaBats", "09/21/21, 03:21:59 PM", "Implement changes proposed by #1195\r\n\r\nEst.: 10 hrs", "done =||= "], ["1253", "BOYTCOTT the uk gov, and it's \"national\" terrorist \"service\", and google and youtube and microsoft and people who use \"titles\" with names", "Deleted user", "ghost", "07/07/21, 02:54:12 PM", "**BOYCOTT** the evil terrorists at the uk gov. Don't protect their evil \"national\" \"service\". \r\n**BOYCOTT** google for promoting the uk's evil \"national\" \"service\" and for promoting people who work for them. STOP USING ALL GOOGLE PRODUCTS. Google is a fake clown (and so is microsoft/yandex/duckduckgo etc. etc.) WHO ARE NOT ENGINEERS. They are fake clowns who claim to be Engineers, WHEN THEY ARE NOT, AND WILL NEVER BE CLOSE TO ENGINEERS.\r\n**BOYCOTT** people who mention other people using \"titles\". \r\n**DO NOT** give ANY telemetry to the evil terrorists and arrogant people.\r\n\r\nbye bye.....\r", "NaN"], ["1254", "Please stop helping the evil people!", "Deleted user", "ghost", "07/07/21, 05:47:54 PM", "BOYCOTT the evil terrorists at the uk gov. Don't protect their evil \"national\" \"service\".\r\nBOYCOTT google for promoting the uk's evil \"national\" \"service\" and for promoting people who work for them. STOP USING ALL GOOGLE PRODUCTS. Google is a fake clown (and so is microsoft/yandex/duckduckgo etc. etc.) WHO ARE NOT ENGINEERS. They are fake clowns who claim to be Engineers, WHEN THEY ARE NOT, AND WILL NEVER BE CLOSE TO ENGINEERS.\r\nBOYCOTT people who mention other people using \"titles\".\r\nDO NOT give ANY telemetry to the evil terrorists and arrogant people.\r\n\r\nbye bye.....", "Wtf \ud83d\ude05 is this IT a kind of \"anti-vaccine\" campaign? =||= ? =||= "], ["1256", "ILLEGAL ACTIVITY", "FanboyStudios", "FanboyStudios", "07/07/21, 06:26:11 PM", "ILLEGAL ACTIVITY\r\n\r\nLimiting users ages to over 13 is a violation of GPL 3.0! STOP IT!\r\n\r\nI sincerely hope Muse Group gets sued to oblivion and goes bankrupt... along with Adobe (for which they have ties to).\r\n\r\n![eviladobeaudacity](https://user-images.githubusercontent.com/13723631/124809215-7aaeeb80-df25-11eb-88e8-3940c9bf30ea.png)\r", "NaN"], ["1257", "Privacy Policy was removed from the Official Website", "Daniel Fleischer", "danielfleischer", "07/07/21, 08:42:55 PM", "No where to be found.\r\n\r\nThe privacy policy in the \"Contact\" tab relates to mailing lists privacy. ", "Not removed, just well hidden: need to go to \"About\", then \"License\", then on the right pane list, go to \"Desktop Privacy Notice\". =||= "], ["1258", "Renaming clips", "Jouni Helminen", "jounih", "09/15/21, 03:09:01 AM", "### User Story\r\nAs a developer, I would like to know the UX details for implementing clip names and renaming.\r\n\r\n### Description\r\n\r\nCurrently there is no concept of clip names in Audacity, only track names. Individual clip names are very useful when organising a project, or separating between copies or takes.\r\n\r\nThe new affordance UX has a space for a clip name top left, below are the designs which allow the user to change the clip name.\r\n\r\nFor keyboard navigation Tabbing should select a clip, and \"Enter\" could edit the clip name.\r\n\r\nAudio/Midi clips:\r\n\r\n![Clip names@2x](https://user-images.githubusercontent.com/10109867/126309380-68a8db34-691a-4eb7-a6ca-4efd0807d102.jpg)\r\n\r\n\r\nLabel clips:\r\n\r\nDescribed here https://github.com/audacity/audacity/issues/1195\r\n\r\n### Accessibility\r\n\r\nKeyboard shortcuts for selecting and editing audio/midi clip names and label clip names should be identical. Tab to select/forward cycle selection, enter to edit currently selected.\r\n\r\nFurthermore, they should both respect the accessibility preference for editing the name in a dialog: Tracks->Track Behaviours-> Use dialog for the name of a new label (Also this should be renamed to \"Use dialog for the name of a new label or clip\"\r\n\r\n\r", "Re: keyboard navigation:\r\n\r\n1. Clip selection would be better than clip focus for renaming. For example, in file managers, if the focused and selected items are different and you press F2, then the name of the selected item is opened for editing. In addition, using the selected item (or items?) allows for the possibility of easily being able to rename multiple clips if that is ever required. If selection is used, then using tab is no longer appropriate.\r\n\r\n2. However (!), proper selection of clips if not yet implemented. If this is still the case when renaming clips is implemented, as an alternative to the selected clip, you could use the clip which contains the cursor in the focused track. There already are commands for selecting (time range) next/previous clip, and commands for moving the cursor to next/previous clip boundary.\r\n\r\n3. I'm assuming that a custom text box will be used for editing the clip name. Unfortunately, on Windows and using the wxWidgets accessibility framework this can't be made accessible for users of screen readers. So there will need to be the option of using a standard text box in a dialog box. Such an option is already present in Audacity for entering the name of a label when it's created. (Preferences-> Tracks Behaviors -> Use dialog for the name of a new label.)\r\n\r\n4. Enter toggles the selectedness of the track, so another shortcut would have to be used for the rename clip command. =||= Can this design really be considered done, @AnitaBats ?  David's points are unaddressed.\r\n =||= Will be reviewing David's feedback today @Paul-Licameli  =||= \r\n> 3. I'm assuming that a custom text box will be used for editing the clip name. Unfortunately, on Windows and using the wxWidgets accessibility framework this can't be made accessible for users of screen readers. So there will need to be the option of using a standard text box in a dialog box. Such an option is already present in Audacity for entering the name of a label when it's created. (Preferences-> Tracks Behaviors -> Use dialog for the name of a new label.)\r\n\r\nProviding the option of using a standard text box in a dialog box will also provide a workaround for IME input. See https://bugzilla.audacityteam.org/show_bug.cgi?id=1804\r\n\r\n\r\n =||= > Keyboard shortcuts for selecting and editing audio/midi clip names and label clip names should be identical. Tab to select/forward cycle selection, enter to edit currently selected.\r\n\r\nThe existing use of Tab and Shift + Tab in the label track is somewhat of an anomaly in Audacity. These shortcuts are hard coded - normally there are commands, possibly with default shortcuts, and the user is able to customize these shortcuts. Maybe part of the reason for this anomaly is that in all previous versions of Audacity, these shortcuts changed the focus, and so were felt to be appropriate.\r\n\r\nHowever, for the actions of selecting the next/previous item in an audio or wave track I think it would be much better to have commands for these actions, so that their shortcuts can be customized. I don't think that Tab and Shift + Tab would make good default shortcuts for these commands, given that at some point there will probably be commands for selecting multiple items. For the Tab and Shift + Tab pair of shortcuts the Shift modifier indicates a change of direction. However when there are commands for selecting single items and for extending the selection, the Shift modifier is normally used to indicate extending the selection, rather than the direction. So for example in Reaper (at least when using the osara extension),  the shortcuts for selecting the next/previous clip are  Ctrl + right/left arrow, and the shortcuts for extending the clip selection forwards or backwards are Ctrl + Shift + right/left arrow.\r\n\r\nAlso, as I've previously pointed out, the shortcut Enter is currently used to toggle the selectedness of the focused track. Again there should of course be a command the rename the focused item rather than it being hardcoded.\r\n\r\nI didn't notice that the design had been edited, otherwise I would have commented earlier. =||= @DavidBailes makes sense to have customisable commands for selecting clips and editing names rather than hardcode these shortcuts. @vsverchinsky can you do this please?\r\n\r\nI'm ok with ctrl/command + right/left arrow for selecting the next/previous clip if that's preferred, makes sense to add shift to that when extending the selection to multiple clips. \r\n\r\n@DavidBailes Which keyboard shortcut would you prefer for editing the name, once the clip is selected? And which keyboard shortcut for selecting the first clip overall? =||= > @DavidBailes makes sense to have customisable commands for selecting clips and editing names rather than hardcode these shortcuts. @vsverchinsky can you do this please?\r\n\r\n@Jouni. There are existing commands to select the next/previous clip (Alt + comma/period). As you've previously pointed out they don't change the state of the clip to selected, but they could be changed to do so.\r\nAre you wanting to use different commands rather than modifying these existing commands?\r\n\r\nTantacrul mentioned somewhere (which I can no longer find) that he was working on a selection model for 3.1. Do you know if this is finished? It would be really useful to know what the big picture is for selection when thinking about the commands are needed for 3.1 so that all the new features are accessible for keyboard users.\r\n\r\n> \r\n> I'm ok with ctrl/command + right/left arrow for selecting the next/previous clip if that's preferred, makes sense to add shift to that when extending the selection to multiple clips.\r\n\r\nctrl+right/left arrow wouldn't work at the moment because looking to the future when commands that extend the clip selection are added, ctrl+shift+left/right arrow are already used.\r\nIn addition if modified versions of the existing clip selection commands are used, we could just use the existing shortcuts (and alt + shift + comma/period are available).\r\n\r\nAs a slight aside, I appreciate with all the changes in Audacity, at some stage shortcuts may well need to be reassigned so that there's a coherent set of shortcuts for all the new functionality.\r\n\r\n> \r\n> @DavidBailes Which keyboard shortcut would you prefer for editing the name, once the clip is selected?\r\n\r\nGiven that F2 is already taken, Ctrl + F2 may be as good as any.\r\n\r\n> And which keyboard shortcut for selecting the first clip overall?\r\n\r\nCould you expand on what you meant by that, I don't understand what you mean?\r\n\r\n =||= See also issue #1644 -- the Set Clip command should now be extended to make clip name change available to macros =||= "], ["1259", "Unreadable dialog message (contrast) on macOS", "Pascal J. Bourguignon", "informatimago", "07/11/21, 04:51:10 PM", "\r\n**Describe the bug**\r\nThe contrast of the button texts in this Warning dialog is insufficient to achieve readability:\r\n\r\n\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Install audacity on macOS (eg. sudo port install audacity)\r\n2. Launch audactiy (eg. audacity some.wav)\r\n3. See dialog.\r\n\r\n**Expected behavior**\r\n\r\nButton text should be displayed in black just like the rest.\r\n\r\n**Screenshots**\r\n\r\n<img width=\"517\" alt=\"Screenshot 2021-07-08 at 14 35 01\" src=\"https://user-images.githubusercontent.com/791692/124922614-f1b5b400-dff9-11eb-8575-d76777c6e2a0.png\">\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: macOS Big Sur\r\n```\r\n[pjb@despina org.xquartz:0 ~ 14Gi]$ hostinfo\r\nMach kernel version:\r\n\t Darwin Kernel Version 20.5.0: Sat May  8 05:10:33 PDT 2021; root:xnu-7195.121.3~9/RELEASE_X86_64\r\nKernel configured for up to 8 processors.\r\n4 processors are physically available.\r\n8 processors are logically available.\r\nProcessor type: x86_64h (Intel x86-64h Haswell)\r\nProcessors active: 0 1 2 3 4 5 6 7\r\nPrimary memory available: 32.00 gigabytes\r\nDefault processor set: 757 tasks, 3238 threads, 8 processors\r\nLoad average: 2.68, Mach factor: 5.47\r\n\r\n[pjb@despina org.xquartz:0 ~ 14Gi]$ \r\n```\r\n - Version\r\n```\r\n[pjb@despina org.xquartz:0 ~ 14Gi]$ audacity --version\r\n\r\n[pjb@despina org.xquartz:0 ~ 14Gi]$ port search audacity|head -2\r\naudacity @2.2.2_1 (audio)\r\n    A Free, Cross-Platform Digital Audio Editor.\r\n\r\n[pjb@despina org.xquartz:0 ~ 14Gi]$ \r\n```\r\n\r\n**Additional context**\r\n\r\nstderr output:\r\n```\r\n$ audacity /Volumes/USB8GB-A/RECORD/REC001.WAV\r\n||PaMacCore (AUHAL)|| Error on line 1316: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 8000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1316: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 9600 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1316: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 11025 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1316: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 12000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1316: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 15000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1316: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 16000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1316: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 22050 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1316: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 24000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1316: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 32000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1316: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 44100 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1316: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 48000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1316: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 88200 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1316: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 96000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1316: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 176400 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1316: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 192000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1316: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 352800 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1316: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 384000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1277: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 8000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1277: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 9600 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1277: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 11025 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1277: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 12000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1277: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 15000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1277: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 16000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1277: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 22050 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1277: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 24000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1277: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 32000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1277: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 44100 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1277: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 48000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1277: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 88200 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1277: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 96000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1277: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 176400 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1277: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 192000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1277: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 352800 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1277: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 384000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1316: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 8000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1316: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 9600 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1316: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 11025 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1316: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 12000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1316: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 15000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1316: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 16000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1316: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 22050 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1316: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 24000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1316: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 32000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1316: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 44100 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1316: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 48000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1316: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 88200 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1316: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 96000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1316: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 176400 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1316: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 192000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1316: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 352800 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1316: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 384000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1277: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 8000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1277: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 9600 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1277: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 11025 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1277: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 12000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1277: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 15000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1277: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 16000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1277: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 22050 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1277: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 24000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1277: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 32000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1277: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 44100 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1277: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 48000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1277: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 88200 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1277: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 96000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1277: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 176400 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1277: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 192000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1277: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 352800 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1277: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| OpenStream @ 384000 returned: -9986: Internal PortAudio error\r\n||PaMacCore (AUHAL)|| Error on line 1316: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| Error on line 1277: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| Error on line 1316: err='-66748', msg=Unknown Error\r\n||PaMacCore (AUHAL)|| Error on line 1277: err='-66748', msg=Unknown Error\r\n14:34:36: Debug: Unrecognized accel key 'backspace', accel string ignored.\r\n14:34:36: Debug: Unrecognized accel key 'numpad_enter', accel string ignored.\r\n2021-07-08 14:35:06.246 Audacity[25353:7789421] Persistent UI failed to open file file:///Users/pjb/Library/Saved%20Application%20State/$(PRODUCT_BUNDLE_IDENTIFIER).savedState/window_7.data: No such file or directory (2)\r\n```\r", "Probably of interest, the dark/light setting, the timezone and the night shift settings:\r\n\r\n<img width=\"670\" alt=\"Screenshot 2021-07-08 at 14 43 18\" src=\"https://user-images.githubusercontent.com/791692/124923745-0c3c5d00-dffb-11eb-916e-786cc8144a82.png\">\r\n\r\n<img width=\"669\" alt=\"Screenshot 2021-07-08 at 14 42 51\" src=\"https://user-images.githubusercontent.com/791692/124923757-0d6d8a00-dffb-11eb-82ef-572f22a4f191.png\">\r\n\r\n<img width=\"664\" alt=\"Screenshot 2021-07-08 at 14 43 37\" src=\"https://user-images.githubusercontent.com/791692/124923760-0e062080-dffb-11eb-969d-30cca8b19ec9.png\">\r\n =||= This is from a much older version of Audacity.  \r\n\r\nOld versions of Audacity used to have this ODL (On Demand Loading) where external uncompressed (WAV & AIFF) files could be \"aliased\" i.e. referenced externally and not imported into the Audacity project.\r\n\r\nThis was done in early versions of Audacity as a space-saver when disks were a lot smaller and a lot more expensive.  Several versions back, in 2.3.3 in fact we removed this feature.\r\n\r\nThis should not be an issue in current 3.x.x Audacity - if a user has an AUP project made in 2.3.2 or earlier that still has external aliased audio files and tries to open it (actually import it) into 3.x.x, provided the aliased files remain extant and are in the correct referenced location the 3.x.x will import that old AUP project and import the aliased files and convert to the new unitary AUP3 project format.\r\n\r\n =||= @petersampsonaudacity explains that this dialog does not exist in the latest released version of Audacity.\r\n\r\nI'm closing the issue.  If you, @informatimago upgrade to 3.0.2 and find another example of this poor contrast, then please re-open this.\r\n =||= "], ["1263", "#dontstealmydata", "Mat\u011bj \u0160t\u00e1gl", "lofcz", "07/08/21, 07:24:18 PM", "Thanks for being here for all the years but it's to move on --> https://github.com/tenacityteam/tenacity", "NaN"], ["1265", "Fix recording starting position (refs #1183)", "Vitaly Sverchinsky", "vsverchinsky", "07/16/21, 03:14:36 PM", "Resolves: #1183\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1267", "Show app updates Informational popup with updated text on the first app launch", null, "AnitaBats", "08/04/21, 10:37:15 AM", "User story\r\nAs a Product owner of Audacity I need to notify the users when they first install Audacity that update checking requires an IP address in order to work.\r\nThe info text must be clean and unambiguous and should link to Privacy Policy\r\n\r\nDetails and final design will be added as soon as they are approved. ", "@AnitaBats   Such notification should also enable the user to turn off update checking _**before**_ the app attempts any phone-home Internet access.\r\n\r\nIt is my understanding (but IANAL) that this is necessary for GDPR compliance (UK and European).\r\n\r\nFor UK see:  https://ico.org.uk/for-organisations/guide-to-data-protection/guide-to-the-general-data-protection-regulation-gdpr/lawful-basis-for-processing/consent/\r\n =||= > The info text must be clean and unambiguous and should link to Privacy Policy\r\n@AnitaBats  - the 3.0.3 notification seems perfectly clear to me (even though it has no mention of IP address)\r\n![image](https://user-images.githubusercontent.com/50205984/128160431-5d200cec-3739-4a67-8a24-32b78d946317.png)\r\n\r\n\r\nI think you could probably close this issue ...\r\n\r\n\r\n =||= "], ["1268", "About Audacity dialog change: add Legal tab, add PP there", null, "AnitaBats", "07/09/21, 05:34:05 PM", "As a Product owner of Audacity I need to provide the users more visibility on the Privacy Policy, therefore it should be accessible in About Audacity dialog.\r\n\r\n1. Add Legal tab in the About Audacity dialog\r\n2. Legal tab should contain a link to the Privacy Policy\r\n3. It should contain info about the licensing (current information, must not be removed)\r\n\r\nDetails on the requirements and design will be added as soon as they are approved. ", "NaN"], ["1269", "Update Preferences -> Application: updates", null, "AnitaBats", "08/04/21, 10:12:44 AM", "User story\r\nAs a user of Audacity, I want to be able to opt-in / opt-out for the app updates so that I can decide whether I want to receive updates.\r\n\r\n1. Add Check for the updates option checkbox to the Preferences -> Application\r\n2. Default value is on\r\n3. Privacy Policy should be mentioned in this doc\r\n\r\nDetails on the requirements and design will be added as soon as they are approved. ", "I don't see any reason why this could not apply to crash reports too.\r\n\r\nAn open source mod tracker I use, opens up a dialogue on first use which give the user these options on one page. Can also be accessed through options at any time. \r\n\r\nDo I trust the developers? Absolutely because they have been up-front and open.\r\nAm I more likely to opt in to allow crash reports to be sent? Hell yes.\r\n =||= This is the case in 3.0.3 =||= "], ["1271", "Move Privacy Policy URL to a different tab to improve it's visibility", "Dmitry Vedenko", "crsib", "07/09/21, 05:03:27 PM", "Resolves: #1268 \r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1274", "Audacity crashes if Nyquist script contains EXIT command", "Steve Daulton", "SteveDaulton", "07/12/21, 09:10:01 AM", "**Describe the bug**\r\nIf a Nyquist script containing the EXIT command runs, Audacity crashes.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Run the following command in the Nyquist Prompt effect\r\n`(exit)`\r\n2. Observe that Audacity crashes.\r\n\r\n**Expected behavior**\r\nThe EXIT command should not be defined in Audacity's implementation of Nyquist, so `(exit)` should raise an error:\r\n`error: unbound function - EXIT`\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Xubuntu 20.04 (bug expected to affect all platforms)\r\n - Version: Audacity 3.0.2 / 3.0.3 alpha / 3.0.4 alpha\r\n\r\n\r\n**Additional context**\r\nThis is a return of: https://bugzilla.audacityteam.org/show_bug.cgi?id=379\r", "NaN"], ["1275", "Fix bug 379", "Steve Daulton", "SteveDaulton", "07/12/21, 09:10:01 AM", "EXIT should not be defined in Audacity's implementation of Nyquist\r\n\r\nResolves: https://github.com/audacity/audacity/issues/1274\r\n\r\nUndefine Nyquist \"EXIT\" command\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1277", "Extract lib basic UI", "Paul Licameli", "Paul-Licameli", "07/19/21, 02:43:23 AM", "Resolves: #1059\r\n\r\nDefinition and some uses of a facade, decoupling an interface for a few basic user interface services, from a wxWidgets based implementation that is injected at startup time.\r\n\r\nThis will allow certain important parts of the program to achieve UI toolkit neutrality, without yet undertaking the larger task of a toolkit-neutral rewrite of ShuttleGui.\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1279", "Help>Check for Updates - does not actually check for updates", "Peter Sampson", "petersampsonaudacity", "09/24/21, 06:14:12 PM", "**Describe the bug**\r\nA clear and concise description of what the bug is.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to Help>Check for Updates\r\n2. Observe: you are taken to the Update page of the Audacity Website\r\nhttps://www.audacityteam.org/download/?from_ver=3.0.3&Time=Jul9202117:10:00\r\n\r\n**Expected behavior**\r\nGiven that Audacity now has internet enabled update checking - check for updates should actually perform a proper update check - not just take the user to a wen page where they must do the checking.\r\n\r\nThis command should temporarily over-ride the setting a user may have in Application preferences for Update Checking to be \"off\" - BUT it should **_NOT_** change that setting to be on.  It is a perfectly valid use-case  that a user may wish to make a one-off on-demand check without having auto-checking turned \"on\"\r\n\r\n**Screenshots**\r\nNot applicable.\r\n\r\n**Additional information (please complete the following information):**\r\n - Tested on W10 with latest 3.0.3 alpha:  Audacity_Windows_64bit_1015901279_01da348 \r\n - But applies to all OS\r\n\r\n**Additional context**\r\nNone.\r", "**Fixes way:**\r\n1. Make the opt-in of `Help>Check for Updates` item by `audacity_has_updates_check` CMake option.\r\n2. Call `UpdateManager::Get().GetUpdates(true)` from `Help>Check for Updates` to checking new version (download and installing) if update option was enabled. =||= Task required: 6-8 hrs =||= @LWinterberg Remember manual updates for this?\r\n =||= Tested on W10 with audacity-win-3.1.0-alpha-20210924+97ca83e-64bit\r\n\r\nThis now looks fine\r\n\r\n![image](https://user-images.githubusercontent.com/50205984/134725795-b5908333-7462-4424-aa8a-7f8f4353038f.png) =||= "], ["1280", "Update user manual: Affordances", null, "AnitaBats", "09/22/21, 09:08:07 AM", "NaN", "Note that there are an awful lot. of images of tracks in the manual which ideally should be updated to show the affordances drag-bar.\r\n\r\nIncluding of course the \"Amazing-Imagemap\" on the front page - which provides a graphical \"index\" to content in the manual.\r\n =||= 1_ I have added P1s in the manual for pages that I believe really must be changed - images and text.\r\n\r\n2) There are other pages with track images that ideally should be changed.\r\n\r\n3) I have added a placeholder section in the What's new for this new feature.\r\n\r\n4) You really cannot call these thingamebobs/Dingsbums \"Affordances\" in a user-facing document like the Manual, it will totally confuse users:\r\na) it is not meaningful,\r\nb) it is not accurate.  \r\n\r\n@Tantacrul favors \"**Clip-handles**\" and I am minded to agree.  \r\n\r\nI've found myself writing in the Manual \"**Clip-handle drag bars**\" for greater clarity. =||= (this is blocked by #1446. Also by #1182 to some extend) =||= As far as affordances go: \r\n- [x] https://alphamanual.audacityteam.org/man/Sync-Locked_Track_Groups_-_Time_Shifting still needs to be done (after I properly understand what's happening there)\r\n- [ ] https://alphamanual.audacityteam.org/man/Spectrogram_View may get some more images, but it's not that urgent\r\n- [ ] https://alphamanual.audacityteam.org/man/Main_Page needs to get updated, and it seems like this can be done relatively painlessly. however, this is blocked by the design of the spectral editing tool/removal of the time shift tool button/...\r\n- [ ] https://alphamanual.audacityteam.org/man/Time_Shift_Tool can get deleted (https://alphamanual.audacityteam.org/man/Special:WhatLinksHere/Time_Shift_Tool needs to be unlinked first)\r\n- [ ] https://alphamanual.audacityteam.org/man/Editing,_resizing_and_moving_Labels would be nice-to-have for clip handles, but the focus is on labels which didn't change much in appearance =||= >     * https://alphamanual.audacityteam.org/man/Spectrogram_View may get some more images, but it's not that urgent\r\n\r\nI trimmed the Timeline off of three images - which should remove the need to update these for the clip-handles. =||= @LWinterberg   I just added a P1 to this page\r\nhttps://alphamanual.audacityteam.org/man/Audacity_Tracks_and_Clips#Moving_Clips\r\n\r\nAs the page on Time Shift tool is scheduled to be removed - this page needs to talk about the ability to shift audio to  before T-0 - i.e. audio in negative time. =||= @LWinterberg  I also added a P1 for updated images to this page:\r\n\r\n0. https://alphamanual.audacityteam.org/man/Edit_Menu:_Clip_Boundaries\r\n\r\nAs this page is all about clips I think it really should be updated. =||= I also added P1s for\r\n\r\n1.  https://alphamanual.audacityteam.org/man/Select_Menu:_Clip_Boundaries\r\n2. https://alphamanual.audacityteam.org/man/Crossfade_Clips\r\n3. https://alphamanual.audacityteam.org/man/Edit_Menu:_Remove_Special\r\n4. https://alphamanual.audacityteam.org/m/index.php?title=Boundary_Snap_Guides&action=edit\r\n\r\nAs these all pay some attention to working with clips. =||= And these\r\n\r\n5. https://alphamanual.audacityteam.org/man/Keyboard_Shortcut_Reference#Extra:_Tools\r\n6. https://alphamanual.audacityteam.org/man/Scripting_Reference#Extra:_Tools\r\n7. https://alphamanual.audacityteam.org/man/Toolbars_Overview#Tools_Toolbar\r\n8. https://alphamanual.audacityteam.org/man/Tools_Toolbar =||= Today I also changed several references to using the Time Shift tool - switching that to using the Clip-handle drag-bars. =||= Priorities have shifted, I'm considering the state of affordances in an acceptable state for now and will prioritize #1699 instead, as well as the new manual. I'm closing this even though some of these pages still haven't been updated, as the new system is scheduled for 3.2 anyway.  =||= "], ["1282", "Remove the GPL violation ( will report )", null, "time-travel-knoppers", "07/14/21, 09:56:57 AM", "How can you be this disgusting?!", "NaN"], ["1283", "PortAudio (Upstream) merge to main branch", "Abdon Morales", "abdonmorales", "07/12/21, 01:05:42 PM", "Resolves: *(direct link to the issue)*\r\n\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [ ] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [ ] I made sure the code compiles on my machine\r\n- [ ] I made sure there are no unnecessary changes in the code\r\n- [ ] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [ ] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "Oops =||= "], ["1284", "Adds Privacy Policy to preferences.", "Dmitry Vedenko", "crsib", "07/14/21, 05:38:36 PM", "Fixes #1269\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1286", "Makes privacy policy accessible in the About dialog.", "Dmitry Vedenko", "crsib", "07/13/21, 06:58:49 PM", "The change in ShuttleGUI is required to set the proper position for the URL. The default behavior has not changed\r\n\r\nRefs: #1271  \r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1290", "Patch #1", "Abdon Morales", "abdonmorales", "07/13/21, 04:13:57 PM", "Resolves: *(direct link to the issue)*\r\n\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [ ] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [ ] I made sure the code compiles on my machine\r\n- [ ] I made sure there are no unnecessary changes in the code\r\n- [ ] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [ ] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1294", "\"Scriptables\" commands fail", "Steve Daulton", "SteveDaulton", "07/18/21, 03:35:27 PM", "**Describe the bug**\r\nMost or all of the commands in \"Extra > Scriptables I\" and \"Extra > Scriptables II\" fail.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Select a command from either \"Scriptables I\" or \"Scriptables II\".\r\n2. Observe, nothing happens.\r\n3. The \"Scriptables\" commands that I've tested via mod-script-pipe also fail.\r\n\r\n**Expected behavior**\r\nThe Scriptables commands to work.\r\n\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Xubuntu 20.04\r\n - Version: Audacity 3.0.4-alpha-20210714\r\n\r\n**Additional context**\r\nSee also: https://github.com/audacity/audacity/issues/1289 and https://github.com/audacity/audacity/issues/1293\r", "This bug also  breaks many Nyquist scripts.\r\nExample:\r\n1. Launch Audacity\r\n2. Add a track\r\n3. Select part of the track\r\n4. Run this Nyquist command in the Nyquist Prompt using the Debug button: `(aud-do-command \"chirp\")`\r\n5. Observe a long and cryptic error message, beginning with:\r\n\r\n```\r\n; loading \"/tmp/aud-do-debug-data-cache.lsp\"\r\nDebug data cache refreshed.\r\n; loading \"/tmp/aud-do-debug-data-cache.lsp\"\r\nerror: misplaced right paren\r\nFunction: #<Subr-(null): #0x55989e3d8528>\r\nArguments:\r\n  #<File-Stream: #0x55989e89ef30>\r\n  #\\)\r\n``` =||= Bug bisects to first bad commit: https://github.com/audacity/audacity/commit/02b61532fe1d5de459de705ccfe81e3c8d7cda89 =||= > Bug bisects to first bad commit: [02b6153](https://github.com/audacity/audacity/commit/02b61532fe1d5de459de705ccfe81e3c8d7cda89)\r\n\r\nThank you for the bisection.  So this is only a problem in 3.0.4.\r\n =||= Yes, seems OK in 3.0.3 RC2. =||= "], ["1295", "Make Privacy Policy links accessible from the keyboard", "Dmitry Vedenko", "crsib", "07/15/21, 01:18:09 AM", "This pull request aims to provide a way for VI users to access the privacy policy.\r\n\r\n* A new class is added that allows formatting translatable messages with links without having concatenations\r\n* Accessible link to Privacy Policy added to Preferences -> Application\r\n* Accessible link added to About dialog\r\n* A new dialog that notifies the user about automatic updates checking with a link to Privacy Policy and an ability to open preferences. This dialog is shown before the first update check.\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "I force-pushed the branch in your origin!  Sorry if that was rude.\r\n\r\nBut I permuted things in the file back to their original order, so there is a much smaller diff that is easier to review and understand.\r\n\r\nOne difference I notice is the change of \"information\" to \"info\".  But as with \"app\", I question whether we should use short colloquialisms.  Yet, not my call.\r\n\r\n =||= I'm now satisfied with AboutDialog.cpp, and you addressed the other points I raised.  Approved.  And, I would like to merge this back to master soon.\r\n =||= "], ["1297", "Fix bug 1243", "Anton S. Gerasimov", "gera-gas", "07/15/21, 04:15:08 PM", "Resolves: #1243 \r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r\n\r\nWindows with error information for Temporary directory cases:\r\n![image](https://user-images.githubusercontent.com/1660969/125621355-94d897cc-5eb4-4265-a8b5-e691b0ec89e2.png)\r", "We usually aim to have a help button on error dialogs to take you to the manual for more information. =||= > \r\n> \r\n> We usually aim to have a help button on error dialogs to take you to the manual for more information.\r\n\r\nWe have a link in this dialog to Audacity manual that followed to Directory Preferences description or you means, button used usual for this purpose (link to manual)? not a link. Seems I understand what you means, I will add a changes. =||= An example\r\n![image](https://user-images.githubusercontent.com/50205984/125654771-a14d60ab-3b62-436b-a66e-94c8ca453c5d.png)\r\n =||= I like the (new) use of the html window in an error dialog as it gives easy option of hyperlink, cut-and-paste-ability and wrapping that does not depend on the translators.\r\n\r\nNotice that Peter's example also has an informative title for the dialog. =||= > I like the (new) use of the html window in an error dialog as it gives easy option of hyperlink\r\n\r\nUnfortunately, the hyperlink won't be accessible to keyboard users. =||= The error dialog is changed to: https://crsib-screenshots.s3.amazonaws.com/20210715_18.29.58_gaaab.png =||= "], ["1298", "Crash in CallAfterRecording", "Dmitry Vedenko", "crsib", "07/15/21, 02:13:40 PM", "```\r\nmsvcp140 +0x12fc8 mtx_do_lock mutex.cpp:91\r\nAudacity +0xd2371 std::_Mutex_base::lock mutex:51\r\nAudacity +0xd2371 std::lock_guard<T>::{ctor} mutex:438\r\nAudacity +0xd2371 AudioIO::CallAfterRecording AudioIO.cpp:1842\r\nlib-network-manager +0x0cfde std::_Func_class<T>::operator() functional:968\r\nlib-network-manager +0x0cfde audacity::network_manager::CurlResponse::perform CurlResponse.cpp:300\r\nntdll +0xc13fb RtlSleepConditionVariableSRW\r\n<unknown> 0x000037decf0 <unknown> \r\nlib-network-manager +0x0fbfe std::_Func_class<T>::operator() functional:968\r\nlib-network-manager +0x0fbfe std::_Packaged_state<T>::_Call_immediate future:603\r\nlib-network-manager +0x0f3ff std::_Func_class<T>::operator() functional:968\r\nlib-network-manager +0x0f3ff <lambda>::operator() ThreadPool.h:55\r\nlib-network-manager +0x0e0ad std::invoke type_traits:1585\r\nlib-network-manager +0x0e0ad std::thread::_Invoke<T> thread:55\r\nucrtbase +0x682dc crt_at_quick_exit\r\nkernel32 +0x1570c BaseThreadInitThunk\r\nntdll +0x5385c RtlUserThreadStart\r\n```\r", "Is this reliably reproducible? =||= "], ["1299", "Labeler Implementation ", null, "aldo-aguilar", "07/15/21, 03:38:30 AM", "Resolves: *(direct link to the issue)*\r\n\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "Accidentally Opened =||= "], ["1300", "Sequence of AudioIO and NetworkManager shutdowns fixes crash at exit", "Paul Licameli", "Paul-Licameli", "07/15/21, 02:13:40 PM", "Resolves: #1298\r\n\r\nStack trace showed main thread was shutting down network manager, which was waiting to join a response thread, which was executing the lambda in UpdateManager, which was using the global AudioIO object -- which was destroyed before that, at least on the main thread.\r\n\r\nThis is a simple fix: destroy AudioIO after that, not before.\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1301", "Update pl.po from Transifex for 3.0.3", "Grzegorz Pruchniakowski", "Gootector", "07/15/21, 11:44:48 PM", "Update pl.po from Transifex for 3.0.3\r\n\r\nGreetings,\r\nGootector\r\n\r\nResolves: *(direct link to the issue)*\r\n\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "Fixes needed - closed. See: https://github.com/audacity/audacity/pull/1304/ =||= "], ["1302", "Update pl.po for 3.0.3", "Grzegorz Pruchniakowski", "Gootector", "07/16/21, 03:20:45 AM", "Update pl.po for 3.0.3\r\nI copied and pasted translated/updated strings from Transifex to this file.\r\n\r\nGreetings,\r\nGootector\r\n\r\nResolves: *(direct link to the issue)*\r\n\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "Fix needed ('msgstr \"nasza Polityka Prywatno\u015bci\"' to 'msgstr \"nasz\u0105 Polityk\u0119 Prywatno\u015bci\"') - closed. See: https://github.com/audacity/audacity/pull/1304/ =||= "], ["1303", "Update pl.po from Transifex (master)", "Grzegorz Pruchniakowski", "Gootector", "07/16/21, 08:35:34 AM", "Update pl.po from Transifex (master)\r\n\r\nGreetings,\r\nGootector\r\n\r\nResolves: *(direct link to the issue)*\r\n\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1304", "Update pl.po for 3.0.3", "Grzegorz Pruchniakowski", "Gootector", "07/16/21, 08:30:18 AM", "Update pl.po for 3.0.3\r\nI copied and pasted translated/updated strings from Transifex to this file.\r\n\r\nGreetings,\r\nGootector\r\n\r\nResolves: *(direct link to the issue)*\r\n\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "Thank you, I merged it.\r\n\r\nThere are still nine missing translations.  Please supply them too if you can.\r\n =||= https://github.com/audacity/audacity/pull/1311 - missing strings. =||= "], ["1305", "Audacity fails to write preferences to audacity.cfg", "Peter Sampson", "petersampsonaudacity", "07/16/21, 11:48:31 AM", "**Describe the bug**\r\n Audacity fails to write preferences to audacity.cfg.  Pressing the OK button in ant preference pane will yield an error message telling you:\r\n>Directory does not have write permissions\r\n\r\nUsing Tools>Reset Configuration yields the same error message.\r\n\r\nThe audacity.cfg file would appear to be writable:\r\na) from examining it with Windows Explorer\r\nb) using an effect with changed parameters on some audio\r\nc) exiting 3.0.3 and running 3.0.2 where it works OK\r\n\r\nThis is a regression on 3.0.2 and all earlier Audacities\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. clear audacity settings folder\r\n2. launch 3.0.3\r\n3. Edit > Preferences\r\n4. OK\r\n5. Observe: error message\r\n\r\n\r\n**Expected behavior**\r\nChanges to preferences to be effected properly.\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/50205984/125920554-33b74cbf-8c48-4b4d-885e-78ee74f4c2a1.png)\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Windows 10\r\n - Version: latest 3.0.3 alpha:  Audacity_Windows_64bit_1034717078_cb70fed\r\n\r\n**Additional context**\r\nThis is a MUST-FIX", "Probably caused by the most recent changes in the checking in Directories prefs for invalid directory locations.\r\n\r\nIt works fine on the 3.0.3 alpha I tested yesterday.\r\n =||= Testing on W10 with Audacity_Windows_64bit_1037187455_50f8e10 \r\n\r\nThis appears to be fixed by the previous release-3.0.3 commit =||= "], ["1306", "Fixes writability check for the macro output directory", "Dmitry Vedenko", "crsib", "07/16/21, 10:30:27 AM", "The check for macro directory now only happens if directory is selected and exists,\r\n\r\nResolves: #1305\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1307", "Fix typo", null, "fossdd", "07/19/21, 12:00:13 AM", "- [ ] I signed [CLA](https://www.audacityteam.org/cla/): **NEVER**\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "Small one-line changes don't always need CLA agreement.\r\n =||= "], ["1309", "Turkish translation update master (string freeze version)", "Kaya Zeren", "kayazeren", "07/17/21, 12:18:59 AM", "Turkish translation update master (string freeze version)\r\n\r\nResolves: *(direct link to the issue)*\r\n\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [ ] I made sure the code compiles on my machine\r\n- [ ] I made sure there are no unnecessary changes in the code\r\n- [ ] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [ ] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "Thank you for the updates. I merged it into master.\r\n\r\nHowever, what we need is a version for the release-3.0.3 branch.  I copied your change to that branch, but they are incomplete for its version of audacity.pot.  Fifteen strings are still missing from the translation.\r\n\r\nCan you fix those?\r\n\r\nThank you.\r\n =||= I created new PR for release 3.0.3 . Thanks for guiding. =||= "], ["1311", "Update pl.po for 3.0.3", "Grzegorz Pruchniakowski", "Gootector", "07/17/21, 06:30:32 AM", "Update pl.po for 3.0.3\r\nMissing strings.\r\n\r\nGreetings,\r\nGootector\r\n\r\nResolves: *(direct link to the issue)*\r\n\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1312", "Bouncing Beach Ball of DEATH", "Paul Licameli", "Paul-Licameli", "07/22/21, 09:40:30 PM", "Steps to reproduce not known, timing-dependent perhaps, but a crash report was collected in which this was a bad pointer dereference, involving the famous Karaoke window:\r\n\r\n```\r\nvoid LyricsWindow::SetWindowTitle()\r\n {\r\n   wxString name = mProject->GetProjectName();\r\n```\r", "NaN"], ["1313", "Fix dangling pointers to Project from LyricsWindow.cpp", "Paul Licameli", "Paul-Licameli", "07/22/21, 09:40:30 PM", "Resolves: #1312\r\n\r\nThe bug is difficult to reproduce, but this is a plausible fix for it, given what we know from a stack trace.\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1314", "Fix \"Scriptables\" commands, which broke at 02b6153...", "Paul Licameli", "Paul-Licameli", "07/18/21, 03:35:27 PM", "... Problem was the loss of an override of PluginManager::GetID() for a more\r\nspecific pointer type.\r\n\r\nResolves: #1294\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "@SteveDaulton please review and approve if it fixes the bug.  You may need a clean pluginregistry.cfg to verify it.\r\n =||= Works for me. =||= "], ["1315", "Turkish translation update release 3.0.3", "Kaya Zeren", "kayazeren", "07/19/21, 01:04:33 AM", "Turkish translation update release 3.0.3\r\n\r\nResolves: *(direct link to the issue)*\r\n\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [ ] I made sure the code compiles on my machine\r\n- [ ] I made sure there are no unnecessary changes in the code\r\n- [ ] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [ ] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1316", "Update Polish from Transifex - for 3.0.3", "Grzegorz Pruchniakowski", "Gootector", "07/19/21, 04:18:02 PM", "Update Polish from Transifex - Audacity master (string freeze version).\r\n100% translated and reviewed.\r\n\r\nGreetings,\r\nGootector\r\n\r\nResolves: *(direct link to the issue)*\r\n\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1317", "Update Polish from Transifex - for master", "Grzegorz Pruchniakowski", "Gootector", "07/19/21, 04:18:04 PM", "Update Polish from Transifex - Audacity master (string freeze version).\r\n100% translated and reviewed.\r\n\r\nGreetings,\r\nGootector\r\n\r\nResolves: *(direct link to the issue)*\r\n\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1319", "Fix issue 1310 -  close pipes after pipe_test.py", "Steve Daulton", "SteveDaulton", "08/30/21, 02:49:47 PM", "In some Windows environments pipe_test.py may fail after\r\nfirst run due to connection to pipe remaining open.\r\nFixed by adding close commands at end of script.\r\nAlso added comment to clarify that pipe_test.py is not intended\r\nfor production code, but as a quick test only.\r\n\r\nResolves: https://github.com/audacity/audacity/issues/1310\r\n\r\nAdded comment and close() commands.\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1321", "Fix typo in pipeclient.py", "Steve Daulton", "SteveDaulton", "07/18/21, 11:55:09 PM", "Typo slipped in with commit d31db975ee\r\n\r\nResolves: error in pipeclient.py\r\n\r\nPython 2 should use \"raw_input\"\r\n\r\n\r\n- [x ] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x ] I made sure the code compiles on my machine\r\n- [x ] I made sure there are no unnecessary changes in the code\r\n- [x ] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x ] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1322", "Extract lib exceptions", "Paul Licameli", "Paul-Licameli", "07/21/21, 06:04:03 PM", "Resolves #1162\r\n\r\nToolkit neutral library for Audacity's exception handling system\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1323", "Install updates", "Anton S. Gerasimov", "gera-gas", "08/04/21, 11:15:05 PM", "Resolves: #1199 \r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "Squash these commits into one.  Then address my recent suggestions for checking that you re-enable update checking on all possible failure paths.\r\n\r\nThat is all the change I will request.\r\n =||= "], ["1326", "Update pl.po for 3.0.3", "Grzegorz Pruchniakowski", "Gootector", "07/20/21, 01:15:50 AM", "Update pl.po for 3.0.3\r\nChanged strings only.\r\n\r\nGreetings,\r\nGootector\r\n\r\nResolves: *(direct link to the issue)*\r\n\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1327", "Update pl.po for master", "Grzegorz Pruchniakowski", "Gootector", "07/21/21, 08:08:34 PM", "Update pl.po for master\r\nChanged strings only.\r\n\r\nGreetings,\r\nGootector\r\n\r\nResolves: *(direct link to the issue)*\r\n\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1328", "Extract lib preferences", "Paul Licameli", "Paul-Licameli", "07/22/21, 08:53:14 PM", "Resolves: #1060\r\n\r\nA library of classes that manage global variable settings that persist between runs of the application\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1329", "vertical shift-click&drag in the affordances drag bars causes Audacity to crash", "Peter Sampson", "petersampsonaudacity", "07/22/21, 01:48:56 PM", "**Describe the bug**\r\n1) Using shift modified click&drag to vertically move multiple clips to a different track causes Audacity to crash.\r\n\r\n2) Using unmodified vertical click&drag in the affordances drag bar successfully moves the single clip to a new track.\r\n\r\n3) Horizontal shift modified click & drag works fine, moving all clips in a track in sync together.\r\n\r\nUsing the Time-shift tool with shift modified vertical click&drag also produces the same crash.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1) get some audio with two separate clips\r\n2) Add a second empty track\r\n3) Shift-click&drag (left or right)  in one of the affordances drag bars\r\n4) Observe: both clips move left or right in sync _(this is expected and documented behavior)_\r\n5) Shift-click&drag downwards to the second track in one of the affordances drag bars\r\n6) Observe: Audacity crashes\r\n\r\n**Expected behavior**\r\nAll the tracks in the track should be moved to the new track\r\n**Screenshots**\r\nStep 1\r\n![image](https://user-images.githubusercontent.com/50205984/126292050-467465cb-3555-488c-ac70-8d61c3cee1c2.png)\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: W10\r\n - Version latest 3.0.4 alpha  -  audacity-win-3.0.4-alpha-20210720+95e7008-64bit\r\n - ET phoned-home with the error dialog\r\n\r\n**Additional context**\r\nI have not yet tested for regression\r", "Further testing shows that shift modified vertical click&drag of multiple clips in a track also crashes in 3.0.2 and the latest alpha for 3.0.3 - so this crash should really be fixed for 3.0.3 =||= Confirmed on Linux with Audacity 3.0.2 and Audacity 3.0.4-alpha-20210718\r\nShift + vertical drag of clips crashes  (even when shifting only one clip). =||= This is a MUST-FIX for 3.0.3 as Audacity should not crash like this. =||= This behavior first appears in version 3.0.0.\r\n\r\nIn all previous versions it was impossible to vertically move all clips in a track with shift-modified use of the Timeshift tool - it was just blocked with no crash.\r\n\r\nThus this is a regression on 2,4.2 =||= The Manual has never mentioned the possibility of moving all clips (or multiple clips) vertically\r\n\r\n> **Shifting clips vertically**\r\n> When there are multiple audio tracks, a selected audio clip may be dragged up or down to another audio track of the same type. Mono audio clips may only be dragged to mono tracks and stereo clips may only be dragged to stereo tracks. To prevent unwanted left or right movement while dragging, press and hold the Ctrl key while dragging (on Mac, hold down the \u2318 key). \r\n\r\nBut it does do so for horizontal movement\r\n\r\n> \r\n> > **Time Shifting clips to left or right**\r\n> > An individual clip always shifts when dragged, though if the clip is partially selected, dragging to left or right from outside the selection region moves the clip without moving the region itself.\r\n> > \r\n> >     To shift a group of adjacent clips in one or more tracks to left or right, \r\n>>   leaving other clips alone, use Selection Tool to drag a\r\n> >  selection region over the clips you want to shift, then switch to Time Shift Tool and drag from any clip inside that region. \r\n> >  Dragging from white space between clips will do nothing.\r\n> >     To shift all clips in one track to left or right, hold Shift then drag. If you perform the SHIFT-drag from inside a selection region,\r\n> > all the clips will shift and the region will move with the clips. \r\n> \r\n\r\nSee this page in the manual:  https://manual.audacityteam.org/man/time_shift_tool.html\r\n\r\nSo to fix this bug either:\r\na) prevent vertical moves of multiple clips (and block the crash), or\r\nb) enable vertical moves of multiple clips\r\n\r\nOption a) is existing behavior in 2.4.2 and earlier - but option b) would be a good improvement for users - and quite expected as an extension of the horizontal behaviors with multiple clips. =||= I also confirm the same erroneous behavior on Mac\r\n\r\nmacOS 11.4 Bug Sur - latest release-3.0.3 build =||= > The Manual has never mentioned the possibility of moving all clips (or multiple clips) vertically\r\n\r\nThough it can be  done using track selection and time selection to define the clips that are moved. =||= Testing on W10 with audacity-win-3.0.3 RC3\r\n\r\nThis now appears to be fixed.\r\n\r\nWe have reverted to the behavior as it was in 2.4.2 and earlier where Shift-modified click and drag of clips with the Timeshift tool will **_not_** move the multiple clips (and importantly no crash).  Thus there is no regression. =||= I have updated the manual to provide greater clarity: https://alphamanual.audacityteam.org/man/Time_Shift_Tool#vertical =||= "], ["1331", "build: ffmpeg is not linked", null, "mikhailnov", "09/24/21, 06:03:23 PM", "Building from commit https://github.com/audacity/audacity/commit/b5e5a36fa65a7c2b46bf2c07483fb0b05a2cf665\r\n\r\n```\r\n%cmake \\\r\n  -Daudacity_lib_preference:STRING=system \\\r\n  -Daudacity_has_networking=no \\\r\n  -Daudacity_use_ffmpeg:STRING=linked \\\r\n  -Daudacity_use_libavcodec:STRING=system \\\r\n  -Daudacity_use_libavformat:STRING=system \\\r\n  -Daudacity_use_libavutil:STRING=system \\\r\n  -Daudacity_use_libmp3lame:STRING=system \\\r\n  -Daudacity_use_libflac:STRING=system \\\r\n  -Daudacity_use_libid3tag:STRING=system \\\r\n  -Daudacity_use_libsndfile:STRING=system \\\r\n  -Daudacity_use_libsoxr:STRING=system \\\r\n  -Daudacity_use_libtwolame:STRING=system \\\r\n  -Daudacity_use_libuuid:STRING=system \\\r\n  -Daudacity_use_libvamp:STRING=system \\\r\n  -Daudacity_use_libvorbis:STRING=system \\\r\n  -Daudacity_use_lv2:STRING=system \\\r\n  -Daudacity_use_sbsms:STRING=system \\\r\n  -Daudacity_use_soundtouch:STRING=system \\\r\n  -Daudacity_use_portaudio:STRING=local \\\r\n  -Daudacity_use_midi:STRING=local \\\r\n  -DAUDACITY_BUILD_LEVEL=2 \\\r\n  -DAUDACITY_SUFFIX:STRING=\"\"\r\n```\r\n\r\n```\r\n...\r\n  -Daudacity_use_ffmpeg:STRING=linked \\\r\n  -Daudacity_use_libavcodec:STRING=system \\\r\n  -Daudacity_use_libavformat:STRING=system \\\r\n  -Daudacity_use_libavutil:STRING=system \\\r\n```\r\n\r\nbut libavcodec.so is still not linked (is not in the list of deps of the resulting ELF binary)", "```\r\n[00:00:34] -- ========== Configuring sqlite ==========\r\n[00:00:34] -- Checking for module 'sqlite3 >= 3.32.0'\r\n[00:00:34] --   Found sqlite3 , version 3.35.5\r\n[00:00:35] -- Using 'sqlite' system library\r\n[00:00:35] -- ========== Configuring ffmpeg ==========\r\n[00:00:35] -- Checking for modules 'libavcodec >= 51.53;libavformat >= 52.12;libavutil >= 52.66'\r\n[00:00:35] --   Found libavcodec , version 58.134.100\r\n[00:00:35] --   Found libavformat , version 58.76.100\r\n[00:00:35] --   Found libavutil , version 56.70.100\r\n[00:00:35] Package libswresample was not found in the pkg-config search path.\r\n[00:00:35] Perhaps you should add the directory containing `libswresample.pc'\r\n[00:00:35] to the PKG_CONFIG_PATH environment variable\r\n[00:00:35] Package 'libswresample', required by 'libavcodec', not found\r\n[00:00:35] Package libswresample was not found in the pkg-config search path.\r\n[00:00:35] Perhaps you should add the directory containing `libswresample.pc'\r\n[00:00:35] to the PKG_CONFIG_PATH environment variable\r\n[00:00:35] Package 'libswresample', required by 'libavcodec', not found\r\n[00:00:35] Package libswresample was not found in the pkg-config search path.\r\n[00:00:35] Perhaps you should add the directory containing `libswresample.pc'\r\n[00:00:35] to the PKG_CONFIG_PATH environment variable\r\n[00:00:35] Package 'libswresample', required by 'libavcodec', not found\r\n[00:00:35] Package libswresample was not found in the pkg-config search path.\r\n[00:00:35] Perhaps you should add the directory containing `libswresample.pc'\r\n[00:00:35] to the PKG_CONFIG_PATH environment variable\r\n[00:00:35] Package 'libswresample', required by 'libavcodec', not found\r\n[00:00:35] -- Linking 'ffmpeg' library during build\r\n``` =||= I do not see `-DDISABLE_DYNAMIC_LOADING_FFMPEG` to be passed to the compiler =||= https://github.com/audacity/audacity/issues/554 is a similar issue.\r\nThey both are bad for Linux distro packaging of Audacity.\r\n#554 is bad because symbols from libmp3lame are used in fact, but it is not linked to Audacity, so, without adding `-lmp3lame` to compiler flags manually, mismath of ABI in Audacity and libmp3lame may happen in the repository.\r\n@crsib  =||= "], ["1332", "Update the on hover text for clip affordance", null, "AnitaBats", "08/03/21, 03:57:44 PM", "New hover text for clip affordance:\r\n\"Drag clips to reposition them. Hold Shift and drag to move all clips on the same track.\"", "The hovertext should also mention the shift-modified behaviors for synced horizontal repositioning of all clips in a track.\r\n\r\n =||= Hmmm, I definitely mentioned during one of our design meetings that I thought that text was weird.\r\n\r\n**_Drag clips to move them horizontally or place them on different tracks. Hold Shift while dragging to simultaneously move all clips on the same track._**\r\n\r\nI'm not sure we need to articulate the function of single click. =||= > I'm not sure we need to articulate the function of single click.\r\n\r\n+1 to that\r\n\r\n =||= >Click and drag to move clips horizontally...\r\n\r\n\"drag\" rather than \"click and drag\" according to both microsoft style guide, and \"read me first!\",\r\neg, drag clips.... =||= > > Click and drag to move clips horizontally...\r\n> \r\n> \"drag\" rather than \"click and drag\" according to both microsoft style guide, and \"read me first!\",\r\n> eg, drag clips....\r\n\r\nMakes sense. Changed. =||= Testing on W10 with audacity-win-3.0.4-alpha-20210803+f90698c-64bit\r\n\r\nLooks much better now with default window size. =||= "], ["1333", "Affordances: When copying and pasting a clip, it is desirable that it does not 'push out' clips to the right.", null, "AnitaBats", "09/08/21, 10:54:28 PM", "From an implementation point of view, we may want to handle this separately but it does need to be addressed", "I think we resolved this on the call - there is a setting for this already - Tracks->Track behaviours->Editing a clip can move other clips\r\n\r\n![image](https://user-images.githubusercontent.com/10109867/126345569-d3260d32-031f-4f52-8b38-c82829cbc425.png)\r\n\r\nWe will want to have a design overlapping clips, but that is a separate issue (and not for development in 3.1) - will create a new issue for this.\r\n =||= "], ["1335", "Stereo visualization improvement", null, "AnitaBats", "07/23/21, 11:33:09 AM", "@jounih Could you please add more details?\r\nThanks!\r\nShould be done before #1336", "Covered in https://github.com/audacity/audacity/issues/1348 =||= "], ["1336", "Point selection improvement", null, "AnitaBats", "07/23/21, 11:33:50 AM", "@jounih Could you please add more details? \r\nThanks!\r\nShould be done after #1335 ", "Covered in https://github.com/audacity/audacity/issues/1348 =||= "], ["1339", "Affordances: Verify that \"Fit to Height\" acts as in version 3.0.3.", "Paul Licameli", "Paul-Licameli", "08/12/21, 04:03:02 PM", "(View > TrackSize submenu, or hot key Shift + Ctrl + F )\r\n\r\nRelates to minimization of tracks.\r\n\r\nThis command is supposed to apportion the vertical height of the screen equally among tracks, so that there is no scrollbar, except when tracks are so many they minimize and can't become short enough.\r\n\r\nScrollbar should appear in 3.1.0 only for the same number of tracks as in 3.0.3.", "Testing on W10 with Audacity 3.0.4-alpha-20210721\r\n\r\nThis does not work properly cf. 3.0.2\r\n\r\nAt default window size I imported 3 stereo tracks and used Fit to Height - the third tack was barely on-screen\r\n\r\n![image](https://user-images.githubusercontent.com/50205984/126758425-f55734b5-c34e-4025-bb98-5b2271fb146d.png)\r\n =||= It's even more problematical with a full-screen window and a single stereo track as you (mostly) lose the select and resize buttons:\r\n![image](https://user-images.githubusercontent.com/50205984/126759119-9db58fa6-dd3c-4269-9301-e0255f0e9e74.png)\r\nAnd note that the scroll bar can't scroll to reveal them.\r\n\r\nAnd if you Restore Down the window then to default size it's even worse\r\n![image](https://user-images.githubusercontent.com/50205984/126759391-8250cb8c-0c69-481e-aea8-872b4fa66d86.png)\r\nThere is no way to get access to the select and resize buttons - nor the bottom of the track to manually make a resize.\r\n\r\n =||= @vsverchinsky  =||= The workaround is \r\n**View > Tracksize > Collapse All Tracks** - shortcut  **Ctrl + Shift + C** =||= Testing on W10 with latest master build alpha \r\n\r\nThis does not appear to be fixed - see image:\r\n![image](https://user-images.githubusercontent.com/50205984/129220842-d9ee4c25-26fc-4746-a128-a8ebc0513276.png)\r\naudacity-win-3.0.4-alpha-20210812+7da6a53-64bit\r\n\r\nIt still looks as though the drag bars are not being calculated and allowed for\r\n\r\nTherefore reopening this issue =||= Also fails on W10 with subsequent master build audacity-win-3.0.4-alpha-20210812+d4fb834-64bit =||= See also Issue #1455  =||= #1422 looks like a duplicate if this issue =||= Now that 1442 has been pulled into master\r\n\r\nTesting on W10 with latest alpha master build for 3.1.0/3.0.4   audacity-win-3.0.4-alpha-20210812+8f8ec41-64bit\r\n\r\nThis now woks fine\r\n\r\n![image](https://user-images.githubusercontent.com/50205984/129229530-d8f64012-206e-4b70-9f2d-a7004cba0625.png)\r\n =||= "], ["1342", "Adds Privacy Policy links to error reporting dialogs.", "Dmitry Vedenko", "crsib", "07/21/21, 12:58:50 PM", "Adds privacy policy to error and crash reporting dialogs.\r\n\r\nComment boxes are removed (or rather not compiled) to ensure, that it is not possible to send the personal data from them.\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1343", "Fix vertical shift drag", "Paul Licameli", "Paul-Licameli", "07/21/21, 11:14:20 AM", "Resolves: #1329 \r\n\r\nShift+Drag in Time Shift tool from one track to another did nothing up to 2.4.2, crashes in 3.0.x ; just make it do nothing again\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1344", "Shift+Drag of clips between tracks was never allowed up to 2.4.2...", "Paul Licameli", "Paul-Licameli", "07/21/21, 11:17:37 AM", "... and in 3.0.0 started crashing instead.  Just disallow it again, no\r\nfunctionality lost.\r\n\r\nResolves: #1329\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1345", "Extract lib math", "Paul Licameli", "Paul-Licameli", "07/22/21, 08:55:32 PM", "Resolves: #1159\r\n\r\nDepends on PR: #1328\r\n\r\nExtract a tool-kit neutral library for some mathematical and sample-processing utilities.  Make only the library directly dependent on libsoxr\r\n\r\nNote that only the last five commits are proper to this PR.\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1346", "Audacity's team is censoring legitimate questions", "Dale Magee", "AntiSol", "07/21/21, 11:47:29 AM", "**Describe the bug**\r\nI asked a legitimate question here:\r\nhttps://github.com/audacity/audacity/discussions/889#discussioncomment-752594\r\n\r\nand was blocked for it.\r\n\r\nI read through the guidelines I was linked to, but I don't see how this post violated them.\r\n\r\nIt should be noted that I was legitimately asking a question when I made this post - I wrote this question with this wording because I was wondering whether I was being too paranoid. The response would seem to indicate pretty clearly that I wasn't. \r\n\r\nBut perhaps the Audacity team can  elaborate on how this wasn't an act of censorship.\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to 'https://github.com/audacity/audacity/discussions/889'\r\n2. Ask a legitimate question that questions the integrity of the scumbags who have tried to turn audacity into apyware\r\n3. Wait a while\r\n4. Scroll down to the message saying 'you have been blocked from contributing to the audacity project for <link to your question>this comment</link>'\r\n5. Try to fork, observe \"You have been blocked from forking\" message.\r\n6. Chuckle at the irony in all the comments from apologists saying \"nobody is preventing you from forking\"\r\n7. Go find an [audacity fork](https://tenacityaudio.org/) and donate to them\r\n\r\n**Expected behavior**\r\n* Good-faith responses to the question raised. \r\n* Mature and open discussion with the project maintainers.\r\n\r\n**Screenshots**\r\n![audacity_discussion_blocked](https://user-images.githubusercontent.com/351169/126474595-185395b4-5d7e-4ff0-ac94-241013ea05b8.jpg)\r\n\r\n![audacity_cannot_fork](https://user-images.githubusercontent.com/351169/126474618-9089d719-0847-471d-82eb-55fae989750c.jpg)\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: All?\r\n - Version: Any after the hostile takeover\r\n - Sound Device: All?\r\n\r\n**Additional context**\r\nI expect I'll be permanently blocked from the audacity repo for raising awareness of this. And I'm sure that somehow that action will also not be censorship according to musescore.\r\n\r\nLuckily I've already got a copy of the pre-spyware codebase, so that's not much of a problem. But If you'd like to find me and discuss, I've enabled issues on the github fork I just made now that I'm temporarily unblocked from the audacity repo.", "NaN"], ["1348", "Stereo tracks & affordances", "Jouni Helminen", "jounih", "09/21/21, 03:03:32 PM", "\r\n![stereo clips@2x](https://user-images.githubusercontent.com/10109867/126631147-5ddff756-541d-409a-b913-093a2b21863d.jpg)\r\n\r\n\r\nUpdated: Vertical Scale should start below the affordance on the top channel, and both channels should be equal height (plus the affordance on the top.\r\n\r\nThe line separator between two channels could still be used to adjust vertical height, as it works today. The hit area should be larger than the 1px visual separator -  at least 4px, possibly more (TBC after testing).", "With the affordance Clip-handles the upper channel is not aligned properly with the Vertical Scale (the lower channel, now with no affordance is properly aligned with the Vertical Scale).\r\n\r\n![image](https://user-images.githubusercontent.com/50205984/126528607-2105cf3d-6340-434e-a67a-2067e23dde9a.png)\r\n\r\nThis is presumably because the affordance is eating some of what was formerly the upper channel - rather than being additional screen real-estate.\r\n =||= But it is much better having the single affordance Clip-handles for a stereo track\r\n =||= Do we need to keep resizer between channels, or they should always have same size? =||= > Do we need to keep resizer between channels, or they should always have same size?\r\n\r\nWell personally I've never used differently sized channels (I never saw the point - I had no use case where it could/would be useful).\r\n\r\nYou might need to address this question to a broader audience - the Quality email list and the Forum for example.\r\n\r\n =||= > | Do we need to keep resizer between channels, or they should always have same size?\r\n\r\nIn early versions of audacity, since stereo tracks are basically two mono tracks glued together with some logic, changing the size of one track would resize it but keep the other track unchanged, consequently changing the size of the entire stereo track bundle.  I modified this pre-1.0 to the present behavior that maintains the size of the stereo track when one track is resized, and resizes both proportionally when the stereo track is resized.  I did not do this to handle a specific use case (like wanting to zoom in on one track of a stereo track to use the draw tool), but because it was a simple way to resolve the broken behavior, without overhauling the simple stereo track object.  Disabling this and forcing each track to be 50% of the stereo size is probably reasonable and I'm guessing most other software works like that, but there are probably several bugs that could be introduced if this behavior is changed, especially for cases of merging/splitting tracks mono/stereo tracks.  It is also something that might draw complaints for removing functionality that didn't really negatively impact anything other than the simplicity with which a new feature can be added.  I.e., prepare for bugs filed saying \"I can't resize the left stereo track\".  It seems the broken thing still is that the affordance eats into the ruler and default track height rather than being added outside the ruler/track height, and forcing 50% track heights for stereo tracks wouldn't do anything for that anyway, other than letting you hard-code 50% in the arithmetic needed to make room for it. =||= Sorry, fat fingers there =||= Very pleased to have @stmueller here!  I have worked a lot on Audacity for several years and know your name from the comments.\r\n\r\nI\u2019m not sure why resizing the channels differently is useful, but in my refactoring of the code in recent years, I conserve old behavior unless I have a good reason not to. =||= I added the pinned play head, and later there was a request to make it draggable so it\u2019s not always centered (and I think that is useful for recording, to put it more rightward).  When I did that, I also made double click re-center it.  Maybe that\u2019s a good idea for the stereo channel separator too. =||= I think @Tantacrul doesn\u2019t oppose keeping the resizing of stereo channels?  But to reduce the channel separator just to a line.  If that is done, that means the hist testing code needs some work so that the resizing click and drag are still easy to do.  But that\u2019s not a serious difficulty I think. =||= > With the affordance the upper channel is not aligned properly with the Vertical Scale (the lower channel, now with no affordance is properly aligned with the Vertical Scale).\r\n> \r\n> ![image](https://user-images.githubusercontent.com/50205984/126528607-2105cf3d-6340-434e-a67a-2067e23dde9a.png)\r\n> \r\n> This is presumably because the affordance is eating some of what was formerly the upper channel - rather than being additional screen real-estate.\r\n\r\nI imagine it's a mistake in the mockup (@jounih ?). The height of L & R should surely be the same (although L will have extra vertical for the affordance) =||= > I think @Tantacrul doesn\u2019t oppose keeping the resizing of stereo channels? But to reduce the channel separator just to a line. If that is done, that means the hist testing code needs some work so that the resizing click and drag are still easy to do. But that\u2019s not a serious difficulty I think.\r\n\r\nYeah, that's pretty much what I think. Two affordances is obviously a little strange and I think we can keep the resizing hit area the same, while making the vertical distance between L&R visibly shorter. This would not be the case when the user joins mono tracks, which I think would need to stay the same as is. =||= I think the implementation need not remember that a stereo track was made from mono tracks, but rather could check whether clip boundaries in opposite tracks correspond, and that this check would be cheap enough in the usual case. =||= > With the affordance the upper channel is not aligned properly with the Vertical Scale (the lower channel, now with no affordance is properly aligned with the Vertical Scale).\r\n> \r\n> \r\n> This is presumably because the affordance is eating some of what was formerly the upper channel - rather than being additional screen real-estate.\r\n\r\nNo this is a mistake - fixed - good eyes! \r\n\r\nThe vertical scale should start below the affordance on the top channel, and the height of both channels should be the same (plus the affordance on the top channel). The affordance should not eat into the vertical height, but add to it on the top channel. =||= > \r\n> \r\n> I think the implementation need not remember that a stereo track was made from mono tracks, but rather could check \r\n>whether clip boundaries in opposite tracks correspond, and that this check would be cheap enough in the usual case.\r\n\r\nBut clip boundaries in the two channels may not necessarily correspond.\r\n\r\nMy use case would be \r\n\r\n1) taking say track 1 from Sgt Pepper's Lonely Hearts Club Band (stereo version)\r\n2) split to mono\r\n3) create clips for various sections in each split mono track\r\n4) observe they don't correspond (the L & R channels are considerably different in parts, _intentionally so by the late George Martin_)\r\n\r\n![image](https://user-images.githubusercontent.com/50205984/126638778-ba7bbc09-2427-40c4-bcd6-e97f4854ffe0.png)\r\n =||= > But clip boundaries in the two channels may not necessarily correspond.\r\n\r\nIn that case each clip should have it's own affordance (like they do have them now in the latest master), despite number of channels in track, right @jounih?  =||= And when I remake those mono tracks back into stereo - this is what I get  :-)\r\n\r\n![image](https://user-images.githubusercontent.com/50205984/126639913-ae0da9b0-2f66-4678-9b8c-82cc66337ac7.png)\r\n =||= > In that case each clip should have it's own affordance (like they do have them now in the latest master), despite number of channels in track, right @jounih?\r\n\r\nProbably yes - but it is possibly an unusual use case.\r\n\r\nOne might argue _(and I probably would)_  that in turning it back into stereo that the mono clips should propagate across both channels - so you get stereo clips throughout.\r\n =||= > > But clip boundaries in the two channels may not necessarily correspond.\r\n> \r\n> In that case each clip should have it's own affordance (like they do have them now in the latest master), despite number of channels in track, right @jounih?\r\n\r\nYes that's correct - we discussed this with @Tantacrul and @Paul-Licameli yesterday and agreed that in the case of joining mono tracks to stereo, they should retain their individual affordances - exactly for the reason you mentioned. It's an unusual case but could happen =||= done (this issue was used as Epic, multiple tasks were created) =||= "], ["1349", "Fixes the way AccessibleLinksFormatter performs layouting", "Dmitry Vedenko", "crsib", "07/21/21, 04:36:13 PM", "Resolves: \r\n![image](https://user-images.githubusercontent.com/2660628/126521176-1d8cbfc9-45c5-47d6-8894-0fdc3e73b4f3.png)\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1351", "On Windows what Inbound and Outbound firewall rules need to be set-up to block telemetry?", "Myron", "Myron-S", "08/04/21, 09:21:24 AM", "On Windows what Inbound and Outbound firewall rules need to be set-up to block telemetry?", "For versions of Audacity up to and  including Audacity 3.0.2, you don't need any because those versions of Audacity don't have any networking / telemetry / or anything like that.\r\n\r\nI think that Audacity  3.0.3, when it becomes available, will have:\r\n1. Update checking\r\n2.  Crash reporting\r\n(both are disabled by default if you build from source, so this only applies to the pre-built \"executable\" versions)\r\n\r\nCrash reporting isn't an issue because nothing gets sent without asking you first. If you don't want to send a crash report, then simply  click  the \"Don't Send\" button. (but note that sending crash reports can help the Audacity developers to debug and fix problems)\r\n\r\nTo completely disable update checking:\r\n1. Temporarily disconnect from the Internet,\r\n2. Install Audacity.\r\n3. When Audacity launches, go to:\r\nWindows: \"Edit menu > Preferences > Application\" and uncheck the \"Check for updates\" option.\r\nmacOS: \"Audacity menu > Preferences > Application\" and uncheck the \"Check for updates\" option.\r\n4. You can now re-enable your Internet connection.\r\n\r\nNote that this has no affect on telemetry, crash reporting or update settings for any other app -  for other apps you will need to check their documentation.\r\n\r\nSince you asked about firewall rules, yes I believe that  you can block updates and crash report sending with the Windows firewall (though not  necessary with the above steps). I'm no expert on the Windows firewall, but  I found these instructions which look pretty  clear and easy to follow: https://www.howtogeek.com/227093/how-to-block-an-application-from-accessing-the-internet-with-windows-firewall/\r\n =||= Update:\r\nFurther to my previous reply, the Audacity desktop app privacy notice was updated today (22nd July 2021).\r\nhttps://www.audacityteam.org/about/desktop-privacy-notice/\r\n\r\n(The privacy notice says what data is sent from Audacity, for what purpose, and what happens to that data.)\r\n\r\nPS. If you decide to disable or block update checking in future  versions of Audacity, you can manually check if updates are available by visiting the download page of the official Audacity website: https://www.audacityteam.org/download/ =||= >     2\\. (both are disabled by default if you build from source, so this only applies to the pre-built \"executable\" versions)\r\n\r\nThanks for the info.  Right, I'm a newbie regarding compiling from GitHub source.\r\n\r\nExactly what do I need to do to compile the source myself?  I got Windows 10 with Visual Studio Community Edition installed and also got a fully working WSL2 Ubuntu with Xfce desktop usable by RDP and/or X10. =||= Personally I wouldn't bother building on Windows unless you have to. A standard Windows installation lacks a \"build environment\" and requires many big downloads and updates to set up the build environment - that's the hardest part of building on Windows, and it can easily go wrong even for developers.\r\n\r\nBuilding on Linux  is much  easier, but  you still need to follow the instructions very carefully. The instructions are included in the source code here: https://github.com/audacity/audacity/blob/master/BUILDING.md\r\n\r\nI've never used WSL2, so I've no idea if there are any gotchas that could cause problems. If you have a spare hdd or old computer available, I'd recommend setting up a proper Xubuntu installation for building (or create a partition so that you can dual boot Windows / Linux.\r\n(Xubuntu is Ubuntu with Xfce, and is a good choice for building. It's a lot lighter than the standard Ubuntu, but still has access to all of Ubuntu's software repository.)\r\n\r\nNote that the current Audacity code is between versions (\"alpha\") so may have bugs /  incomplete  features and should not be used for production work. To  build a version for actual use (rather than just testing), download the most recent source code from the \"Releases\" section of GitHub: https://github.com/audacity/audacity/releases/tag/Audacity-3.0.2\r\n\r\nIf you run into difficulties and need help building, try posting to this section of  the community help forum: https://forum.audacityteam.org/viewforum.php?f=19\r\n\r\nBy the way, I've just tested the most recent alpha version of Audacity 3.0.3, and was pleased to see that on first run, you are informed about update checking (an unmissable pop-up dialog) and can enable / disable update checking before Audacity does it's first check (no need to disconnect from the Internet). The pop-up is still a bit rough around the edges, but reassuring to see it's there. =||= @Myron-S  - See these sections from the alpha manual for 3.0.3 What's New page:\r\nhttps://alphamanual.audacityteam.org/man/New_features_in_this_release#updates\r\n\r\nand\r\nhttps://alphamanual.audacityteam.org/man/New_features_in_this_release#crash =||= "], ["1355", "For GTK builds - use wxStaticText instead of wxHyperlinkCtrl.", "Dmitry Vedenko", "crsib", "07/23/21, 01:46:38 PM", "It turns out, that wxHyperlinkCtrl has a dramatically different size with the GTK backend. This commit makes the link to be only clickable using a mouse, but AFAIK accessibility is not implemented for the GTK backend anyway.\r\n\r\nResolves the report from Steve:\r\n\r\n![image](https://user-images.githubusercontent.com/2660628/126675444-60280ee6-a176-46f2-9e74-c303335218b0.png)\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1356", "pl.po - very important fix", "Grzegorz Pruchniakowski", "Gootector", "07/23/21, 09:14:33 PM", "File pl.po needs fix, because strings with \"fuzzy\" are untranslated in program.\r\n\r\nGreetings,\r\nGootector\r\n\r\nResolves: *(direct link to the issue)*\r\n\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "Thank You very much!   Greetings,  Gootector \n            \n          \n     \n      \n       \n        Dnia 23 lipca 2021 23:14 Dmitry Vedenko ***@***.***&gt; napisa\u0142(a):\n       \n    \n       \n         \n Merged  github.com #1356  into release-3.0.3. \n\n \u2014  You are receiving this because you authored the thread.  Reply to this email directly,  github.com view it on GitHub , or  github.com unsubscribe .\n =||= "], ["1358", "Shortcut Instead Brings Up Keyboard Preferences Dialog", null, "JohnColket", "08/31/21, 08:43:01 PM", "There are two reports on the forum for MacOS users where trying to use a keyboard shortcut will instead bring up the Keyboard Preferences Dialog.\r\n\r\nSee: https://forum.audacityteam.org/viewtopic.php?f=70&t=119343\r\nand: https://forum.audacityteam.org/viewtopic.php?p=410469#p410469\r", "I do not get this on SW10  with 3.0.2 or 3.0.3 RC3 =||= Note that this bug was originally reported on Bugzilla under Linux, but was closed April 26th of this year as \"Works For Me\" after not seeing it for over a year. See https://bugzilla.audacityteam.org/show_bug.cgi?id=2253\r\n\r\nNote that most the most recent reports are under 3.0.2 on MacOS and also on Windows. =||= This was logged originally on Bugzilla, closed and then reopened>\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2253\r\nBug 2253 - Mac/Linux: Keyboard Shortcut Preferences may open unexpectedly\r\n\r\nPaul Licameli wrote in the big thread.\r\n>I think it's because of the code controlled by EXPERIMENTAL_EASY_CHANGE_KEY_BINDINGS\r\n>\r\n>The intent was to take you to keyboard preferences only when you shift+click in a menu item of the the main toolbar.\r\n>\r\n>I don't understand how you get there without opening a menu.\r\n>\r\n>If this is it, we could consider disabling this feature on Linux, or we could make the code implementing this test \r\n>that control is also not down.\r\n\r\nJames Crook wrote later in the bug thread\r\n>If not a Heisenbug on Macbook Air macOS 11.4, then it's P2 not P4, and RM should decide whether it should \r\n>block release or not.  \r\n>The problem for sure is quite unnecessary, given Paul's comment =||= This bug is a regression on 2.2.1 =||= Remember this feature:  you can hold Shift while releasing a toolbar menu item, and go to Keyboard Preferences to change the hotkey of the item (instead of doing the command).\r\n\r\nI added that in 2018, but it is mis-firing on Mac sometimes when there are shortcuts with Shift in them.\r\n\r\nQuick fix might be just to eliminate my little known feature.\r\n\r\n =||= @Paul-Licameli believes this has been caused by his inclusion of a Shift modifier to help users jump to a keyboard shortcut preference quickly.\r\n\r\nAfter discussing it, neither of us feels this modifier is especially discoverable and perhaps we can simply remove it (to fix this bug) and focus more on improving the usability of shortcuts in the medium term =||= I would vote for removing this little-know feature\r\n\r\nIs that the cause of this P2 Bugzilla Bug ?\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2253\r\nBug 2253 - Mac/Linux: Keyboard Shortcut Preferences may open unexpectedly =||= I have closed Bugzilla 2253 in favor of this GitHub Issue =||= "], ["1359", "Extract lib files", "Paul Licameli", "Paul-Licameli", "07/30/21, 12:51:53 PM", "Resolves: #1160\r\n\r\nA library for general file handling utilities, and definitions of certain significant file paths, which does not depend on wxCore, though it does still depend heavily on wxBase.\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1361", "Error dialogs link to wrong Privacy Notice", "Peter Sampson", "petersampsonaudacity", "07/25/21, 03:27:59 PM", "**Describe the bug**\r\nError dialogs link to wrong Privacy Notice, linking to the \"Desktop Privacy Notice\" on the Audacity Website rather than the \"Error Reporting Privacy Notice\"\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. create small AUP3 project\r\n2. Copy the AUP3 file to C:\\\r\n3. Try to open the project from C:\\\r\n4. In the error message click on the Privacy Policy link\r\n5. Observe: you are taken to the \"Desktop Privacy Notice\" on the Audacity Website \r\n\r\n**Expected behavior**\r\nThe link should take you to the \"Error Reporting Privacy Notice\"\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/50205984/126904273-da138409-2109-479f-86cc-6f8af607e59e.png)\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: W10 - but assume all OS\r\n - Version Audacity 3.0.3 alpha (latest)\r\n\r\n**Additional context**\r\nNote that the \"Error Reporting Privacy Notice\" page on the Website is just a placeholder\r", "This is not a bug, there will be single privacy policy for error reporting and updates =||= See also Gihub Issue #1248 =||= > This is not a bug, there will be single privacy policy for error reporting and updates\r\n\r\nIn which case the Audacity Website needs changing to have just the single Privacy Policy  ;-)\r\n =||= "], ["1362", "Integrating Butterworth filter in Android", "Umama Khalid", "umamakhalid", "08/08/21, 01:31:37 PM", "I am creating an android app using android studio in native c++. I need to apply butter worth filter on my audio before playing it. How can I use your Biquad.cpp class to apply butter worth filter on my audio? Is there any main class code in you repository? Do i need to call CalcButterworthFilter() function first then process() function?\r\nWhich function will take my audio as an input and which function will return processed audio?\r\n\r\nCan any one help me integrating this code in android studio? ", "This doesn't sound like an Audacity issue. Feel free to find me online and contact me directly. =||= Right Thank You.\r\nYes it is not an issue actually. I just want help in integration.\r\nDetails are in email. =||= "], ["1363", "Label affordances:  highlighting of bar does not always change with the cursor change", null, "AnitaBats", "08/09/21, 12:02:31 PM", "NaN", "The related PR solves this issue partly. It does not calculate the height of a clip bar, so label bars do not change if a label track locates below tracks with clip bars.\r\n\r\nIt is going to be solved soon in another PR =||= "], ["1364", "Release 3.0.3", "Dmitry Vedenko", "crsib", "07/26/21, 04:49:30 PM", "Post-release merge of branch release-3.0.3 into master.\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1367", "Extract lib-track", "Paul Licameli", "Paul-Licameli", "07/27/21, 04:02:19 AM", "NaN", "NaN"], ["1368", "GUI. Incorrect track displaying in Multi-view mode", null, "Penikov", "08/12/21, 04:04:30 PM", "**Describe the bug**\r\nA clear and concise description of what the bug is.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Launch Audacity\r\n2. Import a stereo track \r\n3. Switch track view to Multi-view (Spectrogram + Wave )\r\n4.  The spectrogram has been displayed partly\r\n\r\n**Expected behavior**\r\nThe spectrogram is displaying with no overlapping with other GUI elements\r\n\r\n**Screenshots**\r\nhttps://user-images.githubusercontent.com/25851359/127133267-308920d9-8dba-4a40-a07d-ed0f10446e68.mp4\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Windows 10 X 64\r\n - Version: Audacity 3.0.4-alpha-20210726 (x64)\r\n\r\n\r\n\r\n\r\n\r\n\r", "This is a regression on 3.0.3 \r\n\r\nNote that if you switch back to waveform view you get a similar 1/2 right channel persistence of the spectrogram.\r\n\r\nThis is just a temporary drawing glitch - clicking in the Audacity Window will correct the problem. =||= Also note that the Multi-view does not actually display until you move the cursor over the track area.\r\n\r\nAnd the same applies when you turn Multi-view off to return to simple waveform view.\r\n\r\nThis particular behaviour is a regression on 2.4.2 =||= Testing this on W10 with latest master alpha build  audacity-win-3.0.4-alpha-20210812+7da6a53-64bit\r\n\r\nThis does not appear to be fixed:\r\n![image](https://user-images.githubusercontent.com/50205984/129221282-11dfdeb3-a6d2-49ad-ac36-ba27e3c9696b.png)\r\n\r\nTherefore reopening this issue\r\n =||= Also fails on W10 with subsequent master build audacity-win-3.0.4-alpha-20210812+d4fb834-64bit =||= Now that 1442 has been pulled into master\r\n\r\nTesting on W10 with latest alpha master build for 3.1.0/3.0.4   audacity-win-3.0.4-alpha-20210812+8f8ec41-64bit\r\n\r\nThis now woks fine\r\n =||= "], ["1369", "GUI. Theme changing works poor", null, "Penikov", "08/09/21, 09:05:44 AM", "**Describe the bug**\r\nGUI elements do not change their appearance correctly\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Launch Audacity\r\n2. Expand Audacity's window\r\n2. Go to Preferences - Interface - change theme appearance from light to dark, then click Ok\r\n4. See the bug - many GUI elements still displaying with previous theme look\r\n5. Change Audacity windows size and all elements have the proper colour scheme\r\n\r\n**Expected behavior**\r\nThe dark GUI looks at least like this: https://github.com/audacity/audacity/issues/1296\r\n\r\n\r\n\r\n**Screenshots**\r\n![\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435](https://user-images.githubusercontent.com/25851359/127144703-91fb3f74-4c37-4194-9a0d-0ba22b3385da.png)\r\n![Full Window000](https://user-images.githubusercontent.com/25851359/127147428-e8453ca4-408f-4827-8c19-4a79571adc45.png)\r\n\r\n\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Windows 10 x64]\r\n - Version: Audacity 3.0.4-alpha-20210726\r\n\r\n\r\n\r", "This also affects Light theme when you go back to it from Dark theme\r\n![image](https://user-images.githubusercontent.com/50205984/127150861-4bbc1e2c-07d4-4353-a24e-1254d0a751f6.png)\r\n\r\nSo it looks like a general theming regression\r\n\r\n**Workaround:**  click in the Audacity window and the problem clears =||= Is it confirmed that this does not happen in 3.0.3?\r\n\r\nIn @petersampsonaudacity 's shot I also see that the Time toolbar repainted wrong with inconsistent font sizes.  A separate issue if reproducible.\r\n =||= > Is it confirmed that this does not happen in 3.0.3?\r\n\r\nI confirm that on W10 this does not happen with 3.0.3 and is thus a regression on 3.0.2\r\n =||= Audacity 3.0.3 (release) looks nice  on Linux with a dark Desktop  theme (I've not yet tried 3.0.4 alpha)\r\n\r\n![Screenshot_2021-07-27_19-04-38](https://user-images.githubusercontent.com/11681097/127205964-06c3ad97-ce81-4207-a2b0-fc090e81841a.png)\r\n =||= Seems like broken after this PR https://github.com/audacity/audacity/pull/1328 was merged =||= I don't observe the problem in macOS.\r\n =||= Tested on W10 with latest 3.1.0/3.0.4 alpha:   audacity-win-3.0.4-alpha-20210809+cf09f0a-64bit\r\n\r\nI confirm that this now works correctly again on Windows. =||= "], ["1371", "Label tracks do not have affordances (Clip-handles)", "Peter Sampson", "petersampsonaudacity", "08/06/21, 03:03:23 PM", "**Describe the bug**\r\nLabel tracks do not have affordances (drag bars).\r\n\r\nThis is inconsistent with Audio tracks and Note tracks\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. get an audio (or Note) track\r\n2. add a label\r\n3. Observe: the label track does not have affordances Clip-handles\r\n\r\n**Expected behavior**\r\nAffordances Clip-handles in Label tracks\r\na) for consistency with Audio and Note tracks\r\nb) to make it easier to move them (in sync)\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/50205984/127149195-ceb32771-0a31-429c-b674-612f0579d8c4.png)\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Windows 10 - but assume all OS\r\n - Version 3.1.0/3.0.4\r\n\r\n**Additional context**\r\nThe workaround is to :\r\na) switch to the Timeshift tool\r\nb) click&drag in the label track to move all labels in that track in sync\r\n\r\nNote that this is an awkward workaround as the user has to revert to the selection tool for normal working - or learn to deal with the complexities of the Multi-tool\r", "Can't labels be moved by holding and dragging the bar in the middle (between handles)?\r\n![image](https://user-images.githubusercontent.com/20165230/128148468-4f953cb0-8b04-446b-b543-241b135637c2.png)\r\n =||= Yes, that is the case now in 3.0.4/3.1.0 withe the fatter bar which has now become a drag bar.\r\n\r\nBut in 3.0.3 and earlier the thinner bar was not a drag bar - the way to move a label was the Shift&click&drag on the chevron or the dot - much less \"discoverable\"\r\n\r\nAnd (in 3.0.3 and earlier) you can move all labels in a track together in a track by selecting the Time Shift Tool and clicking&dragging in the gray space of the Label track.\r\n\r\nBUT if the Time Shift tool is decided to be redundant and removed as per this GitHub Issue #1411 \r\nthen without a Clip-handle (formerly \"affordance\") for the label track there would be no way to move all the labels in a label track in sync.\r\n =||= @vsverchinsky   -  thanks for this insight Vitaly, I didn't know these had become drag-bars - it made me set P1s in the manual for the change _(and I suspect there are more than a few pages in the Manual with images of region labels)_. =||= I'm adding a little note in the design to fix the cursor icon for label tracks and also to allow Shift + drag to move all labels too. Closing this issue. =||= Thanks @petersampsonaudacity! =||= "], ["1372", "Context menu rework", "Anton S. Gerasimov", "gera-gas", "09/06/21, 02:01:45 PM", "Resolves: #998\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "Pending of #1258 for add \"Rename clip\" menu item. =||= "], ["1375", "Stereo tracks & affordances: channel resizer changes", "Vitaly Sverchinsky", "vsverchinsky", "08/17/21, 09:48:53 PM", "Implement resizer behaviour between channels in stereo tracks as described in https://github.com/audacity/audacity/issues/1348 .  \r\n* Resizer should be shrinked to the height of 1 px. \r\n* Resize handle should appear at area between channels with threshold ", "NaN"], ["1376", "Stereo tracks & affordances: internals and track drawings", "Vitaly Sverchinsky", "vsverchinsky", "08/20/21, 01:00:46 PM", "As proposed by https://github.com/audacity/audacity/issues/1348 implement following: \r\nRemove drawing of the affordance on the right channel of the wave track, if that track was not created by merging two mono tracks", "NaN"], ["1377", "Stereo track affordance", "Vitaly Sverchinsky", "vsverchinsky", "08/20/21, 01:00:46 PM", "Resolves: #1376 \r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "Your approach is founded on a memory of the origin of a channel as \"aligned\" or not, rather than computing it as needed.\r\n\r\nI would prefer that you compute alignment as needed.\r\n\r\nDefining the condition will take some work.  You must sort clips of each channel, becauase they are not necessarily in sorted order, and they you must iterate corresponding clips comparing start and end times.  (Probably with a tolerance: let times differ by 1/(2*rate))\r\n\r\nThis is extra work, and extra calculation, but I believe the calculation will be small in practice because clips will be few.\r\n\r\nThe advantage is greater confidence that there are not surprising corner cases where things will not work as expected.\r\n\r\nFor instance:  I just made a mono track, duplicated it, then made a stereo track from them.  The affordance of the right channel did not disappear as expected in your branch.  It would under this other approach.\r\n\r\nThere are also other commands like \"Swap stereo tracks.\"  This did not produce the expected result.  It would if aligned-ness is computed instead of stored.\r\n\r\n\r\n =||= > Your approach is founded on a memory of the origin of a channel as \"aligned\" or not, rather than computing it as needed.\r\n> \r\n> I would prefer that you compute alignment as needed.\r\n> \r\n> Defining the condition will take some work. You must sort clips of each channel, becauase they are not necessarily in sorted order, and they you must iterate corresponding clips comparing start and end times. (Probably with a tolerance: let times differ by 1/(2*rate))\r\n> \r\n> This is extra work, and extra calculation, but I believe the calculation will be small in practice because clips will be few.\r\n> \r\n> The advantage is greater confidence that there are not surprising corner cases where things will not work as expected.\r\n> \r\n> For instance: I just made a mono track, duplicated it, then made a stereo track from them. The affordance of the right channel did not disappear as expected in your branch. It would under this other approach.\r\n> \r\n> There are also other commands like \"Swap stereo tracks.\" This did not produce the expected result. It would if aligned-ness is computed instead of stored.\r\n\r\nI don't agree with that. I've considered that possibility, but the problem is that matching clips isn't enough, the result should be cached anyway. Moreover the first case isn't valid, this behaviour was requested. The second case should be fixed. Also I see a problem with definition of matching clips: it will probably  change in the nearest feature. =||= \r\n> I don't agree with that. I've considered that possibility, but the problem is that matching clips isn't enough, the result should be cached anyway. Moreover the first case isn't valid, this behaviour was requested. The second case should be fixed. Also I see a problem with definition of matching clips: it will probably change in the nearest feature.\r\n\r\nIf \"matching clips is not enough,\" what is your more precise description of the criterion?  You are guessing it will \"probably\" change, but that is speculation.  Even if it does change, defining it in one place in a test seems to me to be the less fragile approach.  More lines of code to implement the complicated test, but fewer places in the code will need changes to guarantee the consistency of the cache with changes of the track.\r\n\r\nCaches are useful but problematic when there are many things that could happen to invalidate them.\r\n\r\n =||= > If \"matching clips is not enough,\" what is your more precise description of the criterion?\r\n\r\nIt is described here https://github.com/audacity/audacity/issues/1348. The check you propose is actually answers the question we don't need to answer (are clips aligned or not?). From the description of the task i understand that the sequence of track transformation determines whether the track should be considered \"aligned\" or not. Consider case when user have stereo track with misalligned clips, then user makes them aligned by dragging. Should we consider track aligned now? If yes, then affordance should disappear, if no then user can split stereo track and merge it back to get completely another appearance (this was my question for designers). And as i understand the currently implemented behaviour is exactly what was requested (except second scenario you've provided). =||= > > If \"matching clips is not enough,\" what is your more precise description of the criterion?\r\n> \r\n> It is described here #1348. The check you propose is actually answers the question we don't need to answer (are clips aligned or not?). From the description of the task i understand that the sequence of track transformation determines whether the track should be considered \"aligned\" or not. Consider case when user have stereo track with misalligned clips, then user makes them aligned by dragging. Should we consider track aligned now? If yes, then affordance should disappear, if no then user can split stereo track and merge it back to get completely another appearance (this was my question for designers). And as i understand the currently implemented behaviour is exactly what was requested (except second scenario you've provided).\r\n\r\nYou are right that you tried to implement literally what is now in the text box in the first picture at that issue.\r\n\r\nReally I think that specification should be disputed and corrected.  So, let's raise this at the next design review.\r\n\r\nI believe that if mono tracks have aligned clips according to the numerical criteria, then they should merge into a stereo track without the second affordance area.\r\n\r\n\r\n =||= The branch needs a rebase and force-push and conflict resolution.\r\n =||= "], ["1380", "Add a wrapper that retries `hdiutil` with progressive timeout", "Dmitry Vedenko", "crsib", "07/28/21, 01:38:16 PM", "This seems to be a common workaround for CPack issue on macOS. \r\n\r\nScript has 10 attempts and in the worst case, it will take 55 seconds for it to fail.\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1382", "AppImage is missing localization", "Dmitry Vedenko", "crsib", "09/16/21, 12:19:57 PM", "AppImage only contains English localization. \r\n\r\n**Expected behavior**\r\nAppImage is localized to all supported languages\r", "See also this Forum post:  audacity-wxgtk2 3.0.3 do not portuguese language\r\nhttps://forum.audacityteam.org/viewtopic.php?f=48&t=119499 =||= Workaround (previously posted here: https://forum.audacityteam.org/viewtopic.php?p=431498#p431498).\r\n\r\nThe audacity.cfg file may be manually edited (while Audacity is NOT running) to select the required language. For example, for French:\r\n\r\n```\r\n[Locale]\r\nLanguage=fr\r\n```\r\nThe Audacity 3.0.3 AppImage will then open with the selected language (in this case, French).\r\n =||= Works fine.\r\n![\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435](https://user-images.githubusercontent.com/25851359/133771419-7b344d29-0e94-4730-b5fe-10fc0f69c639.png)\r\n =||= "], ["1383", "Option to export & overwrite current file", null, "alex-tee", "08/01/21, 05:21:00 PM", "**Is your feature request related to a problem? Please describe.**\r\nThere should be an option to overwrite the current file (like in GIMP -> File -> Overwrite)\r\n\r\n**Describe the solution you'd like**\r\nAdd an option to \"Overwrite\", or at least make the export dialog location default to the directory the file is in.\r\n\r\n**Describe alternatives you've considered**\r\nManually looking for the directory the file is in to overwrite it. This is bad UX\r\n\r\n**Additional context**\r\nSince audacity allows you to open multiple files, perhaps add this option in the dropdown next to the file:\r\n![Screenshot from 2021-07-29 13-53-14](https://user-images.githubusercontent.com/3407655/127495471-07b86c13-3e88-455f-8495-899e06670dd1.png)\r\n\r\nIf you think it shouldn't be easy to overwrite files to avoid mistakes, then you could add a confirmation dialog \"are you sure you want to overwrite this file?\"\r", "Testing on W10 with 3.0.3 I can already overwrote an existing audio file - and I get a warning message when trying to do so:\r\n\r\n![image](https://user-images.githubusercontent.com/50205984/127778322-97509548-b5b7-4cfe-ad80-d1eb1c31f601.png)\r\n =||= @petersampsonaudacity is there an option to overwrite the file or did you have to click \"export\" and then find the file? my request is about having a quick option to overwrite the opened file without having to click export + browse =||= > \r\n> \r\n> @petersampsonaudacity is there an option to overwrite the file or did you have to click \"export\" and then find the file? my request is about having a quick option to overwrite the opened file without having to click export + browse\r\n\r\nI had to find the file to overwrite it.\r\n\r\nBut for me that's expected behavior:\r\na) by default Audacity will use the last-used location for Exports when it Exports\r\nb) alternatively you can set a preferred location in Directories Preferences\r\n\r\nSo with a) default settings\r\n\r\n1) Import a file from <location path>\r\n2) edit it\r\n3) Export it (in the same format\r\n4) Observe same filename as in step 1\r\n5) Observe: offered path location if this is your first save) is ...Documents\\Audacity on Win (or just ...Documents in Mac or Linux) - OR\r\n6) Observe if you have exported previously the offered path location is your last-used\r\n7) navigate to your location from step 1\r\n8) Export the file \r\n9) OK the overwrite warning\r\n10) Edit the file some more\r\n11) Export it again\r\n12) Observe this time the path location is your last-used i.e. the path from step 7 - but this is now the same path as in step 1\r\n\r\nThe underlying issue here is that Audacity is designed as an audio editor, NOT an audio file editor - it is not designed as a WAV editor or an MP3 editor etc,\r\n\r\nNote that when you import an audio file for editing that Audacity is not operating on that file per se - but rather it works on it's own internal copy of the audio converted to its own internal project format AUP3 (actually a SQLite database).\r\n\r\nFor details of the Directories preferences settings see:  https://manual.audacityteam.org/man/directories_preferences.html\r\n =||= >The underlying issue here is that Audacity is designed as an audio editor, NOT an audio file editor - it is not designed as a WAV editor or an MP3 editor etc,\r\n\r\n>Note that when you import an audio file for editing that Audacity is not operating on that file per se - but rather it works on it's own internal copy of the audio converted to its own internal project format AUP3 (actually a SQLite database).\r\n\r\nok thanks, it makes sense. it sounds like Audacity doesn't even remember the path of other imported file since it uses its own copy. I'll close the issue then =||= @alex-tee  - oh yes, Audacity does remember the import path used and it will re-use that by default the next time you import (unless you have set a default import path in Directories prefs).\r\n\r\nThe problem for you, you request is that Audacity has separate remembered paths for import and for export - the two are not combined or linked.\r\n =||= my actual use case is actually a bit more advanced than a user wishing to overwrite an imported file. I have a DAW and I have an option to edit some audio with audacity. I can already manage to open audacity with the given file but the user is expected to overwrite the file and exit audacity. currently, this means that the user should go to export and navigate to where the file is (some random directory in `/tmp`) and this is tedious. I want to suggest a command line option to help in this case but I'll make a separate issue for it in the future =||= > this means that the user should go to export and navigate to where the file is (some random directory in `/tmp`) and this is tedious.\r\n\r\nYou could use a Nyquist-Macro to do the export (reading the location of the last imported file from Audacity \"preferences\" file (\"audacity.cfg\"). I think there's already a macro available on the Audacity forum - I'll see if I can find it. =||= >  I think there's already a macro available on the Audacity forum - I'll see if I can find it.\r\n\r\nHere: https://forum.audacityteam.org/viewtopic.php?p=422002#p422002 =||= @SteveDaulton awesome, thanks! I'll add this to our user manual =||= @alex-tee  - and to make life even simpler you could set up a custom shortcut for the Macro.\r\n\r\nSee:  https://manual.audacityteam.org/man/keyboard_preferences.html#custom\r\n =||= "], ["1385", "Update pl.po - fixes for 3.1", "Grzegorz Pruchniakowski", "Gootector", "08/06/21, 11:21:47 AM", "Update pl.po - fixes for 3.1\r\n\r\nGreetings,\r\nGootector\r\n\r\nResolves: *(direct link to the issue)*\r\n\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1387", "Fix track view geometry and positioning ", "Vitaly Sverchinsky", "vsverchinsky", "08/12/21, 02:45:06 PM", "Resolves: #1339 \r\n\r\nPR also contains some changes which are used for track positioning and resizing, layout calculation\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1388", "Linux packages", "Dmitry Vedenko", "crsib", "08/03/21, 09:13:00 AM", "Resolves: #1187 \r\n\r\nThis PR resolves two issues related to the Linux package maintenance:\r\n\r\n1. Conan is rarely available as a system package, so it can't be included in the list of package build dependencies. \r\n2. Network connection is sometimes not available within the packaging environments.\r\n\r\n`prepare_offline_dependencies.sh` generates a tarball containing:\r\n\r\n* Files required for PIP to install Conan\r\n* Conan download cache\r\n\r\nIn the future, we intend to publish this tarball.\r\n\r\n`build_package.sh` demonstrates how this tarball can be used.\r\n\r\nAdditionally, we provide a set of example package configs for various distros.\r\n\r\nAt the moment, for Fedora 34 there is no need for Conan, so it is disabled. However, as the devendoring project proceeds, this can change. For example, Fedora lacks PortSMF and libsbsms.\r\n\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1389", "Auto duck misses sections", null, "LWinterberg", "08/17/21, 12:56:53 PM", "Initially reported on https://forum.audacityteam.org/viewtopic.php?f=46&t=119468\r\n\r\n**Describe the bug**\r\nAuto duck misses sections on long audio files, if the control track has quiet sections, but not full silences and the threshold is choosen to be very low.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Have a long audio file (1h+); generated tone works\r\n2. Have a control track of equal length which has quiet sections (-72dBFS), ie a noise floor. A full mute won't reproduce this. \r\n3. Select the entire track to duck\r\n4. Apply the auto duck effect using a -50dB threshold (-49dB didn't reproduce this)\r\n\r\n**Expected behavior**\r\nAll sections are ducked\r\n\r\n**Screenshots**\r\ncan be found in the forum: https://forum.audacityteam.org/viewtopic.php?f=46&t=119468\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Windows 10 (OP), Ubuntu (steve)\r\n - Version: Audacity 3.0.3, 3.0.2 and 3.0.0 tested\r\n\r\n**Additional context**\r\nIt works when ducking shorter sections (~20 mins) of the whole file. \r\nThere is a workaround available (temporarily amplify the control track, apply the auto-duck with a higher threshold, de-amplify it again).\r\n\r\nI'll try finding a root cause next week. ", "It doesn't actually need to be a long audio file. It can be reproduced with quite short tracks:\r\n\r\n1. Generate 30 second tone (default settings)\r\n2. Duplicate the track\r\n3. In the duplicate track, make a selection about 3 or 4 seconds duration in the first half of the track\r\n4. Normalize the selection to -60 dB\r\n5. Make a selection around 3 or 4 seconds duration in the second half of the duplicate track\r\n6.  Normalize the selection to -60 dB\r\n7. Select all of the first track\r\n8. Apply \"Auto Duck\" with settings: -24, 0, 0, 0, 0, 0, -45 (It may be necessary to set the \"Threshold\" slightly higher or lower to reproduce the exact symptoms described)\r\n9. Observe that the second \"silence\" is ignored.\r\n10. \"Undo\"\r\n11. Reverse the second track\r\n12. Select the first track\r\n13. Apply Auto Duck with the same settings (It may be necessary to set the \"Threshold\" slightly higher or lower to reproduce the exact symptoms described)\r\n14. Observe that the second \"silence\" is ignored.\r\n\r\nThe precise threshold setting required for Auto Duck to (incorrectly) miss only the second \"gap\" is likely to be in the range -40 to  -50 dB. (I've not seen it ignore only the first gap). =||= There is also a documentation issue: The manual implies that the \"Threshold\" setting is a peak amplitude setting, but it appears to actually be some sort of mean square over a 100 sample window??\r\nhttps://manual.audacityteam.org/man/auto_duck.html =||= In bool EffectAutoDuck::Process(), I changed rmsSum to be a double rather than a float, and can no longer reproduce the bug using Steve's steps. =||= "], ["1393", "[Question] How to use for Flutter app", "Mimi", "miriam-z", "09/02/21, 02:54:00 PM", "How to use this in the context of Flutter mobile app? \r\n\r\nThanks ", "NaN"], ["1394", "Block on setting the Directory Preference", "Jithin John", "MalevolentStrix", "09/13/21, 12:02:58 PM", "Resolves: https://bugzilla.audacityteam.org/show_bug.cgi?id=2740\r\n\r\nBlocks all the possibilities of setting the Directory Preference to locations without write permissions via the Browse button or manually typing as pressing the OK button\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [X] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [X] I made sure the code compiles on my machine\r\n- [X] I made sure there are no unnecessary changes in the code\r\n- [X] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [X] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "Testing on W10 with MalevolentStrix's latest build https://github.com/audacity/audacity/actions/runs/1089787526\r\n\r\nThis now works fine blocking both:\r\na) typing C:\\ in any of the six directory fields in Directories Preferences\r\nb) using the Browse button to set them to C:\\\r\n\r\n@crsib  - I think this could be pulled into master (may need a code review - in addition to this blackbox testing)\r\n\r\n\r\n =||= These are the error messages shown when tried to set the preferences via manual path entry(_**path**  does not have write permissions_ will also be shown as the next line to every message)\r\n_'Open' directory cannot be set.\r\n'Save' directory cannot be set.\r\n'Import' directory cannot be set.\r\n'Export' directory cannot be set.\r\n'Macro Output' directory cannot be set._\r\n![2021-09-04_19-33](https://user-images.githubusercontent.com/73242397/132097162-2a7ec7af-77ac-445f-9aab-2a1562034d46.png)\r\n\r\nIf user sets the directory via the Browse button \"_Cannot set preference_\" as earlier will be shown\r\n\r\n\r\n =||= An option to create the directory if it does not exist has also been added.\r\n![2021-09-06_13-32](https://user-images.githubusercontent.com/73242397/132182213-7f088c14-9e62-464b-8b0a-82110e32cd0a.png)\r\n\r\nAnd an error message if the directory creation failed maybe if the directory to be made is in an Unwritable Location.\r\n\r\n![2021-09-06_13-32_1](https://user-images.githubusercontent.com/73242397/132182241-9104ac11-9e77-4806-a79e-3f3febc005a9.png)\r\n =||= Testing the Directories Prefs on W10 with latest master alpha build: audacity-win-3.1.0-alpha-20210913+9ecd194-64bit\r\na) a typed C:\\    is trapped with an error message\r\nb) a typed C:      is trapped with the same error message\r\n\r\nc) A typed C      is not error trapped - it asks f you want to create such a directory, but doesn't do so.  Instead the next Save or Export it uses the last-used location (this is safe - but the user should not be asked to create a directory that does not get created.\r\n![image](https://user-images.githubusercontent.com/50205984/133106116-e4e4a2d8-60d0-4148-bf0b-d98e61484910.png)\r\nGoing back to Directories prefs later shows that the \"C\" is still erroneously set.\r\n\r\nThis is a good improvement with b now fixed as well as use-case a\r\n\r\nC would appear to be a different bug (which I have been discussing with @Penikov on Discord).  It's not just what would look like a drive name like \"C\" that fails - you get the same results if you try to set directories to say \"QWERTY\"\r\n\r\n\r\n**I cannot test on Mac as the recent Mac build for this failed.** =||= Most \"sensible\" users would, of course, use the Browse button to locate a pre-existing directory or create a new directory with the browse. So either:\r\na) Audacity should check that a typed location exists and is valid, or\r\nb) Audacity should **_not_** allow the user to manually type in those directories fields. =||= I have logged the residual (Use-case c here) as a new bug in it's own right.\r\nDirectories preferences fails to handle non-existent text locations properly #1676 \r\n\r\n@Penikov  Having this _(long-standing)_ residual logged separately should enable this bug associated with this PR to be closed as fixed. =||= Thank you, Peter! Shall I close that bug related to this PR? ) =||= > Thank you, Peter! Shall I close that bug related to this PR? \r\n\r\n@Penikov - yes I think that this is good to go, _sorry for not replying sooner_\r\n\r\n =||= "], ["1403", "Event recording & playback basics", "Paul Licameli", "Paul-Licameli", "08/11/21, 12:43:25 PM", "- [x] Alpha-only checkbox menu item to turn recording on; but restart of program needed\r\n- [x] Command-line option for Audacity to replay a journal file\r\n- [x] All menu commands (or keystrokes), requiring no dialogs, can record and play back; the simplest journal file, just exiting the program, works", "NaN"], ["1404", "Recording and playback of dialog controls", "Paul Licameli", "Paul-Licameli", "08/20/21, 10:42:31 AM", "- [x] Identify a window in the tree textually, cross-session\r\n- [x] Serialize and deserialize wxCommandEvents in journals, using the previous\r\n- [x] Global event filter serializes events during recording\r\n- [x] Idle time journal file interpreter deserializes and dispatches events\r\n- [x] Demonstrate a journal file that replays interaction with a dialog", "NaN"], ["1409", "Windows x64 build failure", "Christos Sevastiadis", "csevast", "08/03/21, 09:22:25 PM", "I follow the instructions to build Audacity in Windows but it fails. The part of the log describing the error is the following:\r\n\r\nERROR: expat/2.2.9@audacity/stable: Error in build() method, line 94\r\n\tself._build_cmake()\r\nwhile calling '_build_cmake', line 60\r\n\tcmake = self._configure_cmake()\r\nwhile calling '_configure_cmake', line 56\r\n\tself._cmake.configure(build_folder=self._build_subfolder)\r\n\tConanException: Error 1 while executing cd C:\\Users\\csevast\\.conan\\data\\expat\\2.2.9\\audac\r\nity\\stable\\build\\4f1710918aa542fccb5a54d7bd712e4b0750b50d\\build_subfolder && cmake -G \"Visual Studio 16 2019\" -A \"x64\" -DCONAN_LINK_RUNTIME=\"/MDd\" -DCONAN_IN_LOCAL_CACHE=\"ON\" -DCONAN_COMPILER=\"Visual Studio\" -DCONAN_COMPILER_VERSION=\"16\" -DCONAN_CXX_FLAGS=\"/MP8\" -DCONAN_C_FLAGS=\"/MP8\" -DBUILD_SHARED_LIBS=\"ON\" -DCMAKE_INSTALL_PREFIX=\"C:\\Users\\csevast\\.conan\\data\\expat\\2.2.9\\audacity\\stable\\package\\4f1710918aa542fccb5a54d7bd712e4b0750b50d\" -DCMAKE_INSTALL_BINDIR=\"bin\" -DCMAKE_INSTALL_SBINDIR=\"bin\" -DCMAKE_INSTALL_LIBEXECDIR=\"bin\" -DCMAKE_INSTALL_LIBDIR=\"lib\" -DCMAKE_INSTALL_INCLUDEDIR=\"include\" -DCMAKE_INSTALL_OLDINCLUDEDIR=\"include\" -DCMAKE_INSTALL_DATAROOTDIR=\"share\" -DCMAKE_EXPORT_NO_PACKAGE_REGISTRY=\"ON\" -DCONAN_EXPORTED=\"1\" -DEXPAT_BUILD_DOCS=\"Off\" -DEXPAT_BUILD_EXAMPLES=\"Off\" -DEXPAT_SHARED_LIBS=\"True\" -DEXPAT_BUILD_TESTS=\"Off\" -DEXPAT_BUILD_TOOLS=\"Off\" -Wno-dev C:\\Users\\csevast\\.conan\\data\\expat\\2.2.9\\audacity\\stable\\build\\4f1710918aa542fccb5a54d7bd712e4b0750b50d\r\n\r\nCMake Error at cmake-proxies/cmake-modules/conan.cmake:631 (message):\r\n  Conan install failed='1'\r\nCall Stack (most recent call first):\r\n  cmake-proxies/cmake-modules/AudacityDependencies.cmake:233 (conan_cmake_install)\r\n  cmake-proxies/cmake-modules/AudacityDependencies.cmake:251 (_conan_install)\r\n  CMakeLists.txt:509 (resolve_conan_dependencies)\r\n\r", "Hi! Usually, this means that you have run CMake from the x86 developer tools command line. It is difficult to say without having the full log =||= Thank you very much. I fixed it. My case is not exactly as it is described in the proposed BUILD text, so I should describe what I did. \r\n\r\nBecause I didn't want to mix my Python environments, I downloaded and installed CONAN as a stand alone application for Windows --to be more specific, I installed it with Chocolatey. Then, I added the path to the CONAN executable folder to my PATH environment variable.\r\n\r\nBecause my Visual Studio 2019 installation didn't have the CMAKE-GUI --I don't know why--, I installed it as a stand alone application. The problem was that I was starting CMAKE-GUI from the Windows Start. As you suggested, I started the x64 developer tools command prompt for Visual Studio and I executed the CMAKE-GUI from there, finding the full path to it's stand alone installation.\r\n\r\nI answered as I am waiting the building to be finished --It takes long time on my laptop-- and I hope it will be successful.\r\n\r\nThank you very much, again.\r\n =||= "], ["1410", "Changing affordance hint text", "Vitaly Sverchinsky", "vsverchinsky", "08/03/21, 03:57:44 PM", "Resolves: https://github.com/audacity/audacity/issues/1332\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "Testing on W10 \r\n\r\nthe new Status Bar text is far too long for the Audacity Window at default size\r\n![image](https://user-images.githubusercontent.com/50205984/127895947-9bf5c271-8ccf-41ac-9c5e-0c63efcd112a.png)\r\n\r\nThe second part of the message is misleading in a couple of ways - it says:\r\n> ... Hold Shift while dragging to simultaneously move all clips on the same track\r\n\r\na) the user has the hold shift down before dragging - this is not clear\r\n\r\nb) \"simultaneously is not really the right word - what you are doing is \"maintaining sync\"  -  simultaneous just means they all move at the same time and they might shuffle up - sync maintenance is much clearer\r\n\r\n@Tantacrul - do you have a view on this\r\n =||= I think we have a design issue with the description at the bottom of the app. It should be able to allow longer strings than that. Possibly we could solve it by being able to move to two lines when needed. We can fix that later. For now, I'd suggest:\r\n\r\n1. \"Drag clips to reposition them. Hold Shift and drag to move all clips on the same track.\"\r\n2. We should have a tooltip for this too (just as you do when hovering over the play button)\r\n3. Create an issue for the bottom bar truncating descriptions\r\n\r\nOne question: I assume screen readers still work fine with the description, even if it's truncated?\r\n\r\n@petersampsonaudacity - what do you think? =||= > I think we have a design issue with the description at the bottom of the app. It should be able to allow longer strings than that. Possibly we could solve it by being able to move to two lines when needed. We can fix that later. \r\n\r\nOr it could auto-scroll.\r\n\r\n>For now, I'd suggest:\r\n> \r\n>     1. \"Drag clips to reposition them. Hold Shift and drag to move all clips on the same track.\"\r\n\r\nI like this revised message.\r\n\r\n\r\n>     2. We should have a tooltip for this too (just as you do when hovering over the play button)\r\nI agree - we know from experience  that many (most) folk never notice.read the Status Bar\r\n\r\n\r\n>     3. Create an issue for the bottom bar truncating descriptions\r\n+1\r\n\r\n\r\n\r\n =||= > One question: I assume screen readers still work fine with the description, even if it's truncated?\r\n\r\nscreen readers just read the truncated text. (though obviously in this particular case it's not of much interest.) =||= Testing on W10 with audacity-win-3.0.4-alpha-20210803+f90698c-64bit\r\n\r\nLooks much better now with default window size. =||= "], ["1413", "Make PortMixer buildable against vanilla PortAudio", "Dmitry Vedenko", "crsib", "08/12/21, 01:15:30 PM", "PortMixer requires a large, nontrivial patch to the PortAudio, which prevents Audacity to be buildable against the vanilla version of PortAudio,\r\n\r\nUbuntu and Fedora surprisingly apply it to PortAudio packages, but Arch doesn't.\r\n\r\nThe functions form the patch:\r\n\r\n* `Pa_GetStreamHostApiType` -The host API type can just be passed to `Px_OpenMixer`\r\n\r\nDirectSound\r\n---\r\n\r\n* `PaWinDS_GetStreamInputGUID`\r\n* `PaWinDS_GetStreamOutputGUID`\r\n\r\nReimplementing it will be tricky. The GUID is stored in a private structure `PaWinDsDeviceInfo`.\r\n\r\nThe safest way seems to be to load `DirectSoundCaptureEnumerateW`/`DirectSoundEnumerateW` and test for the device's name (which is stored in UTF8, which poses another (simple) problem). \r\n\r\nWASAPI\r\n---\r\n* `PaWasapi_GetInputDeviceID`\r\n* `PaWasapi_GetOutputDeviceID`\r\n\r\n19.7.0 has added PaWasapi_GetIMMDevice\r\n\r\nALSA\r\n---\r\n\r\nThe audio card id is cached. Can `snd_pcm_info_get_card` change between calls? We can cache it when `Px_OpenMixer`is called anyway. \r\n\r\nOSS\r\n---\r\n\r\n* `PaOSS_GetStreamInputDevice`\r\n* `PaOSS_GetStreamOutputDevice`\r\n\r\nThe name can be retrieved using `Pa_GetDeviceInfo`.\r\n\r\n\r\n\r", "NaN"], ["1414", "Investigate, if WASAPI patch for PA is really needed.", "Dmitry Vedenko", "crsib", "08/12/21, 01:15:30 PM", "Check if we need `wasapi-fix.patch` and `wasapi-loopback.patch` are still needed.\r\n\r\n`PaWasapi_IsLoopback` is not really used by Audacity anymore, but `wasapi-loopback.patch` has other changes as well.", "NaN"], ["1416", "Experimental qa journalling basics", "Paul Licameli", "Paul-Licameli", "08/11/21, 12:43:25 PM", "Resolves: #1403\r\n\r\nBeginnings of built-in tools for easy creation of automated functional regression tests, in alpha builds only.\r\n\r\nCertain events can be recorded to journal.txt in the folder with audacity.cfg, if this has been enabled in the Tools menu, and then played back, if that file is specified with the -j command line option.\r\n\r\nSo far, only menu items that require no dialogs (or their shortcut keystroke equivalents, or certain toolbar buttons that invoke those commands) can be played back.  Some simple sessions -- such as just exiting the program -- can replay.\r\n\r\nAudacity returns a non-zero status to the shell if journal playback fails, because the program's state is out-of-sync with what the journal file expects.  No examples yet of how to force that failure.\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "Thanks for the approval.\r\n\r\nYou noticed then how the journal \"language\" is defined?\r\n\r\nThose details may be up for change, but it's enough for the minimal version.\r\n =||= "], ["1421", "Show track name as overlay", "Steve Daulton", "SteveDaulton", "08/09/21, 09:05:44 AM", "**Describe the bug**\r\n\"Show track name  as overlay\" does not work in audacity-linux-3.0.4-alpha-20210803+f90698c-x86_64.AppImage without a restart.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Open a project with at least one named audio track\r\n2. Enable \"Show track name  as overlay\" in Preferences\r\n3. Observe that the track name is NOT shown on the audio track(s)\r\n4. Restart Audacity\r\n5. Observe that the track name is now shown as an overlay.\r\n6. Disable \"Show track name  as overlay\" in Preferences\r\n7. Observe that the track names are still displayed as overlays\r\n\r\n**Expected behavior**\r\nWhen \"Show track name  as overlay\" is enabled in Preferences, I'd expect the track name to show as an overlay on the track immediately without requiring a restart.\r\n\r\n**Screenshots**\r\nThis is what \"should\" happen:\r\n![audio_track_with_track_name_superimposed_translucent](https://user-images.githubusercontent.com/11681097/128164564-cafcb1dc-ee45-4942-8a76-adbf54aeffd0.png)\r\n\r\n\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Xubuntu 20.04\r\n - Version: audacity-linux-3.0.4-alpha-20210803+f90698c-x86_64.AppImage\r\n\r\n\r\n**Additional context**\r\nhttps://manual.audacityteam.org/man/tracks_preferences.html\r", "Confirmed on W10 with 3.0.4/3.1.0 alpha audacity-win-3.0.4-alpha-20210803+f90698c-64bit\r\n\r\nPlus I can get situations where the track name dies appear - but then I can't turn it off.\r\n\r\nThis is a regression on 3.0.3 =||= Observed that the \"name as overlay\" does work after restarting Audacity (a restart should not be necessary).\r\nOriginal bug report updated. =||= It seems that it a broader issue affecting many other preference settings, for example, changing \"Display samples\" from \"Stem Plot\" to \"Connect dots\" does not take effect until Audacity is restarted.\r\n =||= Tested on W10 with latest 3.1.0/3.0.4 alpha:   audacity-win-3.0.4-alpha-20210809+cf09f0a-64bit\r\n\r\nI confirm that this now works correctly again on Windows. =||= "], ["1422", "\"Fit to height\" does not fit", "Steve Daulton", "SteveDaulton", "08/12/21, 04:03:15 PM", "**Describe the bug**\r\n\"Fit to height\" should fit tracks within the visible track area (when possible), leaving a small amount of empty space below the bottom track. In the latest AppImage version, it resizes tracks too big (looks like the new drag bar may have been forgotten),\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Launch Audacity\r\n2. Add two audio tracks\r\n3. \"View menu > Track Size > Fit vertically\"\r\n4. Observe that the tracks have been resized too tall to fit in the viewable track space.\r\n\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Xubuntu 20.04\r\n - Version audacity-linux-3.0.4-alpha-20210803+f90698c-x86_64.AppImage\r\n\r\n**Additional context**\r\nhttps://manual.audacityteam.org/man/view_menu_track_size.html#fit_to_height\r", "Same is true on W10 with audacity-win-3.0.4-alpha-20210803+f90698c-64bit\r\n\r\nThis is a regression on 3.0.3 =||= Isn't this a duplicate of Issue #1339\r\n Affordances: Verify that \"Fit to Height\" acts as in version 3.0.3. #1339  =||= Now that 1442 has been pulled into master\r\n\r\nTesting on W10 with latest alpha master build for 3.1.0/3.0.4   audacity-win-3.0.4-alpha-20210812+8f8ec41-64bit\r\n\r\nThis now works fine\r\n\r\n![image](https://user-images.githubusercontent.com/50205984/129229530-d8f64012-206e-4b70-9f2d-a7004cba0625.png) =||= "], ["1423", "Construction of PrefsListener \"hub\" later than file-scope statics.", "Paul Licameli", "Paul-Licameli", "08/09/21, 12:20:42 AM", "Resolves:  #1369\r\n\r\nChanging of theme didn't work promptly on Windows after commit a2f109de2e43890217c57ea14d3cb8a45463521c\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "I'm still reproducing the bug with the build from this PR =||= "], ["1424", "Update user manual: new Detect button for Import Raw", "Paul Licameli", "Paul-Licameli", "08/05/21, 09:43:36 AM", "See #1172", "I added a P1 in the Manual for this.\r\n\r\nSee: https://alphamanual.audacityteam.org/man/File_Menu:_Import#Raw_Data...\r\n =||= "], ["1425", "Update user manual: Triangle wave generator for Tone and Chirp", "Paul Licameli", "Paul-Licameli", "08/04/21, 12:34:16 PM", "See #1054", "Done - see: https://alphamanual.audacityteam.org/man/Generate_Menu#Tone... =||= "], ["1427", "Range selection does not work in affordance area", null, "AnitaBats", "09/24/21, 12:22:22 PM", "NaN", "Why would you expect it to?\r\n\r\nWhen the cursor is over the Clip-handle drag-bar the cursor changes to the open hand which is the affordance to indicate that you can click, that open-hand cursor then changes to the closed-hand cursor which is the further affordance that you can drag to move  - NOT click and select.\r\n\r\nWhen the cursor is over the waveform the cursor icon is the I-beam - which is the affordance to indicate that you can click and drag to select.\r\n =||= Sorry, a bad wording from my side. When selection tool is active it's not possible to start selection when cursor is over empty affordance area (where no clips at all)\r\n![image](https://user-images.githubusercontent.com/20165230/128239078-5a596da0-d070-4012-970f-540dfc2c4ede.png)\r\n  =||= > When selection tool is active it's not possible to start selection when cursor is over empty affordance area (where no clips at all)\r\n\r\nAh I see what you mean - there is a visual cue to the user:\r\na) when the cursor is over the waveform area the cursor is the I-beam (default tool setting) - indicating selection is available\r\nb) when you move the cursor into the space where the Clip-handle drag bars could be dragged the cursor changes to the default Widows broad white arrow - indicating selection is not possible from there.\r\n\r\nSince all the space above the waveform for the Clip-handle drag bars is really only usable by the drag bars, what I would suggest is partitioning that part of the track off with a thin black line.  That would also have the advantage of a visual cue suggesting that the user can slide/drag the drag bars along horizontally.  \r\n\r\nIt also has the advantage that the waveforms themselves retain the square corners that they've always had.\r\n\r\nSee mockup:\r\n\r\n![image](https://user-images.githubusercontent.com/50205984/128318380-3a22745d-f36e-4e3d-b91e-23c08feac98e.png)\r\n\r\n@Tantacrul  and @jounih  - as the UX/GUI specialists on the team what are your thoughts on this please?\r\n\r\n\r\n =||= > @Tantacrul and @jounih - as the UX/GUI specialists on the team what are your thoughts on this please?\r\n\r\nI would be careful about trying to make changes to try and solve this potential issue until we've tested it in the wild. It may be the case that users don't experience this problem.\r\n\r\nIf they do, I can think of a few interesting ideas but I won't try articulate them here. =||= @Tantacrul I don't actually see a real problem here anyway - for me the visual cue of the change of cursor icon is sufficient.\r\n\r\nAs a user I wouldn't dream of trying to start a selection while my cursor was in that dead space without the I-beam selection cursor/tool showing.\r\n\r\nI would be surprised if we ever get user complaints about this.\r\n =||= @petersampsonaudacity - a related issue: we are planning on allowing users to multi-select clips as well as select wave data, so selection will need to be revisited holistically anyway. I'll be working on designs for this over the next 2-3 weeks. =||= And the GUI makes it entirely clear that the Clip-handle drag-bars do not participate in the selection:\r\n\r\n![image](https://user-images.githubusercontent.com/50205984/128630707-3b32ffe2-5699-4a3b-938d-1be4b683d1b0.png)\r\n =||= Let's release in 3.1 if _easy_ =||= "], ["1429", "Extract lib registries", "Paul Licameli", "Paul-Licameli", "08/06/21, 12:57:11 PM", "Resolves: #1163\r\n\r\nLibrary of useful utilities for decoupling of sub-systems and making them open-ended -- the big O of SOLID.\r\n\r\nBeware!   Here be dragons.  Much use of C++ templates.\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1431", "PortAudio update", "Dmitry Vedenko", "crsib", "08/12/21, 01:15:31 PM", "Resolves #1186\r\nResolves #1413 \r\nResolves #1414\r\nResolves #871 \r\n\r\nThis PR achieves two important goals:\r\n\r\n1. PortAudio is updated to 19.7.0\r\n2. System PortAudio can be used. Besides Linux packaging, this is important to fix #1360\r\n\r\nTo update PortAudio, the following steps were taken:\r\n\r\n* #946 was merged into this branch. This is required because `PaUtil_GetTime` is private, which is arguably the upstream error anyway.\r\n* `libnyquist` and `portmixer` build systems were updated:\r\n  * Corresponding  `CMakeLists.txt` moved into the lib-src.\r\n  * New PortAudio target is linked to the libraries.\r\n  * `portmixer` build system detects PortAudio capabilities.\r\n  * Libraries were moved out of the dependencies CMakeLists.txt\r\n  \r\n  It is unlikely the `libnyquist` and `portmixer` will be devendored because they are very Audacity specific, so it makes sense not to treat them as 3d party dependencies, at least for not.\r\n* `portmixer` now compiles with unmodified PortAudio. However, the full functionality on Windows requires patches to PortAudio:\r\n  * A [patch](https://github.com/audacity/conan-recipes/blob/main/portaudio/all/patches/19.7.0/pawinmme-export.patch) to export PaWinMME_ functions, which are public, but not usable if PortAudio is built as DLL. \r\n  * A [patch](https://github.com/audacity/conan-recipes/blob/main/portaudio/all/patches/19.7.0/winds-getguid.patch) that allows getting the DirectSound device GUID. Without it, there was no reliable way to retrieve the GUID.\r\n \r\nAdditionally, there are the following patches applied to the Conan provided library:\r\n\r\n* A [patch](https://github.com/audacity/conan-recipes/blob/main/portaudio/all/patches/19.7.0/enable-oss.patch) to enable OSS support. \r\n* A [patch](https://github.com/audacity/conan-recipes/blob/main/portaudio/all/patches/19.7.0/wasapi-loopback.patch) to enable WASAPI loopback devices.\r\n\r\nOne patch to PortAudio was dropped because it seemingly fixed the bug in Audacity rather than PortAudio. Also it broke `IsStreamStopped() == !IsStreamActive()` for WASAPI.\r\n\r\nLinux [packaging scripts](https://github.com/audacity/audacity/tree/master/linux/packages) were updated, so packages are built against the system PortAudio, the results were verified on corresponding systems.\r\n\r\nThe `PortAudio devendored` commit is large because it is impossible to break it into smaller commits that compile and run, as bringing the unmodified PortAudio library as an external dependency breaks lots of stuff around.\r\n\r\nThis PR was tested with all available Host APIs on Windows and with ALSA and Jack2 on Linux. OSS, while it was verified that it is enabled - failed to me for all Linux distros I was testing against.\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1432", "Added new keybinds", "Tech Penguin", "TechPenguineer", "08/06/21, 12:36:40 PM", "Resolves: New key-binds to require minimal requests\r\n\r\nThe reason I want to do this is because I have a slow computer and its gets very laggy when big software I being ran. So I wanted to add more key-binds to make it so you don't have to handle as many requests.\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "I'm a bit confused as to... well, everything here:\r\n\r\n* Some of the items you're giving shortcuts to already have shortcuts\r\n* It's not clear to me why Ctrl+E would be quit. Across various apps, I've seen Ctrl(+Shift)+Q and Ctrl(+Shift)+W to close documents/tabs while leaving the program running/going to the main screen, but never Ctrl+E. Ctrl+E usually is Export, or something dependent to the app (eg Edge menu in Blender, Center text in LibreOffice)\r\n* I have no idea what that Wahwah.cpp thing is doing in this PR\r\n* What do you mean by \"so you don't have to handle as many requests\"?  =||= For your own purposes, you can go to the Keyboard page of the Preferences dialog, and customize keystrokes as you like.  https://manual.audacityteam.org/man/keyboard_preferences.html. The changes will persiste between runs of Audacity.\r\n\r\nThere is no need to change your own source code for this, or to push this change to the repository.\r\n\r\n =||= "], ["1433", "FFmpeg startup failed", null, "te-agma-at", "09/24/21, 06:03:23 PM", "\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Launch Audacity\r\n2. Configure FFmpeg (Preferences > Libraries)\r\n3. Restart computer\r\n4. Restart audacity\r\n5. See error\r\n\r\n**Expected behavior**\r\nFFmpeg starts up automatically without error\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/72958435/128438864-edf0def6-f61e-4720-8683-b1cfb2715977.png)\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Windows 10\r\n - Version: Audacity 3.0.3\r\n\r\n**Additional context**\r\nA popup that appears that is so annoying that I may have to use a different sound editor if I experience this popup again.\r", "Previous Audacity releases for Windows were 32-bit.\r\nIf you installed the 64-bit version of Audacity 3.0.3, you will need to upgrade FFmpeg to the 64-bit version.\r\nOther 32-bit plug-ins (such as any VST effects that you've added) will also need to be updated or they won't work.\r\n\r\nIf you need to update FFmpeg, uninstall your current version of \"FFmpeg for Audacity\", and then follow the instructions here: https://manual.audacityteam.org/man/installing_ffmpeg_for_windows.html =||= > then follow the instructions here:\r\n\r\nAre you going to update to latest ffmpeg?? 4.4 that is. Because otherwise, it is better to do ffmpeg -i file output.wav/w64 =||= "], ["1437", "Fix update on UIHandle change within cell", "Vitaly Sverchinsky", "vsverchinsky", "08/09/21, 12:02:31 PM", "Resolves: #1363 \r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "Excellent detective work!\r\n\r\nMy only small objection is that I would make the new move constructors non-inline myself.  Not important enough to block this.\r\n =||= "], ["1441", "Fix event types used in PrefsListener singalling...", "Paul Licameli", "Paul-Licameli", "08/09/21, 09:05:44 AM", "... which broke at a2f109d\r\n\r\nResolves: #1421 \r\nResolves: #1369\r\n\r\nEvents were failing to be processed because event types were set incorrectly.\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "#1269 is fixed for good =||= "], ["1442", "Track panel fixes", "Paul Licameli", "Paul-Licameli", "08/12/21, 02:42:13 PM", "Resolves: #1339\r\nResolves: #1368\r\n(and addresses part of #1375)\r\n\r\nAlternative proposal to fix the problems of minimization of tracks with affordances, and the fit-to-height (Ctrl+Shfit+F) command.  Incidentally cleans up some things in TrackPanel, and makes its policy of subdivision of the y axis better encapsulated.\r\n\r\nShrinks the channel separator to one pixel, but does not widen the hit test area.\r\n\r\nKnown small problem -- dragging the channel separator between tracks now acts a little oddly, not staying exactly at the pointer.\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "Currently minimum height does not take into account the height of the subtracks:\r\n\r\n![image](https://user-images.githubusercontent.com/20165230/129023426-837ff8bd-6f77-4c8f-b6c0-a8e9c22dbc65.png)\r\n\r\nNot a big issue, but looks not very good in my opinion =||= > Currently minimum height does not take into account the height of the subtracks:\r\n> \r\n> ![image](https://user-images.githubusercontent.com/20165230/129023426-837ff8bd-6f77-4c8f-b6c0-a8e9c22dbc65.png)\r\n> \r\n> Not a big issue, but looks not very good in my opinion\r\n\r\nWhat do you mean by sub-tracks?  The stereo case?\r\n\r\nThe goal I wanted to achieve is to make height of minimized tracks not larger than it was in 3.0.3 and earlier.  (Where a minimized stereo track is also just as tall as a minimized mono track.)\r\n\r\nThis is done.  Let design ask for changes in the stereo case if it's not good enough.  And if it is not good enough, then my changes make it easy to get everything right, just by assigning heights to the views of channels of a minimized stereo track differently.\r\n\r\n =||= Also i think that it worth to note that this PR also fixes that issue #1368 =||= "], ["1444", "Modify label bar behaviour", "Vitaly Sverchinsky", "vsverchinsky", "09/06/21, 01:33:20 PM", "1. Show grab hand cursor on hover over label bar(affordance)\r\n2. Move whole label track if moving label with Shift-drag\r\n![image (2)](https://user-images.githubusercontent.com/20165230/128695385-769784df-7be6-4489-8ece-9370c8b18ced.png)\r", "Changing to using a grab hand cursor when hovering over the label bar would make it inconsistent with the cursor shown when hovering over the circle handle used for moving point labels, and the the chevron handles used for moving the start and end points of labels. Using a grab hand cursor for all of these would not be usable, as the hand is not precise enough for these existing tasks. =||= "], ["1445", "Sndfile extract", "Dmitry Vedenko", "crsib", "08/12/21, 01:59:20 PM", "Resolves: #1198 \r\n\r\nThis requiest is based on #1431 \r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1446", "Change clip handle colors", null, "AnitaBats", "08/27/21, 09:31:12 AM", "Inactive:\r\n![image](https://user-images.githubusercontent.com/20165230/128724518-36b7c385-547e-471c-aa2e-659fb35ce8b1.png)\r\nActive:\r\n![image](https://user-images.githubusercontent.com/20165230/128724564-e8ed205f-6c78-496c-b269-0263d849259a.png) ", "@DavidBailes wtote on Discord\r\n>better visibility of the handles would definitely be better for those with less than perfect sight. =||= "], ["1447", "Extract and update PortMidi", "Dmitry Vedenko", "crsib", "08/17/21, 09:31:50 AM", "NaN", "NaN"], ["1448", "Portaudio 19.6 cannot recognize a TV tuner that previous Portaudio versions could", null, "gapc", "09/07/21, 06:22:16 PM", "I recently tested Audacity 3.0.3 on my laptop (unzipped, not installed) and unlike the 2.0.5 version I was using until then, it could not recognize audio devices (the infamous \"Internal PortAudio error\" appeared) due to an USB tv/radio tuner (KWorld UB490-A) that I use on weekdays for recording a pair of radio programs and could be recognized by the version 2.05, so I cannot allow myself to disable it in order to this new version of Audacity to be able to recognize the other audio devices. After testing 2 other versions of Audacity, 2.4.2 and 2.3.3 (unzipped too) and finding out that only the latter of these could recognize the TV tuner, I guess the culprit is the Portaudio version 19.6.\r\n\r\nComputer: Lenovo G40-70\r\nOS: Windows 10\r\nSound card: Conexant SmartAudio HD, version 8.66.4.0\r\nTV/radio tuner: KWorld UB490-A\r", "Did this get fixed by the update to 19.7 in #1431 ? You can download current development snapshots in the Actions tab, eg [here](https://github.com/audacity/audacity/actions/runs/1195384142#artifacts) =||= Yes, it got fixed with this update. =||= Awesome! =||= "], ["1449", "Issue 1389: Autoduck can miss sections below threshold", null, "DavidBailes", "08/17/21, 12:56:53 PM", "Resolves: https://github.com/audacity/audacity/issues/1389\r\n\r\nProblem: the running average rmsSum can be higher than it should be due to rounding errors. This can lead to sections of the audio which should be below the threshold, being measured to be above the threshold.\r\n\r\nFix: make rmsSum a double, rather than a float, to greatly reduce rounding errors.\r\n\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1455", "The track in the bottom of the screen is always hiding under the toolbar", null, "Penikov", "08/12/21, 04:07:30 PM", "**Describe the bug**\r\nWhen the user added a few tracks and they are not fit on the screen, then the toolbar closes the last track at the bottom.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Launch Audacity\r\n2. Add a few tracks\r\n3. Scroll the sidebar to the bottom\r\n\r\n**Expected behavior**\r\n![\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435](https://user-images.githubusercontent.com/25851359/129006155-d42a7a00-8d28-441c-9679-7254604578f8.png)\r\n\r\n**Actual behaviour**\r\nThe track is been closed by the toolbar\r\n\r\n**Screenshots**\r\n![\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435](https://user-images.githubusercontent.com/25851359/129006378-94429329-ac93-41a5-a810-4a8071f226da.png)\r\n\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Win 10, Mac, \r\n - Version Audacity 3.0.4-alpha-20210806\r", "Already fixed in Audacity 3.0.4-alpha-20210809 =||= The bug was reproduced in Audacity 3.0.4-alpha-20210809 =||= Not fixed in latest master build on W10   -  audacity-win-3.0.4-alpha-20210811+a758491-64bit\r\n\r\nIs this something to do with the space for the drag-bars bot being calculated and allowed for ?\r\n\r\n =||= See also Issue #1339  =||= Now that 1442 has been pulled into master\r\n\r\nTesting on W10 with latest alpha master build for 3.1.0/3.0.4   audacity-win-3.0.4-alpha-20210812+8f8ec41-64bit\r\n\r\nThis now works fine\r\n\r\n![Uploading image.png\u2026]()\r\n =||= "], ["1458", "Cannot join adjacent labels", "Steve Daulton", "SteveDaulton", "09/03/21, 09:18:40 AM", "**Describe the bug**\r\nIn Audacity 3.0.2 and earlier, adjacent labels may be \"joined\" so that they share a common boundary. In Audacity 3.0.4 cea4a9 this no longer appears to be possible.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create two region labels with approximate positions: 5 to 15 seconds, 16 to 26 seconds.\r\n2. Shift + Click on the circle in the label flag at 16 seconds, and drag the label towards the first label\r\n3. Drag until the first and second label share a common boundary (see screenshot)\r\n4. I can't do step 3 with Audacity 3.0.4 cea4a9\r\n\r\n**Expected behavior**\r\nAs shown in screenshot.\r\n\r\n**Screenshots**\r\n![First Track000](https://user-images.githubusercontent.com/11681097/129183503-cd177fdf-fb55-40f4-9275-042f480fe076.png)\r\n\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Xubuntu 20.04\r\n - Version Audacity 3.0.4 alpha cea4a9\r\n\r\n**Additional context**\r\nhttps://manual.audacityteam.org/man/editing_resizing_and_moving_labels.html#junction\r", "Testing on W10 with latest master 3.1.0 build  20210812+d4fb834-64bit\r\n\r\nThis works for me:\r\n![image](https://user-images.githubusercontent.com/50205984/129222879-357a3106-6c11-489e-a307-6c718b5aa890.png)\r\n =||= seems like it works again =||= "], ["1461", "PortMidi Conan-ized", "Dmitry Vedenko", "crsib", "08/17/21, 09:31:51 AM", "Resolves #1447 \r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "I see NoteTrack.cpp also has\r\n`#ifdef SONIFY`\r\nand it's not defined in the default build.  I never did learn what this SONIFY thing was.  Other old team might confirm that it is no longer relevant.\r\n\r\nSo, that old #include wasn't breaking the build.  Still it could be changed consistently with the rest, or just deleted.  Then, less `#include \"../lib/src...\"` will remain to look at.\r\n\r\n\r\n\r\n =||= I fixed the include in `NoteTrack.cpp` =||= "], ["1463", "Build fails, if root directory is not a Git repository", "Dmitry Vedenko", "crsib", "08/17/21, 10:09:15 AM", "The build will fail, if there is no way to generate RevIdent.h file", "NaN"], ["1465", "Time Shift left/right commands do not work on the right hand channel of a stereo track when clips are not aligned", null, "DavidBailes", "08/13/21, 11:05:14 AM", "**Describe the bug**\r\nThe Time Shift left/right commands are on the Edit sub menu of the Extra menu. Keyboard users can assign shortcuts to them so that they can make fine adjustments to the positions of clips.\r\nThese commands do not work on the right hand channel of a stereo track when clips are not aligned. See steps to reproduce. This is a minor bug.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create two mono tracks, each containing a short clip.\r\n2. Move one of the clips (by any means) so that it doesn't overlap in time with the other clip.\r\n3. Create a stereo track from these two tracks.\r\n3. Position the cursor somewhere in the clip in the left hand channel. The Time Shift right/left commands work.\r\n4. Position the cursor somewhere in the clip in the right hand channel. The Time Shift right/left commands have no effect.\r\n\r\n**Expected behavior**\r\nThe Time Shift right/left commands work on the right channel in the same way as they work in the right channel\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Additional information (please complete the following information):**\r\nTested on Windows 10.\r\n\r\n**Additional context**\r\nThis bug has been around since 3.0.0.\r\nBetween 2.3.1 and 2.4.2 the commands moved a clip in the right hand channel by twice as much as it should, and so the clip was moved more than the cursor.\r\n2.3.0 was the last version when there was no problem.\r", "NaN"], ["1466", "Add support for modern FFMPEG versions", "Dmitry Vedenko", "crsib", "09/24/21, 06:03:23 PM", "References #398, #1034, #1170, #1201, #1331, #1433 \r\n\r\nThe goal of this task is to update the FFMPEG version without breaking the current Audacity users.\r\n\r\nUpdating will help with:\r\n\r\n* Improving security, as `avcodec55` is no longer supported\r\n* Using system libraries on Linux\r\n* Using FFMPEG from Brew on macOS\r\n\r\nThe problem is that while newer FFMPEG versions are (almost) API compatible - the ABI compatibility is broken.\r", "NaN"], ["1467", "Time Shift left/right commands do not work on the right hand channel of a stereo track when clips are not aligned", null, "DavidBailes", "08/13/21, 11:05:14 AM", "Resolves: https://github.com/audacity/audacity/issues/1465\r\n\r\nTime Shift left/right commands do not work on the right hand channel of a stereo track when clips are not aligned.\r\nThis has been a problem since 3.3.0. Between 2.3.1 and 2.4.2 they moved a clip in the right hand channel more than they should, so moving the clip more than the cursor.\r\n\r\nProblems and fixes, both in DoClipMove():\r\n1. The reason for the commands not working at all was the track rather than the channel was been passed in the call MakeTrackShifter::Call( *channel, project )\r\n2. The reason for the clip being moved more than it should, was the left hand channel always being passed as the captured track in the call:\r\nstate.Init( project, pShifter->GetTrack(), hitTestResult, std::move( uShifter ),\r\n         t0, viewInfo, trackList, syncLocked )\r\n\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1474", "Alignment of Trackname in TCP and the Clip-handle drag-bars", "Peter Sampson", "petersampsonaudacity", "08/26/21, 01:57:53 PM", "### Discussed in https://github.com/audacity/audacity/discussions/1473\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **petersampsonaudacity** August 13, 2021</sup>\r\n**Describe the bug**\r\nThe trackname in Track Control Panel (TCP) is not aligned with the Clip-handle drag-bars (AKA \"affordances\")\r\n\r\n**To Reproduce**\r\n1) Get some audio\r\n2) Observe the mis-alignment\r\n\r\n**Expected behavior**\r\nEither:\r\na) the height of the Clip-handle drag-bar to be reduced to the same size as the Track Name field in the TCP, or\r\nb) the height of the Track Name field in the TCP to be enlarged to be the same height as the Clip-handle drag-bar.\r\n\r\n\r\n**Screenshots**\r\nImage magnified  x 2.5\r\n![image](https://user-images.githubusercontent.com/50205984/129359126-833506c3-7d4c-445c-9163-add5daa177c3.png)\r\n\r\n**Additional information (please complete the following information):**\r\n - Windows 10 - but assume all OS\r\n - Audacity 3.1.0/3.0.4\r\n\r\n**Additional context**\r\nIt would just look much neater and more visually pleasing if the two were in alignment.\r\n\r\nIt would be good to get this aesthetically right from the outset when Clip-handle drag-bars are first released to the users,\r\n</div>", "I had to initiate this as a \"Discussion\" and then get it transferred using \"Create issue from discussion\" - as when I tried to just create the Issue the \"Submit new issue\" is faded out and inaccessible/un-clickable:\r\n\r\n![image](https://user-images.githubusercontent.com/50205984/129361833-451b7b60-40c9-4d83-86f0-109d83962156.png)\r\n =||= >  as when I tried to just create the Issue the \"Submit new issue\" is faded out and inaccessible/un-clickable\r\n\r\nWas that because you didn't enter a title? =||= > \r\n> \r\n> > as when I tried to just create the Issue the \"Submit new issue\" is faded out and inaccessible/un-clickable\r\n> \r\n> Was that because you didn't enter a title?\r\n\r\nYes Leo, embarrassingly so  _(blushes very deeply and face-palms)_ =||= @jounih  wrote in the associated Issue #1473 \r\n\r\n>18px for the clip handle bars sounds fine and looks like it would fix this. \r\n>@Paul-Licameli or @vsverchinsky could you please update kAffordancesAreaHeight to 18px? \r\n>And please send a link to the build to me/Martin once done, so we can check visually. \r\n>Thanks =||= I see your screenshot and I wonder if you have been playing with the goniometer again.\r\n =||= > \r\n> \r\n> I see your screenshot and I wonder if you have been playing with the goniometer again.\r\n\r\nActually @Paul-Licameli I did in the past test the Goniometer with Sgt Pepper album  ;-)\r\n =||= redundant comment removed  -  I can't delete the post\r\n\r\n =||= Testing on W10 with latest alpha build audacity-win-3.0.4-alpha-20210820+45a90e3-64bit \r\n\r\nThis tests good for this - the Clip-handle (and the box at the top of the Vertical Scale) is the same height and aligns nicely with the track name in the TCP.\r\n\r\nI think this issue can be closed.\r\n\r\n![image](https://user-images.githubusercontent.com/50205984/130264821-fef9e0ca-5caf-4378-a86b-e92ef43fcbc6.png)\r\n\r\nAnd note that Audacity now just has the single Clip-handle drag-bar affordance for a stereo track\r\n =||= Closed due to the comment from @petersampsonaudacity  =||= "], ["1475", "Stereo wave track channel resizing", "Vitaly Sverchinsky", "vsverchinsky", "08/17/21, 09:48:53 PM", "Resolves: #1375 \r\n\r\nResizing area added to the WaveTrackView and WaveTrackAffordanceControl, making possible to have an enlarged resizing area with 1px distance between channels.\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1476", "Envelope points are multiplied when using Filter Curve EQ or Graphic EQ", "Dmitry Vedenko", "crsib", "08/26/21, 12:55:36 PM", "**Describe the bug**\r\nUsing Filter Curve EQ will duplicate envelope points if they were present.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Get some audio\r\n2. Use envelope tool, generate some points\r\n3. Apply Filter Curve EQ to the selection, that is smaller than the clip\r\n4. Observe\r\n\r\n**Expected behavior**\r\nFilter Curve EQ should not change the envelope points.\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/2660628/129367697-0bc033af-aadd-4a2e-9347-12e00da5fdad.png)\r\n\r\nSee https://forum.audacityteam.org/viewtopic.php?p=432231#p432231\r", "I do not see this on w10 with 3.0.3 or 3/1/0/3.0.4 alpha audacity-win-3.0.4-alpha-20210813+4058470-64bit =||= I've clarified STR a bit after checking - it works only if you select the part of the clip\r\n\r\nAudacity 3.0.3 Win64\r\n\r\nFirst time:\r\nhttps://crsib-screenshots.s3.amazonaws.com/202108131713-y0w32.png\r\n\r\nSecond application, different selection\r\nhttps://crsib-screenshots.s3.amazonaws.com/202108131714-uzh79.png =||= The potentially problematic code dates back to Aug 2020: https://github.com/audacity/audacity/commit/58adb94747a824617adb2ff6636cef91e959037f =||= OK with revised STR\r\n\r\nBefore EQ\r\n![image](https://user-images.githubusercontent.com/50205984/129371066-9cd0ba53-be34-470d-a369-ac04bf771f4d.png)\r\n\r\n\r\nAfter EQ\r\n![image](https://user-images.githubusercontent.com/50205984/129371271-f8938bed-703b-4495-a4ff-d500fb3947c2.png)\r\n\r\nThe disjointed envelope does not look right to me\r\n =||= Oh, you should check the result of third application then LOL\r\n\r\n![image](https://user-images.githubusercontent.com/2660628/129371490-d88bdff2-9a5c-41ef-9de7-29ed581ff87f.png)\r\n =||= I get similar results when I use Graphic EQ as well =||= I don't really know how many effects are affected =||= I can get it to crash by applying the Filter curve EQ several times (using Ctrl+R) - it first goes to a flat line and then the next application causes the crash.\r\n\r\nET has just phoned-home with the error report. =||= > \r\n> \r\n> I don't really know how many effects are affected\r\n\r\nChange Pitch, Change Tempo and Change speed also seem to be affected\r\n\r\nAnd Paulstretch\r\n\r\nAnd Notch Filter and Tremolo\r\n\r\nBut many other effects are not affected e.g. Amplify, fade In, Wahwah and others\r\n =||= Oh I've managed to crash it too: #1477 \r\n\r\nAnd ET's home says that it is a number 2 crash! =||= Bug narrowed down to Track Clear-And-Paste usage =||= "], ["1477", "Filter Curve EQ will crash if there is an envelope point outside of the selection", "Dmitry Vedenko", "crsib", "08/26/21, 12:55:29 PM", "**Describe the bug**\r\nFilter Curve EQ will crash if there is an envelope point outside of the selection\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Get some audio\r\n2. Use envelope tool, generate some points\r\n3. Select audio with an envelope point outside of the selection\r\n3. Apply Filter Curve EQ\r\n4. Observe\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: [e.g. Mac High Sierra, Ubuntu 18.04, Windows 10]\r\n - Version [e.g. Audacity 2.5.1]\r\n - (if relevant) Sound Device [e.g. Windows WASAPI, USB Sound card]\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r", "I do not see this crash on W10 with 3.3.0/3.0.4 alpha  audacity-win-3.0.4-alpha-20210813+4058470-64bit\r\n\r\nBut the before and after does look odd (probably not correct)\r\n\r\nBefore EQ\r\n![image](https://user-images.githubusercontent.com/50205984/129370569-d13c12dc-c48d-4db2-a40d-0217c7a30714.png)\r\n\r\nAfter EQ\r\n![image](https://user-images.githubusercontent.com/50205984/129370239-f28d99aa-29e1-45aa-8314-9bb2237249e2.png)\r\n\r\nIn particular the discontinuous envelope does not look right to me,\r\n =||= "], ["1478", "Extract lib xml", "Paul Licameli", "Paul-Licameli", "08/17/21, 07:10:46 PM", "Resolves: #1158\r\n\r\nExtract a library for serialization and deserialization of objects in XML form, and a registry for serializable objects\r\nattached directly to the project.\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1482", "Experimental dialog journalling", "Paul Licameli", "Paul-Licameli", "08/20/21, 10:42:31 AM", "Resolves: #1404\r\n\r\nThe journalling system is now enhanced enough that it can replay some interactions with modal dialogs, including pushbuttons, choice controls, text boxes, and sliders.\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "Const-correctness is the wrong word -- I'm not cheating with C style casts or const_cast.\r\n\r\nUnnecessarily non-const arguments is what you mean, for some predicates.  Fair point.\r\n =||= "], ["1486", "Allow building from the tarball without Git installed", "Dmitry Vedenko", "crsib", "08/17/21, 10:09:15 AM", "Resolves #1463\r\n\r\nThis pull request solves the following problems:\r\n\r\n* Tarballs on GitHub can be regenerated, changing the hash\r\n* Building from the release tarball will create an \"alpha\" build\r\n* Build will fail if there is not Git in PATH\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1495", "Rewrite dither", "Paul Licameli", "Paul-Licameli", "08/31/21, 11:09:53 AM", "Resolves: #1496\r\n\r\nRewrite DIther.cpp more clearly with C++ functions, not macros.\r\n\r\nJust a preliminary to a preliminary to some AudioIO cleanup...\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "Could this have a negative impact on performance? Dither is one place that speed is important. Currently there is virtually no difference in time taken to export a long track with dither or without  dither (tested on Linux). =||= > Could this have a negative impact on performance? Dither is one place that speed is important. Currently there is virtually no difference in time taken to export a long track with dither or without dither (tested on Linux).\r\n\r\nI invite you to experiment.\r\n\r\nAll relevant functions are declared inline, and compilers can be pretty smart.\r\n =||= > > Could this have a negative impact on performance? Dither is one place that speed is important. Currently there is virtually no difference in time taken to export a long track with dither or without dither (tested on Linux).\r\n> \r\n> I invite you to experiment.\r\n> \r\n> All relevant functions are declared inline, and compilers can be pretty smart.\r\n\r\nI rewrote all of my branch with only static inline functions, and no pointer-to-member-functions.\r\n =||= "], ["1496", "Cleanup Dither", "Paul Licameli", "Paul-Licameli", "08/31/21, 11:09:53 AM", "Use modern C++ templates, not macros to make Dither.cpp simpler and clearer\r", "NaN"], ["1501", "Revert fixes for Bugzilla 208 and #1686", "Dmitry Vedenko", "crsib", "09/02/21, 02:02:25 PM", "* https://github.com/audacity/audacity/commit/58adb94747a824617adb2ff6636cef91e959037f\r\n* https://github.com/audacity/audacity/commit/c13a074\r\n\r\nThese fixes introduce P1 bug #1476  and crash #1477.\r\n\r\nIt was decided to revert them until we come with a better solution. The bug is filled as #1500 now. #1476, #1477 will be fixed as well\r\n\r", "Actually, rather than reversion, what happens if the calls to Envelope::Insert() are instead made to Envelope::InsertOrReplace()?  I think this will preserve the bug fix, and also not corrupt the envelope because points will remain properly sorted.\r\n\r\n =||= See Bugzilla:  https://bugzilla.audacityteam.org/show_bug.cgi?id=208\r\nBug 208 - Some effects (including equalization effects) delete Envelope Control Points, or do not move them when timeline changes \r\n =||= I think the automation didn't catch this one, but #1502 already got merged. closing this issue =||= "], ["1502", "Fix 1501", "Dmitry Vedenko", "crsib", "08/18/21, 10:21:37 AM", "Resolves #1501 \r\nResolves #1476 \r\nResolves #1477 \r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1503", "Manual: Prepare for 3.0.4 hotfix", null, "LWinterberg", "08/24/21, 10:23:21 AM", "- [x] Update what's new page\r\n- [x] Copy what's new page to wiki\r\n- [x] Update manual main page\r\n- [x] Create https://wiki.audacityteam.org/wiki/Release_Notes_3.0.4\r\n\r\nPost-launch\r\n- [x] update https://wiki.audacityteam.org/wiki/Category:Release_Notes", "@petersampsonaudacity thanks for helping along! Am I missing anything on the checklist?\r\n\r\nAlso, I ended up not following the usual formatting for the release notes since much of it doesn't seem too relevant for this release =||= > @petersampsonaudacity thanks for helping along! Am I missing anything on the checklist?\r\n\r\nThat's fine Leo.\r\n\r\nI checked for any occurrences of the text string \"3.0.1\" throughout the Manual with the **Replace Text** tool in the **tools > Special pages** from the Manuals nav bar (only visible to logged-in editors).  _This is a very useful tool for Manual maintenance I've always found._\r\n\r\nI have archived a copy of the What's new in 3.1.0 in the Wiki:\r\nhttps://wiki.audacityteam.org/wiki/Audacity_Versions#whatsnew\r\n\r\n\r\n> Also, I ended up not following the usual formatting for the release notes since much of it doesn't seem too relevant for this release\r\n\r\nLooks sensible to me\r\n\r\n =||= "], ["1504", "Context menus", "Paul Licameli", "Paul-Licameli", "09/06/21, 02:02:38 PM", "Resolves: #998\r\nResolves: #1518\r\n\r\nWorking context menus for background area and audio clips.\r\n\r\nNotes about some details where the issue description differs from this implementation or is underspecified:\r\n\r\n* All important words are capitalized, consistent with other menu items (for instance \"Split Clip\")\r\n* Split Clip will split only the picked clip (whether or not the track is selected), at the pick point.  This is unlike the toolbar menu, which splits all selected tracks, at the selection.\r\n* Paste will paste at the pick point, ignoring the selection, unlike the other ways of invoking Paste\r\n* Mute/Unmute Track has Shift+U as its default keystroke.  See Extra > Tracks sub-menu (and see Interface preferences to enable the Extra menu). The popup menu command will do that to the track you pick in, ignoring which tracks are in selected state.\r\n* \"Export Audio...\" rather than \"Export Project\" because that agrees with the toolbar menu and the convention that commands bringing up modal dialogs need ellipsis in the name.\r\n* The clip context menu appears only when clicking on the wave (or spectrogram) areas, not on the drag bar or in voids between clips.\r\n* The accelerator keys appear not necessarily as the defaults in the pictures, of course, but are consistent with whatever keystrokes have been chosen in preferences.\r\n* Context menu items will be grayed out and disabled in the same cases that the corresponding toolbar menus would be.  For instance, adding new tracks is not permitted during recording or playback.\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "> * There is no existing \"Mute/Unmute Track\" command in toolbar menus.  Alt-Ctrl-U in default bindings mutes all tracks.  I implemented a new command, not in the toolbar menus, for the popup that toggles mute status.   And again, for the (mono or stereo) track that is picked in, ignoring track selection state.\r\n\r\nThere's already a command to mute/unmute the focussed track in the Track submenu of the Extra menu. =||= > Notes about some details where the issue description differs from this implementation or is underspecified:\r\n\r\n> Split Clip will split only the picked clip (whether or not the track is selected), at the pick point. This is unlike the toolbar menu, which splits all selected tracks, at the selection.\r\n\r\nI think that there's a problem here trying to implement this stuff before the selection model for 3.1 has been fully specified (Tantacrul said he was working on this.)\r\nA user would expect that a command in a context menu would have the same effect as the command with the same name (and associated shortcut) in the main menus. But that isn't the case with your plan for using the split command in a clip's context menu. This command would act on different clips compared to the command in the main menus - they are in effect two different commands, and so should have different names (and shortcuts).   And if you used the same approach for the cut and copy commands you'd run into similar problems.  =||= > > * There is no existing \"Mute/Unmute Track\" command in toolbar menus.  Alt-Ctrl-U in default bindings mutes all tracks.  I implemented a new command, not in the toolbar menus, for the popup that toggles mute status.   And again, for the (mono or stereo) track that is picked in, ignoring track selection state.\r\n> \r\n> There's already a command to mute/unmute the focussed track in the Track submenu of the Extra menu.\r\n\r\nSo there is.  Thank you, I will rewrite that part.\r\n =||= > > Notes about some details where the issue description differs from this implementation or is underspecified:\r\n> \r\n> > Split Clip will split only the picked clip (whether or not the track is selected), at the pick point. This is unlike the toolbar menu, which splits all selected tracks, at the selection.\r\n> \r\n> I think that there's a problem here trying to implement this stuff before the selection model for 3.1 has been fully specified (Tantacrul said he was working on this.)\r\n> A user would expect that a command in a context menu would have the same effect as the command with the same name (and associated shortcut) in the main menus. But that isn't the case with your plan for using the split command in a clip's context menu. This command would act on different clips compared to the command in the main menus - they are in effect two different commands, and so should have different names (and shortcuts). And if you used the same approach for the cut and copy commands you'd run into similar problems.\r\n\r\n\r\n\r\n> > Notes about some details where the issue description differs from this implementation or is underspecified:\r\n> \r\n> > Split Clip will split only the picked clip (whether or not the track is selected), at the pick point. This is unlike the toolbar menu, which splits all selected tracks, at the selection.\r\n> \r\n> I think that there's a problem here trying to implement this stuff before the selection model for 3.1 has been fully specified (Tantacrul said he was working on this.)\r\n> A user would expect that a command in a context menu would have the same effect as the command with the same name (and associated shortcut) in the main menus. But that isn't the case with your plan for using the split command in a clip's context menu. This command would act on different clips compared to the command in the main menus - they are in effect two different commands, and so should have different names (and shortcuts). And if you used the same approach for the cut and copy commands you'd run into similar problems.\r\n\r\nAll very good points to raise, as indeed I am raising them.\r\n\r\nThe hope was that context menus would be an easy win for 3.1, relatively easy to implement.  But with these doubts about whether the clip menu items will work -- maybe we should commit to only one of the menus.\r\n\r\n\r\n\r\n =||= There is now one more commit to review.\r\n =||= "], ["1509", "Ogg decoding can hang (old vorbis library)", "Peter Sampson", "petersampsonaudacity", "08/19/21, 03:29:31 PM", "**Describe the bug**\r\nOgg decoding can hang (old vorbis library)\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Attempt to import https://upload.wikimedia.org/wikipedia/commons/0/0f/Claude_Debussy_-_Premi%C3%A8re_Arabesque_-_Patrizia_Prati.ogg\r\n2. Observe: : Audacity hangs, unresponsive.\r\n\r\n**Expected behavior**\r\nThe audio file should import correctly\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Additional information (please complete the following information):**\r\nThe poster - James Crook, wrote:\r\n\r\n=================================================\r\n\r\n James Crook 2021-04-15 12:38:05 UTC\r\n\r\nThis will be fixed by an upgrade to Vorbis 1.3.7 or later.\r\n\r\nIt's the same bug as reported here:\r\n\r\nhttps://forum.juce.com/t/ogg-vorbis-file-puts-juce-oggreader-in-infinite-loop/41148\r\n\r\nThis loop is going round forever, because begin reaches zero and stays there.\r\n\r\n  while(offset==-1){\r\n    begin-=CHUNKSIZE;\r\n    if(begin<0)\r\n      begin=0;\r\n\r\n    ret=_seek_helper(vf,begin);\r\n    if(ret)return(ret);\r\n    // other stuff\r\n  }\r\n\r\nThis bug was also present in Audacity 2.4.2, so is not a regression.\r\n\r\n=======================================================\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r", "This was originally logged on Bugzilla 2748:\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=2748\r\n =||= Voribs was updated to 1.3.7 in #1445  =||= Tested on w10 with latest 3.0.4 alpha audacity-win-3.0.4-alpha-20210817+7949a0d-64bit\r\n\r\nThis now imports fine =||= "], ["1517", "Fix affordance area height", "Vitaly Sverchinsky", "vsverchinsky", "08/20/21, 01:46:18 PM", "Resolves: #1473 \r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "I suggest just one more line in TrackPanel.cpp:\r\n```\r\nstatic_assert(kTrackInfoBtnSize == kAffordancesAreaHeight, \"Drag bar is misaligned with the menu button\");\r\n```\r\n =||= "], ["1518", "Right clicking in Clip-handle affordance changes selection", "Peter Sampson", "petersampsonaudacity", "09/06/21, 02:02:38 PM", "**Describe the bug**\r\nRight clicking in Clip-handle drag-bar affordance changes selection from existing selection made by the user to selecting the clip.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. get two clips\r\n2. make a selection in one of the clips\r\n3. Right-click in the Clip-handle affordance of the second clip\r\n4. Observe: the selection  from step 2 is removed and the whole of the second clip is selected\r\n\r\nAlternatively\r\n1. get some audio - i.e. a single clip\r\n2. make a partial selection in the audio\r\n3. Right-click in the Clip-handle affordance of the audio\r\n4. Observe: the selection  from step 2 is removed and the whole of the audio is selected\r\n\r\n**Expected behavior**\r\nWith right-click in the Clip-handle affordance I would expect either:\r\na) null - no action, or\r\nb) a drop-down context menu\r\n\r\nThe user's carefully made selection should not be changed by a single right-click in the Clip-handle affordance\r\n\r\n\r\n**Screenshots**\r\nNot applicable\r\n\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Windows 10  -  but assume all OS\r\n - Version latest master 3.1.0 (but still badged as 3.0.4)  audacity-win-3.0.4-alpha-20210820+45a90e3-64bit\r\n\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r", "This only happens if you right-click in the Clip-handle affordance and release the mouse button without moving the mouse.\r\n\r\nIf you right-click in the Clip-handle affordance and move the mouse without releasing the mouse button then the clip moves - and wnh you release the mouse button the selection is no changed.\r\n\r\nI would **_really_** not expect to move the clip with a right-click&drag in a Clip-handle affordance. =||= I don't think this is a bug per se. However, I do agree that we should utilise the RC menu when ready to provide useful options, like 'Joining', changing colour, etc. =||= My pull request #1504 may incidentally fix this. =||= > I don't think this is a bug per se.\r\n\r\nWell if it's by _\"design_\" then it's pretty idiosyncratic and more than unusual use of RMB.   \r\n\r\nI can't think of an app that I use where right click either doesn't bring up a context menu or simply does nothing. \r\n\r\n\r\n>However, I do agree that we should utilise the RC menu when ready to provide useful options, like 'Joining', changing colour, etc.\r\n\r\nIndeed. =||= > I can't think of an app that I use where right click either doesn't bring up a context menu or simply does nothing.\r\n\r\nBut dragging using the right mouse button is used in other apps. For example in File Explorer, you can right-drag files and folders around, and in Reaper dragging using the right mouse button is used by default for marquee selection. =||= > But dragging using the right mouse button is used in other apps. For example in File Explorer, you can right-drag files and folders around\r\n\r\nOoh so it does - I never knew that.\r\n\r\nBut in the context we are discussing here in alpha Audacity 3.1.0 the RMB actions duplicate and are exactly the same as the LMB actions in a Clip-handle affordance and that is an unnecessary waste of gestures in a GUI.\r\n\r\n1. Click and release =>  Select clip\r\n2. Click&drag => move the clip\r\n3. Double-click => no action\r\n\r\n\r\n_**Aside:**  I stumbled into this issue by idly right-clicking in the Clip-handle affordance just to see if there was a context menu - I was hoping to be able to name the clip_ =||= > But in the context we are discussing here in alpha Audacity 3.1.0 the RMB actions duplicate and are exactly the same as the LMB actions in a Clip-handle affordance and that is an unnecessary waste of gestures in a GUI.\r\n\r\nBut until different actions are defined for using the right mouse button, I don't think it too much of a problem that they're just duplications at the moment. =||= Potentially will be fixed after context menus release\r\n@Penikov this is blocked for QA until context menus are done =||= I have double-clicked on the clip handle (clip affordance) and it was selected then. \r\nSingle right-click doesn't do anything, but double-click does.\r\nDoes it work as designed?\r\n\r\nBTW if you try to click rapidly on the clip handle by the mouse wheel, the clip will be selected.\r\n\r\n =||= @SteveDaulton wrote on Discord:\r\n>Mouse double right click on clip drag bar.\r\n>Expected behaviour: Nothing - double right click is not a standard action.\r\n\r\nI am minded to agree. =||= "], ["1520", "Cmake error macOS ", null, "markusqw1", "08/24/21, 08:57:26 AM", "I am on macOS big sur and i keep getting cmake errors. I have followed the building.md. Please help\r\n\r\n\r\nCMake Error at /usr/local/Cellar/cmake/3.21.1/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:230 (message):\r\n  Could NOT find wxWidgets (missing: wxWidgets_LIBRARIES\r\n  wxWidgets_INCLUDE_DIRS)\r\nCall Stack (most recent call first):\r\n  /usr/local/Cellar/cmake/3.21.1/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE)\r\n  /usr/local/Cellar/cmake/3.21.1/share/cmake/Modules/FindwxWidgets.cmake:1025 (find_package_handle_standard_args)\r\n  vcpkg/scripts/buildsystems/vcpkg.cmake:782 (_find_package)\r\n  lib-src/libnyquist/CMakeLists.txt:263 (find_package)\r", "You probably have mistaken this repo with Tenacity. We do not use VCPKG  =||= "], ["1521", "Windows: installer references Mac Os X which should be macOS", "Peter Sampson", "petersampsonaudacity", "08/26/21, 09:50:50 PM", "**Describe the bug**\r\nThe Windows installer EXE dialog references Mac Os X.  This should be macOS as:\r\na) Apple changed the branding a wile back,\r\nb) the \"X\" is not letter X but Roman numeral X - i.e. ten and as now current mac OS is version 11.5.2 (Big Sur) the \"X\" is well out of date.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Install 3.0.3 on Windows with the EXE installer\r\n2. Observe: reference to Mac Os X in one of the installation dialog windows\r\n\r\n\r\n**Expected behavior**\r\nmacOS to be referenced instead\r\n\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/50205984/130352723-836ae33d-dcf7-488d-9d64-55d08525eba2.png)\r\n\r\n\r\n**Additional information (please complete the following information):**\r\n - Windows 10\r\n - Version 3.0.3\r\n\r\n\r\n**Additional context**\r\nThis does not occur with the Mac DMG installer\r\n\r", "@crsib please assign this issue to me, I am new to open source =||= Hey @petersampsonaudacity @crsib , kindly review my pull request \r\nLink to PR :https://github.com/audacity/audacity/pull/1528\r\n\r\nI want to be part of GSOC 2022 =||= Hey @AnitaBats  when will this PR get reviewed? =||= "], ["1522", "Cannot build audacity due to Conan requirement", "Dave Plater", "plater", "08/27/21, 09:17:29 AM", "I maintain Audacity for openSUSE. I've attempted to update to v3.0.3 but it refuses to build without \"Conan\". :\r\n\r\nCMake Error at cmake-proxies/cmake-modules/conan.cmake:795 (message):\r\n  Conan executable not found! Please install conan.\r\nCall Stack (most recent call first):\r\n  cmake-proxies/cmake-modules/conan.cmake:841 (conan_check)\r\n  cmake-proxies/cmake-modules/AudacityDependencies.cmake:4 (conan_add_remote)\r\n  CMakeLists.txt:158 (include)\r\n\r\nConan doesn't exist in openSUSE and further research shows that it's a package manager!\r\nI'm confused as to why Audacity now depends on a package manager.", "Hi Dave,\n\nFor version 3.1 this requirement will be lifted, please look at\nhttps://github.com/audacity/audacity/tree/master/linux/packages/fedora34\nfor example of the RPM build\n\n>Conan doesn't exist in openSUSE\n\nAs much of the Python software, Conan is managed by python-pip. Currently,\nthey have a long open issue to package it as an RPM\nhttps://github.com/conan-io/conan/issues/2772\n\nConan is a widely used dependency manager for C++ that is available for\nseveral years and helps to decouple dependencies management from the source\nbase. However, as we understand that Linux packaging environments usually\ndo not have internet access there will be a way either to package Conan\nalong with the source tree or not using at all. The latter option is only\nnow possible for Fedora and, likely, openSUSE, other distros do not package\nor package old versions of the required dependencies.\n\nSorry for this temporary inconvenience\n\n\nOn Tue, Aug 24, 2021 at 8:55 AM Dave Plater ***@***.***>\nwrote:\n\n> I maintain Audacity for openSUSE. I've attempted to update to v3.0.3 but\n> it refuses to build without \"Conan\". :\n>\n> CMake Error at cmake-proxies/cmake-modules/conan.cmake:795 (message):\n> Conan executable not found! Please install conan.\n> Call Stack (most recent call first):\n> cmake-proxies/cmake-modules/conan.cmake:841 (conan_check)\n> cmake-proxies/cmake-modules/AudacityDependencies.cmake:4 (conan_add_remote)\n> CMakeLists.txt:158 (include)\n>\n> Conan doesn't exist in openSUSE and further research shows that it's a\n> package manager!\n> I'm confused as to why Audacity now depends on a package manager.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audacity/audacity/issues/1522>, or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAUJSFCRWNXUTIQLSZK5V73T6MX45ANCNFSM5CWCQERQ>\n> .\n>\n =||= I'll try the \"-D audacity_conan_enabled=Off\" switch and the \"-D audacity_conan_allow_prebuilt_binaries=no\" switches but when I first encountered conan I did a cmake -LAH and then searched for conan and didn't find the above defines. =||= The build still wants conan, I see all the other distributions are still on 3.0.2 =||= This change is not available for 3.0.3, it is only in the master branch for now.\r\n\r\nIn any case, there are not many Linux-related changes between 3.0.2 and 3.0.3. \r\n\r\n3.1.0 will be a feature release, though =||= Are there commits I can make a patch from? =||= I think this one should be sufficient: https://github.com/audacity/audacity/pull/1030/commits/ae841d5d015bbf2978feea465fddb2fec3524d73\r\n\r\nThere were other patches as well for dependencies without pkg-config. But I think you do not need them, as you already building 3.0.2 =||= The patch seems to work but now I'm stuck on ThreadPool, we only have python-threadpool and that doesn't seem to satisfy audacity =||= Ouch, sorry, forgot about that :(\r\n\r\nhttps://github.com/audacity/audacity/pull/1030/commits/c740f4a8358f0f256fd15d1cf9c356c799b6ef29\r\n\r\nThis one will be included in 3.1.0 as well! =||= cmake now succeeds but now it doesn't find soxr and vamp files that exist in the directory they're searched for in.\r\nfind . -name cr.c in the audacity top dir gives:\r\n./audacity-Audacity-3.0.3/lib-src/libsoxr/src/cr.c\r\n\r\n CMake Error at cmake-proxies/libsoxr/CMakeLists.txt:2 (add_library):\r\n[   41s]   Cannot find source file:\r\n[   41s] \r\n[   41s]     /home/abuild/rpmbuild/BUILD/audacity-Audacity-3.0.3/lib-src/libsoxr/src/cr.c\r\n[   41s] \r\n[   41s]   Tried extensions .c .C .c++ .cc .cpp .cxx .cu .mpp .m .M .mm .ixx .cppm .h\r\n[   41s]   .hh .h++ .hm .hpp .hxx .in .txx .f .F .for .f77 .f90 .f95 .f03 .hip .ispc\r\n[   41s] \r\n[   41s] \r\n[   41s] CMake Error at cmake-proxies/libvamp/CMakeLists.txt:2 (add_library):\r\n[   41s]   Cannot find source file:\r\n[   41s] \r\n[   41s]     /home/abuild/rpmbuild/BUILD/audacity-Audacity-3.0.3/lib-src/libvamp/src/vamp-hostsdk/PluginBufferingAdapter.cpp\r\n[   41s] \r\n[   41s]   Tried extensions .c .C .c++ .cc .cpp .cxx .cu .mpp .m .M .mm .ixx .cppm .h\r\n[   41s]   .hh .h++ .hm .hpp .hxx .in .txx .f .F .for .f77 .f90 .f95 .f03 .hip .ispc\r\n[   41s] \r\n\r\nA system soxr exists. =||= Can you please show me your spec file? =||= https://build.opensuse.org/package/view_file/home:plater/audacity/audacity.spec?expand=1 =||= The %cmake macro expands to:\r\n    find . -name CMakeLists.txt \\\r\n        -exec sed -i -re '/^[[:blank:]]*[sS][eE][tT][[:blank:]]*\\([[:blank:]]*(CMAKE_BUILD_TYPE|CMAKE_COLOR_MAKEFILE|CMAKE_INSTALL_PREFIX|CMAKE_VERBOSE_MAKEFILE).*\\)/{s/^/#IGNORE /}' {} + \r\n    mkdir -p build \r\n    cd build \r\n    /usr/bin/cmake $OLDPWD/. \\\r\n%if \"/usr/bin/make\" == \"/usr/bin/make\" \r\n        -G\"Unix Makefiles\" \\\r\n%else \r\n        -GNinja \\\r\n%endif \r\n        -DCMAKE_INSTALL_PREFIX:PATH=/usr \\\r\n        -DINCLUDE_INSTALL_DIR:PATH=/usr/include \\\r\n        -DLIB_INSTALL_DIR:PATH=/usr/lib64 \\\r\n        -DSYSCONF_INSTALL_DIR:PATH=/etc \\\r\n        -DSHARE_INSTALL_PREFIX:PATH=/usr/share \\\r\n        -DCMAKE_INSTALL_LIBDIR:PATH=/usr/lib64 \\\r\n        -DCMAKE_BUILD_TYPE=RelWithDebInfo \\\r\n        -DCMAKE_C_FLAGS=\"${CFLAGS:--O2 -g -m64 -fmessage-length=0 -D_FORTIFY_SOURCE=2 -fstack-protector -funwind-tables -fasynchronous-unwind-tables} -DNDEBUG\" \\\r\n        -DCMAKE_CXX_FLAGS=\"${CXXFLAGS:--O2 -g -m64 -fmessage-length=0 -D_FORTIFY_SOURCE=2 -fstack-protector -funwind-tables -fasynchronous-unwind-tables} -DNDEBUG\" \\\r\n        -DCMAKE_Fortran_FLAGS=\"${FFLAGS:--O2 -g -m64 -fmessage-length=0 -D_FORTIFY_SOURCE=2 -fstack-protector -funwind-tables -fasynchronous-unwind-tables} -DNDEBUG\" \\\r\n        -DCMAKE_EXE_LINKER_FLAGS=\" -Wl,--as-needed -Wl,--no-undefined -Wl,-z,now\" \\\r\n        -DCMAKE_MODULE_LINKER_FLAGS=\" -Wl,--as-needed\" \\\r\n        -DCMAKE_SHARED_LINKER_FLAGS=\" -Wl,--as-needed -Wl,--no-undefined -Wl,-z,now\" \\\r\n%if \"lib64\" == \"lib64\" \r\n        -DLIB_SUFFIX=64 \\\r\n%endif \r\n%if 1500 <= 1500 \r\n        -DCMAKE_SKIP_RPATH:BOOL=ON \\\r\n%endif \r\n        -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \\\r\n        -DBUILD_SHARED_LIBS:BOOL=ON \\\r\n        -DBUILD_STATIC_LIBS:BOOL=OFF \\\r\n        -DCMAKE_COLOR_MAKEFILE:BOOL=OFF \\\r\n        -DCMAKE_INSTALL_DO_STRIP:BOOL=OFF \\\r\n        -DCMAKE_MODULES_INSTALL_DIR=/usr/share/cmake/Modules\r\n =||= I've changed to 3.0.4 and it goes past the previous build errors but it appears to have trouble finding includes from wxWidgets. I've added $(wx-config --cflags) to the c and cxx flags =||= With the addition of $(wx-config --libs) to the LINKER flags the build now makes it as far as \"MemoryX.cpp.o\" where it fails on a namespace error. Unfortunately I'm not good at cxx namespaces and I'm running out of time. See:\r\nhttps://build.opensuse.org/package/live_build_log/home:plater/audacity/Factory/x86_64\r\nand for the entire log:\r\nhttps://build.opensuse.org/public/build/home:plater/Factory/x86_64/audacity/_log =||= https://github.com/audacity/audacity/commit/4ed2e0d2652525f574da6e4ae02775943178e7f3\r\n\r\nThere more I think about it the more it occurs to me that the whole set of commits is required from this PR: https://github.com/audacity/audacity/pull/1030/commits =||= 0001-Fixes-GCC11-compatibility.patch can't find libraries/lib-math/SampleCount.cpp doesn't exist in v3.0.4 but it inspired me to patch MemoryX.cpp with include limits and the build now succeeds just left with a couple of installation changes which I'll fix.\r\nI only used:\r\n 0001-Adds-an-option-to-disable-Conan.patch\r\n 0001-Scope-libraries-required-by-the-optional-features.patch\r\n 0001-Fixes-wxwidgets-fixup-script.patch\r\n\r\nOne interesting thing is that I couldn't use the commit hash from the patches and had to search for the description and use that hash =||= Audacity builds again =||= This is awesome, thank you a lot! =||= "], ["1523", "Build fails because portaudio.com is down", null, "efokschaner", "08/25/21, 10:08:31 AM", "**Describe the bug**\r\nConan step fails during CMake configure because portaudio.com is down.\r\nThe conan recipe for portaudio defined by audacity project https://github.com/audacity/conan-recipes/blob/main/portaudio/all/conandata.yml#L3 references http://files.portaudio.com/archives/pa_stable_v190700_20210406.tgz which fails to download.\r\n\r\nSee https://github.com/PortAudio/portaudio/issues/634 for the upstream issue report.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Clone this repo (on windows but it probably affects all conan-using platforms)\r\n1. Follow the build instructions to CMake configure\r\n1. See an error downloading http://files.portaudio.com/archives/pa_stable_v190700_20210406.tgz\r\n\r\n**Expected behavior**\r\nCMake configure should complete without error\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Windows 10\r\n - Version: master (45a90e38a3dd5f799244057b3c512943dca8e3e8)\r\n\r\n**Additional context**\r\nThe issue appears to be able to be worked around by using the source distribution from the GitHub release, rather than the portaudio.com website. The main fix looks like this:\r\n```\r\n    url: \"https://github.com/PortAudio/portaudio/archive/refs/tags/v19.7.0.tar.gz\"\r\n    sha256: \"5af29ba58bbdbb7bbcefaaecc77ec8fc413f0db6f4c4e286c40c3e1b83174fa0\"\r\n```\r\nI'll throw a PR over to the https://github.com/audacity/conan-recipes repo in case it's a desirable solution.", "Sounds really good to me! =||= This issue should be now fixed, thank you again! =||= "], ["1526", "Release 3.0.4", "Dmitry Vedenko", "crsib", "08/24/21, 05:39:50 PM", "NaN", "NaN"], ["1527", "Extract lib audio devices", "Paul Licameli", "Paul-Licameli", "08/27/21, 04:57:18 PM", "Resolves: #1144\r\n\r\nExtract a library of utilities for querying the available audio devices, finding their preferred sample rates, holding certain related global preferences variables, and also the interface class Meter for transferring buffers of samples for purposes of display updates.\r\n\r\nThis does not contain the complete playback and recording audio engine.  When WaveTrack is a library, it will need only this part to set default sample rates of wave tracks appropriately.\r\n\r\nDoing this separation now is also desirable as a prelude to other refactorings of the audio engine.\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1528", "Changed 'Mac OS X' to 'macOS' reference in audacity_InnoWizard_InfoBefore.rtf file", "Sandeep Rajakrishnan", "san-coding", "08/26/21, 09:46:30 PM", "This fixes the issue #1521\r\n\r\n\r\n\r\n\r\n\r\nResolves: *(https://github.com/audacity/audacity/issues/1521)*\r\n\r\nThe Windows installer EXE dialog references Mac Os X. Changed it to macOS because:\r\na) Apple changed the branding a wile back,\r\nb) the \"X\" is not letter X but Roman numeral X - i.e. ten and as now current mac OS is version 11.5.2 (Big Sur) the \"X\" is well out of date.\r\n(To achieve this , updated the file : [win/Inno_Setup_Wizard/audacity_InnoWizard_InfoBefore.rtf\r\n](https://github.com/audacity/audacity/blob/95a7fc6362729594565204b6db927b2e025d20c0/win/Inno_Setup_Wizard/audacity_InnoWizard_InfoBefore.rtf) )\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "Hey @petersampsonaudacity @crsib  , kindly review this pull request \r\n =||= "], ["1529", "Some effects mess up envelope", "Steve Daulton", "SteveDaulton", "08/25/21, 10:06:27 AM", "**Describe the bug**\r\nMost non-real-time effects mess up envelopes.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Generate a 30 second tone\r\n2. Add envelope points every 5 seconds in a recognizable pattern\r\n3. select from about 7 seconds  to about 22 seconds\r\n4. Apply a non-real-time (example: Graphic EQ)\r\n5. Observe that the envelope between the start and end of the selection is destroyed.\r\n\r\n**Expected behavior**\r\nThe effect to be applied  without changing the envelope.\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Xubuntu 20.04\r\n - Version audacity-linux-3.0.4-x86_64.AppImage\r\n\r\n\r", "This is a duplicate of #1500  =||= "], ["1530", "Quiet Sound", null, "gemgithuberror", "09/21/21, 07:47:28 AM", "Open audacity, begin recording and despite settings being the same as normal, the sound comes out extremely quiet and cannot not be enhanced with filter curve features.  \r\n\r\nIt used to work and now it doesn't. It also works sometimes but not others times. \r\n\r\nI opened it and recorded and it seemed to be working ok and then I clicked the 'x' to get rid of the recording and start again and then began recording and it went quiet again and I can't work out why and how to fix it. \r\n\r\nI thought it was the blue yeti mic I was using but I have a replacement and the same issue occurs. It worked before so I can't see why it would be my device but I have no other device to check it on. Have you experienced this issue before? What can be done to fix it? \r\n\r\nHere is a normal recording:\r\n![image](https://user-images.githubusercontent.com/89518294/130771510-2b063e21-8b3d-4a62-a364-266a2bd9084e.png)\r\n\r\nand here is what is looks like when the error occurs:\r\n\r\n![image](https://user-images.githubusercontent.com/89518294/130771660-753c28ce-b68d-46f0-873b-f440ef0130fb.png)\r\n\r\n\r\nThe version is 3.0.3 \r\n\r\nI am using a dell laptop and Windows 10 version 21H1\r\n\r\nI am using a Blue Yeti USB mic - https://www.bluemic.com/en-gb/products/yeti/ \r\n\r\n\r\n**Describe the bug**\r\nA clear and concise description of what the bug is.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to '...'\r\n2. Click on '....'\r\n3. Scroll down to '....'\r\n4. See error\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: [e.g. Mac High Sierra, Ubuntu 18.04, Windows 10]\r\n - Version [e.g. Audacity 2.5.1]\r\n - (if relevant) Sound Device [e.g. Windows WASAPI, USB Sound card]\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r", "Hello! The bug tracker isn't the best place for troubleshooting like this, so sorry for the late reply. \r\n\r\nI think this isn't an Audacity bug, as your input volume seems to have been the same. You say that you can replicate this with different mics - but can you reproduce this with a different USB cable, connected to a different USB port, or even a different computer if you've got access to that? If not, my guess is that this would be a hardware issue. =||= Ensure that Windows Sound \"Enhancements\" are all disabled for the USB device (See: [Why do my recordings fade out or sound as if they were made in a tunnel](https://manual.audacityteam.org/man/faq_recording_troubleshooting.html#enhancements))\r\n\r\nIf that doesn't fix it, I'd recommend asking on the Audacity forum: https://forum.audacityteam.org/viewforum.php?f=46 =||= "], ["1532", "New colors for clip affordances in light and classic themes", "Vitaly Sverchinsky", "vsverchinsky", "08/27/21, 09:31:12 AM", "Resolves: #1446 \r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "Looks lighter and thus more obvious, and gets lighter still when hovered over,  Looks like an improvement to me.\r\n![image](https://user-images.githubusercontent.com/50205984/130967117-3e178e09-308d-4e8e-b0de-4c6690bfb8ce.png)\r\n =||= "], ["1533", "Clip names", "Vitaly Sverchinsky", "vsverchinsky", "09/06/21, 01:25:32 PM", "Resolves: #1182 #1324\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "Please see:  Nomenclature for default Clip names could be improved as \"Audio Clip\" #1535 =||= All is well in the last commit\r\n =||= Just rebase, nothing fixed yet =||= The i18n changes are good, I suggest better comments about the logic of the binary search, but there is a possible crash bug in split-cut of tracks which was introduced in a later force-push.  I think you write rightClip where you meant leftClip.\r\n\r\nFix that, and the comments, test split-cut (Edit > Remove Special > Split Cut), rebase and force-push, and I will approve.\r\n\r\n =||= "], ["1542", "OSX -> macOS", null, "LWinterberg", "08/27/21, 01:10:11 PM", "Resolves: an absolutely petty little thing in the readme.md\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1544", "The cursor doesn't change appearance while it's hovering a label handle or dragging the label (affordance)", null, "Penikov", "09/16/21, 01:31:53 PM", "**Describe the bug**\r\nThe cursor doesn't change appearance while it's hovering a label handle or dragging the label (affordance)\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behaviour:\r\n1. Add a label track\r\n2. Add some selection labels\r\n3. Hover or drag the label handle\r\n\r\n**Expected behavior**\r\n![\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435](https://user-images.githubusercontent.com/25851359/131110255-5c234532-4856-4ae9-b968-f62a87f74f2b.png)\r\n\r\n**Screenshots**\r\n\r\nhttps://user-images.githubusercontent.com/25851359/131110378-ec8d4b5a-8541-4917-abf6-2a210be8e01e.mp4\r\n\r\n\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Windows 10\r\n - Version Audacity 3.0.4\r\n \r\n\r", "There is a task for this already\r\nhttps://github.com/audacity/audacity/issues/1444 =||= Please test after #1444 is done @Penikov  =||= Fixed =||= "], ["1545", "Release notes state :Audacity does not currently compile on SuSE Linux.", "Dave Plater", "plater", "08/27/21, 01:37:26 PM", "The Release Notes for 3.0.4 state that \"Audacity does not currently compile on SuSE Linux.\" but this isn't true. I maintain audacity for openSUSE and it compiles on:\r\nTumbleweed           x86_64     succeeded*\r\nSLE-15-SP3           x86_64     succeeded\r\nSLE-15-SP3           aarch64    succeeded\r\nLeap_15.2            x86_64     succeeded\r\nLeap_15.3                 x86_64     succeeded\r", "Oh god we've just been copying that line over since 2.2.0: https://wiki.audacityteam.org/wiki/Release_Notes_2.2.0#Linux \r\n\r\nI'll take your word for it that it does! =||= Changed it to \"Other Linux distributions should work, but aren't tested by the Audacity team.\" for this release. \r\n\r\n(Note to self: For 3.1, we should really be explaining the compile vs AppImage vs Package manager differences). =||= Thanks, I just submitted a working v3.0.4 to Tumbleweed =||= "], ["1565", "Update license for my Nyquist plug-ins", "Steve Daulton", "SteveDaulton", "08/30/21, 08:44:20 PM", "Resolves: License ambiguity with https://github.com/audacity/audacity\r\n\r\nUpdates license message to be compatible with latest https://spdx.org/licenses\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [ x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x ] I made sure the code compiles on my machine\r\n- [x ] I made sure there are no unnecessary changes in the code\r\n- [x ] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x ] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1571", "The project file is being corrupt if it's opened while Audacity is running.", null, "Penikov", "09/24/21, 05:43:19 PM", "**Describe the bug**\r\nThe project file is being corrupt if it's opened while Audacity is running.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behaviour:\r\n1. Run Audacity\r\n2. Open some project\r\n3. Press Cmd + O and open another project\r\n\r\n\r\n**Actual behaviour**\r\nAudacity corrupts the second project\r\n\r\n**Expected behaviour**\r\nAnother project is opened successfully\r\n\r\n**Screenshots**\r\nhttps://www.srut.de/audacity/audacity-3040-problem--opening-a-file-via-keyboard-shortcut-corrupts-file-irreversibly.mov\r\n\r\n**Additional information (please complete the following information):**\r\n - OS:  Mac OS Big Sur\r\n - Version Audacity 3.0.4\r", "This issue has been reported by at least four(4) different users on the forum on the following two threads:\r\n\"aup-3 files are empty when they are opened\":  https://forum.audacityteam.org/viewtopic.php?f=47&t=119330&sid=18e2f302da2d3b1fd5bad5a0c59c4542\r\nand \"Opening a file via keyboard shortcut corrupts project file irreversibly\": https://forum.audacityteam.org/viewtopic.php?f=47&t=119956\r\nThe four reporting users are: Baum123, Carpezaldo, lilouch, and mathpoli. =||= I cannot reproduce this on W10 with 3.1.0 alpha audacity-win-3.1.0-alpha-20210831+6d3dd0c-64bit\r\n\r\nBoth projects open fine - no corruption that I can detect =||= Hi, may I point you to what I have found out and posted on the Audacity forum?\r\nhttps://forum.audacityteam.org/viewtopic.php?f=47&t=119956&start=20\r\n =||= SUMMARY:\r\nSo far I have tested on these iMacs and had on all the bug:\r\n\r\n\u2013 1x iMac (Retina 5K, 27 Inch, Late 2015), Intel Core i5, with macOS 10.15.7 (internal Fusion Drive): Audacity v3.0.4.0, Audacity v3.0.3.0, Audacity v3.0.2.0\r\nsame iMac with macOS Big Sur (external USB drive): Audacity v3.0.4.0\r\nsame iMac with macOS 10.14.6 (external USB drive): Audacity v3.0.4.0\r\n\r\n\u2013 2x iMac (Retina 5K, 27 Inch, Late 2015), Intel Core i7, with macOS 10.15.7 (internal SSD, first partition), Audacity v3.0.4.0\r\nsame 2 iMacs with macOS 10.13.6 (internal SSD, second partition): Audacity v3.0.4.0\r\n\r\n\u2013 1x iMac (21.5 Inch, Late 2009), Intel Core2Duo, with macOS 10.11.6 (internal HD): Audacity v3.0.4.0\r\n\r\n\u2013 1x Mac Mini (Late 2012), Intel Core i7 with 10.15.7 (external SSD (via USB) as substitute for damaged internal HD): Audacity v3.0.4.0\r\n\r\nAudacity v3.0.0.0 runs on all the above Macs without the bug.\r\n\r\nFive different Macs, five different OS.  =||= Has this been reported only by Mac users? The above mentioned 4 users (Baum123, Carpezaldo, lilouch, and mathpoli) all have Macs. =||= Yes. This appears to be a MAC only problem. =||= Downloaded and installed v3.0.4.0 from audacity.\r\nI cannot reproduce this on the following macos systems:\r\n\r\nmacos 10.13.6 i5 macbook pro early 2015 RAM 8GB SSD 70 GB unused\r\nmacos 11.5.2 m1 mac mini RAM 8GB SSD 120 GB unused\r\n\r\nCreated 2 aup3 projects with 3 clips in each.  Each test project was 261MB and 158.8MB Opened using both keyboard and menu mouse clicks.  Audacity created a 0 byte .wal file for each project which then disappeared once Audacity was closed.\r\n\r\nContents in either project did not disappear; changes when saved persisted.  Quitting without any change in the project \r\n =||= "], ["1579", "Bad link to FFmpeg on the Plug-ins page on the Audacity Website", "Peter Sampson", "petersampsonaudacity", "08/31/21, 08:50:13 AM", "**Describe the bug**\r\nA Forum user has reported a bad link to FFmpeg on the Plug-ins page on the Audacity Website:\r\nhttps://forum.audacityteam.org/viewtopic.php?f=20&t=120063\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to https://www.audacityteam.org/download/plug-ins/\r\n2. Scroll to the bottom of the page\r\n3. Click on \"FFmpegFAQ\" link\r\n4. Observe bad link: https://manual.audacityteam.org/man/#ffdown\r\n\r\n**Expected behavior**\r\n\"FFmpegFAQ\" should link to:\r\nhttps://manual.audacityteam.org/man/faq_installation_and_plug_ins.html#ffdown\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/50205984/131467590-7c6a018d-0337-47f0-80b2-5f506aa32051.png)\r\n\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: all OS\r\n - Version [Audacirt version not applicable\r\n - (if relevant) Sound Device [e.g. Windows WASAPI, USB Sound card]\r\n\r\n**Additional context**\r\nThis should be fixed ASAP\r", "fixed =||= "], ["1580", "Preliminary AudioIO cleanup", "Paul Licameli", "Paul-Licameli", "09/06/21, 02:33:12 PM", "NaN", "NaN"], ["1581", "Disentangle MIDI play steps from AudioIO", "Paul Licameli", "Paul-Licameli", "09/23/21, 03:09:38 AM", "NaN", "NaN"], ["1582", "Generalize play head position updates", "Paul Licameli", "Paul-Licameli", "09/23/21, 03:00:34 PM", "NaN", "NaN"], ["1583", "Issue #1358: Shortcut Instead Brings Up Keyboard Preferences Dialog...", "Paul Licameli", "Paul-Licameli", "08/31/21, 08:43:01 PM", "This requires an update to this manual page -- remove the green box near the top: https://manual.audacityteam.org/man/keyboard_shortcut_reference.html\r\n\r\nHappened at least on macOS because the easy change of key bindings was\r\nmis-firing in other cases than picks on menu items.\r\n\r\nSo we just disable that little valued feature.\r\n\r\nDisable the easy key rebinding feature\r\n\r\nResolves: #1358\r\n\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "@LWinterberg take note of the small implication for the manual.\r\n =||= Removed references to this feature from the following pages: \r\n\r\n- [x]  https://alphamanual.audacityteam.org/man/Keyboard_Preferences\r\n- [x] https://alphamanual.audacityteam.org/man/Keyboard_Shortcut_Reference =||= Thank you, gentlemen.\r\n =||= "], ["1586", "Extract lib project", "Paul Licameli", "Paul-Licameli", "09/01/21, 10:51:21 AM", "Resolves: #1153 \r\n\r\nPlatform neutral library defining the AudacityProject object and associated ProjectStatus (which just holds some strings)\r\n\r\nThere is also some fixing of some possible null pointer dereferences of the global active project -- which might be null on macOS.\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1587", "Extract lib screen geometry", "Paul Licameli", "Paul-Licameli", "09/02/21, 06:47:24 PM", "Resolves: #1152 \r\n\r\nDepends on PR #1586\r\n\r\nExtract a toolkit-neutral library for mapping of screen x coordinates to times, and y coordinates to amplitudes or frequencies\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1588", "Extract lib project rate", "Paul Licameli", "Paul-Licameli", "09/02/21, 06:50:49 PM", "Resolves: #1143 \r\nDepends on: #1587\r\n\r\nA library holding the global preferences for project rate and sample format, and defining the per-project holding sample rate.  It depend on lib-audio-devices to decide the default rate.\r\n\r\nWhen wave tracks are separated into a library, that will depend on this for construction of tracks, but will avoid dependency on all of AudioIO.\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1590", "Journal certain dialogs such as \"do you want to save changes\"", "Paul Licameli", "Paul-Licameli", "09/02/21, 06:44:16 PM", "Record a simple journal in which you generate noise, then exit.\r\n\r\nThere is a dialog box, \"Save changes to <untitled>?   Save project before closing?\" with Yes, No, Cancel choices that cause different behavior.\r\n\r\nThis is one example of native message boxes in the program, which the journalling system cannot yet record and replay, even though it can record and replay other modal dialogs.\r", "NaN"], ["1594", "Some audio io refactoring", "Paul Licameli", "Paul-Licameli", "09/06/21, 02:33:12 PM", "Resolves: #1580\r\n\r\nSome refactoring tasks in AudioIO, before disentangling the MIDI playback parts\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1595", "Equalization, Change effects and some other effects ignore and remove any amplitude envelope", "Peter Sampson", "petersampsonaudacity", "09/01/21, 07:53:46 AM", "**Describe the bug**\r\nEqualization and Change effects ignore and remove any amplitude envelope.\r\n\r\nUsing either of the two EQ effects or any of the three Change effects (Sped, Pitch or Tempo) ignore and corrupt an amplitude envelope.\r\n\r\nOriginally logged on Bugzilla as P3 1686\r\nhttps://bugzilla.audacityteam.org/show_bug.cgi?id=1686\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create a mono DTMF.\r\n2. Use envelope tool to reduce it to 1/4 amplitude.\r\n3. Select 5s to 15s.\r\n4. Apply Equalization (or Filter Curve or Graphic EQ)\r\n5. Observe:  The audio in that section is boosted back to full amplitude.\r\n\r\n**Expected behavior**\r\nThe EQ should observe/honor the envelope amplitude\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/50205984/131620687-dc67734b-93f6-4747-af65-e3abe4e9a711.png)\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: all OS\r\n - Version Audacity 3.0.4/3.1.0\r\n\r\n**Additional context**\r\nA fix was made for this up to and including 3.0.3 - but the fix was reverted for 3.0.4\r\n\r\nSee: Revert Bug 1686 - Equalization effects ignore and remove any amplitu\u2026 CMake Build #2522\r\n\r\nand:   Release 3.0.4 #1526 \r", "Upgrading this to P2 \r\na) this was previously fixed for eralier versions and is this technically now a regression on 3.0.3\r\nb) Audacity should not be damaging users' audio data like this =||= a) Paulstretch is similarly afflicted.\r\n\r\nb) Reverb mostly honors the envelope - but has an odd breach\r\n![image](https://user-images.githubusercontent.com/50205984/131629202-2cc9595b-1752-480e-85f4-a27af9b07f2d.png)\r\n\r\nc) Sliding Stretch is also affected\r\n\r\n\r\n =||= Because so many effects are afflicted by this I have raised this to P1 =||= The issue is duplicating this one https://github.com/audacity/audacity/issues/1500\r\n =||= @petersampsonaudacity call it regression, but the problem was not fixed properly and the change now reverted caused the explosion of envelope points for some users, with slow editing and extreme file sizes in GB.\r\n\r\nwhereas research of the bugzilla history shows the bug was tolerated for years as a low priority issue. =||= "], ["1602", "AudacityMessageBox button presses can now be replayed in journal...", "Paul Licameli", "Paul-Licameli", "09/02/21, 06:44:16 PM", "... the dialog won't actually reappear but the same value will be returned to\r\nthe program.\r\n\r\nThese message boxes are special native ones that don't use the wxWidgets event\r\nframework.  Therefore the system for journalling of mouse button presses does\r\nnot work with them.  Treat them specially.\r\n\r\nA generalized facility added to namespace Journal in case this pattern needs to\r\nbe repeated for other actions.\r\n\r\nResolves: #1590\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "NaN"], ["1614", "Wave Clip rename", "Vitaly Sverchinsky", "vsverchinsky", "09/15/21, 03:09:01 AM", "Resolves: #1258 \r\n\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] I made sure the code compiles on my machine\r\n- [x] I made sure there are no unnecessary changes in the code\r\n- [x] I made sure the title of the PR reflects the core meaning of the issue you are solving\r\n- [x] I made sure the commit message(s) contain a description and answer the question \"Why do those changes fix that particular issue?\" or \"Why are those changes really necessary as improvements?\"\r", "This round of review is now COMPLETE!  The overall approach is sound, but I flagged many details that need attention.  None of these is difficult by itself.\r\n =||= "], ["1616", "Label Track: Shift+Drag", "Vitaly Sverchinsky", "vsverchinsky", "09/06/21, 01:33:20 PM", "Resolves: #1444 #1544 \r\n\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] The title of the pull request describes an issue it addresses\r\n- [x] If changes are extensive, then there is a sequence of easily reviewable commits\r\n- [x] Each commit's message describes its purpose and effects\r\n- [x] There are no behavior changes unnecessary for the stated purpose of the PR\r\n\r\nRecommended:\r\n- [x] Each commit compiles and runs on my machine without known undesirable changes of behavior\r", " I just tested the label drag bars with @vsverchinsky's latest branch build: audacity-win-3.1.0-alpha-20210903+e91e7b8-64bit \r\n\r\nI confirm that the icon now properly changes to the drag hand when cursor is over the label's drag-bar:\r\na) open hand while hovering over \r\nb) closed drag-hand when clicking and dragging\r\n\r\nNote that this is good, much better - but it now makes the old way of moving/resizing labels with the chevron and dot inconsistent as they still use the arrow icon. =||= Approved.  Please rebase and force-pushc.\r\n =||= "], ["1617", "Filter Curve (and other frequency scales) cut off higher frequencies", "Jimmy Satterfield", "FedoraGameDev", "09/05/21, 11:56:48 AM", "**Describe the bug**\r\nThe graph that displays Hz frequencies sporadically changes the frequencies shown. Usually, the frequencies go all the way up to 20K, however I can only see up to about 7K now. This makes using Filter Curve EQ impossible to use in those frequencies. When I import a preset, you can see the handles going off screen at the edge and the EQ does affect those frequencies properly, however there's no way to change the handle positions.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Load in audio and select a range\r\n2. Launch Filter Curve EQ Effect\r\n\r\n**Expected behavior**\r\nGraph should show the full spectrum by default. Alternatively, if we had handles added that let us zoom back out, this would be much better all around.\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/44219789/132057663-6528f728-7975-4f3c-b8df-966880e30df0.png)\r\n\r\n\r\n**Additional information**\r\n - OS: Windows 10\r\n - Version: Audacity 3.0.4\r\n\r\n**Additional context**\r\nEvery once in a while the graph will appear correct, however I have not been able to show it consistently.", "I cannot reproduce this when testing on W10 with 3.0.4 and alpha 3.1.0\r\n\r\nI consistently get the full frequency spectrum up to 20kHz\r\n\r\n![image](https://user-images.githubusercontent.com/50205984/132086336-d8605619-5197-471d-9d09-f2226e5e35fb.png)\r\n =||= Check the track sample rate (in the box on the left end of the track (See: https://manual.audacityteam.org/man/audio_tracks.html)\r\n\r\nMy guess is that the track sample  rate is 16000 Hz.\r\nThe highest possible audio frequency in a track is half the sample rate. If the track sample rate is 16000Hz as I suspect, then the track has an upper frequency limit of 8000 Hz, thus the the Filter Curve Eq range automatically adjust to 0 to 8000 Hz.\r\n\r\n(If you're interested, the technical explanation is described here: https://en.wikipedia.org/wiki/Nyquist_frequency) =||= "], ["1618", "Insert Chinese Label, Audacity broken!", "Witbacon", "kewtgh", "09/09/21, 09:57:19 AM", "**Describe the bug**\r\nA clear and concise description of what the bug is.\r\n\r\n**When I inserted a label and switch to Chinese input method, the program stuck. \r\nWhatever I did, It doesn't respond.\r\nIt happened since version 3.03 and 2.* is OK. \r\nI use google pinyin as my Chinese input method.**\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Open an Audacity record.\r\n2. Click on 'Edit'\r\n3. Then click on 'Labels'\r\n4. Then click on 'Add label at selection'\r\n5. I can only insert English. Then CTRL+SHIFT to switch the input method.\r\n6. See error, it stuck.\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: [Windows 10]\r\n - Version [Audacity 3.0.4]\r\n - Input APP [Google Pinyin 2.7]\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r", "Google Pinyin appears to be a dead program; [Google no longer offers it for download](http://tools.google.com/pinyin/). \r\n\r\nUsing Microsoft Pinyin (which you can install via the Windows settings/language packs), I cannot get Audacity to hang. However, I also can't get any Chinese character recommendations/inserts to appear. \r\n\r\nAlso, you say this happened with 3.0.3 - that happens to be the first version with 64-bit support. Maybe Google Pinyin doesn't play nice with 64 bit? You may want to try the 32-bit version of Audacity and see if that works. =||= A work around would be to make use of the option to enter the name of the label in a dialog box.\r\nIn Preferences, on the Track behaviors page, check the \"Use dialog for the name of a new label\" check box. =||= Thanks for replying. @LWinterberg @DavidBailes \r\n\r\n\r\n@LWinterberg \r\nI tested with Microsoft Pinyin. The problem still happened. \r\nWhen I inserted the label it stuck. When I use the keyboard shortcut \"CTRL+B\", it stuck, too.\r\n\r\nI can't insert anything. After screenshot, Audacity would be OK.\r\nI can only edit and paste Chinese words but can't input.\r\n\r\n@DavidBailes \r\nI am using Microsoft Pinyin input method and disable Google Pinyin.\r\n\r\nWhen I open Preferences, other options are OK.\r\nBut when I click any option of Tracks Behaviors\uff0cit stuck, too.\r\nAnd after screenshot it would be OK.\r\n\r\nPS: I tried another solution: fully uninstall and reinstall the version 3.04. Problem happened again.\r\n\r\n![2](https://user-images.githubusercontent.com/55637096/132354653-ebdd9f79-9896-4432-97c8-ba09f2735e83.png)\r\n![5](https://user-images.githubusercontent.com/55637096/132354663-c813a156-74f0-4346-b6b1-07310035bb86.png)\r\n![6](https://user-images.githubusercontent.com/55637096/132354671-d70779fd-f7c1-4780-8c13-a827d7c7fcf0.png)\r\n =||= I cannot reproduce getting stuck when switching input language, or when directly inputting the language. \r\n\r\nAnd as David pointed out, when using the text boxes to input (or the Edit > Labels > Edit Labels... box), I can input things:\r\n![image](https://user-images.githubusercontent.com/87814144/132485638-fb1719d4-a5a3-48a3-987c-1cb71ed0c2d2.png)\r\n =||= @LWinterberg \r\n\r\nThanks a lot for your help.\r\n\r\nI solve the problem by @DavidBailes's method.\r\n\r\nBut the first step is changing the language of Audacity to simple Chinese. Then _in Preferences, on the Track behaviors page, check the \"Use dialog for the name of a new label\" check box._\r\n\r\nWhen I insert Chinese words it worked and hasn't stuck again.\r\n\r\nHowever, it stuck when I click any option of Tracks Behaviors in English language.\r\n\r\nThanks again for your help @LWinterberg. =||= "], ["1619", "start behind?", "Andrew", "2Andrew4", "09/21/21, 07:47:49 AM", "The new downloadable image for linux tells after starting how in instruction given:\r\n\r\nsh audacity-linux-3.0.4-x86_64.AppImage\r\naudacity-linux-3.0.4-x86_64.AppImage: 1: audacity-linux-3.0.4-x86_64.AppImage: Syntax error: \"(\" unexpected\r\n\r\nalso with double-click is there nothing to get\r\n\r\n\r", "i beg your pardon - image found at\r\nhttps://www.audacityteam.org/download/ =||= did you mark the image as executable? `chmod +x`  =||= "], ["1623", "Ffmpeg update", "Dmitry Vedenko", "crsib", "09/24/21, 06:03:23 PM", "Resolves #398\r\nResolves #1034 \r\nResolves #1170 \r\nResolves #1201\r\nResolves #1331 \r\nResolves #1433\r\nResolves #1466\r\n\r\nSupporting multiple FFmpeg versions is tricky, yet important for Audacity, as we could not distribute the correct FFmpeg version with the program itself. This leads to a problem, where updating FFmpeg can be problematic. This is especially true, as a new major version is soon to be released.\r\n\r\nThe main problem with FFmpeg is that it exposes several structures and expects library users to fill them up during the configuration. These structures can change between major version bumps, while the API is mostly stable. This is unlike other C libraries, where structure fields are accessed using the library-provided functions.\r\n\r\nThis PR:\r\n\r\n* Allows generating a single header file for a specific FFmpeg version. Surprisingly it had required a large subset of C preprocessors to be implemented.\r\n* Provides wrappers around used FFmpeg structures. The wrappers are used as RAII objects where applicable. The wrappers are implemented in `inl` files which are later included in C++ files after the correct FFmpeg header. I.e. currently each wrapper is compiled twice. Wrappers rarely have FFmpeg version-dependent code. \r\n* Fixes few incompatibilities between FFmpeg versions.\r\n* Sample format conversions from FFmpeg are templatazied, all formats are now supported. The reverse process was not modified\r\n\r\nI have tried to keep changes in ImportFFmpeg and ExportFFmpeg small and trivial. In the future, we may want to reimplement them as well.\r\n\r\nCurrently, avformat-55 and avformat-58 are supported. I don't see much reason to support 56 and 57. When 59 will be released (and current dev branches are 59) it will be added to the list, this should be a trivial task.\r\n\r\nBuilds were tested against:\r\n\r\n* 2.2.2, 4.3.1, and 4.4. Surprisingly, 4.4 support was different (and the most difficult!) from 4.3.1 while the major version stayed the same. FFmpeg 4.4 was downloaded from the \"official page\".\r\n* The system library on Manjaro (4.2.2)\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] The title of the pull request describes an issue it addresses\r\n- [ ] If changes are extensive, then there is a sequence of easily reviewable commits\r\n- [x] Each commit's message describes its purpose and effects\r\n- [x] There are no behavior changes unnecessary for the stated purpose of the PR\r\n\r\nRecommended:\r\n- [ ] Each commit compiles and runs on my machine without known undesirable changes of behavior\r", "One more push of commits, and some in-line comments and questions, and this completes my review!\r\n\r\nAct on my suggestions as you wish, force push once more, and I will make one quick check of what you did and likely approve this and move on!\r\n =||= I missed the infinite loops with GetNextCodec() and GetNextOutputFormat()!  I see how you corrected them.  Was it testing that discovered it?\r\n =||= I re-approve the latest force-push!\r\n\r\nOnly small suggestions:\r\n\r\nExportFFmpeg::InitCodecs should be a private member function, to prove the safety of the new pointer dereference in it just from examining the class in isolation.\r\n\r\nThe copy and move assignments of AVDictionary now have assertions at the top -- which ought to be stated, at least informally, in the header files of the class as preconditions.\r\n\r\nAnd that's all!\r\n\r\n =||= \ud83e\udd73 \ud83c\udf89 \u26a1 \ud83d\udd25 \ud83d\ude80 \ud83c\udf7b  =||= "], ["1628", "VSTEffect samplePos should be a value in number of samples, not in seconds", null, "Niko-Sound", "09/08/21, 10:59:40 AM", "**Describe the bug**\r\nVSTEffect mTimeInfo.samplePos should be a value in number of samples, not in seconds\r\n\r\nIn the file \"aeffectx.h\" from the Steinberg vst 2.4 SDK, it is written:\r\n```\r\n\r\nstruct VstTimeInfo\r\n{\r\n\tdouble samplePos;\t\t\t\t///< current Position in audio samples (always valid)\r\n```\r\n\r\nIn the file VSTEffect.cpp, the value is computed in seconds:\r\n```\r\n\r\nmTimeInfo.samplePos += ((double) blockLen / mTimeInfo.sampleRate);\r\n\r\n```\r\nIt should be:\r\n```\r\n\r\nmTimeInfo.samplePos += blockLen;\r\n\r\n```\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Inside a VST plugin, get the time info  with a callback using \"audioMasterGetTime\"\r\n2. Get the samplePos from the time info\r\n\r\n**Expected behavior**\r\nThe samplePos should be in samples, not in seconds\r\n\r\n**Additional information (please complete the following information):**\r\n - OS: Ubuntu 20.10\r\n - Version Audacity 3.0.4\r", "This line has been there since forever (since we no longer use svn anyway), and we're not aware of VST2 problems arising from this, so I'm marking this P4. \r\n\r\n(If you want to make a PR that fixes this, feel free to!) =||= Pull request done! *(https://github.com/audacity/audacity/pull/1636)*\r\n\r\nSome additional information: the VST plugin used for testing is a kind of scrolling spectrogram viewer, with a scrolling time axis at the bottom. It has been tested on a certain number of DAWs, getting the sample pos from the DAW in order to synchronize the time axis. For all these other tests, the sample pos unit is in number of samples.  =||= Cool, cool! I'll try to get someone who actually knows C++ to review this. \r\n\r\nWhile you're at it, are you aware of other bugs/spec violations of our VST2 implementation that we maybe haven't discovered yet? I'm asking because we're planning to add proper real-time effects support for 3.1 (see also #992) =||= No!  3.2 is the target for that. =||= Thank you :)\r\n\r\nNo, no particular problem detected after having tested with more than 20 VST plugins (with some of them having GUI resize features). I find that your VST support is great! And your plan to make real-time stackable effects looks awesome!\r\n\r\nJust an idea, if it is not already there, it could be interesting to feed the plugins with silence when not playing. In order to manage the kind of plugins that capture some sound, edit it and play it, but all this inside the plugin, then finally render the edited result to the host.\r\n =||= Reviewed, approved, merged.\r\n\r\nIt was just one line.\r\n =||= "], ["1630", "Not move clip on insertion by default", "Vitaly Sverchinsky", "vsverchinsky", "09/08/21, 10:54:28 PM", "Changing \"Editing a clip can move other clips\" option default value to false\r\n\r\nResolves: #1333\r\n\r\nChanging \"Editing a clip can move other clips\" option default value to false\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] The title of the pull request describes an issue it addresses\r\n- [x] If changes are extensive, then there is a sequence of easily reviewable commits\r\n- [x] Each commit's message describes its purpose and effects\r\n- [x] There are no behavior changes unnecessary for the stated purpose of the PR\r\n\r\nRecommended:\r\n- [x] Each commit compiles and runs on my machine without known undesirable changes of behavior\r", "NaN"], ["1631", "Journal fails to record Return key to invoke default button, on macOS", "Paul Licameli", "Paul-Licameli", "09/09/21, 10:36:08 AM", "Start Audacity with journalling enabled.\r\n\r\nOpen, for instance, Generate > Noise.\r\n\r\nHit Return to invoke the default button.\r\n\r\nOn macOS, observe the error message that journal recording fails.\r\n\r\nExpected: it should succeed and work just like clicking the button with the mouse, which can be recorded and replayed.\r\n\r", "NaN"], ["1635", "Update BUILDING.md", null, "thynus", "09/09/21, 03:03:28 PM", "error:\r\nCMake Error: Could not create named generator XCode\r\n\r\ncorrection:\r\ncmake -GXcode -T buildsystem=1 -Daudacity_use_mad=\"off\" -Daudacity_use_id3tag=off ../audacity\r\n\r\nResolves: *(direct link to the issue)*\r\n\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [ ] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x ] The title of the pull request describes an issue it addresses\r\n- [ ] If changes are extensive, then there is a sequence of easily reviewable commits\r\n- [ ] Each commit's message describes its purpose and effects\r\n- [ ] There are no behavior changes unnecessary for the stated purpose of the PR\r\n\r\nRecommended:\r\n- [ x] Each commit compiles and runs on my machine without known undesirable changes of behavior\r", "Thank you for pointing this out.\r\n\r\nI am closing this and instead I opened #1652 which makes other needed changes to BUILDING.md.  It should also say you need a C++17 compiler, not 14.\r\n =||= "], ["1636", "Fix VST time info samplePos units", null, "Niko-Sound", "09/08/21, 10:59:40 AM", "Resolves: *(https://github.com/audacity/audacity/issues/1628)*\r\n\r\n*VST time info samplePos should be a value in number of samples, not in seconds*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] The title of the pull request describes an issue it addresses\r\n- [x] If changes are extensive, then there is a sequence of easily reviewable commits\r\n- [x] Each commit's message describes its purpose and effects\r\n- [x] There are no behavior changes unnecessary for the stated purpose of the PR\r\n\r\nRecommended:\r\n- [x] Each commit compiles and runs on my machine without known undesirable changes of behavior\r", "NaN"], ["1637", "Disentangle midi play from audio io", "Paul Licameli", "Paul-Licameli", "09/23/21, 03:09:38 AM", "Resolves: #1581\r\n\r\nNext refactoring steps for AudioIO.\r\n\r\nAll of the logic specific to MIDI playback is removed from AudioIO.cpp, and invoked instead through an abstract base class AudioIOExt.  A new, separate file MIDIPlay.cpp registers its extension policy with AudioIO.\r\n\r\nThese steps shrink the big file AudioIO.cpp from 4797 to 3596 lines, and are also preparations for putting Note track into its own optional extension module.\r\n\r\nThe unnecessary separate thread for MIDI playback is removed for simplicity, and some callbacks happen directly in the Portaudio thread.  That means some memory allocations may happen on that thread, when MIDI plays!  (See PrepareMidiIterator().) But future refactorings will correct that.\r\n\r\nThe dependency of lib-audio-devices on portmidi is severed.\r\n\r\nA few other changes remove some dependencies on NoteTrack, and use Settings objects from Prefs.cpp to eliminate some duplicated literals and direct use of gPrefs in MIDIPlay.cpp.\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] The title of the pull request describes an issue it addresses\r\n- [x] If changes are extensive, then there is a sequence of easily reviewable commits\r\n- [x] Each commit's message describes its purpose and effects\r\n- [x] There are no behavior changes unnecessary for the stated purpose of the PR\r\n\r\nRecommended:\r\n- [x] Each commit compiles and runs on my machine without known undesirable changes of behavior\r", "Now rebased, with build fixes, and also removing use of deprecated std::iterator.\r\n =||= "], ["1638", "Generalize play head position updates", "Paul Licameli", "Paul-Licameli", "09/23/21, 03:00:34 PM", "Resolves: #1582\r\n\r\nThe play head position is drawn on screen by the main thread, which is told the track time corresponding to the last played samples by the PortAudio thread.\r\n\r\nThat thread, in turn, sometimes got this value from information in a queue from the third, worker thread (which reads from the tracks in larger batches of samples), as when scrubbing; but other times, did its own calculations taking into account whether pay is straight or looping (assuming fixed loop bounds!), and whether it uses a time track as well.\r\n\r\nThis pull request changes that, so that the PortAudio thread never calculates, but always takes the value from the queue.\r\n\r\nThis is a preparation so that the producer of that queue can vary the correspondence of samples in transit with points on the time ruler in yet other ways.\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] The title of the pull request describes an issue it addresses\r\n- [x] If changes are extensive, then there is a sequence of easily reviewable commits\r\n- [x] Each commit's message describes its purpose and effects\r\n- [x] There are no behavior changes unnecessary for the stated purpose of the PR\r\n\r\nRecommended:\r\n- [x] Each commit compiles and runs on my machine without known undesirable changes of behavior\r", "NaN"], ["1639", "Fix journal of return key invoking default dialog button on Mac...", "Paul Licameli", "Paul-Licameli", "09/09/21, 10:36:08 AM", "... and some other cases.\r\n\r\nWherever Audacity simulates button press events, set the event object to be the\r\nbutton, so that WindowEventSerialization() in JournalEvents.cpp can determine\r\na pathname for the window associated with the event.\r\n\r\nThe change in KeyboardCapture is enough for the default buttons of dialogs. The\r\nother changes are necessary but not sufficient for fixing journalling of some of\r\nAudacity's custom widgets, on any operating system.\r\n\r\nResolves: #1631\r\n\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] The title of the pull request describes an issue it addresses\r\n- [x] If changes are extensive, then there is a sequence of easily reviewable commits\r\n- [x] Each commit's message describes its purpose and effects\r\n- [x] There are no behavior changes unnecessary for the stated purpose of the PR\r\n\r\nRecommended:\r\n- [x] Each commit compiles and runs on my machine without known undesirable changes of behavior\r", "NaN"], ["1641", "Playback lopping", "Anton S. Gerasimov", "gera-gas", "09/09/21, 12:15:10 PM", "Design of this feature [here](https://www.figma.com/file/odPgVM0lWc6MdsJWxpgPJl/Audacity?node-id=1657%3A2905)\r\n\r\nSome clarifications after the design review:\r\n * the \"quick play\" functionality will be replaced on \"playback looping\".\r\n * possible simplifications (like in current \"quick play\" mode) for looping during playback.\r\n\r\n**Implementation stages:**\r\n 1. Create and add icon resources.\r\n    1.1. [Methodics](https://wiki.audacityteam.org/wiki/Theming_HowTo)\r\n    1.2. Estimation: 4,6 hrs\r\n\r\n 2. Add playback looping button.\r\n     2.1. Methodics: in `ControlToolBar.cpp` file need add looping button by `ControlToolBar::MakeButton` and use `mPause` button like as example for handlers implementation.\r\n    2.2. Estimation: 3,5 hrs\r\n\r\n3. Add looping range GUI for Timeline bar.\r\n   3.1. Methodics: Use `QuickPlayIndicatorOverlay` and `QuickPlayRulerOverlay` in `AdornedRulerPanel.cpp` like an example.\r\n   3.2. Estimation: 14,18 hrs\r\n\r\n4. Add mouse event handler for looping range GUI.\r\n   4.1. Methodics: Using \"quick play\" events handlers (`AdornedRulerPanel::QPHandle::Click (const TrackPanelMouseEvent &event, AudacityProject *pProject)`, etc) with looping by Shift key for add playback looping support.\r\n   4.2. Estimation: 12,15 hrs\r\n\r\n5. Remove \"quick play\" preferences like a checkboxes.\r\n    5.1. Note: do it after full \"playback looping\" support and tests.\r\n    5.2 Estimation: 1.2 hrs\r\n\r\n__Final estimation__: 34, 46 hrs", "closed as a duplicate =||= "], ["1644", "Clip names should be editable by macro programming", "Paul Licameli", "Paul-Licameli", "09/15/21, 09:13:07 PM", "Making this new user-modifiable attribute of a project changeable with macros is needed to complete the clip naming project, consistently with other such things in Audacity such as changes of track name.\r\n\r\nThe existing SetClipCommand class could be adapted to have one more parameter for this purpose.\r\n\r\nSee #1258\r\n\r\nThe command is also accessible in menus under Extra > Scriptables I\r\n\r\n@LWinterberg See this manual page needing update https://manual.audacityteam.org/man/extra_menu_scriptables_i.html#set_clip\r", "- [x] Updated image\r\n- [x] Updated relevant section in the manual =||= "], ["1650", "Context menu for picks in wave tracks between clips", "Paul Licameli", "Paul-Licameli", "09/16/21, 10:09:40 PM", "These changes are very simple, after previous context menu work.\r\n\r\nRight-click between clips brings up a small context menu with Paste and Mute/Unmute.\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] The title of the pull request describes an issue it addresses\r\n- [x] If changes are extensive, then there is a sequence of easily reviewable commits\r\n- [x] Each commit's message describes its purpose and effects\r\n- [x] There are no behavior changes unnecessary for the stated purpose of the PR\r\n\r\nRecommended:\r\n- [x] Each commit compiles and runs on my machine without known undesirable changes of behavior\r", "@Paul-Licameli  - surely the context menu that you get in the gray space between clips should be the same as the one you get when you right-click on a clip.  \r\n\r\nThe commands are not acting on the current mouse position, but rather on the selection or cursor position - thus the full set of commands is surely appropriate in both use-cases. =||= Along the same lines as Peter's comment, it seems that the \"clip context menu\" actually functions as a \"track panel context menu\", but with \"hot zones\" where there are clips.\r\n\r\nIf I have multiple tracks with multiple clips in each, I would expect a \"**clip** context menu\" to  relate to the specific clip from which it was launched, just as a \"**track** context menus\" (track dropdown menu) relates to the track from which it was launched. That's not what happens - I can make a selection in any clip of any track, open the \"clip context menu\" from any clip in any track, and act on the selected clip.\r\n\r\nWhat would  happen if \"Clip name\" were added to the clip context menu? Would that act on the clip which was right clicked, or on the clip(s) that are selected?\r\n\r\nSurely the whole point of a \"context menu\" is the context from which it was launched. =||= > Along the same lines as Peter's comment, it seems that the \"clip context menu\" actually functions as a \"track panel context menu\", but with \"hot zones\" where there are clips.\r\n> \r\n> If I have multiple tracks with multiple clips in each, I would expect a \"**clip** context menu\" to relate to the specific clip from which it was launched, just as a \"**track** context menus\" (track dropdown menu) relates to the track from which it was launched. That's not what happens - I can make a selection in any clip of any track, open the \"clip context menu\" from any clip in any track, and act on the selected clip.\r\n> \r\n> What would happen if \"Clip name\" were added to the clip context menu? Would that act on the clip which was right clicked, or on the clip(s) that are selected?\r\n> \r\n> Surely the whole point of a \"context menu\" is the context from which it was launched.\r\n\r\nYep, to all that.  The notion of selected or focused clip doesn\u2019t really exist.  I think designers would like you to copy the clip as a unit, including the clip name.  It doesn\u2019t work this way yet.\r\n\r\nThe design did ask for a renaming item in this clip context menu.  This does not exist yet because the UI for clip renaming, also reachable with left clicks in the name, is not past code review yet. =||= "], ["1652", "BUILDING.md: C++17 not 14, and correct capitalization of \"XCode\"", "Paul Licameli", "Paul-Licameli", "09/10/21, 08:43:06 AM", "Corrections only in building instructions for developers.  This does not affect the build.\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] The title of the pull request describes an issue it addresses\r\n- [x] If changes are extensive, then there is a sequence of easily reviewable commits\r\n- [x] Each commit's message describes its purpose and effects\r\n- [x] There are no behavior changes unnecessary for the stated purpose of the PR\r\n\r\nRecommended:\r\n- [x] Each commit compiles and runs on my machine without known undesirable changes of behavior\r", "Thanks Paul! =||= "], ["1657", "The Journaling fails on recording playback button", null, "Penikov", "09/10/21, 12:49:36 PM", "**Describe the bug**\r\nWhen the user presses the playback button, the Journaling raises an error message\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behaviour:\r\n\r\n1. Import the track\r\n2. Click the Playback button\r\n\r\n\r\n**Expected behaviour**\r\nThe Journaling works fine\r\n OR it does not record interaction with the playback button and does not raise any error messages.\r\n\r\n**Screenshots**\r\n![\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435](https://user-images.githubusercontent.com/25851359/132849813-1a85a3d7-2a40-4300-9b41-3dad22a82fb0.png)\r\n\r\n\r\n**Additional information (please complete the following information):**\r\nAudacity 3.1.0-alpha-20210910\r\n\r", "This duplicates other issues I already opened. =||= Duplicated =||= "], ["1660", "Clip renaming context menu item", "Paul Licameli", "Paul-Licameli", "09/16/21, 10:09:11 PM", "NaN", "NaN"], ["1667", "Issue 1642 Fix by rdb", "Steve Daulton", "SteveDaulton", "09/13/21, 10:15:49 AM", "Fixes special case where the time warp function maps positive output times\r\nto negative input times (negative input times are now handled by filling\r\nwith zeros).\r\nFixes improper handling of Nyquist's logical stop times and terminate times\r\nwhich have to get mapped through the time warp function to the output.\r\nAlso the cmupv code was using long for sample count instead of int64_t.\r\n\r\nResolves: *(direct link to the issue)*\r\n\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [ x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [ x] The title of the pull request describes an issue it addresses\r\n- [ x] If changes are extensive, then there is a sequence of easily reviewable commits\r\n- [ x] Each commit's message describes its purpose and effects\r\n- [ x] There are no behavior changes unnecessary for the stated purpose of the PR\r\n\r\nRecommended:\r\n- [ x] Each commit compiles and runs on my machine without known undesirable changes of behavior\r", "Closing this pull request due to Windows CI build error.\r\nWill create a new pull request. =||= "], ["1674", "Opt in for macOS dark mode support", "Joakim Gyllstr\u00f6m", "mikaoj", "09/20/21, 02:47:06 PM", "Resolves: https://github.com/audacity/audacity/issues/404\r\n\r\nA bunch of UI components doesn't support dark mode on macOS. Like window frame, scrollbars, dropdowns, settings, etc.\r\nThis fixes it by opting in for dark mode support.\r\n[NSRequiresAquaSystemAppearance](https://developer.apple.com/documentation/appkit/nsappearancecustomization/choosing_a_specific_appearance_for_your_macos_app) should be set to false to support dark mode when targeting macOS before 10.14. \r\n\r\nThis is how Audacity looks today with dark mode enabled on macOS\r\n<img width=\"1792\" alt=\"audacity_currently\" src=\"https://user-images.githubusercontent.com/4034956/133247667-f76e530f-ecc0-4fcb-be6a-d3b6e1aa907f.png\">\r\n\r\nAnd this is how it looks with this fix\r\n<img width=\"1792\" alt=\"audacity_dark_mode\" src=\"https://user-images.githubusercontent.com/4034956/133247743-d04cb1c3-faa5-4396-bd1e-b6771198e87d.png\">\r\n\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] The title of the pull request describes an issue it addresses\r\n- [x] If changes are extensive, then there is a sequence of easily reviewable commits\r\n- [x] Each commit's message describes its purpose and effects\r\n- [x] There are no behavior changes unnecessary for the stated purpose of the PR\r\n\r\nRecommended:\r\n- [x] Each commit compiles and runs on my machine without known undesirable changes of behavior\r", "The same is true on Windows I know - (and on Linux, I believe).\r\n\r\nI logged this bug back in July:\r\n Many parts of Dark theme Audacity are not really \"dark\" #1296  =||= I cannot believe that the fix for this was just this. Awesome find! =||= "], ["1675", "Restore missing localizations for Linux AppImage", "Peter Jonas", "shoogle", "09/16/21, 12:19:57 PM", "Resolves: #1382\r\n\r\n\r\n1. Ensure INSTALL_PREFIX is set correctly.\r\n    - The CMake variable INSTALL_PREFIX is now correctly passed into the program.\r\n2. Make Audacity portable.\r\n    - Audacity now checks for resources at a location relative to the executable instead of a fixed location each time.", "Works fine with appimage\r\n\r\n![\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435](https://user-images.githubusercontent.com/25851359/133771596-7e8e2857-3471-4fbe-bd33-5a66579a5ad0.png)\r\n =||= "], ["1677", "The SetClip command can set the clip name", "Paul Licameli", "Paul-Licameli", "09/15/21, 09:13:07 PM", "Resolves: #1644 \r\n\r\nThe Set Clip macro command now can change a clip name too\r\n\r\nThe command is also accessible in menus under Extra > Scriptables I (You must first enable the Extra menus in the Interface preferences)\r\n\r\n@LWinterberg See this manual page needing update https://manual.audacityteam.org/man/extra_menu_scriptables_i.html#set_clip\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] The title of the pull request describes an issue it addresses\r\n- [x] If changes are extensive, then there is a sequence of easily reviewable commits\r\n- [x] Each commit's message describes its purpose and effects\r\n- [x] There are no behavior changes unnecessary for the stated purpose of the PR\r\n\r\nRecommended:\r\n- [x] Each commit compiles and runs on my machine without known undesirable changes of behavior\r", "NaN"], ["1678", "Clip renaming context menu item", "Paul Licameli", "Paul-Licameli", "09/16/21, 10:09:11 PM", "Resolves: #1660\r\n\r\nThis makes #998 and #1614 more complete\r\n\r\nAdd an item to the wave clip context menu for renaming.\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] The title of the pull request describes an issue it addresses\r\n- [x] If changes are extensive, then there is a sequence of easily reviewable commits\r\n- [x] Each commit's message describes its purpose and effects\r\n- [x] There are no behavior changes unnecessary for the stated purpose of the PR\r\n\r\nRecommended:\r\n- [x] Each commit compiles and runs on my machine without known undesirable changes of behavior\r", "I have changed the function name and also check other channels.\r\n\r\nI still do not understand why event notifications should be used here.  You used them so that changed of track selection state could be detected by TextEditHelper, and that was proper for avoidance of dependency cycles (TrackList should not depend on the code that reacts to the event).  I don't see a problem with cycles in this commit that needs this technique to break them.\r\n =||= The problem of pushing the undo history stack isn't solved, so I mark this as a draft until I do that.\r\n =||= I don't recall why I thought undo history was sometimes not pushed -- maybe I was confused.\r\n\r\nBut it can be unnecessarily pushed -- if you just hit Enter with no changes to the text.  I changed that case.  It should affect behavior of clicking on the name as well as the new context menu item.\r\n\r\nEsc key works as you would expect, discarding any changes you may have made without hitting Enter.\r\n\r\n =||= "], ["1684", "Update pl.po", "Grzegorz Pruchniakowski", "Gootector", "09/20/21, 09:09:11 AM", "Update pl.po\r\n2 fixes.\r\n\r\nGreetings,\r\nGootector\r\n\r\nResolves: *(direct link to the issue)*\r\n\r\n*(short description of the changes and the motivation to make the changes)*\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] The title of the pull request describes an issue it addresses\r\n- [x] If changes are extensive, then there is a sequence of easily reviewable commits\r\n- [x] Each commit's message describes its purpose and effects\r\n- [x] There are no behavior changes unnecessary for the stated purpose of the PR\r\n\r\nRecommended:\r\n- [x] Each commit compiles and runs on my machine without known undesirable changes of behavior\r", "NaN"], ["1688", "Fix include path for images/Cursors.h", "Zhang Maiyun", "myzhang1029", "09/21/21, 10:53:37 AM", "The include file in `src/tracks/playabletrack/wavetrack/ui/WaveTrackAffordanceControls.cpp` points to\r\n`../../../../images/Cursors.h`, which is `src/images/Cursors.h`, but that file actually resides in `images/Cursors.h`.\r\nFeel free to tell me I'm wrong.\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/) (Do I need one since this is a trivial issue?)\r\n- [x] The title of the pull request describes an issue it addresses\r\n- [x] If changes are extensive, then there is a sequence of easily reviewable commits\r\n- [x] Each commit's message describes its purpose and effects\r\n- [x] There are no behavior changes unnecessary for the stated purpose of the PR\r\n\r\nRecommended:\r\n- [x] Each commit compiles and runs on my machine without known undesirable changes of behavior\r", "NaN"], ["1690", "Issue 1681: Position of New Label dialog is inconvenient", null, "DavidBailes", "09/20/21, 11:22:37 AM", "Resolves: https://github.com/audacity/audacity/issues/1681\r\n\r\nIf the \"use dialog for name of new label\" check box is checked in the track behaviour page of preferences, then when adding a label at either selection or playback position, a dialog is used for entering the name of the new label. For convenience the horizontal position of the dialog should be such that the initial horizontal position of the cursor in the edit box is roughly the same as the horizontal position of the cursor or playback position respectively.\r\n\r\nThis behaviour was broken by commit 8f8ec41.\r\nIn this commit in LabelTrackView::DialogForLabelName(), the two arguments passed to viewInfo.TimeToPosition() are in wrong way round.\r\n\r\nThe fix: swap the order of these arguments.\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x ] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x ] The title of the pull request describes an issue it addresses\r\n- [ x] If changes are extensive, then there is a sequence of easily reviewable commits\r\n- [ x] Each commit's message describes its purpose and effects\r\n- [x ] There are no behavior changes unnecessary for the stated purpose of the PR\r\n\r\nRecommended:\r\n- [x ] Each commit compiles and runs on my machine without known undesirable changes of behavior\r", "Fix does not work in all circumstances =||= "], ["1692", "When splitting a clip using a range selection, the clip names should be 1, 2, 3 instead of 1, 2 1, 2 2", null, "LWinterberg", "09/21/21, 04:13:09 PM", "STR:\r\n\r\n1. Select a range \r\n2. Split clip (Ctrl+I)\r\n\r\nCurrent behavior: \r\n\r\n![image](https://user-images.githubusercontent.com/87814144/134005545-cd911fb0-def5-47c4-8f12-991b98acae7d.png)\r\n\r\nWanted behavior:\r\n\r\n![image](https://user-images.githubusercontent.com/87814144/134005621-7047b837-5417-454f-a2cc-2ea18c719392.png)\r\n\r\nThat would make at least this part of the automated numbering way less confusing.", "How should be the case, when you split the first clip 2 times work? I. e. how should be the middle clip named? =||= In a perfect world, if you start out with one source file and split it up into smaller and smaller pieces, the numbering should remain in order. Maybe once you start moving clips to new places where they aren't connected to the main thing anymore they should get their own subdivisions (that is to say, clip 3 1, clip 3 2 and so on), but the details are probably for @jounih and @Tantacrul to figure out. \r\n\r\nPractically, I think that we can keep the current behavior for point-selection splits for now, because while it's not terribly useful, I can at least figure out as a user why splitting a clip named clip 1 would now name it clip 1 1 and clip 1 2. Whereas with range selection, it's completely confusing why a selection I made in clip 1 and turned into a clip itself now is called clip 1 2 1.  =||= Also note that when you Split New to move the clip to a new track you get a label that includes it's time range which is a little odd:\r\n![image](https://user-images.githubusercontent.com/50205984/134024917-202233e3-3313-406d-ab14-09efbc35ea0b.png)\r\n\r\n\r\nAnd it gets even weirder when you do a further split new on the new track as here the \"timing\" numbers become wrong and meaningless.\r\n![image](https://user-images.githubusercontent.com/50205984/134025225-d0ce2ea0-c852-4a69-a54e-e53166483991.png)\r\n\r\n =||= And if you Split New a few more times you get this odd concoction for a clip label\r\n![image](https://user-images.githubusercontent.com/50205984/134026050-16b39124-6bad-49bf-8094-855d17cfda71.png)\r\n =||= I think that a reasonable case can be made for not adding any numbers when a clip is split - the split clips just have the same name as the original clip:\r\n1. After a user has split a clip, if necessary they can rename any of the clips with names which are meaningful to the user.\r\n2. After the smart clip feature is introduced, the split clips are all views of the same audio. If the user goes on to adjust the start and ends of the views, then the automatic numbering may quickly become meaningless.\r\n3. Why make the user interface look more complicated than it needs to be. =||= I agree with David that automatic numbering of clips has very limited usefulness and significant negatives.\r\n\r\nThere's also a related frequently requested feature to add a time stamp when using Sound Activated Recording (SAR). One possible implementation could be to create a new clip each time SAR starts, and name the clip with a time stamp. =||= @Tantacrul  @jounih - This is **_more_** than a mere Enhancement request - this is a matter of getting it right in 3.1.0 for the users.  The numbering system now is both irrational and illogical for both split clips on the same track and for Split New clips on a New track.  This is a serious UX issue.\r\n\r\nIf it is not sorted expect to get a lot of queries and complaints on the Forum (and on GitHub) =||= We'll be removing the numbering for clip splitting, but keep numbering for new recordings and copypasting. Details are found in #1698, I'll be closing this issue in favor of it =||= "], ["1697", "Help_menu-check_for_update corrections", "Anton S. Gerasimov", "gera-gas", "09/24/21, 06:14:12 PM", "Resolves: #1279\r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] The title of the pull request describes an issue it addresses\r\n- [x] If changes are extensive, then there is a sequence of easily reviewable commits\r\n- [x] Each commit's message describes its purpose and effects\r\n- [x] There are no behavior changes unnecessary for the stated purpose of the PR\r\n\r\nRecommended:\r\n- [x] Each commit compiles and runs on my machine without known undesirable changes of behavior\r\n\r\nDialog with \"No updates available\" information, for user notification in this case:\r\n![2021-09-21_14-21-46](https://user-images.githubusercontent.com/1660969/134171748-60b957ed-8974-4943-b693-308c02aab1a7.png)\r", "My review is complete.  There are a few small changes to do.\r\n =||= Tested on W10 with audacity-win-3.1.0-alpha-20210924+97ca83e-64bit\r\n\r\nThis now looks fine\r\n\r\n![image](https://user-images.githubusercontent.com/50205984/134725795-b5908333-7462-4424-aa8a-7f8f4353038f.png) =||= "], ["1701", "Fix bug 1571", "Anton S. Gerasimov", "gera-gas", "09/24/21, 05:43:19 PM", "Convert to C locale decimal point for stable parsing. In `Cmd+O` user case, `endptr` (into `wxString::ToDouble`) point to localized decimal point, that means it can't recognize separator char, therefore in result `ToDouble()` return false (`!*endptr`).\r\n\r\nResolves: #1571 \r\n\r\n<!-- Use \"x\" to fill the checkboxes below like [x] -->\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] The title of the pull request describes an issue it addresses\r\n- [x] If changes are extensive, then there is a sequence of easily reviewable commits\r\n- [x] Each commit's message describes its purpose and effects\r\n- [x] There are no behavior changes unnecessary for the stated purpose of the PR\r\n\r\nRecommended:\r\n- [x] Each commit compiles and runs on my machine without known undesirable changes of behavior\r", "I\u2019m not satisfied yet that this bug is explained. =||= I\u2019m satisfied with the explanation now, but I want to explore uses of the changed function and be sure there are no unintended consequences. =||= "], ["1717", "Makes selection tool available at affordance area", "Vitaly Sverchinsky", "vsverchinsky", "09/24/21, 12:22:22 PM", "Resolves: #1427\r\n\r\n- [x] I signed [CLA](https://www.audacityteam.org/cla/)\r\n- [x] The title of the pull request describes an issue it addresses\r\n- [x] If changes are extensive, then there is a sequence of easily reviewable commits\r\n- [x] Each commit's message describes its purpose and effects\r\n- [x] There are no behavior changes unnecessary for the stated purpose of the PR\r\n\r\nRecommended:\r\n- [x] Each commit compiles and runs on my machine without known undesirable changes of behavior\r", "I approve the changes.  If you are not going to make more fixes (I wasn't sure from your comment), then you may rebase and merge this PR.\r\n =||= "]]